diff -Nurw scintilla-scite/src/SciTE.h scite/src/SciTE.h
--- scintilla-scite/src/SciTE.h	2016-03-23 23:22:22 +0000
+++ scitet/scite/src/SciTE.h	2016-06-22 11:35:52 +0000
@@ -53,7 +53,7 @@
 #define IDM_ENCODING_UCOOKIE	154
 
 #define MRU_START	17
-#define IMPORT_START 20
+#define IMPORT_START 8 // Itemposition to add config filenames (Menu-Options-Config Files)
 #define TOOLS_START 4
 
 // Edit
diff -Nurw scintilla-scite/src/SciTEBase.cxx scitet/scite/src/SciTEBase.cxx
--- scintilla-scite/src/SciTEBase.cxx	2016-03-24 11:08:38 +0000
+++ scitet/scite/src/SciTEBase.cxx	2016-06-23 00:44:08 +0000
@@ -4235,18 +4246,18 @@
 	props.Set("SciteUserHome", homepath.AsUTF8().c_str());
 }
 
+
 void SciTEBase::UIAvailable() {
-	SetImportMenu();
+ // Decide if we want to display language files (xxx.properties) within the options Menu 
+ SetImportMenu(props.GetInt("menu.options.showUserProps"));
 	if (extender) {
-		SetHomeProperties();
+		SetHomeProperties(); // Define SciteDefault- and SciteUserHome 
 		extender->Initialise(this);
 	}
 }
 
-/**
- * Find the character following a name which is made up of characters from
- * the set [a-zA-Z.]
- */
+// Find the character following a name which is made up of characters from the set [a-zA-Z.]
+
 static GUI::gui_char AfterName(const GUI::gui_char *s) {
 	while (*s && ((*s == '.') ||
 	        (*s >= 'a' && *s <= 'z') ||
diff -Nurw scintilla-scite/src/SciTEBase.h scitet/scite/src/SciTEBase.h
--- scintilla-scite/src/SciTEBase.h	2016-03-23 23:22:22 +0000
+++ scitet/scite/src/SciTEBase.h	2016-06-23 00:48:56 +0000
@@ -820,10 +820,16 @@
 	virtual void SizeContentWindows() = 0;
 	virtual void SizeSubWindows() = 0;
 
+  // this one can also add Menuentries to a Submenu popup 
+  virtual void SetMenuItemNew (int menuNumber, int subMenuNumber, int position, int itemID,
+		const GUI::gui_char *text, const GUI::gui_char *mnemonic = 0) = 0;
+  // this one will be migrated.  
 	virtual void SetMenuItem(int menuNumber, int position, int itemID,
 		const GUI::gui_char *text, const GUI::gui_char *mnemonic = 0) = 0;
+    
 	virtual void RedrawMenu() {}
 	virtual void DestroyMenuItem(int menuNumber, int itemID) = 0;
+	
 	virtual void CheckAMenuItem(int wIDCheckItem, bool val) = 0;
 	virtual void EnableAMenuItem(int wIDCheckItem, bool val) = 0;
 	virtual void CheckMenusClipboard();
@@ -853,7 +859,7 @@
 	void AssignKey(int key, int mods, int cmd);
 	void ViewWhitespace(bool view);
 	void SetAboutMessage(GUI::ScintillaWindow &wsci, const char *appTitle);
-	void SetImportMenu();
+	void SetImportMenu(int displayPropFiles);
 	void ImportMenu(int pos);
 	void SetLanguageMenu();
 	void SetPropertiesInitial();
diff -Nurw scintilla-scite/src/SciTEIO.cxx scite/src/SciTEIO.cxx
--- scintilla-scite/src/SciTEIO.cxx	2016-03-13 03:14:46 +0000
+++ scitet/scite/src/SciTEIO.cxx	2016-06-23 00:44:00 +0000
@@ -1005,10 +1005,10 @@
 
 void SciTEBase::ReloadProperties() {
 	ReadGlobalPropFile();
-	SetImportMenu();
 	ReadLocalPropFile();
 	ReadAbbrevPropFile();
 	ReadProperties();
+  SetImportMenu(props.GetInt("menu.options.showUserProps"));
 	SetWindowName();
 	BuffersMenu();
 	Redraw();
diff -Nurw scintilla-scite/src/SciTEProps.cxx scitet/scite/src/SciTEProps.cxx
--- scintilla-scite/src/SciTEProps.cxx	2016-03-23 23:22:22 +0000
+++ scitet/scite/src/SciTEProps.cxx	2016-06-23 00:32:20 +0000
@@ -52,10 +52,12 @@
 #include "MatchMarker.h"
 #include "SciTEBase.h"
 
-void SciTEBase::SetImportMenu() {
+void SciTEBase::SetImportMenu(int iShow) {
+// Extends Options Menu
 	for (int i = 0; i < importMax; i++) {
-		DestroyMenuItem(menuOptions, importCmdID + i);
+     if (iShow==0) DestroyMenuItem(menuOptions,1300+ i);
 	}
+  //importCmdID
 	if (!importFiles.empty()) {
 		for (int stackPos = 0; stackPos < static_cast<int>(importFiles.size()) && stackPos < importMax; stackPos++) {
 			int itemID = importCmdID + stackPos;
@@ -63,12 +65,13 @@
 				GUI::gui_string entry = localiser.Text("Open");
 				entry += GUI_TEXT(" ");
 				entry += importFiles[stackPos].Name().AsInternal();
-				SetMenuItem(menuOptions, IMPORT_START + stackPos, itemID, entry.c_str());
+        if (iShow==1) SetMenuItemNew(menuOptions, 9, IMPORT_START+stackPos, itemID, entry.c_str());
 			}
 		}
 	}
 }
 
+
 void SciTEBase::ImportMenu(int pos) {
 	if (pos >= 0) {
 		if (importFiles[pos].IsSet()) {
@@ -78,6 +81,7 @@
 }
 
 void SciTEBase::SetLanguageMenu() {
+// Fills Language Menu
 	for (int i = 0; i < 100; i++) {
 		DestroyMenuItem(menuLanguage, languageCmdID + i);
 	}
Files scintilla-scite/win32/Cookie.o and scitet/scite/win32/Cookie.o differ
Files scintilla-scite/win32/Credits.o and scitet/scite/win32/Credits.o differ
diff -Nurw scintilla-scite/win32/SciTERes.rc scitet/scite/win32/SciTERes.rc
--- scintilla-scite/win32/SciTERes.rc	2016-03-23 23:22:22 +0000
+++ scitet/scite/win32/SciTERes.rc	2016-06-22 02:23:40 +0000
@@ -143,6 +143,8 @@
 	MENUITEM "Wrap Out&put",			IDM_WRAPOUTPUT
 	MENUITEM "&Read-Only",				IDM_READONLY
 	MENUITEM SEPARATOR
+	POPUP "Editor"
+  BEGIN
 	POPUP "&Line End Characters"
 	BEGIN
 		MENUITEM "CR &+ LF",	IDM_EOL_CRLF
@@ -153,15 +155,19 @@
 	MENUITEM SEPARATOR
 	MENUITEM "Change Inden&tation Settings...\tCtrl+Shift+I",	IDM_TABSIZE
 	MENUITEM "Use &Monospaced Font\tCtrl+F11",	IDM_MONOFONT
+	END
 	MENUITEM SEPARATOR
-	MENUITEM "Open Local &Options File",		IDM_OPENLOCALPROPERTIES
-	MENUITEM "Open &Directory Options File",		IDM_OPENDIRECTORYPROPERTIES
+  POPUP "Config Files"
+  BEGIN
+    MENUITEM "Open Local Options File",		IDM_OPENLOCALPROPERTIES
+    MENUITEM "Open Directory Options File",		IDM_OPENDIRECTORYPROPERTIES
 	MENUITEM "Open &User Options File",		IDM_OPENUSERPROPERTIES
 	MENUITEM "Open &Global Options File",		IDM_OPENGLOBALPROPERTIES
 	MENUITEM "Open A&bbreviations File",		IDM_OPENABBREVPROPERTIES
 	MENUITEM "Open Lua Startup Scr&ipt", 		IDM_OPENLUAEXTERNALFILE
+	END
 	MENUITEM SEPARATOR
-END // used: abcghlmoprstux
+END // used: abcghilmprstux
 
 POPUP "&Language"
 BEGIN
diff -Nurw scintilla-scite/win32/SciTEWin.h scitet/scite/win32/SciTEWin.h
--- scintilla-scite/win32/SciTEWin.h	2016-03-23 23:22:22 +0000
+++ scitet/scite/win32/SciTEWin.h	2016-06-23 00:59:48 +0000
@@ -253,6 +253,10 @@
 	virtual void SizeContentWindows();
 	virtual void SizeSubWindows();
 
+  // Supports creation of Entries in SubMenus too
+  virtual void SetMenuItemNew(int menuNumber, int subMenuNumber, int position, int itemID,
+                           const GUI::gui_char *text, const GUI::gui_char *mnemonic =0); 
+
 	virtual void SetMenuItem(int menuNumber, int position, int itemID,
 	                         const GUI::gui_char *text, const GUI::gui_char *mnemonic = 0);
 	virtual void RedrawMenu();
Files scintilla-scite/win32/SciTEWin.o and scitet/scite/win32/SciTEWin.o differ
diff -Nurw scintilla-scite/win32/SciTEWinBar.cxx scitet/scite/win32/SciTEWinBar.cxx
--- scintilla-scite/win32/SciTEWinBar.cxx	2016-03-23 23:22:22 +0000
+++ scitet/scite/win32/SciTEWinBar.cxx	2016-06-23 00:56:18 +0000
@@ -631,6 +631,47 @@
 	CheckMenus();
 }
 
+void SciTEWin::SetMenuItemNew(int menuNumber, int subMenuNumber, int position, int itemID,
+                           const GUI::gui_char *text, const GUI::gui_char *mnemonic) {
+	// On Windows the menu items are modified if they already exist or are created
+    HMENU hmenu = ::GetSubMenu(::GetMenu(MainHWND()), menuNumber);
+ // About to modify a submenu (eg Options-> Config Files)   
+	if(subMenuNumber >0) {
+    HMENU smenu = ::GetSubMenu(hmenu, subMenuNumber);
+    hmenu = smenu;
+  }
+	GUI::gui_string sTextMnemonic = text;
+	long keycode = 0;
+	if (mnemonic && *mnemonic) {
+		keycode = SciTEKeys::ParseKeyCode(GUI::UTF8FromString(mnemonic).c_str());
+		if (keycode) {
+			sTextMnemonic += GUI_TEXT("\t");
+			sTextMnemonic += mnemonic;
+		}
+		// the keycode could be used to make a custom accelerator table
+		// but for now, the menu's item data is used instead for command
+		// tools, and for other menu entries it is just discarded.
+	}
+  
+	UINT typeFlags = (text[0]) ? MF_STRING : MF_SEPARATOR;
+	if (::GetMenuState(hmenu, itemID, MF_BYCOMMAND) == (UINT)(-1)) {
+		// Not present so insert
+		::InsertMenuW(hmenu, position, MF_BYPOSITION | typeFlags, itemID, sTextMnemonic.c_str());
+	} else {
+		::ModifyMenuW(hmenu, itemID, MF_BYCOMMAND | typeFlags, itemID, sTextMnemonic.c_str());
+	}
+
+	if (itemID >= IDM_TOOLS && itemID < IDM_TOOLS + toolMax) {
+		// Stow the keycode for later retrieval.
+		// Do this even if 0, in case the menu already existed (e.g. ModifyMenu)
+		MENUITEMINFO mii;
+		mii.cbSize = sizeof(MENUITEMINFO);
+		mii.fMask = MIIM_DATA;
+		mii.dwItemData = keycode;
+		::SetMenuItemInfo(hmenu, itemID, FALSE, &mii);
+	}
+}
+
 
 void SciTEWin::SetMenuItem(int menuNumber, int position, int itemID,
                            const GUI::gui_char *text, const GUI::gui_char *mnemonic) {
@@ -673,6 +714,7 @@
 	::DrawMenuBar(HwndOf(wSciTE));
 }
 
+
 void SciTEWin::DestroyMenuItem(int menuNumber, int itemID) {
 	// On Windows menu items are destroyed as they can not be hidden and they can be recreated in any position
 	HMENU hmenuBar = ::GetMenu(MainHWND());
Files scintilla-scite/win32/SciTEWinBar.o and scitet/scite/win32/SciTEWinBar.o differ
--- scintilla-scite/win32/SciTERes.rc	2016-08-13 22:43:30.000000000 +0200
+++ scite/win32/SciTERes.rc	2016-07-21 19:04:18.000000000 +0200
@@ -159,12 +159,12 @@
 	MENUITEM SEPARATOR
   POPUP "Config Files"
   BEGIN
-    MENUITEM "Open Local Options File",		IDM_OPENLOCALPROPERTIES
-    MENUITEM "Open Directory Options File",		IDM_OPENDIRECTORYPROPERTIES
+//    MENUITEM "Open Local Options File",		IDM_OPENLOCALPROPERTIES
+//    MENUITEM "Open Directory Options File",		IDM_OPENDIRECTORYPROPERTIES
 	MENUITEM "Open &User Options File",		IDM_OPENUSERPROPERTIES
 	MENUITEM "Open &Global Options File",		IDM_OPENGLOBALPROPERTIES
 	MENUITEM "Open A&bbreviations File",		IDM_OPENABBREVPROPERTIES
-	MENUITEM "Open Lua Startup Scr&ipt", 		IDM_OPENLUAEXTERNALFILE
+//	MENUITEM "Open Lua Startup Scr&ipt", 		IDM_OPENLUAEXTERNALFILE
 	END
 	MENUITEM SEPARATOR
 END // used: abcghilmprstux
