AbandonAutomaticSave()void Buffer::AbandonAutomaticSave =:-) 
AbandonAutomaticSave()void SciTEBase::AbandonAutomaticSave =:-) 
AbandonPaint()bool ScintillaGTK::AbandonPaint =:-) 
AbandonPaint()bool Editor::AbandonPaint =:-) 
AbbrevCmd()void SciTEGTK::AbbrevCmd =:-) 
AbbrevDialog()bool SciTEGTK::AbbrevDialog =:-) 
AbbrevDialog()bool SciTEWin::AbbrevDialog =:-) 
AbbrevDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::AbbrevDlg =:-) 
AbbrevMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::AbbrevMessage =:-) 
AbbrevResponse(int responseID)void SciTEGTK::AbbrevResponse =:-) 
AboutDialog()void SciTEGTK::AboutDialog =:-) 
AboutDialog()void SciTEWin::AboutDialog =:-) 
AboutDialogWithBuild(int staticBuild_)void SciTEWin::AboutDialogWithBuild =:-) 
AboutDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::AboutDlg =:-) 
AboutMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::AboutMessage =:-) 
AbsolutePath()FilePath FilePath::AbsolutePath =:-) 
AcceptToOpenFiles(bool bAccept)bool UniqueInstance::AcceptToOpenFiles =:-) 
Accessor(IDocument *pAccess_, PropSetSimple *pprops_)Accessor::Accessor =:-) 
Action()Action::Action =:-) 
Activate(bool activeApp)void SciTEBase::Activate =:-) 
ActivateBuffer(int)	virtual bool ActivateBuffer =:-) 
ActivateBuffer(int index)bool LuaExtension::ActivateBuffer =:-) 
ActivateBuffer(int index)bool MultiplexExtension::ActivateBuffer =:-) 
ActivateSignal(GtkWidget *, FindStrip *pStrip)void FindStrip::ActivateSignal =:-) 
ActivateSignal(GtkWidget *, ReplaceStrip *pStrip)void ReplaceStrip::ActivateSignal =:-) 
ActivateSignal(GtkWidget *, UserStrip *pStrip)void UserStrip::ActivateSignal =:-) 
ActivateWindow(const char *timestamp)void SciTEGTK::ActivateWindow =:-) 
ActivateWindow(const char *)void SciTEWin::ActivateWindow =:-) 
ActivatesDefault()void WComboBoxEntry::ActivatesDefault =:-) 
ActivatesDefault()void WEntry::ActivatesDefault =:-) 
Active()bool AutoComplete::Active =:-) 
Active()bool WCheckDraw::Active =:-) 
Active()bool WToggle::Active =:-) 
Add(int character, const char *conversion)	void Add =:-) 
Add(Sci::Position increment)	void Add =:-) 
Add(int ident, RGBAImage *image)void RGBAImageSet::Add =:-) 
Add(GtkWidget *child, int width, bool expand, int xpadding, int ypadding)void WTable::Add =:-) 
Add(ARG_TYPE newElement)	int Add =:-) 
Add()int BufferList::Add =:-) 
AddChar(char ch)void Editor::AddChar =:-) 
AddCharUTF(const char *s, unsigned int len, bool treatAsDBCS)void Editor::AddCharUTF =:-) 
AddCharUTF(const char *s, unsigned int len, bool treatAsDBCS)void ScintillaBase::AddCharUTF =:-) 
AddCharUTF16(wchar_t const *wcs, unsigned int wclen)void ScintillaWin::AddCharUTF16 =:-) 
AddCommand(const std::string &command, const FilePath &directory, JobSubsystem jobType, const std::string &input, int flags)void JobQueue::AddCommand =:-) 
AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input, int flags)void SciTEBase::AddCommand =:-) 
AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input, int flags)void SciTEWin::AddCommand =:-) 
AddData(char *data, Sci_Position length)int SCI_METHOD Document::AddData =:-) 
AddFileToBuffer(const BufferState &bufferState)bool SciTEBase::AddFileToBuffer =:-) 
AddFileToStack(const FilePath &file, SelectedRange selection, int scrollPos)void SciTEBase::AddFileToStack =:-) 
AddFuture(int index, Buffer::FutureDo fd)void BufferList::AddFuture =:-) 
AddHead(ARG_TYPE newElement)	T_POSITION AddHead =:-) 
AddLexerModule(LexerModule *plm)void Catalogue::AddLexerModule =:-) 
AddMBButton(GtkWidget *dialog, const char *label, int val, GtkAccelGroup *accel_group, bool isDefault)GtkWidget =:-) 
AddMark(Sci::Line line, int markerNum)int Document::AddMark =:-) 
AddMark(Sci::Line line, int markerNum, Sci::Line lines)int LineMarkers::AddMark =:-) 
AddMarkSet(Sci::Line line, int valueSet)void Document::AddMarkSet =:-) 
AddRange(Sci::Line lineStart, Sci::Line lineEnd)	bool AddRange =:-) 
AddRectangularToMime(QMimeData *mimeData, QString su)static void AddRectangularToMime =:-) 
AddRef()int Document::AddRef =:-) 
AddRef()STDMETHODIMP_ =:-) 
AddSelection(int startChar, int endChar)gboolean ScintillaGTKAccessible::AddSelection =:-) 
AddSelection(AtkText *text, gint start, gint end)gboolean ScintillaGTKAccessible::AtkTextIface::AddSelection =:-) 
AddSelection(SelectionRange range)void Selection::AddSelection =:-) 
AddSelectionWithoutTrim(SelectionRange range)void Selection::AddSelectionWithoutTrim =:-) 
AddSendPipe(int fd, const char *name)static void AddSendPipe =:-) 
AddStyledText(char *buffer, Sci::Position appendLength)void Editor::AddStyledText =:-) 
AddStyledText(GUI::ScintillaWindow &wsci, const char *s, int attr)static void AddStyledText =:-) 
AddSymmetric(enum CaseConversion conversion, int lower,int upper)void AddSymmetric =:-) 
AddTabstop(Sci::Line line, int x)bool EditView::AddTabstop =:-) 
AddTabstop(Sci::Line line, int x)bool LineTabstops::AddTabstop =:-) 
AddTail(ARG_TYPE newElement)	T_POSITION AddTail =:-) 
AddTextAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, gchar *value)static AtkAttributeSet =:-) 
AddTextColorAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, const ColourDesired &colour)static AtkAttributeSet =:-) 
AddTextIntAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, gint i)static AtkAttributeSet =:-) 
AddToPopUp(const char *label, int cmd, bool enabled)void ScintillaGTK::AddToPopUp =:-) 
AddToPopUp(const char *label, int cmd, bool enabled)void ScintillaQt::AddToPopUp =:-) 
AddToPopUp(const char *label, int cmd, bool enabled)void ScintillaWin::AddToPopUp =:-) 
AddToPopUp(const char *label, int cmd, bool enabled)void SciTEGTK::AddToPopUp =:-) 
AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked)void Strip::AddToPopUp =:-) 
AddToPopUp(const char *label, int cmd, bool enabled)void SciTEWin::AddToPopUp =:-) 
AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked)void FindStrip::AddToPopUp =:-) 
AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked)void ReplaceStrip::AddToPopUp =:-) 
AddToolBar()void SciTEGTK::AddToolBar =:-) 
AddToolButton(const char *text, int cmd, GtkWidget *toolbar_icon)GtkWidget =:-) 
AddToolSpace(GtkToolbar *toolbar)static void AddToolSpace =:-) 
AddUndoAction(Sci::Position token, bool mayCoalesce)	void AddUndoAction =:-) 
AddWString(std::wstring wcs)void ScintillaWin::AddWString =:-) 
AddWatcher(DocWatcher *watcher, void *userData)bool Document::AddWatcher =:-) 
AdjustWindowRect(PRectangle *rc)void ListBoxX::AdjustWindowRect =:-) 
AfterName(const GUI::gui_char *s)static GUI::gui_char AfterName =:-) 
AllFour(DWORD *pixels, int width, int height, int x, int y, DWORD val)static void AllFour =:-) 
AllOnFor(int position)int DecorationList::AllOnFor =:-) 
AllSame()bool RunStyles::AllSame =:-) 
AllSameAs(int value)bool RunStyles::AllSameAs =:-) 
AllocItem(const char *text, int pixId)	void AllocItem =:-) 
AllocStyles(size_t sizeNew)void ViewStyle::AllocStyles =:-) 
Allocate()ListBox =:-) 
Allocate(int)Surface =:-) 
Allocate(int styleBase, int numberStyles)	int Allocate =:-) 
Allocate(int firstStyle_, int lenStyles_)	void Allocate =:-) 
Allocate()ListBox =:-) 
Allocate(int)Surface =:-) 
Allocate(Sci::Position newSize)	void Allocate =:-) 
Allocate(int growSize)	void Allocate =:-) 
Allocate(size_t length_)void LineLayoutCache::Allocate =:-) 
Allocate()ListBox =:-) 
Allocate(int technology)Surface =:-) 
Allocate(size_t bytes)	void Allocate =:-) 
Allocate(int maxSize)void BufferList::Allocate =:-) 
AllocateAnnotation(int length, int style)static char =:-) 
AllocateExtendedStyles(int numberStyles)int ViewStyle::AllocateExtendedStyles =:-) 
AllocateForLevel(Sci::Line linesOnScreen, Sci::Line linesInDoc)void LineLayoutCache::AllocateForLevel =:-) 
AllocateGraphics(const ViewStyle &vsDraw)void EditView::AllocateGraphics =:-) 
AllocateGraphics()void Editor::AllocateGraphics =:-) 
AllocateGraphics(const ViewStyle &vsDraw)void MarginView::AllocateGraphics =:-) 
AllocateSubStyles(int styleBase, int numberStyles)int LexState::AllocateSubStyles =:-) 
AllowVirtualSpace(int virtualSpaceOptions, bool rectangular)static bool AllowVirtualSpace =:-) 
AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill, ColourDesired outline, int alphaOutline, int )void SurfaceImpl::AlphaRectangle =:-) 
AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill, ColourDesired outline, int alphaOutline, int )void SurfaceD2D::AlphaRectangle =:-) 
AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill, ColourDesired outline, int alphaOutline, int )void SurfaceGDI::AlphaRectangle =:-) 
AnnotationBoxedOrIndented(int annotationVisible)static bool AnnotationBoxedOrIndented =:-) 
AnnotationClearAll()void Document::AnnotationClearAll =:-) 
AnnotationLines(Sci::Line line)int Document::AnnotationLines =:-) 
AnnotationSetStyle(Sci::Line line, int style)void Document::AnnotationSetStyle =:-) 
AnnotationSetStyles(Sci::Line line, const unsigned char *styles)void Document::AnnotationSetStyles =:-) 
AnnotationSetText(Sci::Line line, const char *text)void Document::AnnotationSetText =:-) 
AnnotationStyledText(Sci::Line line)StyledText Document::AnnotationStyledText =:-) 
Annotations()LineAnnotation =:-) 
Append(char *s, int type)void ListBoxX::Append =:-) 
Append(char *s, int type)void ListBoxImpl::Append =:-) 
Append(char *, int)void ListBoxX::Append =:-) 
AppendIfNotPresent(const std::string &s)	void AppendIfNotPresent =:-) 
AppendList(const std::string &s, char sep = Ã)	void AppendList =:-) 
AppendListItem(const char *text, const char *numword)void ListBoxX::AppendListItem =:-) 
AppendName(const char *name)	void AppendName =:-) 
AppendText(const char *text)void WComboBoxEntry::AppendText =:-) 
ApplyStep(int partitionUpTo)	void ApplyStep =:-) 
ArrayFromStringList(char *stringList, bool onlyLineEnds = false)static std::vector =:-) 
ArrayFromWordList(char *wordlist, int *len, bool onlyLineEnds = false)static char =:-) 
AsInternal()const GUI::gui_char =:-) 
AsLong()	long AsLong =:-) 
AsUTF8()std::string FilePath::AsUTF8 =:-) 
AsVector()	std::vector =:-) 
Ascent(Font &font_)XYPOSITION SurfaceImpl::Ascent =:-) 
Ascent(Font &font)XYPOSITION SurfaceImpl::Ascent =:-) 
Ascent(Font &font_)XYPOSITION SurfaceD2D::Ascent =:-) 
Ascent(Font &font_)XYPOSITION SurfaceGDI::Ascent =:-) 
AskMacroList()void SciTEBase::AskMacroList =:-) 
Assert(const char *c, const char *file, int line)void Platform::Assert =:-) 
AssignCmdKey(int key, int modifiers, unsigned int msg)void KeyMap::AssignCmdKey =:-) 
AssignKey(int key, int mods, int cmd)void SciTEBase::AssignKey =:-) 
At(int n)	std::string At =:-) 
AtLineEnd(lua_State *L)	static int AtLineEnd =:-) 
AtLineStart(lua_State *L)	static int AtLineStart =:-) 
AttachResponse(GtkWidget *w, SciTEGTK *object)inline void AttachResponse =:-) 
AutoComplete()AutoComplete::AutoComplete =:-) 
AutoCompleteCancel()void ScintillaBase::AutoCompleteCancel =:-) 
AutoCompleteCharacterAdded(char ch)void ScintillaBase::AutoCompleteCharacterAdded =:-) 
AutoCompleteCharacterDeleted()void ScintillaBase::AutoCompleteCharacterDeleted =:-) 
AutoCompleteCompleted(char ch, unsigned int completionMethod)void ScintillaBase::AutoCompleteCompleted =:-) 
AutoCompleteDoubleClick(void *p)void ScintillaBase::AutoCompleteDoubleClick =:-) 
AutoCompleteGetCurrent()int ScintillaBase::AutoCompleteGetCurrent =:-) 
AutoCompleteGetCurrentText(char *buffer)int ScintillaBase::AutoCompleteGetCurrentText =:-) 
AutoCompleteInsert(Sci::Position startPos, int removeLen, const char *text, int textLen)void ScintillaBase::AutoCompleteInsert =:-) 
AutoCompleteMove(int delta)void ScintillaBase::AutoCompleteMove =:-) 
AutoCompleteMoveToCurrentWord()void ScintillaBase::AutoCompleteMoveToCurrentWord =:-) 
AutoCompleteStart(int lenEntered, const char *list)void ScintillaBase::AutoCompleteStart =:-) 
AutoLineLayout(LineLayoutCache &llc_, LineLayout *ll_)	AutoLineLayout =:-) 
AutoSurface(Editor *ed, int technology = -1)	AutoSurface =:-) 
AutoSurface(SurfaceID sid, Editor *ed, int technology = -1)	AutoSurface =:-) 
AutomaticIndentation(char ch)void SciTEBase::AutomaticIndentation =:-) 
AverageCharWidth(Font &font_)XYPOSITION SurfaceImpl::AverageCharWidth =:-) 
AverageCharWidth(Font &font)XYPOSITION SurfaceImpl::AverageCharWidth =:-) 
AverageCharWidth(Font &font_)XYPOSITION SurfaceD2D::AverageCharWidth =:-) 
AverageCharWidth(Font &font_)XYPOSITION SurfaceGDI::AverageCharWidth =:-) 
BackAsLong()long StyleDefinition::BackAsLong =:-) 
BackStep(int partitionDownTo)	void BackStep =:-) 
Background(int marksOfLine, bool caretActive, bool lineContainsCaret)ColourOptional ViewStyle::Background =:-) 
BackgroundStrip()	BackgroundStrip =:-) 
BackgroundStrip()	BackgroundStrip =:-) 
Band(bool visible_, int height_, bool expands_, GUI::Window win_)	Band =:-) 
BarButtonIn()	BarButtonIn =:-) 
BarButtonIn(int _id, int _cmd)	BarButtonIn =:-) 
Base()	int Base =:-) 
BaseName()FilePath FilePath::BaseName =:-) 
BaseStyle(int subStyle)	int BaseStyle =:-) 
BaseWin()	BaseWin =:-) 
BaseWin()	BaseWin =:-) 
BeginPrint(GtkPrintOperation *operation, GtkPrintContext *context, SciTEGTK *scitew)void SciTEGTK::BeginPrint =:-) 
BeginPrintThis(GtkPrintOperation *operation, GtkPrintContext *context)void SciTEGTK::BeginPrintThis =:-) 
BeginUndoAction()	void BeginUndoAction =:-) 
BlockFromBaseStyle(int baseStyle)	int BlockFromBaseStyle =:-) 
BlockFromStyle(int style)	int BlockFromStyle =:-) 
BookmarkAdd(int lineno)void SciTEBase::BookmarkAdd =:-) 
BookmarkDelete(int lineno)void SciTEBase::BookmarkDelete =:-) 
BookmarkNext(bool forwardScan, bool select)void SciTEBase::BookmarkNext =:-) 
BookmarkPresent(int lineno)bool SciTEBase::BookmarkPresent =:-) 
BookmarkSelectAll()void SciTEBase::BookmarkSelectAll =:-) 
BookmarkToggle(int lineno)void SciTEBase::BookmarkToggle =:-) 
BoundsContains(PRectangle rcBounds, HRGN hRgnBounds, PRectangle rcCheck)static bool BoundsContains =:-) 
BraceMatch(Sci::Position position, Sci::Position )Sci::Position Document::BraceMatch =:-) 
BraceMatch(bool editor)void SciTEBase::BraceMatch =:-) 
BraceOpposite(char ch)static char BraceOpposite =:-) 
BreakFinder(const LineLayout *ll_, const Selection *psel, Range lineRange_, Sci::Position posLineStart_, int xStart, bool breakForSelection, const Document *pdoc_, const SpecialRepresentations *preprs_, const ViewStyle *pvsDraw)BreakFinder::BreakFinder =:-) 
BrowseCallbackProc(HWND hwnd, UINT uMsg, LPARAM, LPARAM pData)static int __stdcall BrowseCallbackProc =:-) 
BrushColor(ColourDesired back)void SurfaceGDI::BrushColor =:-) 
BrushColour(ColourDesired back)void SurfaceImpl::BrushColour =:-) 
Buffer()	Buffer =:-) 
BufferContainsNull()	bool BufferContainsNull =:-) 
BufferList()BufferList::BufferList =:-) 
BufferPointer()	const char =:-) 
BufferPointer()	T =:-) 
BufferedFile(const FilePath &fPath)	explicit BufferedFile =:-) 
BuffersMenu()void SciTEBase::BuffersMenu =:-) 
BuiltinRegex(CharClassify *charClassTable)	explicit BuiltinRegex =:-) 
ButtonDown(Point pt, unsigned int curTime, bool shift, bool ctrl, bool alt)void Editor::ButtonDown =:-) 
ButtonDown(Point pt, unsigned int curTime, bool shift, bool ctrl, bool alt)void ScintillaBase::ButtonDown =:-) 
ButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers)void Editor::ButtonDownWithModifiers =:-) 
ButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers)void ScintillaBase::ButtonDownWithModifiers =:-) 
ButtonMove(Point pt)void Editor::ButtonMove =:-) 
ButtonMoveWithModifiers(Point pt, int modifiers)void Editor::ButtonMoveWithModifiers =:-) 
ButtonPress(GtkWidget *, GdkEventButton* ev, gpointer p)static gboolean ButtonPress =:-) 
ButtonSignal(GtkWidget *, gpointer data)void SciTEGTK::ButtonSignal =:-) 
ButtonUp(Point pt, unsigned int curTime, bool ctrl)void Editor::ButtonUp =:-) 
ButtonsPress(GtkWidget *, GdkEventButton *event, Strip *pstrip)gint Strip::ButtonsPress =:-) 
ByteIterator(const Document *doc_ = 0, Sci::Position position_ = 0)	ByteIterator =:-) 
ByteOffsetFromCharacterOffset(Sci::Position characterOffset)	Sci::Position ByteOffsetFromCharacterOffset =:-) 
ByteOffsetFromCharacterOffset(Sci::Position startByte, int characterOffset)	Sci::Position ByteOffsetFromCharacterOffset =:-) 
ByteRangeFromCharacterRange(int startChar, int endChar, Sci::Position& startByte, Sci::Position& endByte)	void ByteRangeFromCharacterRange =:-) 
BytesForDocument(const QString &text)QByteArray ScintillaQt::BytesForDocument =:-) 
BytesFromLead(int leadByte)static int BytesFromLead =:-) 
BytesResult(sptr_t lParam, const unsigned char *val, size_t len)sptr_t Editor::BytesResult =:-) 
CRectContains(const cairo_rectangle_t &crcContainer, const cairo_rectangle_t &crcTest)static bool CRectContains =:-) 
CRectListContains(const cairo_rectangle_list_t *crcListContainer, const cairo_rectangle_t &crcTest)static bool CRectListContains =:-) 
CTWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ScintillaWin::CTWndProc =:-) 
CalcLargestMarkerHeight()void ViewStyle::CalcLargestMarkerHeight =:-) 
CalculateColumnWidths(int widthToAllocate)	void CalculateColumnWidths =:-) 
CalculateMarginWidthAndMask()void ViewStyle::CalculateMarginWidthAndMask =:-) 
Call(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0)	int Call =:-) 
CallBackAction(void*)typedef void =:-) 
CallChildren(unsigned int msg, uptr_t wParam, sptr_t lParam)void SciTEBase::CallChildren =:-) 
CallFocused(unsigned int msg, uptr_t wParam, sptr_t lParam)int SciTEBase::CallFocused =:-) 
CallFocusedElseDefault(int defaultValue, unsigned int msg, uptr_t wParam, sptr_t lParam)int SciTEBase::CallFocusedElseDefault =:-) 
CallNamedFunction(const char *name)static bool CallNamedFunction =:-) 
CallNamedFunction(const char *name, const char *arg)static bool CallNamedFunction =:-) 
CallNamedFunction(const char *name, int numberArg, const char *stringArg)static bool CallNamedFunction =:-) 
CallNamedFunction(const char *name, int numberArg, int numberArg2)static bool CallNamedFunction =:-) 
CallPane(int destination, unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t SciTEBase::CallPane =:-) 
CallPointer(unsigned int msg, uptr_t wParam, void *s)	int CallPointer =:-) 
CallReturnPointer(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0)	sptr_t CallReturnPointer =:-) 
CallSearchOnAllWindows()void UniqueInstance::CallSearchOnAllWindows =:-) 
CallString(unsigned int msg, uptr_t wParam, const char *s)	int CallString =:-) 
CallTip()CallTip::CallTip =:-) 
CallTipCancel()void CallTip::CallTipCancel =:-) 
CallTipClick()void ScintillaBase::CallTipClick =:-) 
CallTipShow(Point pt, const char *defn)void ScintillaBase::CallTipShow =:-) 
CallTipStart(Sci::Position pos, Point pt, int textHeight, const char *defn, const char *faceName, int fontSize_, int codePage_, int characterSet, int technology, Window &wParent)PRectangle CallTip::CallTipStart =:-) 
CallbackData(SciTEGTK *pSciTE_, int cmd_, Worker *pWorker_)	CallbackData =:-) 
Caller(HWND hDlg, UINT message, LPARAM lParam)static SciTEWin =:-) 
CanCall()	bool CanCall =:-) 
CanDeferToLastStep(const DocModification &mh)static bool CanDeferToLastStep =:-) 
CanEliminate(const DocModification &mh)static bool CanEliminate =:-) 
CanMakeRoom(bool maySaveIfDirty)bool SciTEBase::CanMakeRoom =:-) 
CanPaste()bool Editor::CanPaste =:-) 
CanPaste()bool ScintillaWin::CanPaste =:-) 
CanRedo()	bool CanRedo =:-) 
CanUndo()	bool CanUndo =:-) 
Cancel()void AutoComplete::Cancel =:-) 
Cancel()void FileLoader::Cancel =:-) 
Cancel()void FileStorer::Cancel =:-) 
Cancel()	virtual void Cancel =:-) 
CancelLoad()void Buffer::CancelLoad =:-) 
CancelModes()void Editor::CancelModes =:-) 
CancelModes()void ScintillaBase::CancelModes =:-) 
Cancelled()	long Cancelled =:-) 
Cancelling()	bool Cancelling =:-) 
Caret()Caret::Caret =:-) 
CaretFromEdge()int ListBoxX::CaretFromEdge =:-) 
CaretFromEdge()int ListBoxImpl::CaretFromEdge =:-) 
CaretFromEdge()int ListBoxX::CaretFromEdge =:-) 
CaretSetPeriod(int period)void Editor::CaretSetPeriod =:-) 
CaseConvert(int character, enum CaseConversion conversion)const char =:-) 
CaseConvertString(char *converted, size_t sizeConverted, const char *mixed, size_t lenMixed, enum CaseConversion conversion)size_t CaseConvertString =:-) 
CaseConvertString(const std::string &s, enum CaseConversion conversion)std::string CaseConvertString =:-) 
CaseConverter()	CaseConverter =:-) 
CaseFolderASCII()	CaseFolderASCII =:-) 
CaseFolderDBCS(const char *charSet_)	explicit CaseFolderDBCS =:-) 
CaseFolderDBCS(QTextCodec *codec_)	explicit CaseFolderDBCS =:-) 
CaseFolderDBCS(UINT cp_)	explicit CaseFolderDBCS =:-) 
CaseFolderForEncoding()CaseFolder =:-) 
CaseFolderTable()CaseFolderTable::CaseFolderTable =:-) 
CaseFolderUnicode()CaseFolderUnicode::CaseFolderUnicode =:-) 
CaseMapString(const std::string &s, int caseMapping)std::string ScintillaGTK::CaseMapString =:-) 
CaseMapString(const std::string &s, int caseMapping)std::string ScintillaQt::CaseMapString =:-) 
CaseMapString(const std::string &s, int caseMapping)std::string Editor::CaseMapString =:-) 
CaseMapString(const std::string &s, int caseMapping)std::string ScintillaWin::CaseMapString =:-) 
CaseMapper(const std::string &sUTF8, bool toUpperCase)	CaseMapper =:-) 
CategoriseCharacter(int character)CharacterCategory CategoriseCharacter =:-) 
CentreItem(int n)void ListBoxX::CentreItem =:-) 
ChSet(unsigned char c)void RESearch::ChSet =:-) 
ChSetWithCase(unsigned char c, bool caseSensitive)void RESearch::ChSetWithCase =:-) 
ChangeCaseOfSelection(int caseMapping)void Editor::ChangeCaseOfSelection =:-) 
ChangeDocument(Document *oldDoc, Document *newDoc)void ScintillaGTKAccessible::ChangeDocument =:-) 
ChangeFunction(WCheckDraw *cd, void *user)	typedef void =:-) 
ChangeInsertion(const char *s, Sci::Position length)void Document::ChangeInsertion =:-) 
ChangeLexerState(Sci_Position start, Sci_Position end)	void ChangeLexerState =:-) 
ChangeLexerState(Sci_Position start, Sci_Position end)void SCI_METHOD Document::ChangeLexerState =:-) 
ChangeScrollPos(int barType, Sci::Position pos)void ScintillaWin::ChangeScrollPos =:-) 
ChangeSize()void Editor::ChangeSize =:-) 
ChangeState(int state_)	void ChangeState =:-) 
ChangeState(lua_State *L)	static int ChangeState =:-) 
CharAdded(int utf32)void SciTEBase::CharAdded =:-) 
CharAddedOutput(int ch)void SciTEBase::CharAddedOutput =:-) 
CharAt(Sci::Position position)	char CharAt =:-) 
CharAt(lua_State *L)	static int CharAt =:-) 
CharClassify()CharClassify::CharClassify =:-) 
CharPtrFromSPtr(sptr_t lParam)static char =:-) 
CharacterAfter(Sci::Position position)Document::CharacterExtracted Document::CharacterAfter =:-) 
CharacterBefore(Sci::Position position)Document::CharacterExtracted Document::CharacterBefore =:-) 
CharacterConversion(int character_=0, const char *conversion_=Ó)		CharacterConversion =:-) 
CharacterExtracted(unsigned int character_, unsigned int widthBytes_)		CharacterExtracted =:-) 
CharacterInSelection(Sci::Position posCharacter)int Selection::CharacterInSelection =:-) 
CharacterOffsetFromByteOffset(Sci::Position byteOffset)	Sci::Position CharacterOffsetFromByteOffset =:-) 
CharacterRangeFromByteRange(Sci::Position startByte, Sci::Position endByte, int *startChar, int *endChar)	void CharacterRangeFromByteRange =:-) 
CharacterSet(const CharacterSet &other)	CharacterSet =:-) 
CharacterSet(setBase base=setNone, const char *initialSet=Ó, int size_=0x80, bool valueAfter_=false)	CharacterSet =:-) 
CharacterSetID(int characterSet)const char =:-) 
CharacterSetID()const char =:-) 
CharacterSetID(int characterSet)const char =:-) 
CharacterSetIDOfDocument()const char =:-) 
CharacterSetOfDocument()int ScintillaQt::CharacterSetOfDocument =:-) 
Check()void ContractionState::Check =:-) 
Check()void RunStyles::Check =:-) 
Check()	void Check =:-) 
CheckAMenuItem(int wIDCheckItem, bool val)void SciTEGTK::CheckAMenuItem =:-) 
CheckAMenuItem(int wIDCheckItem, bool val)void SciTEWin::CheckAMenuItem =:-) 
CheckButton(const GUI::Window &wButton, bool checked)static void CheckButton =:-) 
CheckButtons()void FindStrip::CheckButtons =:-) 
CheckButtons()void ReplaceStrip::CheckButtons =:-) 
CheckCommonDialogError()void SciTEWin::CheckCommonDialogError =:-) 
CheckEnvironment(ExtensionAPI *host)static void CheckEnvironment =:-) 
CheckEnvironment(ExtensionAPI *phost)static void CheckEnvironment =:-) 
CheckForChangeOutsidePaint(Range r)void Editor::CheckForChangeOutsidePaint =:-) 
CheckForRunningInstance(int argc, char *argv[])bool SciTEGTK::CheckForRunningInstance =:-) 
CheckForScintillaFailure(int statusFailure)void SciTEWin::CheckForScintillaFailure =:-) 
CheckMenus()void SciTEGTK::CheckMenus =:-) 
CheckMenus()void SciTEBase::CheckMenus =:-) 
CheckMenus()void SciTEWin::CheckMenus =:-) 
CheckMenusClipboard()void SciTEGTK::CheckMenusClipboard =:-) 
CheckMenusClipboard()void SciTEBase::CheckMenusClipboard =:-) 
CheckMessage(UINT message, WPARAM wParam, LPARAM lParam)LRESULT UniqueInstance::CheckMessage =:-) 
CheckModificationForWrap(DocModification mh)void Editor::CheckModificationForWrap =:-) 
CheckOtherInstance()void UniqueInstance::CheckOtherInstance =:-) 
CheckReadOnly()void Document::CheckReadOnly =:-) 
CheckReload()void SciTEBase::CheckReload =:-) 
CheckStartupScript()static bool CheckStartupScript =:-) 
CheckToolbarButton(HWND wTools, int id, bool enable)static void CheckToolbarButton =:-) 
Checked(int id)	bool Checked =:-) 
ChildFocus(GtkWidget *widget)void FindStrip::ChildFocus =:-) 
ChildFocus(GtkWidget *widget)void ReplaceStrip::ChildFocus =:-) 
ChildFocus(GtkWidget *widget)void UserStrip::ChildFocus =:-) 
ChildFocus(GtkWidget *widget)void Strip::ChildFocus =:-) 
ChildFocusSignal(GtkContainer * , GtkWidget *widget, Strip *pStrip)gboolean Strip::ChildFocusSignal =:-) 
Chomp(std::string &s, int ch)static void Chomp =:-) 
ChooseSaveName(const FilePath &directory, const char *title, const GUI::gui_char *filesFilter, const char *ext)FilePath SciTEWin::ChooseSaveName =:-) 
ChooseStrategy(int eff)static QFont::StyleStrategy ChooseStrategy =:-) 
Chrome()ColourDesired Platform::Chrome =:-) 
ChromeHighlight()ColourDesired Platform::ChromeHighlight =:-) 
ClaimSelection()void ScintillaGTK::ClaimSelection =:-) 
ClaimSelection()void ScintillaQt::ClaimSelection =:-) 
ClaimSelection()void ScintillaWin::ClaimSelection =:-) 
Clamp(int val, int minVal, int maxVal)int Platform::Clamp =:-) 
ClampPositionIntoDocument(Sci::Position pos)Sci::Position Document::ClampPositionIntoDocument =:-) 
ClampPositionIntoDocument(SelectionPosition sp)SelectionPosition Editor::ClampPositionIntoDocument =:-) 
ClassInit(OBJECT_CLASS* object_class, GtkWidgetClass *widget_class, GtkContainerClass *container_class)void ScintillaGTK::ClassInit =:-) 
ClassNameOfWindow(HWND hWnd)GUI::gui_string ClassNameOfWindow =:-) 
Classifier(int baseStyle)	const WordClassifier =:-) 
Clear()void ListBoxX::Clear =:-) 
Clear()void SurfaceImpl::Clear =:-) 
Clear()	void Clear =:-) 
Clear()void WordList::Clear =:-) 
Clear()void ListBoxImpl::Clear =:-) 
Clear()void ContractionState::Clear =:-) 
Clear()	void Clear =:-) 
Clear()void Editor::Clear =:-) 
Clear()	void Clear =:-) 
Clear()void LexerManager::Clear =:-) 
Clear()void KeyMap::Clear =:-) 
Clear()void PositionCache::Clear =:-) 
Clear()void PositionCacheEntry::Clear =:-) 
Clear()void SpecialRepresentations::Clear =:-) 
Clear()void RESearch::Clear =:-) 
Clear()void Selection::Clear =:-) 
Clear()void FontMeasurements::Clear =:-) 
Clear(ColourDesired fore_, ColourDesired back_, int size_, const char *fontName_, int characterSet_, int weight_, bool italic_, bool eolFilled_, bool underline_, ecaseForced caseForce_, bool visible_, bool changeable_, bool hotspot_)void Style::Clear =:-) 
Clear()void FontNames::Clear =:-) 
Clear()void RGBAImageSet::Clear =:-) 
Clear()	void Clear =:-) 
Clear()void ListBoxX::Clear =:-) 
Clear()bool DirectorExtension::Clear =:-) 
Clear()	void Clear =:-) 
Clear()bool LuaExtension::Clear =:-) 
Clear()bool MultiplexExtension::Clear =:-) 
Clear()void PropSetFile::Clear =:-) 
Clear()void StringList::Clear =:-) 
Clear()bool DirectorExtension::Clear =:-) 
ClearAll()void Editor::ClearAll =:-) 
ClearAll()void LineAnnotation::ClearAll =:-) 
ClearAllTabstops()void EditView::ClearAllTabstops =:-) 
ClearBeforeExecute()	bool ClearBeforeExecute =:-) 
ClearBeforeTentativeStart()void Editor::ClearBeforeTentativeStart =:-) 
ClearDocument()void SciTEBase::ClearDocument =:-) 
ClearDocumentStyle()void Editor::ClearDocumentStyle =:-) 
ClearFont()void FontAlias::ClearFont =:-) 
ClearJobs()void JobQueue::ClearJobs =:-) 
ClearLevels()void Document::ClearLevels =:-) 
ClearLevels()void LineLevels::ClearLevels =:-) 
ClearList()void WComboBoxEntry::ClearList =:-) 
ClearRegisteredImages()void ListBoxX::ClearRegisteredImages =:-) 
ClearRegisteredImages()void ListBoxImpl::ClearRegisteredImages =:-) 
ClearRegisteredImages()void ListBoxX::ClearRegisteredImages =:-) 
ClearRepresentation(const char *charBytes)void SpecialRepresentations::ClearRepresentation =:-) 
ClearSelection(bool retainMultipleSelections)void Editor::ClearSelection =:-) 
ClearStyles()void ViewStyle::ClearStyles =:-) 
ClearTabstops(Sci::Line line)bool EditView::ClearTabstops =:-) 
ClearTabstops(Sci::Line line)bool LineTabstops::ClearTabstops =:-) 
ClearTo(const Style &source)void Style::ClearTo =:-) 
ClearValue(int partition)	void ClearValue =:-) 
ClearVirtualSpace()	void ClearVirtualSpace =:-) 
ClickNotified()	bool ClickNotified =:-) 
ClickSignal(GtkWidget *w, UserStrip *pStrip)void UserStrip::ClickSignal =:-) 
ClickThis(GtkWidget *w)void UserStrip::ClickThis =:-) 
ClientFromScreen(HWND hWnd, GUI::Point ptScreen)GUI::Point ClientFromScreen =:-) 
ClipboardClearSelection(GtkClipboard *, void *data)void ScintillaGTK::ClipboardClearSelection =:-) 
ClipboardGetSelection(GtkClipboard *, GtkSelectionData *selection_data, guint info, void *data)void ScintillaGTK::ClipboardGetSelection =:-) 
Close()	void Close =:-) 
Close(Point pt1, Point pt2, Point threshold)static bool Close =:-) 
Close()void FindStrip::Close =:-) 
Close()void ReplaceStrip::Close =:-) 
Close()void UserStrip::Close =:-) 
Close()void Strip::Close =:-) 
Close(bool updateUI, bool loadingSession, bool makingRoomForNew)void SciTEBase::Close =:-) 
Close()void BackgroundStrip::Close =:-) 
Close()void FindReplaceStrip::Close =:-) 
Close()void SearchStrip::Close =:-) 
Close()void Strip::Close =:-) 
Close()void UserStrip::Close =:-) 
CloseAllBuffers(bool loadingSession)void SciTEBase::CloseAllBuffers =:-) 
CloseArea()GUI::Rectangle Strip::CloseArea =:-) 
CloseTab(int tab)void SciTEBase::CloseTab =:-) 
ClusterIterator(PangoLayout *layout, int len)	ClusterIterator =:-) 
CmpString(const char *a, const char *b)static bool CmpString =:-) 
CmpStringNoCase(const char *a, const char *b)static bool CmpStringNoCase =:-) 
CodePage()int SCI_METHOD Document::CodePage =:-) 
CodePage()int Editor::CodePage =:-) 
CodePageFamily()EncodingFamily Document::CodePageFamily =:-) 
CodePageFromCharSet(DWORD characterSet, UINT documentCodePage)UINT CodePageFromCharSet =:-) 
CodePageFromCharSet(DWORD characterSet, UINT documentCodePage)static UINT CodePageFromCharSet =:-) 
CodePageFromName(const std::string &encodingName)static int CodePageFromName =:-) 
CodePageOfDocument()UINT ScintillaWin::CodePageOfDocument =:-) 
CodingCookieValue(const char *buf, size_t length)UniMode CodingCookieValue =:-) 
ColourDesired(long lcol=0)	ColourDesired =:-) 
ColourDesired(unsigned int red, unsigned int green, unsigned int blue)	ColourDesired =:-) 
ColourFromCode(int ch)ColourDesired XPM::ColourFromCode =:-) 
ColourFromString(const std::string &s)Colour ColourFromString =:-) 
ColourOfProperty(const PropSetFile &props, const char *key, Colour colourDefault)Colour ColourOfProperty =:-) 
ColourOptional(0,0,0), bool isSet_=false)	ColourOptional =:-) 
ColourOptional(uptr_t wParam, sptr_t lParam)	ColourOptional =:-) 
ColourRGB(unsigned int red, unsigned int green, unsigned int blue)inline Colour ColourRGB =:-) 
ColourTo(Sci_PositionU pos, int chAttr)	void ColourTo =:-) 
ColourTo(unsigned int pos, int chAttr)void StyleWriter::ColourTo =:-) 
Colourise(Sci::Position start, Sci::Position end)void LexInterface::Colourise =:-) 
Colourize()	void Colourize =:-) 
ColumnWidth()	ColumnWidth =:-) 
CombineWith(MarkerHandleSet *other)void MarkerHandleSet::CombineWith =:-) 
ComboSelectionText(GUI::Window w)static std::string ComboSelectionText =:-) 
Command(int cmdId)void ScintillaBase::Command =:-) 
Command(unsigned long wParam, long)void SciTEGTK::Command =:-) 
Command(WPARAM wParam, LPARAM lParam)void SciTEWin::Command =:-) 
Command(WPARAM )bool BackgroundStrip::Command =:-) 
Command(WPARAM wParam)bool FindStrip::Command =:-) 
Command(WPARAM wParam)bool ReplaceStrip::Command =:-) 
Command(WPARAM wParam)bool SearchStrip::Command =:-) 
Command(WPARAM )bool Strip::Command =:-) 
Command(WPARAM wParam)bool UserStrip::Command =:-) 
CommandExecute(const GUI::gui_char *command, const GUI::gui_char *directoryForRun)std::string CommandExecute =:-) 
CommandWorker()CommandWorker::CommandWorker =:-) 
Commit(GtkIMContext *, char *str, ScintillaGTK *sciThis)void ScintillaGTK::Commit =:-) 
CommitStackSelection()void BufferList::CommitStackSelection =:-) 
CommitTentative()void Selection::CommitTentative =:-) 
CommitThis(char *commitStr)void ScintillaGTK::CommitThis =:-) 
CompareCaseInsensitive(const char *a, const char *b)int CompareCaseInsensitive =:-) 
CompareDevCap(HDC hdc, HDC hOtherDC, int nIndex)static bool CompareDevCap =:-) 
CompareNCaseInsensitive(const char *a, const char *b, size_t len)int CompareNCaseInsensitive =:-) 
CompareNCaseInsensitive(const char *a, const char *b, size_t len)static int CompareNCaseInsensitive =:-) 
CompareNoCase(const char *a, const char *b)int CompareNoCase =:-) 
CompareString(size_t searchLen_)	explicit CompareString =:-) 
CompareStringInsensitive(size_t searchLen_)	explicit CompareStringInsensitive =:-) 
Compile(const char *pattern, Sci::Position length, bool caseSensitive, bool posix)const char =:-) 
Complete()	void Complete =:-) 
Complete()bool MatchMarker::Complete =:-) 
CompleteLoading()void Buffer::CompleteLoading =:-) 
CompleteOpen(OpenCompletion oc)void SciTEBase::CompleteOpen =:-) 
CompleteStoring()void Buffer::CompleteStoring =:-) 
ContainerNeedsUpdate(int flags)void Editor::ContainerNeedsUpdate =:-) 
Contains(PRectangle rc)	bool Contains =:-) 
Contains(Point pt)	bool Contains =:-) 
Contains(Range other)	bool Contains =:-) 
Contains(Sci::Position pos)	bool Contains =:-) 
Contains(int handle)bool MarkerHandleSet::Contains =:-) 
Contains(const char *charBytes, size_t len)bool SpecialRepresentations::Contains =:-) 
Contains(Sci::Position pos)bool SelectionRange::Contains =:-) 
Contains(SelectionPosition sp)bool SelectionRange::Contains =:-) 
Contains(Point pt)	bool Contains =:-) 
Contains(std::string const &s, char ch)bool Contains =:-) 
ContainsCharacter(Sci::Position pos)	bool ContainsCharacter =:-) 
ContainsCharacter(Sci::Position posCharacter)bool SelectionRange::ContainsCharacter =:-) 
ContainsLineEnd(const char *s, Sci::Position length)	bool ContainsLineEnd =:-) 
ContainsWholePixel(Point pt)	bool ContainsWholePixel =:-) 
ContentArea()GtkWidget =:-) 
ContentWin()	ContentWin =:-) 
Context(lua_State *L)	static StylingContext =:-) 
ContextMenu(Point pt)void ScintillaBase::ContextMenu =:-) 
ContextMenu(GUI::ScintillaWindow &wSource, GUI::Point pt, GUI::Window wCmd)void SciTEBase::ContextMenu =:-) 
ContextMenuMessage(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT SciTEWin::ContextMenuMessage =:-) 
Continue()void MatchMarker::Continue =:-) 
ContinueCallTip()void SciTEBase::ContinueCallTip =:-) 
ContinueExecute(int fromPoll)void SciTEGTK::ContinueExecute =:-) 
ContinueMacroList(const char *stext)void SciTEBase::ContinueMacroList =:-) 
ContractedFoldNext(Sci::Line lineStart)Sci::Line Editor::ContractedFoldNext =:-) 
ContractedNext(Sci::Line lineDocStart)Sci::Line ContractionState::ContractedNext =:-) 
ContractionState()ContractionState::ContractionState =:-) 
ControlCharacterString(unsigned char ch)static const char =:-) 
ControlGText(GUI::Window w)static GUI::gui_string ControlGText =:-) 
ControlIDOfCommand(unsigned long wParam)int ControlIDOfCommand =:-) 
ControlIDOfWParam(WPARAM wParam)inline int ControlIDOfWParam =:-) 
ControlText(GUI::Window w)static std::string ControlText =:-) 
ControlWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ListBoxX::ControlWndProc =:-) 
ConversionString()		ConversionString =:-) 
Convert(char** src, gsize *srcleft, char **dst, gsize *dstleft)	gsize Convert =:-) 
ConvertEncoding(const char *original, int codePage)static std::string ConvertEncoding =:-) 
ConvertIndentation(int tabSize, int useTabs)void SciTEBase::ConvertIndentation =:-) 
ConvertLineEnds(int eolModeSet)void Document::ConvertLineEnds =:-) 
ConvertText(const char *s, size_t len, const char *charSetDest, const char *charSetSource, bool transliterations, bool silent)std::string ConvertText =:-) 
ConvertToDocument()void =:-) 
Converter()	Converter =:-) 
Converter(const char *charSetDestination, const char *charSetSource, bool transliterations)	Converter =:-) 
ConverterFor(enum CaseConversion conversion)ICaseConverter =:-) 
ConverterForConversion(enum CaseConversion conversion)CaseConverter =:-) 
CookieValue(const std::string &s)static UniMode CookieValue =:-) 
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceImpl::Copy =:-) 
Copy()void ScintillaGTK::Copy =:-) 
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceImpl::Copy =:-) 
Copy()void ScintillaQt::Copy =:-) 
Copy(const SelectionText &other)	void Copy =:-) 
Copy(const std::string &s_, int codePage_, int characterSet_, bool rectangular_, bool lineCopy_)	void Copy =:-) 
Copy(Font &font_, const FontMeasurements &fm_)void Style::Copy =:-) 
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceD2D::Copy =:-) 
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceGDI::Copy =:-) 
Copy()void ScintillaWin::Copy =:-) 
CopyAllowLine()void Editor::CopyAllowLine =:-) 
CopyAllowLine()void ScintillaWin::CopyAllowLine =:-) 
CopyAsRTF()	virtual void CopyAsRTF =:-) 
CopyAsRTF()void SciTEWin::CopyAsRTF =:-) 
CopyData(COPYDATASTRUCT *pcds)LRESULT UniqueInstance::CopyData =:-) 
CopyPath()void SciTEGTK::CopyPath =:-) 
CopyPath()	virtual void CopyPath =:-) 
CopyPath()void SciTEWin::CopyPath =:-) 
CopyRangeToClipboard(Sci::Position start, Sci::Position end)void Editor::CopyRangeToClipboard =:-) 
CopySelectionRange(SelectionText *ss, bool allowLineCopy)void Editor::CopySelectionRange =:-) 
CopyText(AtkEditableText *text, gint start, gint end)void ScintillaGTKAccessible::AtkEditableTextIface::CopyText =:-) 
CopyText(int startChar, int endChar)void ScintillaGTKAccessible::CopyText =:-) 
CopyText(int length, const char *text)void Editor::CopyText =:-) 
CopyToClipboard(const SelectionText &selectedText)void ScintillaGTK::CopyToClipboard =:-) 
CopyToClipboard(const SelectionText &selectedText)void ScintillaQt::CopyToClipboard =:-) 
CopyToClipboard(const SelectionText &selectedText)void ScintillaWin::CopyToClipboard =:-) 
CopyToModeClipboard(const SelectionText &selectedText, QClipboard::Mode clipboardMode_)void ScintillaQt::CopyToModeClipboard =:-) 
Count()size_t Selection::Count =:-) 
Count()	int Count =:-) 
CountBackgroundActivities()BackgroundActivities BufferList::CountBackgroundActivities =:-) 
CountBytes()int RGBAImage::CountBytes =:-) 
CountCharacters(Sci::Position startPos, Sci::Position endPos)Sci::Position Document::CountCharacters =:-) 
CountLineEnds(int &linesCR, int &linesLF, int &linesCRLF)void SciTEBase::CountLineEnds =:-) 
CountUTF16(Sci::Position startPos, Sci::Position endPos)Sci::Position Document::CountUTF16 =:-) 
Create(const FontParameters &fp)void Font::Create =:-) 
Create(Window &parent, int, Point, int, bool, int,bool)void ListBoxX::Create =:-) 
Create()ILexer =:-) 
Create(const FontParameters &fp)void Font::Create =:-) 
Create(Window &parent, int , Point location, int , bool unicodeMode_, int)void ListBoxImpl::Create =:-) 
Create(int indicator, int length)Decoration =:-) 
Create(const FontParameters &fp)void Font::Create =:-) 
Create(Window &parent_, int ctrlID_, Point location_, int lineHeight_, bool unicodeMode_, int technology_, bool useThickFrame_)void ListBoxX::Create =:-) 
Create()Mutex =:-) 
Create(const GUI::gui_string &title)void Dialog::Create =:-) 
Create(GUI::gui_string text)void WButton::Create =:-) 
Create(GUI::gui_string text, GCallback func, gpointer data)void WButton::Create =:-) 
Create(const char **xpmImage, const GUI::gui_string &toolTip, GtkStyle *pStyle_)void WCheckDraw::Create =:-) 
Create()void WComboBoxEntry::Create =:-) 
Create(const GUI::gui_char *text)void WEntry::Create =:-) 
Create()void WProgress::Create =:-) 
Create(GUI::gui_string text)void WStatic::Create =:-) 
Create(const GUI::gui_string &text)void WToggle::Create =:-) 
Create()Mutex =:-) 
CreateAndAddFont(const FontSpecification &fs)void ViewStyle::CreateAndAddFont =:-) 
CreateBuffers()void SciTEBase::CreateBuffers =:-) 
CreateButton(const char *text, size_t ident, bool check)GUI::Window Strip::CreateButton =:-) 
CreateCallTipWindow(PRectangle rc)void ScintillaGTK::CreateCallTipWindow =:-) 
CreateCallTipWindow(PRectangle rc)void ScintillaQt::CreateCallTipWindow =:-) 
CreateCallTipWindow(PRectangle )void ScintillaWin::CreateCallTipWindow =:-) 
CreateIndentation(Sci::Position indent, int tabSize, bool insertSpaces)static std::string CreateIndentation =:-) 
CreateIndentation(int indent, int tabSize, bool insertSpaces)static std::string CreateIndentation =:-) 
CreateMenu()void SciTEGTK::CreateMenu =:-) 
CreateNewFont(const FontParameters &fp)FontHandle =:-) 
CreateParameterisedDialog(LPCWSTR lpTemplateName, DLGPROC lpProc)HWND SciTEWin::CreateParameterisedDialog =:-) 
CreatePipe(bool )void DirectorExtension::CreatePipe =:-) 
CreatePopUp()void Menu::CreatePopUp =:-) 
CreateRegexSearch(CharClassify *charClassTable)RegexSearchBase =:-) 
CreateSimilarSurface(GdkWindow *window, cairo_content_t content, int width, int height)static cairo_surface_t =:-) 
CreateStrips(GtkWidget *boxMain)void SciTEGTK::CreateStrips =:-) 
CreateSystemCaret()BOOL ScintillaWin::CreateSystemCaret =:-) 
CreateText(const char *text)GUI::Window Strip::CreateText =:-) 
CreateTranslatedMenu(int n, SciTEItemFactoryEntry items[], int nRepeats, const char *prefix, int startNum, int startID, const char *radioStart)void SciTEGTK::CreateTranslatedMenu =:-) 
CreateUI()void SciTEGTK::CreateUI =:-) 
CreateUI()void SciTEWin::CreateUI =:-) 
Created()	bool Created =:-) 
Creation(GtkWidget *container)void BackgroundStrip::Creation =:-) 
Creation(GtkWidget *container)void FindStrip::Creation =:-) 
Creation(GtkWidget *container)void ReplaceStrip::Creation =:-) 
Creation(GtkWidget *container)void UserStrip::Creation =:-) 
Creation(GtkWidget *)void Strip::Creation =:-) 
Creation()void SciTEWin::Creation =:-) 
Creation()void BackgroundStrip::Creation =:-) 
Creation()void FindStrip::Creation =:-) 
Creation()void ReplaceStrip::Creation =:-) 
Creation()void SearchStrip::Creation =:-) 
Creation()void SearchStripBase::Creation =:-) 
Creation()void Strip::Creation =:-) 
Creation()void UserStrip::Creation =:-) 
CreditsWndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)LRESULT CALLBACK CreditsWndProc =:-) 
Current(lua_State *L)	static int Current =:-) 
Current()int BufferList::Current =:-) 
CurrentBuffer()	Buffer =:-) 
CurrentBuffer()Buffer =:-) 
CurrentBufferConst()	const Buffer =:-) 
CurrentBufferConst()const Buffer =:-) 
CurrentPosition()Sci::Position Editor::CurrentPosition =:-) 
CurrentWordHighlight()	CurrentWordHighlight =:-) 
CursorUpOrDown(int direction, Selection::selTypes selt)void Editor::CursorUpOrDown =:-) 
CustomDraw(NMHDR *pnmh)LRESULT Strip::CustomDraw =:-) 
Cut()void Editor::Cut =:-) 
CutText(AtkEditableText *text, gint start, gint end)void ScintillaGTKAccessible::AtkEditableTextIface::CutText =:-) 
CutText(int startChar, int endChar)void ScintillaGTKAccessible::CutText =:-) 
Cxx11RegexFindText(Document *doc, Sci::Position minPos, Sci::Position maxPos, const char *s, bool caseSensitive, Sci::Position *length, RESearch &search)Sci::Position Cxx11RegexFindText =:-) 
D2DPenColour(ColourDesired fore, int alpha)void SurfaceD2D::D2DPenColour =:-) 
DBCS(unsigned char lead, unsigned char trail)		static CharacterExtracted DBCS =:-) 
DBCSCharLength(int codePage, const char *s)int Platform::DBCSCharLength =:-) 
DBCSCharMaxLength()int Platform::DBCSCharMaxLength =:-) 
DWriteMapFontQuality(int extraFontFlag)static D2D1_TEXT_ANTIALIAS_MODE DWriteMapFontQuality =:-) 
Data()	const char =:-) 
DataObject()DataObject::DataObject =:-) 
DataObject_AddRef(DataObject *pd)STDMETHODIMP_ =:-) 
DataObject_DAdvise(DataObject *, FORMATETC *, DWORD, IAdviseSink *, PDWORD)STDMETHODIMP DataObject_DAdvise =:-) 
DataObject_DUnadvise(DataObject *, DWORD)STDMETHODIMP DataObject_DUnadvise =:-) 
DataObject_EnumDAdvise(DataObject *, IEnumSTATDATA **)STDMETHODIMP DataObject_EnumDAdvise =:-) 
DataObject_EnumFormatEtc(DataObject *pd, DWORD dwDirection, IEnumFORMATETC **ppEnum)STDMETHODIMP DataObject_EnumFormatEtc =:-) 
DataObject_GetCanonicalFormatEtc(DataObject *pd, FORMATETC *, FORMATETC *pFEOut)STDMETHODIMP DataObject_GetCanonicalFormatEtc =:-) 
DataObject_GetData(DataObject *pd, FORMATETC *pFEIn, STGMEDIUM *pSTM)STDMETHODIMP DataObject_GetData =:-) 
DataObject_GetDataHere(DataObject *, FORMATETC *, STGMEDIUM *)STDMETHODIMP DataObject_GetDataHere =:-) 
DataObject_QueryGetData(DataObject *pd, FORMATETC *pFE)STDMETHODIMP DataObject_QueryGetData =:-) 
DataObject_QueryInterface(DataObject *pd, REFIID riid, PVOID *ppv)STDMETHODIMP DataObject_QueryInterface =:-) 
DataObject_Release(DataObject *pd)STDMETHODIMP_ =:-) 
DataObject_SetData(DataObject *, FORMATETC *, STGMEDIUM *, BOOL)STDMETHODIMP DataObject_SetData =:-) 
DataOfGSD(GtkSelectionData *sd)static const guchar =:-) 
Deallocate()void LineLayoutCache::Deallocate =:-) 
DebugDisplay(const char *s)void Platform::DebugDisplay =:-) 
DebugPrintf(const char *, ...)void Platform::DebugPrintf =:-) 
DebugPrintf(const char *format, ...)void Platform::DebugPrintf =:-) 
DebugPrintf(const char *, ...)void Platform::DebugPrintf =:-) 
DebugPrintf(const char *format, ...)void Platform::DebugPrintf =:-) 
DecodeMessage(const char *cdoc, std::string &sourcePath, int format, int &column)static int DecodeMessage =:-) 
Decoration(int indicator_)Decoration::Decoration =:-) 
DecorationFillRange(Sci_Position position, int value, Sci_Position fillLength)void SCI_METHOD Document::DecorationFillRange =:-) 
DecorationFromIndicator(int indicator)Decoration =:-) 
DecorationList()DecorationList::DecorationList =:-) 
DecorationSetCurrentIndicator(int indicator)void SCI_METHOD Document::DecorationSetCurrentIndicator =:-) 
DefWndProc(unsigned int, uptr_t, sptr_t)sptr_t ScintillaGTK::DefWndProc =:-) 
DefWndProc(unsigned int, uptr_t, sptr_t)sptr_t ScintillaQt::DefWndProc =:-) 
DefWndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::DefWndProc =:-) 
DefaultFont()const char =:-) 
DefaultFontSize()int Platform::DefaultFontSize =:-) 
DefineMarker(int marker, int markerType, Colour fore, Colour back, Colour backSelected)void SciTEBase::DefineMarker =:-) 
DefineProperty(const char *name, plcob pb, std::string description=Ó)	void DefineProperty =:-) 
DefineProperty(const char *name, plcoi pi, std::string description=Ó)	void DefineProperty =:-) 
DefineProperty(const char *name, plcos ps, std::string description=Ó)	void DefineProperty =:-) 
DefineWordListSets(const char * const wordListDescriptions[])	void DefineWordListSets =:-) 
DelChar(Sci::Position pos)void Document::DelChar =:-) 
DelCharBack(Sci::Position pos)void Document::DelCharBack =:-) 
DelCharBack(bool allowLineStartDeletion)void Editor::DelCharBack =:-) 
DelWordOrLine(unsigned int iMessage)int Editor::DelWordOrLine =:-) 
Delete(int position)	bool Delete =:-) 
Delete(int indicator)void DecorationList::Delete =:-) 
Delete(int position)	void Delete =:-) 
DeleteAll()	void DeleteAll =:-) 
DeleteAll()void RunStyles::DeleteAll =:-) 
DeleteAll()	void DeleteAll =:-) 
DeleteAllMarks(int markerNum)void Document::DeleteAllMarks =:-) 
DeleteAnyEmpty()void DecorationList::DeleteAnyEmpty =:-) 
DeleteChars(Sci::Position pos, Sci::Position len)bool Document::DeleteChars =:-) 
DeleteFileStackMenu()void SciTEBase::DeleteFileStackMenu =:-) 
DeleteFontObject(HFONT &font)static void DeleteFontObject =:-) 
DeleteInstance()void LexerManager::DeleteInstance =:-) 
DeleteLexerDecorations()void DecorationList::DeleteLexerDecorations =:-) 
DeleteLine(Sci::Line lineDoc)void ContractionState::DeleteLine =:-) 
DeleteLines(Sci::Line lineDoc, Sci::Line lineCount)void ContractionState::DeleteLines =:-) 
DeleteMark(Sci::Line line, int markerNum)void Document::DeleteMark =:-) 
DeleteMark(Sci::Line line, int markerNum, bool all)bool LineMarkers::DeleteMark =:-) 
DeleteMarkFromHandle(int markerHandle)void Document::DeleteMarkFromHandle =:-) 
DeleteMarkFromHandle(int markerHandle)void LineMarkers::DeleteMarkFromHandle =:-) 
DeletePosition(int position)	void DeletePosition =:-) 
DeleteRange(int position, int deleteLength)void DecorationList::DeleteRange =:-) 
DeleteRange(int position, int deleteLength)void RunStyles::DeleteRange =:-) 
DeleteRange(int position, int deleteLength)	void DeleteRange =:-) 
DeleteText(AtkEditableText *text, gint start, gint end)void ScintillaGTKAccessible::AtkEditableTextIface::DeleteText =:-) 
DeleteText(int startChar, int endChar)void ScintillaGTKAccessible::DeleteText =:-) 
DeleteUndoHistory()	void DeleteUndoHistory =:-) 
Delta(int difference)static int Delta =:-) 
Descent(Font &font_)XYPOSITION SurfaceImpl::Descent =:-) 
Descent(Font &font)XYPOSITION SurfaceImpl::Descent =:-) 
Descent(Font &font_)XYPOSITION SurfaceD2D::Descent =:-) 
Descent(Font &font_)XYPOSITION SurfaceGDI::Descent =:-) 
DescribeProperty(const char *)const char =:-) 
DescribeProperty(const char *name)	const char =:-) 
DescribeProperty(const char *name)const char =:-) 
DescribeWordListSets()const char =:-) 
DescribeWordListSets()	const char =:-) 
DescribeWordListSets()const char =:-) 
Destroy()void Menu::Destroy =:-) 
Destroy()void Window::Destroy =:-) 
Destroy(GObject *object)void ScintillaGTK::Destroy =:-) 
Destroy()void Menu::Destroy =:-) 
Destroy()void Window::Destroy =:-) 
Destroy()void Menu::Destroy =:-) 
Destroy()void Window::Destroy =:-) 
Destroy()void Menu::Destroy =:-) 
Destroy()void Window::Destroy =:-) 
Destroy()void Menu::Destroy =:-) 
Destroy()void Window::Destroy =:-) 
DestroyFindReplace()void SciTEGTK::DestroyFindReplace =:-) 
DestroyFindReplace()void SciTEWin::DestroyFindReplace =:-) 
DestroyMenuItem(int, int itemID)void SciTEGTK::DestroyMenuItem =:-) 
DestroyMenuItem(int menuNumber, int itemID)void SciTEWin::DestroyMenuItem =:-) 
DestroySystemCaret()BOOL ScintillaWin::DestroySystemCaret =:-) 
Destroyed()	virtual void Destroyed =:-) 
Destruction()void FindStrip::Destruction =:-) 
Destruction()void ReplaceStrip::Destruction =:-) 
Destruction()void UserStrip::Destruction =:-) 
Destruction()void BackgroundStrip::Destruction =:-) 
Destruction()void FindStrip::Destruction =:-) 
Destruction()void ReplaceStrip::Destruction =:-) 
Destruction()void SearchStrip::Destruction =:-) 
Destruction()void SearchStripBase::Destruction =:-) 
Destruction()void Strip::Destruction =:-) 
Destruction()void UserStrip::Destruction =:-) 
DeviceHeightFont(int points)int SurfaceImpl::DeviceHeightFont =:-) 
DeviceHeightFont(int points)int SurfaceD2D::DeviceHeightFont =:-) 
DeviceHeightFont(int points)int SurfaceGDI::DeviceHeightFont =:-) 
Dialog(HWND hDlg_)	explicit Dialog =:-) 
DialogFilterFromProperty(const GUI::gui_char *filterProperty)GUI::gui_string SciTEWin::DialogFilterFromProperty =:-) 
DialogFindReplace(HWND hDlg_, bool advanced_)	DialogFindReplace =:-) 
DialogHandled(GUI::WindowID id, MSG *pmsg)bool SciTEWin::DialogHandled =:-) 
DialogParameters()	DialogParameters =:-) 
DirectFunction( sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaGTK::DirectFunction =:-) 
DirectFunction( sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaQt::DirectFunction =:-) 
DirectFunction( sptr_t ptr, UINT iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::DirectFunction =:-) 
DirectorExtension()	DirectorExtension =:-) 
DirectorExtension()	DirectorExtension =:-) 
DirectorExtension_Register(HINSTANCE hInstance)static void DirectorExtension_Register =:-) 
DirectorExtension_WndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL DirectorExtension_WndProc =:-) 
Directory()FilePath FilePath::Directory =:-) 
DiscardOverdraw()void Editor::DiscardOverdraw =:-) 
DiscoverEOLSetting()void SciTEBase::DiscoverEOLSetting =:-) 
DiscoverIndentSetting()void SciTEBase::DiscoverIndentSetting =:-) 
DiscoverLanguage()std::string SciTEBase::DiscoverLanguage =:-) 
Display(GtkWidget *parent, bool modal)void Dialog::Display =:-) 
DisplayAround(const RecentFile &rf)void SciTEBase::DisplayAround =:-) 
DisplayCursor(Window::Cursor c)void ScintillaGTK::DisplayCursor =:-) 
DisplayCursor(Window::Cursor c)void Editor::DisplayCursor =:-) 
DisplayFromDoc(Sci::Line lineDoc)Sci::Line ContractionState::DisplayFromDoc =:-) 
DisplayFromPosition(Surface *surface, const EditModel &model, Sci::Position pos, const ViewStyle &vs)Sci::Line EditView::DisplayFromPosition =:-) 
DisplayFromPosition(Sci::Position pos)Sci::Line Editor::DisplayFromPosition =:-) 
DisplayLastFromDoc(Sci::Line lineDoc)Sci::Line ContractionState::DisplayLastFromDoc =:-) 
Dispose(GObject *object)void ScintillaGTK::Dispose =:-) 
Dispose(LineLayout *ll)void LineLayoutCache::Dispose =:-) 
DistanceToSecondaryStyles()	int DistanceToSecondaryStyles =:-) 
DistanceToSecondaryStyles()int LexState::DistanceToSecondaryStyles =:-) 
DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved)extern =:-) 
DoDialog(const TCHAR *resName, DLGPROC lpProc)int SciTEWin::DoDialog =:-) 
DoMenuCommand(int cmdID)void SciTEBase::DoMenuCommand =:-) 
DoReplaceAll(bool inSelection)int SciTEBase::DoReplaceAll =:-) 
DocFromDisplay(Sci::Line lineDisplay)Sci::Line ContractionState::DocFromDisplay =:-) 
DocModification(int modificationType_, Sci::Position position_=0, Sci::Position length_=0, Sci::Line linesAdded_=0, const char *text_=0, Sci::Line line_=0)	DocModification =:-) 
DocModification(int modificationType_, const Action &act, Sci::Line linesAdded_=0)	DocModification =:-) 
Document()Document::Document =:-) 
DocumentIndexer(Document *pdoc_, Sci::Position end_)	DocumentIndexer =:-) 
DocumentLexState()LexState =:-) 
DocumentModified()void Buffer::DocumentModified =:-) 
DocumentPointFromView(Point ptView)PointDocument Editor::DocumentPointFromView =:-) 
DoubleClickTime()unsigned int Platform::DoubleClickTime =:-) 
DragDataGet(GtkWidget *widget, GdkDragContext *context, GtkSelectionData *selection_data, guint info, guint)void ScintillaGTK::DragDataGet =:-) 
DragDataReceived(GtkWidget *widget, GdkDragContext * , gint, gint, GtkSelectionData *selection_data, guint , guint)void ScintillaGTK::DragDataReceived =:-) 
DragDataReceived(GtkWidget *, GdkDragContext *context, gint , gint , GtkSelectionData *selectionData, guint , guint time, SciTEGTK *scitew)void SciTEGTK::DragDataReceived =:-) 
DragEnd(GtkWidget *widget, GdkDragContext * )void ScintillaGTK::DragEnd =:-) 
DragEnter(const Point &point)void ScintillaQt::DragEnter =:-) 
DragEnter(LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL, PDWORD pdwEffect)STDMETHODIMP ScintillaWin::DragEnter =:-) 
DragIsRectangularOK(CLIPFORMAT fmt)	bool DragIsRectangularOK =:-) 
DragLeave(GtkWidget *widget, GdkDragContext * , guint)void ScintillaGTK::DragLeave =:-) 
DragLeave()void ScintillaQt::DragLeave =:-) 
DragLeave()STDMETHODIMP ScintillaWin::DragLeave =:-) 
DragMotion(GtkWidget *widget, GdkDragContext *context, gint x, gint y, guint dragtime)gboolean ScintillaGTK::DragMotion =:-) 
DragMotionThis(GdkDragContext *context, gint x, gint y, guint dragtime)gboolean ScintillaGTK::DragMotionThis =:-) 
DragMove(const Point &point)void ScintillaQt::DragMove =:-) 
DragOver(DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP ScintillaWin::DragOver =:-) 
DragThreshold(Point ptStart, Point ptNow)bool ScintillaGTK::DragThreshold =:-) 
DragThreshold(Point ptStart, Point ptNow)bool ScintillaQt::DragThreshold =:-) 
DragThreshold(Point ptStart, Point ptNow)bool Editor::DragThreshold =:-) 
DragThreshold(Point ptStart, Point ptNow)bool ScintillaWin::DragThreshold =:-) 
Draw(Surface *surface, const PRectangle &rc, const PRectangle &rcLine, const PRectangle &rcCharacter, DrawState drawState, int value)void Indicator::Draw =:-) 
Draw(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, typeOfFold tFold, int marginStyle)void LineMarker::Draw =:-) 
Draw(Surface *surface, const PRectangle &rc)void XPM::Draw =:-) 
Draw(DRAWITEMSTRUCT *pDrawItem)void ListBoxX::Draw =:-) 
DrawAnnotation(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, int xStart, PRectangle rcLine, int subLine, DrawPhase phase)void EditView::DrawAnnotation =:-) 
DrawBackground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, Range lineRange, Sci::Position posLineStart, int xStart, int subLine, ColourOptional background)void EditView::DrawBackground =:-) 
DrawBlockCaret(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, int subLine, int xStart, Sci::Position offset, Sci::Position posCaret, PRectangle rcCaret, ColourDesired caretColour)static void DrawBlockCaret =:-) 
DrawBox(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore, ColourDesired back)static void DrawBox =:-) 
DrawCT(GtkWidget *widget, cairo_t *cr, CallTip *ctip)gboolean ScintillaGTK::DrawCT =:-) 
DrawCaretLineFramed(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, int subLine)static void DrawCaretLineFramed =:-) 
DrawCarets(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line lineDoc, int xStart, PRectangle rcLine, int subLine)void EditView::DrawCarets =:-) 
DrawChunk(Surface *surface, int &x, const char *s, int posStart, int posEnd, int ytext, PRectangle rcClient, bool highlight, bool draw)void CallTip::DrawChunk =:-) 
DrawCircle(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore, ColourDesired back)static void DrawCircle =:-) 
DrawEOL(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, Sci::Line line, Sci::Position lineEnd, int xStart, int subLine, XYACCUMULATOR subLineStart, ColourOptional background)void EditView::DrawEOL =:-) 
DrawEdgeLine(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, Range lineRange, int xStart)static void DrawEdgeLine =:-) 
DrawFoldDisplayText(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, int xStart, PRectangle rcLine, int subLine, XYACCUMULATOR subLineStart, DrawPhase phase)void EditView::DrawFoldDisplayText =:-) 
DrawFoldLines(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, Sci::Line line, PRectangle rcLine)static void DrawFoldLines =:-) 
DrawForeground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line lineVisible, PRectangle rcLine, Range lineRange, Sci::Position posLineStart, int xStart, int subLine, ColourOptional background)void EditView::DrawForeground =:-) 
DrawFrame(Surface *surface, ColourDesired colour, int alpha, PRectangle rcFrame)static void DrawFrame =:-) 
DrawImeIndicator(int indicator, int len)void ScintillaGTK::DrawImeIndicator =:-) 
DrawImeIndicator(int indicator, int len)void ScintillaEditBase::DrawImeIndicator =:-) 
DrawImeIndicator(int indicator, int len)void ScintillaWin::DrawImeIndicator =:-) 
DrawIndentGuide(Surface *surface, Sci::Line lineVisible, int lineHeight, Sci::Position start, PRectangle rcSegment, bool highlight)void EditView::DrawIndentGuide =:-) 
DrawIndentGuidesOverEmpty(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, Sci::Line lineVisible, PRectangle rcLine, int xStart, int subLine)void EditView::DrawIndentGuidesOverEmpty =:-) 
DrawIndicator(int indicNum, Sci::Position startPos, Sci::Position endPos, Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, int xStart, PRectangle rcLine, Sci::Position secondCharacter, int subLine, Indicator::DrawState drawState, int value)static void DrawIndicator =:-) 
DrawIndicators(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, int xStart, PRectangle rcLine, int subLine, Sci::Position lineEnd, bool under, Sci::Position hoverIndicatorPos)static void DrawIndicators =:-) 
DrawLine(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, Sci::Line lineVisible, int xStart, PRectangle rcLine, int subLine, DrawPhase phase)void EditView::DrawLine =:-) 
DrawLineMarkerFn(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, int tFold, int marginStyle, const void *lineMarker)typedef void =:-) 
DrawMain(GtkWidget *widget, cairo_t *cr)gboolean ScintillaGTK::DrawMain =:-) 
DrawMarkUnderline(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, Sci::Line line, PRectangle rcLine)static void DrawMarkUnderline =:-) 
DrawMinus(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore)static void DrawMinus =:-) 
DrawPage(GtkPrintOperation *operation, GtkPrintContext *context, gint page_nr, SciTEGTK *scitew)void SciTEGTK::DrawPage =:-) 
DrawPageThis(GtkPrintOperation * , GtkPrintContext *context, gint page_nr)void SciTEGTK::DrawPageThis =:-) 
DrawPlus(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore)static void DrawPlus =:-) 
DrawPreedit(GtkWidget *widget, cairo_t *cr, ScintillaGTK *sciThis)gboolean ScintillaGTK::DrawPreedit =:-) 
DrawPreeditThis(GtkWidget *, cairo_t *cr)gboolean ScintillaGTK::DrawPreeditThis =:-) 
DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixelsImage)void SurfaceImpl::DrawRGBAImage =:-) 
DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixelsImage)void SurfaceD2D::DrawRGBAImage =:-) 
DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixelsImage)void SurfaceGDI::DrawRGBAImage =:-) 
DrawStyledText(Surface *surface, const ViewStyle &vs, int styleOffset, PRectangle rcText, const StyledText &st, size_t start, size_t length, DrawPhase phase)void DrawStyledText =:-) 
DrawTabArrow(Surface *surface, PRectangle rcTab, int ymid, const ViewStyle &vsDraw)static void DrawTabArrow =:-) 
DrawTabArrowFn(Surface *surface, PRectangle rcTab, int ymid)typedef void =:-) 
DrawText(GtkWidget *, cairo_t *cr, ScintillaGTK *sciThis)gboolean ScintillaGTK::DrawText =:-) 
DrawTextBase(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceImpl::DrawTextBase =:-) 
DrawTextBlob(Surface *surface, const ViewStyle &vsDraw, PRectangle rcSegment, const char *s, ColourDesired textBack, ColourDesired textFore, bool fillBackground)static void DrawTextBlob =:-) 
DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::DrawTextClipped =:-) 
DrawTextClipped(PRectangle rc, Font &font, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::DrawTextClipped =:-) 
DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceD2D::DrawTextClipped =:-) 
DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceGDI::DrawTextClipped =:-) 
DrawTextCommon(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, UINT fuOptions)void SurfaceD2D::DrawTextCommon =:-) 
DrawTextCommon(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, UINT fuOptions)void SurfaceGDI::DrawTextCommon =:-) 
DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::DrawTextNoClip =:-) 
DrawTextNoClip(PRectangle rc, Font &font, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::DrawTextNoClip =:-) 
DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceD2D::DrawTextNoClip =:-) 
DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceGDI::DrawTextNoClip =:-) 
DrawTextNoClipPhase(Surface *surface, PRectangle rc, const Style &style, XYPOSITION ybase, const char *s, int len, DrawPhase phase)void DrawTextNoClipPhase =:-) 
DrawTextThis(cairo_t *cr)gboolean ScintillaGTK::DrawTextThis =:-) 
DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceImpl::DrawTextTransparent =:-) 
DrawTextTransparent(PRectangle rc, Font &font, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceImpl::DrawTextTransparent =:-) 
DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceD2D::DrawTextTransparent =:-) 
DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceGDI::DrawTextTransparent =:-) 
DrawThis(cairo_t *cr)gboolean ScintillaGTK::DrawThis =:-) 
DrawTranslucentLineState(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, PRectangle rcLine, int subLine)static void DrawTranslucentLineState =:-) 
DrawTranslucentSelection(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, PRectangle rcLine, int subLine, Range lineRange, int xStart)static void DrawTranslucentSelection =:-) 
DrawWrapIndentAndMarker(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, int xStart, PRectangle rcLine, ColourOptional background, DrawWrapMarkerFn customDrawWrapMarker, bool caretActive)static void DrawWrapIndentAndMarker =:-) 
DrawWrapMarker(Surface *surface, PRectangle rcPlace, bool isEndMarker, ColourDesired wrapColour)void DrawWrapMarker =:-) 
DrawWrapMarkerFn(Surface *surface, PRectangle rcPlace, bool isEndMarker, ColourDesired wrapColour)typedef void =:-) 
Drop(GtkWidget *widget, GdkDragContext * , gint, gint, guint)gboolean ScintillaGTK::Drop =:-) 
Drop(const Point &point, const QMimeData *data, bool move)void ScintillaQt::Drop =:-) 
Drop(LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP ScintillaWin::Drop =:-) 
DropAdditionalRanges()void Selection::DropAdditionalRanges =:-) 
DropAt(SelectionPosition position, const char *value, bool moving, bool rectangular)void Editor::DropAt =:-) 
DropAt(SelectionPosition position, const char *value, size_t lengthValue, bool moving, bool rectangular)void Editor::DropAt =:-) 
DropCaret()void Editor::DropCaret =:-) 
DropFiles(HDROP hdrop)void SciTEWin::DropFiles =:-) 
DropGraphics(bool freeObjects)void EditView::DropGraphics =:-) 
DropGraphics(bool freeObjects)void Editor::DropGraphics =:-) 
DropGraphics(bool freeObjects)void MarginView::DropGraphics =:-) 
DropRenderTarget()void ScintillaWin::DropRenderTarget =:-) 
DropSelection(size_t r)void Selection::DropSelection =:-) 
DropSource()DropSource::DropSource =:-) 
DropSource_AddRef(DropSource *ds)STDMETHODIMP_ =:-) 
DropSource_GiveFeedback(DropSource *, DWORD)STDMETHODIMP DropSource_GiveFeedback =:-) 
DropSource_QueryContinueDrag(DropSource *, BOOL fEsc, DWORD grfKeyState)STDMETHODIMP DropSource_QueryContinueDrag =:-) 
DropSource_QueryInterface(DropSource *ds, REFIID riid, PVOID *ppv)STDMETHODIMP DropSource_QueryInterface =:-) 
DropSource_Release(DropSource *ds)STDMETHODIMP_ =:-) 
DropTarget()DropTarget::DropTarget =:-) 
DropTarget_AddRef(DropTarget *dt)STDMETHODIMP_ =:-) 
DropTarget_DragEnter(DropTarget *dt, LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP DropTarget_DragEnter =:-) 
DropTarget_DragLeave(DropTarget *dt)STDMETHODIMP DropTarget_DragLeave =:-) 
DropTarget_DragOver(DropTarget *dt, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP DropTarget_DragOver =:-) 
DropTarget_Drop(DropTarget *dt, LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP DropTarget_Drop =:-) 
DropTarget_QueryInterface(DropTarget *dt, REFIID riid, PVOID *ppv)STDMETHODIMP DropTarget_QueryInterface =:-) 
DropTarget_Release(DropTarget *dt)STDMETHODIMP_ =:-) 
Duplicate(bool forLine)void Editor::Duplicate =:-) 
Duration(bool reset)double ElapsedTime::Duration =:-) 
Duration()double FileWorker::Duration =:-) 
Duration(bool reset)double ElapsedTime::Duration =:-) 
DwellEnd(bool mouseMoved)void Editor::DwellEnd =:-) 
DynamicLibraryImpl(const char *modulePath)	explicit DynamicLibraryImpl =:-) 
DynamicLibraryImpl(const char *modulePath)	explicit DynamicLibraryImpl =:-) 
DynamicLibraryImpl(const char *modulePath)	explicit DynamicLibraryImpl =:-) 
EdgeProperties(0))	EdgeProperties =:-) 
EdgeProperties(uptr_t wParam, sptr_t lParam)	EdgeProperties =:-) 
EditColour(HWND hwnd, HDC hdc)LRESULT FindReplaceStrip::EditColour =:-) 
EditColour(HWND hwnd, HDC hdc)LRESULT SearchStrip::EditColour =:-) 
EditColour(HWND hwnd, HDC hdc)LRESULT Strip::EditColour =:-) 
EditModel()EditModel::EditModel =:-) 
EditView()EditView::EditView =:-) 
Editor()Editor::Editor =:-) 
EffectFromState(DWORD grfKeyState)DWORD ScintillaWin::EffectFromState =:-) 
ElapsedTime()ElapsedTime::ElapsedTime =:-) 
ElapsedTime()ElapsedTime::ElapsedTime =:-) 
ElapsedTime()ElapsedTime::ElapsedTime =:-) 
ElementAt(int nIndex)	TYPE =:-) 
Elements()	int Elements =:-) 
EliminateDuplicateWords(std::string &words)void SciTEBase::EliminateDuplicateWords =:-) 
Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceImpl::Ellipse =:-) 
Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceD2D::Ellipse =:-) 
Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceGDI::Ellipse =:-) 
Empty()	bool Empty =:-) 
Empty()bool Decoration::Empty =:-) 
Empty()	bool Empty =:-) 
Empty()bool MarkerHandleSet::Empty =:-) 
Empty()bool Selection::Empty =:-) 
Empty()	bool Empty =:-) 
Enable(int id, bool enable)	void Enable =:-) 
EnableAMenuItem(int wIDCheckItem, bool val)void SciTEGTK::EnableAMenuItem =:-) 
EnableAMenuItem(int wIDCheckItem, bool val)void SciTEWin::EnableAMenuItem =:-) 
EnableButton(HWND wTools, int id, bool enable)void EnableButton =:-) 
Enabled()bool ScintillaGTKAccessible::Enabled =:-) 
EncodeString(const std::string &s)std::string SciTEGTK::EncodeString =:-) 
EncodeString(const std::string &s)std::string SciTEBase::EncodeString =:-) 
EncodeString(const std::string &s)std::string SciTEWin::EncodeString =:-) 
EncodedFromUTF8(char *utf8, char *encoded)int ScintillaGTK::EncodedFromUTF8 =:-) 
EncodedFromUTF8(char *utf8, char *encoded)Sci::Position ScintillaWin::EncodedFromUTF8 =:-) 
Encoding()	EncodingType Encoding =:-) 
End(int indicator, int position)int DecorationList::End =:-) 
End()	SelectionPosition End =:-) 
EndLineStyle()int LineLayout::EndLineStyle =:-) 
EndMatches(GUI::gui_string const &s, GUI::gui_string const &end)static bool EndMatches =:-) 
EndRun(int position)int RunStyles::EndRun =:-) 
EndStackedTabbing()void SciTEBase::EndStackedTabbing =:-) 
EndStyling(lua_State *L)	static int EndStyling =:-) 
EndUndoAction()	void EndUndoAction =:-) 
EndsWith(GUI::gui_string const &s, GUI::gui_string const &end)bool EndsWith =:-) 
EnsureAllChildrenVisible(int line, int level)void SciTEBase::EnsureAllChildrenVisible =:-) 
EnsureCaretVisible(bool useMargin, bool vert, bool horiz)void Editor::EnsureCaretVisible =:-) 
EnsureData()void ContractionState::EnsureData =:-) 
EnsureData()	void EnsureData =:-) 
EnsureFinalNewLine()void SciTEBase::EnsureFinalNewLine =:-) 
EnsureLength(int wantedLength)	void EnsureLength =:-) 
EnsureLineVisible(Sci::Line lineDoc, bool enforcePolicy)void Editor::EnsureLineVisible =:-) 
EnsureRangeVisible(GUI::ScintillaWindow &win, int posStart, int posEnd, bool enforcePolicy)void SciTEBase::EnsureRangeVisible =:-) 
EnsureRenderTarget(HDC hdc)void ScintillaWin::EnsureRenderTarget =:-) 
EnsureStyle(size_t index)void ViewStyle::EnsureStyle =:-) 
EnsureStyledTo(Sci::Position pos)void Document::EnsureStyledTo =:-) 
Entry()GtkEntry =:-) 
EnumProperties(const char *propkind)void SciTEBase::EnumProperties =:-) 
EqualCaseInsensitive(const char *a, const char *b)bool EqualCaseInsensitive =:-) 
EscapeFilePathsForMenu(GUI::gui_string &path)static void EscapeFilePathsForMenu =:-) 
EscapeHanja()void ScintillaWin::EscapeHanja =:-) 
EscapeSignal(GtkWidget *w, GdkEventKey *event, FindStrip *pStrip)gboolean FindStrip::EscapeSignal =:-) 
EscapeSignal(GtkWidget *w, GdkEventKey *event, ReplaceStrip *pStrip)gboolean ReplaceStrip::EscapeSignal =:-) 
EscapeSignal(GtkWidget *w, GdkEventKey *event, UserStrip *pStrip)gboolean UserStrip::EscapeSignal =:-) 
Evaluate(const char *key)std::string PropSetFile::Evaluate =:-) 
EventLoop()uptr_t SciTEWin::EventLoop =:-) 
Execute(CharacterIndexer &ci, Sci::Position lp, Sci::Position endp)int RESearch::Execute =:-) 
Execute()void SciTEGTK::Execute =:-) 
Execute()void FileLoader::Execute =:-) 
Execute()void FileStorer::Execute =:-) 
Execute()void SciTEBase::Execute =:-) 
Execute()	virtual void Execute =:-) 
Execute()void CommandWorker::Execute =:-) 
Execute()void SciTEWin::Execute =:-) 
ExecuteHelp(const char *cmd)void SciTEWin::ExecuteHelp =:-) 
ExecuteMacroCommand(const char *command)void SciTEBase::ExecuteMacroCommand =:-) 
ExecuteNext()void SciTEGTK::ExecuteNext =:-) 
ExecuteNext()void SciTEWin::ExecuteNext =:-) 
ExecuteOne(const Job &jobToRun)DWORD SciTEWin::ExecuteOne =:-) 
ExecuteOtherHelp(const char *cmd)void SciTEWin::ExecuteOtherHelp =:-) 
Exhausted()	bool Exhausted =:-) 
Exists()bool FilePath::Exists =:-) 
Exists(const char *key)bool PropSetFile::Exists =:-) 
Exists(const GUI::gui_char *dir, const GUI::gui_char *path, FilePath *resultPath)bool SciTEBase::Exists =:-) 
Expand(const std::string &withVars, int maxExpands)std::string PropSetFile::Expand =:-) 
ExpandAllInPlace(const PropSetSimple &props, std::string &withVars, int maxExpands, const VarChain &blankVars)static int ExpandAllInPlace =:-) 
ExpandAllInPlace())static int ExpandAllInPlace =:-) 
ExpandFolds(int line, bool expand, int level)void SciTEBase::ExpandFolds =:-) 
ExpandLevels(Sci::Line sizeNew)void LineLevels::ExpandLevels =:-) 
ExpandLine(Sci::Line line)Sci::Line Editor::ExpandLine =:-) 
Expose(GtkWidget *, GdkEventExpose *ose)gboolean ScintillaGTK::Expose =:-) 
ExposeCT(GtkWidget *widget, GdkEventExpose * , CallTip *ctip)gboolean ScintillaGTK::ExposeCT =:-) 
ExposeMain(GtkWidget *widget, GdkEventExpose *ose)gboolean ScintillaGTK::ExposeMain =:-) 
ExposePreedit(GtkWidget *widget, GdkEventExpose *ose, ScintillaGTK *sciThis)gboolean ScintillaGTK::ExposePreedit =:-) 
ExposePreeditThis(GtkWidget *widget, GdkEventExpose *)gboolean ScintillaGTK::ExposePreeditThis =:-) 
ExposeText(GtkWidget *widget, GdkEventExpose *ose, ScintillaGTK *sciThis)gboolean ScintillaGTK::ExposeText =:-) 
ExposeTextThis(GtkWidget * , GdkEventExpose *ose)gboolean ScintillaGTK::ExposeTextThis =:-) 
Extend(SelectionPosition p)	void Extend =:-) 
ExtendStyleRange(Sci::Position pos, int delta, bool singleLine)Sci::Position Document::ExtendStyleRange =:-) 
ExtendWordSelect(Sci::Position pos, int delta, bool onlyWordCharacters)Sci::Position Document::ExtendWordSelect =:-) 
Extension()FilePath FilePath::Extension =:-) 
ExtensionFileName()std::string SciTEBase::ExtensionFileName =:-) 
ExternalLeading(Font &)XYPOSITION SurfaceImpl::ExternalLeading =:-) 
ExternalLeading(Font &font)XYPOSITION SurfaceImpl::ExternalLeading =:-) 
ExternalLeading(Font &)XYPOSITION SurfaceD2D::ExternalLeading =:-) 
ExternalLeading(Font &font_)XYPOSITION SurfaceGDI::ExternalLeading =:-) 
ExternalLexerModule(int language_, LexerFunction fnLexer_, const char *languageName_=0, LexerFunction fnFolder_=0)	ExternalLexerModule =:-) 
ExternalMarginWidth()int ViewStyle::ExternalMarginWidth =:-) 
ExtractCharacter(Sci::Position position)Document::CharacterExtracted Document::ExtractCharacter =:-) 
ExtractLine(const char *buf, size_t length)std::string ExtractLine =:-) 
FRFindCmd()void SciTEGTK::FRFindCmd =:-) 
FRMarkAllCmd()void SciTEGTK::FRMarkAllCmd =:-) 
FRReplaceAllCmd()void SciTEGTK::FRReplaceAllCmd =:-) 
FRReplaceCmd()void SciTEGTK::FRReplaceCmd =:-) 
FRReplaceInBuffersCmd()void SciTEGTK::FRReplaceInBuffersCmd =:-) 
FRReplaceInSelectionCmd()void SciTEGTK::FRReplaceInSelectionCmd =:-) 
FailedSaveMessageBox(const FilePath &filePathSaving)void SciTEBase::FailedSaveMessageBox =:-) 
FileLoader(WorkerListener *pListener_, ILoader *pLoader_, const FilePath &path_, size_t size_, FILE *fp_)FileLoader::FileLoader =:-) 
FileNameExt()	FilePath FileNameExt =:-) 
FilePath(FilePath const &directory, FilePath const &name)FilePath::FilePath =:-) 
FilePath(const GUI::gui_char *fileName_)FilePath::FilePath =:-) 
FilePath(const GUI::gui_string &fileName_)FilePath::FilePath =:-) 
FileReader(const FilePath &fPath, bool caseSensitive_)	FileReader =:-) 
FileStorer(WorkerListener *pListener_, const char *documentBytes_, const FilePath &path_, size_t size_, FILE *fp_, UniMode unicodeMode_, bool visibleProgress_)FileStorer::FileStorer =:-) 
FileWorker(WorkerListener *pListener_, const FilePath &path_, size_t size_, FILE *fp_)FileWorker::FileWorker =:-) 
Fill(Sci_Position position)	void Fill =:-) 
Fill(int position)void TextReader::Fill =:-) 
FillComboFromMemory(WComboBoxEntry *combo, const ComboMemory &mem, bool useTop = false)static void FillComboFromMemory =:-) 
FillComboFromMemory(int id, const ComboMemory &mem, bool useTop = false)	void FillComboFromMemory =:-) 
FillComboFromProps(WComboBoxEntry *combo, PropSetFile &props)static void FillComboFromProps =:-) 
FillComboFromProps(HWND combo, PropSetFile &props)static void FillComboFromProps =:-) 
FillCombos(Dialog &dlg, bool inFiles)void SciTEWin::FillCombos =:-) 
FillFields()void DialogFindInFiles::FillFields =:-) 
FillFields()void DialogFindReplace::FillFields =:-) 
FillFromMemory(const std::vector<std::string> &mem, bool useTop)void WComboBoxEntry::FillFromMemory =:-) 
FillFunctionDefinition(int pos )void SciTEBase::FillFunctionDefinition =:-) 
FillLineRemainder(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, PRectangle rcArea, int subLine)void EditView::FillLineRemainder =:-) 
FillRange(int &position, int value, int &fillLength)bool DecorationList::FillRange =:-) 
FillRange(int &position, int value, int &fillLength)bool RunStyles::FillRange =:-) 
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceImpl::FillRectangle =:-) 
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceImpl::FillRectangle =:-) 
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceImpl::FillRectangle =:-) 
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceImpl::FillRectangle =:-) 
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceD2D::FillRectangle =:-) 
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceD2D::FillRectangle =:-) 
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceGDI::FillRectangle =:-) 
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceGDI::FillRectangle =:-) 
FillRun(Surface *surface, int code, int startX, int y, int x)void XPM::FillRun =:-) 
FilterFromString(const std::string &values)static std::set =:-) 
FilterSelections()void Editor::FilterSelections =:-) 
Finalise()void ScintillaGTK::Finalise =:-) 
Finalise()void ScintillaQt::Finalise =:-) 
Finalise()void Editor::Finalise =:-) 
Finalise()void ScintillaBase::Finalise =:-) 
Finalise()void ScintillaWin::Finalise =:-) 
Finalise()bool DirectorExtension::Finalise =:-) 
Finalise()bool LuaExtension::Finalise =:-) 
Finalise()bool MultiplexExtension::Finalise =:-) 
Finalise()void SciTEBase::Finalise =:-) 
Finalise()bool DirectorExtension::Finalise =:-) 
Find(const char *prefix)int ListBoxX::Find =:-) 
Find(int position)	typename stateVector::iterator Find =:-) 
Find(const char *prefix)int ListBoxImpl::Find =:-) 
Find(int character)	const char =:-) 
Find(const char *languageName)const LexerModule =:-) 
Find(int language)const LexerModule =:-) 
Find(int key, int modifiers)unsigned int KeyMap::Find =:-) 
Find(int value, int start)int RunStyles::Find =:-) 
Find(const FontSpecification &fs)FontRealised =:-) 
Find(const char *)int ListBoxX::Find =:-) 
Find()void SciTEGTK::Find =:-) 
Find(T_POSITION)0)	T_POSITION Find =:-) 
Find()void SciTEWin::Find =:-) 
FindBefore(XYPOSITION x, int lower, int upper)int LineLayout::FindBefore =:-) 
FindCaseInsensitive(const std::vector<std::string> &values, const std::string &s)static size_t FindCaseInsensitive =:-) 
FindCmd()void ReplaceStrip::FindCmd =:-) 
FindColumn(Sci::Line line, Sci::Position column)Sci::Position Document::FindColumn =:-) 
FindComboChanged(GtkEditable *, FindStrip *pStrip)void FindStrip::FindComboChanged =:-) 
FindComboChanged(GtkEditable *, ReplaceStrip *pStrip)void ReplaceStrip::FindComboChanged =:-) 
FindConstant(const char *name)int IFaceTable::FindConstant =:-) 
FindControl(int control)	UserControl =:-) 
FindControl(int control)UserControl =:-) 
FindDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::FindDlg =:-) 
FindFunction(const char *name)int IFaceTable::FindFunction =:-) 
FindFunctionByConstantName(const char *name)int IFaceTable::FindFunctionByConstantName =:-) 
FindHasText()bool SciTEBase::FindHasText =:-) 
FindInFiles()void SciTEGTK::FindInFiles =:-) 
FindInFiles()void SciTEWin::FindInFiles =:-) 
FindInFilesBrowse()void SciTEGTK::FindInFilesBrowse =:-) 
FindInFilesCmd()void SciTEGTK::FindInFilesCmd =:-) 
FindInFilesDotDot()void SciTEGTK::FindInFilesDotDot =:-) 
FindInFilesResponse(int responseID)void SciTEGTK::FindInFilesResponse =:-) 
FindInTarget(std::string findWhatText, int startPosition, int endPosition)int SciTEBase::FindInTarget =:-) 
FindIncrement()void SciTEGTK::FindIncrement =:-) 
FindIncrement()void SciTEWin::FindIncrement =:-) 
FindIncrementChanged()void SciTEGTK::FindIncrementChanged =:-) 
FindIncrementCompleteCmd()void SciTEGTK::FindIncrementCompleteCmd =:-) 
FindIncrementEscapeSignal(GtkWidget *w, GdkEventKey *event, SciTEGTK *scitew)gboolean SciTEGTK::FindIncrementEscapeSignal =:-) 
FindIncrementFocusOutSignal(GtkWidget *)gboolean SciTEGTK::FindIncrementFocusOutSignal =:-) 
FindIncrementNext(bool select)void SciTEGTK::FindIncrementNext =:-) 
FindIncrementSetColour(bool valid)void SciTEGTK::FindIncrementSetColour =:-) 
FindIndex(int nIndex)	T_POSITION FindIndex =:-) 
FindLanguageProperty(const char *pattern, const char *defaultValue)std::string SciTEBase::FindLanguageProperty =:-) 
FindMatchingBracePosition(bool editor, int &braceAtCaret, int &braceOpposite, bool sloppy)bool SciTEBase::FindMatchingBracePosition =:-) 
FindMatchingPreprocCondPosition( bool isForward, int &mppcAtCaret, int &mppcMatch)bool SciTEBase::FindMatchingPreprocCondPosition =:-) 
FindMatchingPreprocessorCondition( int &curLine, int direction, int condEnd1, int condEnd2)bool SciTEBase::FindMatchingPreprocessorCondition =:-) 
FindMaxAscentDescent()void ViewStyle::FindMaxAscentDescent =:-) 
FindMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::FindMessage =:-) 
FindMessageBox(const std::string &msg, const std::string *findItem)void SciTEGTK::FindMessageBox =:-) 
FindMessageBox(const std::string &msg, const std::string *findItem)void SciTEWin::FindMessageBox =:-) 
FindNext(bool reverseDirection, bool showWarnings, bool allowRegExp)int SciTEBase::FindNext =:-) 
FindNextChange(int position, int end)int RunStyles::FindNextChange =:-) 
FindNextCmd()void FindStrip::FindNextCmd =:-) 
FindOpenXmlTag(const char sel[], int nSize)std::string SciTEBase::FindOpenXmlTag =:-) 
FindOrCreate(const FontParameters &fp)FontID FontCached::FindOrCreate =:-) 
FindOtherInstance()bool UniqueInstance::FindOtherInstance =:-) 
FindPositionFromX(XYPOSITION x, Range range, bool charPosition)int LineLayout::FindPositionFromX =:-) 
FindProperty(const char *name)int IFaceTable::FindProperty =:-) 
FindReplace(bool replace)void SciTEGTK::FindReplace =:-) 
FindReplace(bool replace)void SciTEWin::FindReplace =:-) 
FindReplaceAdvanced()bool SciTEBase::FindReplaceAdvanced =:-) 
FindReplaceGrabFields()void SciTEGTK::FindReplaceGrabFields =:-) 
FindReplaceResponse(int responseID)void SciTEGTK::FindReplaceResponse =:-) 
FindReplaceStrip()	FindReplaceStrip =:-) 
FindReplaceStrip()	FindReplaceStrip =:-) 
FindStrip()	FindStrip =:-) 
FindStrip()	FindStrip =:-) 
FindText(Document *doc, Sci::Position minPos, Sci::Position maxPos, const char *s, bool caseSensitive, bool, bool, int flags, Sci::Position *length)long BuiltinRegex::FindText =:-) 
FindText(Sci::Position minPos, Sci::Position maxPos, const char *search, int flags, Sci::Position *length)long Document::FindText =:-) 
FindText( uptr_t wParam, sptr_t lParam)long Editor::FindText =:-) 
FineTickerAvailable()bool ScintillaGTK::FineTickerAvailable =:-) 
FineTickerAvailable()bool ScintillaQt::FineTickerAvailable =:-) 
FineTickerAvailable()bool Editor::FineTickerAvailable =:-) 
FineTickerAvailable()bool ScintillaWin::FineTickerAvailable =:-) 
FineTickerCancel(TickReason reason)void ScintillaGTK::FineTickerCancel =:-) 
FineTickerCancel(TickReason reason)void ScintillaQt::FineTickerCancel =:-) 
FineTickerCancel(TickReason )void Editor::FineTickerCancel =:-) 
FineTickerCancel(TickReason reason)void ScintillaWin::FineTickerCancel =:-) 
FineTickerRunning(TickReason reason)bool ScintillaGTK::FineTickerRunning =:-) 
FineTickerRunning(TickReason reason)bool ScintillaQt::FineTickerRunning =:-) 
FineTickerRunning(TickReason )bool Editor::FineTickerRunning =:-) 
FineTickerRunning(TickReason reason)bool ScintillaWin::FineTickerRunning =:-) 
FineTickerStart(TickReason reason, int millis, int )void ScintillaGTK::FineTickerStart =:-) 
FineTickerStart(TickReason reason, int millis, int )void ScintillaQt::FineTickerStart =:-) 
FineTickerStart(TickReason, int, int)void Editor::FineTickerStart =:-) 
FineTickerStart(TickReason reason, int millis, int tolerance)void ScintillaWin::FineTickerStart =:-) 
FinishedAdding()	void FinishedAdding =:-) 
FinishedFuture(int index, Buffer::FutureDo fd)void BufferList::FinishedFuture =:-) 
FinishedJob()	bool FinishedJob =:-) 
First()	Sci::Position First =:-) 
FixInvalidUTF8(const std::string &text)std::string FixInvalidUTF8 =:-) 
FixName()void FilePath::FixName =:-) 
FixSelectionForClipboard()	void FixSelectionForClipboard =:-) 
FlagFromCmd(int cmd)bool =:-) 
Flags()	int Flags =:-) 
FlashThisWindow( HWND hWnd, int duration)static void FlashThisWindow =:-) 
FlipBitmap(HBITMAP bitmap, int width, int height)static void FlipBitmap =:-) 
Flush()	void Flush =:-) 
Flush()void StyleWriter::Flush =:-) 
FlushCachedState()void SurfaceImpl::FlushCachedState =:-) 
FlushCachedState()void SurfaceD2D::FlushCachedState =:-) 
FlushCachedState()void SurfaceGDI::FlushCachedState =:-) 
FlushDrawing()HRESULT SurfaceD2D::FlushDrawing =:-) 
Focus(GtkDirectionType direction)gboolean FindStrip::Focus =:-) 
Focus(GtkDirectionType direction)gboolean ReplaceStrip::Focus =:-) 
Focus(GtkDirectionType direction)gboolean UserStrip::Focus =:-) 
Focus(GtkDirectionType )	virtual gboolean Focus =:-) 
Focus()void BackgroundStrip::Focus =:-) 
Focus()void FindStrip::Focus =:-) 
Focus()void ReplaceStrip::Focus =:-) 
Focus()void SearchStrip::Focus =:-) 
Focus()void UserStrip::Focus =:-) 
FocusIn(GtkWidget *widget, GdkEventFocus * )gint ScintillaGTK::FocusIn =:-) 
FocusInThis(GtkWidget *)gint ScintillaGTK::FocusInThis =:-) 
FocusOut(GtkWidget *widget, GdkEventFocus * )gint ScintillaGTK::FocusOut =:-) 
FocusOutThis(GtkWidget *)gint ScintillaGTK::FocusOutThis =:-) 
FocusSignal(GtkWidget * , GtkDirectionType direction, Strip *pStrip)gboolean Strip::FocusSignal =:-) 
Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, WordList *keywordlists[], Accessor &styler)void LexerModule::Fold =:-) 
Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD LexerNoExceptions::Fold =:-) 
Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD LexerSimple::Fold =:-) 
Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed)size_t CaseFolderTable::Fold =:-) 
Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed)size_t CaseFolderUnicode::Fold =:-) 
FoldAll(int action)void Editor::FoldAll =:-) 
FoldAll()void SciTEBase::FoldAll =:-) 
FoldChanged(Sci::Line line, int levelNow, int levelPrev)void Editor::FoldChanged =:-) 
FoldChanged(int line, int levelNow, int levelPrev)void SciTEBase::FoldChanged =:-) 
FoldExpand(Sci::Line line, int action, int level)void Editor::FoldExpand =:-) 
FoldLine(Sci::Line line, int action)void Editor::FoldLine =:-) 
Font()Font::Font =:-) 
Font()Font::Font =:-) 
FontAlias()FontAlias::FontAlias =:-) 
FontAlias(const FontAlias &other)FontAlias::FontAlias =:-) 
FontAndCharacterSet(int characterSet_, QFont *pfont)	FontAndCharacterSet =:-) 
FontCached(const FontParameters &fp)FontCached::FontCached =:-) 
FontCharacterSet(Font &f)static int FontCharacterSet =:-) 
FontHandle()	FontHandle =:-) 
FontHandle(PangoFontDescription *pfd_, int characterSet_)	FontHandle =:-) 
FontMeasurements()FontMeasurements::FontMeasurements =:-) 
FontNames()FontNames::FontNames =:-) 
FontParameters( const char *faceName_, float size_=10, int weight_=400, bool italic_=false, int extraFontFlag_=0, int technology_=0, int characterSet_=0)	FontParameters =:-) 
FontPointer(Font &f)static QFont =:-) 
FontRealised()FontRealised::FontRealised =:-) 
FontSpecification()	FontSpecification =:-) 
ForAll(GtkCallback callback, gpointer callback_data)void ScintillaGTK::ForAll =:-) 
ForeAsLong()long StyleDefinition::ForeAsLong =:-) 
FormatAndMetrics(HFONT hfont_, int extraFontFlag_, int characterSet_)	FormatAndMetrics =:-) 
FormatAndMetrics(IDWriteTextFormat *pTextFormat_, int extraFontFlag_, int characterSet_, FLOAT yAscent_, FLOAT yDescent_, FLOAT yInternalLeading_)	FormatAndMetrics =:-) 
FormatEnumerator(int pos_, CLIPFORMAT formats_[], size_t formatsLen_)FormatEnumerator::FormatEnumerator =:-) 
FormatEnumerator_AddRef(FormatEnumerator *fe)STDMETHODIMP_ =:-) 
FormatEnumerator_Clone(FormatEnumerator *fe, IEnumFORMATETC **ppenum)STDMETHODIMP FormatEnumerator_Clone =:-) 
FormatEnumerator_Next(FormatEnumerator *fe, ULONG celt, FORMATETC *rgelt, ULONG *pceltFetched)STDMETHODIMP FormatEnumerator_Next =:-) 
FormatEnumerator_QueryInterface(FormatEnumerator *fe, REFIID riid, PVOID *ppv)STDMETHODIMP FormatEnumerator_QueryInterface =:-) 
FormatEnumerator_Release(FormatEnumerator *fe)STDMETHODIMP_ =:-) 
FormatEnumerator_Reset(FormatEnumerator *fe)STDMETHODIMP FormatEnumerator_Reset =:-) 
FormatEnumerator_Skip(FormatEnumerator *fe, ULONG celt)STDMETHODIMP FormatEnumerator_Skip =:-) 
FormatRange(bool draw, Sci_RangeToFormat *pfr, Surface *surface, Surface *surfaceMeasure, const EditModel &model, const ViewStyle &vs)long EditView::FormatRange =:-) 
FormatRange(bool draw, Sci_RangeToFormat *pfr)long Editor::FormatRange =:-) 
Forward()	void Forward =:-) 
Forward(Sci_Position nb)	void Forward =:-) 
Forward(lua_State *L)	static int Forward =:-) 
Forward()	void Forward =:-) 
ForwardBytes(Sci_Position nb)	void ForwardBytes =:-) 
ForwardPropertyToEditor(const char *key)void SciTEBase::ForwardPropertyToEditor =:-) 
ForwardSetState(int state_)	void ForwardSetState =:-) 
ForwardSetState(lua_State *L)	static int ForwardSetState =:-) 
FractionalSize()int StyleDefinition::FractionalSize =:-) 
Free()	void Free =:-) 
Free()void LineLayout::Free =:-) 
FreeAssoc(Association* pAssoc)	void FreeAssoc =:-) 
FreeNode(Node*pNode)	void FreeNode =:-) 
FreeSubStyles()void LexState::FreeSubStyles =:-) 
FromAccessible(GtkAccessible *accessible)ScintillaGTKAccessible =:-) 
FromAccessible(AtkObject *accessible)	static ScintillaGTKAccessible =:-) 
FromInts(int left_, int top_, int right_, int bottom_)	static PRectangle FromInts =:-) 
FromInts(int x_, int y_)	static Point FromInts =:-) 
FromLong(long lpoint)Point Point::FromLong =:-) 
FromWidget(GtkWidget *widget)ScintillaGTK =:-) 
FullPaint()void ScintillaGTK::FullPaint =:-) 
FullPaint()void ScintillaWin::FullPaint =:-) 
FullPaintDC(HDC hdc)void ScintillaWin::FullPaintDC =:-) 
FullScreenToggle()void SciTEWin::FullScreenToggle =:-) 
Function(GtkDialog * , gint responseID, SciTEGTK *app)	static void Function =:-) 
Function(GtkWidget * , SciTEGTK *app)	static void Function =:-) 
Function(GtkWidget * , T *object)	static void Function =:-) 
GObjectWatcher(GObject *obj)	GObjectWatcher =:-) 
GTKMutex()	GTKMutex =:-) 
GapPosition()	Sci::Position GapPosition =:-) 
GapPosition()	int GapPosition =:-) 
GapTo(int position)	void GapTo =:-) 
GenericPropertiesFile(const FilePath &filename)static bool GenericPropertiesFile =:-) 
Get(const char *key)const char =:-) 
Get(int ident)RGBAImage =:-) 
Get(int index)	ListItemData Get =:-) 
GetAbbrevPropertiesFileName()FilePath SciTEBase::GetAbbrevPropertiesFileName =:-) 
GetAcceleratorTable()	HACCEL GetAcceleratorTable =:-) 
GetAccessible(GtkWidget *widget)AtkObject =:-) 
GetAccessibleThis(GtkWidget *widget)AtkObject =:-) 
GetAssocAt(ARG_KEY key, unsigned int& nHash)	Association =:-) 
GetAt(T_POSITION position)	TYPE GetAt =:-) 
GetAt(int nIndex)	TYPE GetAt =:-) 
GetAt(T_POSITION position)	TYPE =:-) 
GetAttributesForStyle(unsigned int styleNum)AtkAttributeSet =:-) 
GetBackslashExpression( const char *pattern, int &incr)int RESearch::GetBackslashExpression =:-) 
GetBlue()	unsigned int GetBlue =:-) 
GetCTag()std::string SciTEBase::GetCTag =:-) 
GetCaretInLine()int SciTEBase::GetCaretInLine =:-) 
GetCaretOffset(AtkText *text)gint ScintillaGTKAccessible::AtkTextIface::GetCaretOffset =:-) 
GetCaretOffset()gint ScintillaGTKAccessible::GetCaretOffset =:-) 
GetCharRange(char *buffer, Sci_Position position, Sci_Position lengthRetrieve)	void SCI_METHOD GetCharRange =:-) 
GetCharacterAndWidth(Sci_Position position, Sci_Position *pWidth)int SCI_METHOD Document::GetCharacterAndWidth =:-) 
GetCharacterAtOffset(AtkText *text, gint offset)gunichar ScintillaGTKAccessible::AtkTextIface::GetCharacterAtOffset =:-) 
GetCharacterAtOffset(int charOffset)gunichar ScintillaGTKAccessible::GetCharacterAtOffset =:-) 
GetCharacterCount(AtkText *text)gint ScintillaGTKAccessible::AtkTextIface::GetCharacterCount =:-) 
GetCharacterCount()gint ScintillaGTKAccessible::GetCharacterCount =:-) 
GetCharacterExtents(AtkText *text, gint offset, gint *x, gint *y, gint *width, gint *height, AtkCoordType coords)void ScintillaGTKAccessible::AtkTextIface::GetCharacterExtents =:-) 
GetCharacterExtents(int charOffset, gint *x, gint *y, gint *width, gint *height, AtkCoordType coords)void ScintillaGTKAccessible::GetCharacterExtents =:-) 
GetCharsOfClass(cc characterClass, unsigned char *buffer)int CharClassify::GetCharsOfClass =:-) 
GetCharsOfClass(CharClassify::cc characterClass, unsigned char *buffer)int Document::GetCharsOfClass =:-) 
GetClass(unsigned char ch)	cc GetClass =:-) 
GetClientDrawingRectangle()PRectangle Editor::GetClientDrawingRectangle =:-) 
GetClientExtent()POINT ListBoxX::GetClientExtent =:-) 
GetClientPosition()PRectangle Window::GetClientPosition =:-) 
GetClientPosition()Rectangle Window::GetClientPosition =:-) 
GetClientRectangle()PRectangle ScintillaGTK::GetClientRectangle =:-) 
GetClientRectangle()PRectangle Editor::GetClientRectangle =:-) 
GetClientRectangle()GUI::Rectangle SciTEBase::GetClientRectangle =:-) 
GetColumn(Sci::Position pos)Sci::Position Document::GetColumn =:-) 
GetCompositionString(DWORD dwIndex)	std::wstring GetCompositionString =:-) 
GetConstantName(int value, char *nameOut, unsigned nameBufferLen, const char *prefix)int IFaceTable::GetConstantName =:-) 
GetContext()  CGContextRef GetContext =:-) 
GetCount()	int GetCount =:-) 
GetCtrlID()	virtual int GetCtrlID =:-) 
GetCtrlID()int ScintillaWin::GetCtrlID =:-) 
GetCurrent(char *s, Sci_PositionU len)void StyleContext::GetCurrent =:-) 
GetCurrentIndicator()	int GetCurrentIndicator =:-) 
GetCurrentLine()std::string SciTEBase::GetCurrentLine =:-) 
GetCurrentLineNumber()int SciTEBase::GetCurrentLineNumber =:-) 
GetCurrentLowered(char *s, Sci_PositionU len)void StyleContext::GetCurrentLowered =:-) 
GetCurrentScrollPosition()int SciTEBase::GetCurrentScrollPosition =:-) 
GetCurrentValue()	int GetCurrentValue =:-) 
GetData(FORMATETC *pFEIn, STGMEDIUM *pSTM)STDMETHODIMP ScintillaWin::GetData =:-) 
GetDefaultAttributes(AtkText *text)AtkAttributeSet =:-) 
GetDefaultAttributes()AtkAttributeSet =:-) 
GetDefaultDirectory()FilePath SciTEGTK::GetDefaultDirectory =:-) 
GetDefaultDirectory()FilePath SciTEWin::GetDefaultDirectory =:-) 
GetDefaultPropertiesFileName()FilePath SciTEBase::GetDefaultPropertiesFileName =:-) 
GetDesiredRect()PRectangle ListBoxX::GetDesiredRect =:-) 
GetDesiredRect()PRectangle ListBoxImpl::GetDesiredRect =:-) 
GetDesiredRect()PRectangle ListBoxX::GetDesiredRect =:-) 
GetDirectoryPropertiesFileName()FilePath SciTEBase::GetDirectoryPropertiesFileName =:-) 
GetDocumentAt(int index)sptr_t SciTEBase::GetDocumentAt =:-) 
GetDocumentByName(const FilePath &filename, bool excludeCurrent)int BufferList::GetDocumentByName =:-) 
GetDocumentByWorker(const FileWorker *pFileWorker)int BufferList::GetDocumentByWorker =:-) 
GetEndStyled()	Sci::Position GetEndStyled =:-) 
GetErrorMessage(DWORD nRet)static GUI::gui_string GetErrorMessage =:-) 
GetExpanded(const char *key, char *result)int PropSetSimple::GetExpanded =:-) 
GetExpanded(Sci::Line lineDoc)bool ContractionState::GetExpanded =:-) 
GetExpandedString(const char *key)std::string PropSetFile::GetExpandedString =:-) 
GetFileLength()long long FilePath::GetFileLength =:-) 
GetFileNameProperty(const char *name)std::string SciTEBase::GetFileNameProperty =:-) 
GetFilePosition()RecentFile SciTEBase::GetFilePosition =:-) 
GetFirst(const char *&key, const char *&val)bool PropSetFile::GetFirst =:-) 
GetFoldDisplayText(Sci::Line lineDoc)const char =:-) 
GetFoldDisplayTextShown(Sci::Line lineDoc)bool ContractionState::GetFoldDisplayTextShown =:-) 
GetFoldParent(Sci::Line line)Sci::Line Document::GetFoldParent =:-) 
GetFrameWidth()int ViewStyle::GetFrameWidth =:-) 
GetFullLine(const char *&fpc, size_t &lenData, char *s, size_t len)static bool GetFullLine =:-) 
GetGreen()	unsigned int GetGreen =:-) 
GetGrowSize()	int GetGrowSize =:-) 
GetGtkSelectionText(GtkSelectionData *selectionData, SelectionText &selText)void ScintillaGTK::GetGtkSelectionText =:-) 
GetHWND()HWND ListBoxX::GetHWND =:-) 
GetHangulOfHanja(wchar_t *inout)int GetHangulOfHanja =:-) 
GetHashTableSize()	unsigned int GetHashTableSize =:-) 
GetHead()	TYPE GetHead =:-) 
GetHead()	TYPE =:-) 
GetHeadPosition()	T_POSITION GetHeadPosition =:-) 
GetHeight(Sci::Line lineDoc)int ContractionState::GetHeight =:-) 
GetHeight()int RGBAImageSet::GetHeight =:-) 
GetHeight()	int GetHeight =:-) 
GetHexaChar(unsigned char hd1, unsigned char hd2)static int GetHexaChar =:-) 
GetHexaDigit(char ch)static int GetHexaDigit =:-) 
GetHighlightDelimiters(HighlightDelimiter &highlightDelimiter, Sci::Line line, Sci::Line lastLine)void Document::GetHighlightDelimiters =:-) 
GetHotSpotRange()Range Editor::GetHotSpotRange =:-) 
GetID()	FontID GetID =:-) 
GetID()	MenuID GetID =:-) 
GetID()	WindowID GetID =:-) 
GetID()	MenuID GetID =:-) 
GetID()	WindowID GetID =:-) 
GetID()	GUI::WindowID GetID =:-) 
GetImeAttributes()	std::vector =:-) 
GetImeCaretPos(QInputMethodEvent *event)static int GetImeCaretPos =:-) 
GetImeCaretPos()	unsigned int GetImeCaretPos =:-) 
GetIndentState(int line)IndentationStatus SciTEBase::GetIndentState =:-) 
GetInstance()LexerManager =:-) 
GetInstance()uptr_t SciTEBase::GetInstance =:-) 
GetInstance()uptr_t SciTEWin::GetInstance =:-) 
GetInt(const char *key, int defaultValue)int PropSetSimple::GetInt =:-) 
GetInt(const char *key, int defaultValue)int PropSetFile::GetInt =:-) 
GetIntelliMouseParameters()void ScintillaWin::GetIntelliMouseParameters =:-) 
GetLanguage()	int GetLanguage =:-) 
GetLastChild(Sci::Line lineParent, int level, Sci::Line lastLine)Sci::Line Document::GetLastChild =:-) 
GetLevel(Sci_Position line)int SCI_METHOD Document::GetLevel =:-) 
GetLevel(Sci::Line line)int LineLevels::GetLevel =:-) 
GetLevel()	int GetLevel =:-) 
GetLexInterface()LexInterface =:-) 
GetLexerCountFn()typedef int =:-) 
GetLexerFactoryFunction(unsigned int Index)typedef LexerFactoryFunction =:-) 
GetLexerFunction(unsigned int Index)typedef void =:-) 
GetLexerNameFn(unsigned int Index, char *name, int buflength)typedef void =:-) 
GetLine(Sci_Position position)	Sci_Position GetLine =:-) 
GetLine(GUI::ScintillaWindow &win, int line)std::string SciTEBase::GetLine =:-) 
GetLine(char *text, int sizeText, int line)void SciTEBase::GetLine =:-) 
GetLine(int position)int TextReader::GetLine =:-) 
GetLineEndTypes()	int GetLineEndTypes =:-) 
GetLineEndTypesActive()	int GetLineEndTypesActive =:-) 
GetLineEndTypesAllowed()	int GetLineEndTypesAllowed =:-) 
GetLineIndentPosition(Sci::Line line)Sci::Position Document::GetLineIndentPosition =:-) 
GetLineIndentPosition(int line)int SciTEBase::GetLineIndentPosition =:-) 
GetLineIndentation(Sci_Position line)int SCI_METHOD Document::GetLineIndentation =:-) 
GetLineIndentation(int line)int SciTEBase::GetLineIndentation =:-) 
GetLineLength(int line)int SciTEBase::GetLineLength =:-) 
GetLinePartsInStyle(int line, const StyleAndWords &saw)std::vector =:-) 
GetLineState(Sci_Position line)	int GetLineState =:-) 
GetLineState(Sci_Position line)int SCI_METHOD Document::GetLineState =:-) 
GetLineState(Sci::Line line)int LineState::GetLineState =:-) 
GetLineState(int line)int TextReader::GetLineState =:-) 
GetLocalPropertiesFileName()FilePath SciTEBase::GetLocalPropertiesFileName =:-) 
GetLongLong(const char *key, long long defaultValue)long long PropSetFile::GetLongLong =:-) 
GetMarginCursor(Point pt)Window::Cursor Editor::GetMarginCursor =:-) 
GetMark(Sci::Line line)int Document::GetMark =:-) 
GetMatch(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, const std::string &wordCharacters, int wordIndex, Compare comp)	std::string GetMatch =:-) 
GetMatches(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, char otherSeparator, bool exactLen, Compare comp)static std::string GetMatches =:-) 
GetMaxLineState()Sci::Line Document::GetMaxLineState =:-) 
GetMaxLineState()Sci::Line LineState::GetMaxLineState =:-) 
GetMenuCommandAsInt(std::string commandName)int SciTEBase::GetMenuCommandAsInt =:-) 
GetMonitorRect(Point pt)PRectangle Window::GetMonitorRect =:-) 
GetNSelections(AtkText *text)gint ScintillaGTKAccessible::AtkTextIface::GetNSelections =:-) 
GetNSelections()gint ScintillaGTKAccessible::GetNSelections =:-) 
GetName()const char =:-) 
GetNearestWord(const char *wordStart, size_t searchLen, bool ignoreCase, const std::string &wordCharacters, int wordIndex)std::string StringList::GetNearestWord =:-) 
GetNearestWords(const char *wordStart, size_t searchLen, const char *separators, bool ignoreCase , bool exactLen )std::string SciTEBase::GetNearestWords =:-) 
GetNearestWords( const char *wordStart, size_t searchLen, bool ignoreCase, char otherSeparator , bool exactLen )std::string StringList::GetNearestWords =:-) 
GetNewExpandString(const char *keybase, const char *filename)std::string PropSetFile::GetNewExpandString =:-) 
GetNext(T_POSITION& rPosition)	TYPE GetNext =:-) 
GetNext(T_POSITION& rPosition)	TYPE =:-) 
GetNext(const char *&key, const char *&val)bool PropSetFile::GetNext =:-) 
GetNextAssoc(T_POSITION& rNextPosition, KEY& rKey, VALUE& rValue)	void GetNextAssoc =:-) 
GetNextChar()	void GetNextChar =:-) 
GetNextPropItem( const char *pStart, char *pPropItem, int maxLen)const char =:-) 
GetNextTabstop(Sci::Line line, int x)int EditView::GetNextTabstop =:-) 
GetNextTabstop(Sci::Line line, int x)int LineTabstops::GetNextTabstop =:-) 
GetNumWordLists()int LexerModule::GetNumWordLists =:-) 
GetOffsetAtPoint(AtkText *text, gint x, gint y, AtkCoordType coords)gint ScintillaGTKAccessible::AtkTextIface::GetOffsetAtPoint =:-) 
GetOffsetAtPoint(gint x, gint y, AtkCoordType coords)gint ScintillaGTKAccessible::GetOffsetAtPoint =:-) 
GetPaintDevice()QPaintDevice =:-) 
GetPainter()QPainter =:-) 
GetPosition()PRectangle Window::GetPosition =:-) 
GetPosition()Rectangle Window::GetPosition =:-) 
GetPreferredHeight(GtkWidget *widget, gint *minimalHeight, gint *naturalHeight)void ScintillaGTK::GetPreferredHeight =:-) 
GetPreferredWidth(GtkWidget *widget, gint *minimalWidth, gint *naturalWidth)void ScintillaGTK::GetPreferredWidth =:-) 
GetPrev(T_POSITION& rPosition)	TYPE GetPrev =:-) 
GetPrev(T_POSITION& rPosition)	TYPE =:-) 
GetPropertyInt(const char *key, int defaultValue)int Accessor::GetPropertyInt =:-) 
GetPropertyInt(const char *propName)static int GetPropertyInt =:-) 
GetRTFNextControl(const char **style, char *control)static void GetRTFNextControl =:-) 
GetRTFStyleChange(const char *last, const char *current)static std::string GetRTFStyleChange =:-) 
GetRange(T *buffer, int position, int retrieveLength)	void GetRange =:-) 
GetRange(GUI::ScintillaWindow &win, int start, int end, char *text)void SciTEBase::GetRange =:-) 
GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEGTK::GetRangeInUIEncoding =:-) 
GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEBase::GetRangeInUIEncoding =:-) 
GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEWin::GetRangeInUIEncoding =:-) 
GetRangeString(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEBase::GetRangeString =:-) 
GetRed()	unsigned int GetRed =:-) 
GetRelative(Sci_Position n)	int GetRelative =:-) 
GetRelativeCharacter(Sci_Position n)	int GetRelativeCharacter =:-) 
GetRelativePosition(Sci_Position positionStart, Sci_Position characterOffset)Sci_Position SCI_METHOD Document::GetRelativePosition =:-) 
GetRelativePositionUTF16(Sci::Position positionStart, Sci::Position characterOffset)Sci::Position Document::GetRelativePositionUTF16 =:-) 
GetReverseArrowCursor()static HCURSOR GetReverseArrowCursor =:-) 
GetRowHeight()int ListBoxX::GetRowHeight =:-) 
GetRunAttributes(AtkText *text, gint offset, gint *start_offset, gint *end_offset)AtkAttributeSet =:-) 
GetRunAttributes(int charOffset, int *startChar, int *endChar)AtkAttributeSet =:-) 
GetScale()	float GetScale =:-) 
GetScaledHeight()	float GetScaledHeight =:-) 
GetScaledWidth()	float GetScaledWidth =:-) 
GetSciteDefaultHome()FilePath SciTEGTK::GetSciteDefaultHome =:-) 
GetSciteDefaultHome()FilePath SciTEWin::GetSciteDefaultHome =:-) 
GetSciteUserHome()FilePath SciTEGTK::GetSciteUserHome =:-) 
GetSciteUserHome()FilePath SciTEWin::GetSciteUserHome =:-) 
GetScrollInfo(int nBar, LPSCROLLINFO lpsi)bool ScintillaWin::GetScrollInfo =:-) 
GetSelectedRange()SelectedRange SciTEBase::GetSelectedRange =:-) 
GetSelection()int ListBoxX::GetSelection =:-) 
GetSelection(GtkSelectionData *selection_data, guint info, SelectionText *text)void ScintillaGTK::GetSelection =:-) 
GetSelection(AtkText *text, gint selection_num, gint *start_pos, gint *end_pos)gchar =:-) 
GetSelection(gint selection_num, int *startChar, int *endChar)gchar =:-) 
GetSelection()int ListBoxImpl::GetSelection =:-) 
GetSelection()int AutoComplete::GetSelection =:-) 
GetSelection()int ListBoxX::GetSelection =:-) 
GetSelection()Sci_CharacterRange SciTEBase::GetSelection =:-) 
GetSeparator()char AutoComplete::GetSeparator =:-) 
GetSize()	size_t GetSize =:-) 
GetSize()	int GetSize =:-) 
GetStartPosition()	T_POSITION GetStartPosition =:-) 
GetStartSegment()	Sci_PositionU GetStartSegment =:-) 
GetStartSegment()	unsigned int GetStartSegment =:-) 
GetString(const char *key)std::string PropSetFile::GetString =:-) 
GetStringAtOffset(AtkText *text, gint offset, AtkTextGranularity granularity, gint *start_offset, gint *end_offset)gchar =:-) 
GetStringAtOffset(int charOffset, AtkTextGranularity granularity, int *startChar, int *endChar)gchar =:-) 
GetStyleAndWords(const char *base)StyleAndWords SciTEBase::GetStyleAndWords =:-) 
GetStyleClock()	int GetStyleClock =:-) 
GetStyleRange(unsigned char *buffer, Sci::Position position, Sci::Position lengthRetrieve)	void GetStyleRange =:-) 
GetSubStyleBases()const char =:-) 
GetTag(char *tagValue, int tagNumber)Sci::Position Editor::GetTag =:-) 
GetTail()	TYPE GetTail =:-) 
GetTail()	TYPE =:-) 
GetTailPosition()	T_POSITION GetTailPosition =:-) 
GetText(AtkText *text, int start_offset, int end_offset)gchar =:-) 
GetText(int startChar, int endChar)gchar =:-) 
GetText(uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::GetText =:-) 
GetTextAfterOffset(AtkText *text, int offset, AtkTextBoundary boundary_type, int *start_offset, int *end_offset)gchar =:-) 
GetTextAfterOffset(int charOffset, AtkTextBoundary boundaryType, int *startChar, int *endChar)gchar =:-) 
GetTextAtOffset(AtkText *text, gint offset, AtkTextBoundary boundary_type, gint *start_offset, gint *end_offset)gchar =:-) 
GetTextAtOffset(int charOffset, AtkTextBoundary boundaryType, int *startChar, int *endChar)gchar =:-) 
GetTextBeforeOffset(AtkText *text, int offset, AtkTextBoundary boundary_type, int *start_offset, int *end_offset)gchar =:-) 
GetTextBeforeOffset(int charOffset, AtkTextBoundary boundaryType, int *startChar, int *endChar)gchar =:-) 
GetTextLength()sptr_t ScintillaWin::GetTextLength =:-) 
GetTextRangeUTF8(Sci::Position startByte, Sci::Position endByte)gchar =:-) 
GetTextRectangle()PRectangle Editor::GetTextRectangle =:-) 
GetTranslationToAbout(const char * const propname, bool retainIfNotFound)std::string SciTEBase::GetTranslationToAbout =:-) 
GetTypesep()char AutoComplete::GetTypesep =:-) 
GetUserPropertiesFileName()FilePath SciTEBase::GetUserPropertiesFileName =:-) 
GetValue(int n, char *value, int len)void ListBoxX::GetValue =:-) 
GetValue(int n, char *value, int len)void ListBoxImpl::GetValue =:-) 
GetValue(int item)std::string AutoComplete::GetValue =:-) 
GetValue(int n, char *value, int len)void ListBoxX::GetValue =:-) 
GetValue(int control)std::string UserStrip::GetValue =:-) 
GetVersion(LPCTSTR lpszDllName)static DWORD GetVersion =:-) 
GetVisible(Sci::Line lineDoc)bool ContractionState::GetVisible =:-) 
GetVisible(int index)bool BufferList::GetVisible =:-) 
GetVisibleOriginInMain()Point Editor::GetVisibleOriginInMain =:-) 
GetVisibleRows()int ListBoxX::GetVisibleRows =:-) 
GetVisibleRows()int ListBoxImpl::GetVisibleRows =:-) 
GetVisibleRows()int ListBoxX::GetVisibleRows =:-) 
GetWidth()int RGBAImageSet::GetWidth =:-) 
GetWidth()	int GetWidth =:-) 
GetWild(const char *keybase, const char *filename)std::string PropSetFile::GetWild =:-) 
GetWildUsingStart(const PropSetFile &psStart, const char *keybase, const char *filename)std::string PropSetFile::GetWildUsingStart =:-) 
GetWindowPosition(int *left, int *top, int *width, int *height, int *maximize)void SciTEGTK::GetWindowPosition =:-) 
GetWindowPosition(int *left, int *top, int *width, int *height, int *maximize)void SciTEWin::GetWindowPosition =:-) 
GetWordListDescription(int index)const char =:-) 
GetWorkingDirectory()FilePath FilePath::GetWorkingDirectory =:-) 
GetterFunction()	IFaceFunction GetterFunction =:-) 
GlobalMemory()	GlobalMemory =:-) 
GlobalMemory(HGLOBAL hand_)	explicit GlobalMemory =:-) 
GoLineDialog()void SciTEGTK::GoLineDialog =:-) 
GoLineDialog()void SciTEWin::GoLineDialog =:-) 
GoLineDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::GoLineDlg =:-) 
GoLineMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::GoLineMessage =:-) 
GoMatchingBrace(bool select)void SciTEBase::GoMatchingBrace =:-) 
GoMatchingPreprocCond(int direction, bool select)void SciTEBase::GoMatchingPreprocCond =:-) 
GoMessage(int dir)void SciTEBase::GoMessage =:-) 
GoToLine(Sci::Line lineNo)void Editor::GoToLine =:-) 
GotoCmd()void SciTEGTK::GotoCmd =:-) 
GotoLineEnsureVisible(int line)void SciTEBase::GotoLineEnsureVisible =:-) 
GotoResponse(int responseID)void SciTEGTK::GotoResponse =:-) 
GrabFields()void DialogFindInFiles::GrabFields =:-) 
GrabFields()void DialogFindReplace::GrabFields =:-) 
GrabFields()void FindStrip::GrabFields =:-) 
GrabFields()void ReplaceStrip::GrabFields =:-) 
GrabFields()void DialogFindReplace::GrabFields =:-) 
GrabMatches(CharacterIndexer &ci)void RESearch::GrabMatches =:-) 
GrabToggles()void FindStrip::GrabToggles =:-) 
GrabToggles()void ReplaceStrip::GrabToggles =:-) 
GrepDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::GrepDlg =:-) 
GrepIntoDirectory(const FilePath &directory)bool SciTEBase::GrepIntoDirectory =:-) 
GrepMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::GrepMessage =:-) 
GrepRecursive(GrepFlags gf, const FilePath &baseDir, const char *searchString, const GUI::gui_char *fileTypes)void SciTEBase::GrepRecursive =:-) 
GreyToAlpha(GdkPixbuf *ppb, GdkColor fore)static void GreyToAlpha =:-) 
GtkFromWinCaption(const char *text)static std::string GtkFromWinCaption =:-) 
HFont()HFONT FormatAndMetrics::HFont =:-) 
HJdictAvailable()	bool HJdictAvailable =:-) 
HackColour(int &n)	void HackColour =:-) 
HandleCompositionInline(uptr_t, sptr_t lParam)sptr_t ScintillaWin::HandleCompositionInline =:-) 
HandleCompositionWindowed(uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::HandleCompositionWindowed =:-) 
HandleCopyData(LPARAM lParam)static LRESULT HandleCopyData =:-) 
HandleReplaceCommand(int cmd, bool reverseDirection)BOOL SciTEWin::HandleReplaceCommand =:-) 
HandleReplaceCommand(int cmd, bool reverseFind)void ReplaceStrip::HandleReplaceCommand =:-) 
HandleSaveAs(const char *savePath)bool SciTEGTK::HandleSaveAs =:-) 
HandleStringMessage(const char *message)void DirectorExtension::HandleStringMessage =:-) 
HandleXml(char ch)bool SciTEBase::HandleXml =:-) 
HanjaDic()	HanjaDic =:-) 
HasCaretSizeChanged()bool ScintillaWin::HasCaretSizeChanged =:-) 
HasCaseFolder()bool Document::HasCaseFolder =:-) 
HasClose()bool BackgroundStrip::HasClose =:-) 
HasClose()bool Strip::HasClose =:-) 
HasClose()bool UserStrip::HasClose =:-) 
HasCommandToRun()	bool HasCommandToRun =:-) 
HasConnection()static bool HasConnection =:-) 
HasFocus()bool Window::HasFocus =:-) 
HasFocusOnSelfOrChild()bool WComboBoxEntry::HasFocusOnSelfOrChild =:-) 
HasMnemonic()bool WStatic::HasMnemonic =:-) 
HasNamedFunction(const char *name)static bool HasNamedFunction =:-) 
Hash(unsigned int styleNumber_, const char *s, unsigned int len_)unsigned int PositionCacheEntry::Hash =:-) 
HashFont(const FontParameters &fp)static int HashFont =:-) 
HashKey(ARG_KEY key)	unsigned int HashKey =:-) 
HaveMouseCapture()bool ScintillaGTK::HaveMouseCapture =:-) 
HaveMouseCapture()bool ScintillaQt::HaveMouseCapture =:-) 
HaveMouseCapture()bool ScintillaWin::HaveMouseCapture =:-) 
Height(Font &font_)XYPOSITION SurfaceImpl::Height =:-) 
Height()	XYPOSITION Height =:-) 
Height(Font &font)XYPOSITION SurfaceImpl::Height =:-) 
Height(Font &font_)XYPOSITION SurfaceD2D::Height =:-) 
Height(Font &font_)XYPOSITION SurfaceGDI::Height =:-) 
Height()	int Height =:-) 
Height()	virtual int Height =:-) 
HeightFromStyle(const FontSpecification &fs)int ViewStyle::HeightFromStyle =:-) 
HexStringFromInteger(long i)gui_string HexStringFromInteger =:-) 
HiWord(uptr_t l)static WORD HiWord =:-) 
HiddenLines()bool ContractionState::HiddenLines =:-) 
HideKeyboardCues()static bool HideKeyboardCues =:-) 
HideMatch()void SciTEBase::HideMatch =:-) 
HighShortFromLong(long x)	static short HighShortFromLong =:-) 
HighlightCurrentWord(bool highlight)void SciTEBase::HighlightCurrentWord =:-) 
HighlightDelimiter()	HighlightDelimiter =:-) 
HmenuID(size_t id)inline HMENU HmenuID =:-) 
HorizontalMove(unsigned int iMessage)int Editor::HorizontalMove =:-) 
HorizontalScrollMessage(WPARAM wParam)void ScintillaWin::HorizontalScrollMessage =:-) 
HorizontalScrollTo(int xPos)void Editor::HorizontalScrollTo =:-) 
Hwnd()	HWND Hwnd =:-) 
HwndFromString(const char *s)static HWND HwndFromString =:-) 
HwndOf(GUI::Window w)inline HWND HwndOf =:-) 
IFaceFunctionIsScriptable(const IFaceFunction &f)inline bool IFaceFunctionIsScriptable =:-) 
IFacePropertyIsScriptable(const IFaceProperty &p)inline bool IFacePropertyIsScriptable =:-) 
IFaceTypeIsNumeric(IFaceType t)inline bool IFaceTypeIsNumeric =:-) 
IFaceTypeIsScriptable(IFaceType t, int index)inline bool IFaceTypeIsScriptable =:-) 
IMContext(HWND hwnd_)	IMContext =:-) 
IOSignal(GIOChannel *, GIOCondition, SciTEGTK *scitew)gboolean SciTEGTK::IOSignal =:-) 
Idle()bool Editor::Idle =:-) 
IdleCallback(gpointer pSci)gboolean ScintillaGTK::IdleCallback =:-) 
IdleStyling()void Editor::IdleStyling =:-) 
IdleWork()void ScintillaGTK::IdleWork =:-) 
IdleWork()void Editor::IdleWork =:-) 
Idler()Idler::Idler =:-) 
IdlerTick(gpointer pSciTE)gboolean SciTEGTK::IdlerTick =:-) 
ImageByteSwapped(int width, int height, const unsigned char *pixelsImage)static std::vector =:-) 
ImeEndComposition()void ScintillaWin::ImeEndComposition =:-) 
ImeOnReconvert(LPARAM lParam)LRESULT ScintillaWin::ImeOnReconvert =:-) 
ImeStartComposition()void ScintillaWin::ImeStartComposition =:-) 
Import(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)void PropSetFile::Import =:-) 
ImportMenu(int pos)void SciTEBase::ImportMenu =:-) 
InGoodUTF8(Sci::Position pos, Sci::Position &start, Sci::Position &end)bool Document::InGoodUTF8 =:-) 
InLine(int offset, int line)bool LineLayout::InLine =:-) 
InList(const char *s)bool WordList::InList =:-) 
InListAbbreviated(const char *s, const char marker)bool WordList::InListAbbreviated =:-) 
InListAbridged(const char *s, const char marker)bool WordList::InListAbridged =:-) 
InSelectionForEOL(Sci::Position pos)int Selection::InSelectionForEOL =:-) 
IncludesStyle(int style)	bool IncludesStyle =:-) 
IncrementProgress(size_t increment)	void IncrementProgress =:-) 
IncrementSearchMode()int SciTEBase::IncrementSearchMode =:-) 
IncrementStyleClock()void Document::IncrementStyleClock =:-) 
Indent(bool forwards, Sci::Line lineBottom, Sci::Line lineTop)void Document::Indent =:-) 
Indent(bool forwards)void Editor::Indent =:-) 
IndentAmount(Sci_Position line, int *flags, PFNIsCommentLeader pfnIsCommentLeader)int Accessor::IndentAmount =:-) 
IndentOfBlock(int line)int SciTEBase::IndentOfBlock =:-) 
IndentSize()	int IndentSize =:-) 
IndexPropKey(const char *bufPrefix, int bufIndex, const char *bufAppendix)static std::string IndexPropKey =:-) 
Indicator()	int Indicator =:-) 
Indicator()	Indicator =:-) 
Indicator(0,0,0), bool under_=false, int fillAlpha_=30, int outlineAlpha_=50)	Indicator =:-) 
IndicatorDefinition(const char *definition)IndicatorDefinition::IndicatorDefinition =:-) 
IndicatorFill(Sci_Position start, Sci_Position end, int indicator, int value)	void IndicatorFill =:-) 
Init(SurfaceID sid, WindowID wid)void SurfaceImpl::Init =:-) 
Init(WindowID wid)void SurfaceImpl::Init =:-) 
Init()void ScintillaGTK::Init =:-) 
Init(SurfaceID sid, WindowID )void SurfaceImpl::Init =:-) 
Init(WindowID wid)void SurfaceImpl::Init =:-) 
Init()void ScintillaQt::Init =:-) 
Init()void LineVector::Init =:-) 
Init()void Document::Init =:-) 
Init()void LineAnnotation::Init =:-) 
Init()void LineLevels::Init =:-) 
Init()void LineMarkers::Init =:-) 
Init()void LineState::Init =:-) 
Init()void LineTabstops::Init =:-) 
Init()	void Init =:-) 
Init(size_t stylesSize_)void ViewStyle::Init =:-) 
Init(const char *const *linesForm)void XPM::Init =:-) 
Init(const char *textForm)void XPM::Init =:-) 
Init(SurfaceID sid, WindowID)void SurfaceD2D::Init =:-) 
Init(WindowID )void SurfaceD2D::Init =:-) 
Init(SurfaceID sid, WindowID)void SurfaceGDI::Init =:-) 
Init(WindowID )void SurfaceGDI::Init =:-) 
Init()void ScintillaWin::Init =:-) 
Init()void FilePath::Init =:-) 
Init()	void Init =:-) 
Init(SciTEWin *stw_)void UniqueInstance::Init =:-) 
InitBuffer(int)	virtual bool InitBuffer =:-) 
InitBuffer(int index)bool LuaExtension::InitBuffer =:-) 
InitBuffer(int index)bool MultiplexExtension::InitBuffer =:-) 
InitGlobalScope(bool checkProperties, bool forceReload = false)static bool InitGlobalScope =:-) 
InitHashTable(unsigned int hashSize, bool bAllocNow = true)	void InitHashTable =:-) 
InitPixMap(int width, int height, Surface *surface_, WindowID wid)void SurfaceImpl::InitPixMap =:-) 
InitPixMap(int width, int height, Surface *surface, WindowID )void SurfaceImpl::InitPixMap =:-) 
InitPixMap(int width, int height, Surface *surface_, WindowID)void SurfaceD2D::InitPixMap =:-) 
InitPixMap(int width, int height, Surface *surface_, WindowID)void SurfaceGDI::InitPixMap =:-) 
Initialise(ExtensionAPI *host_)bool DirectorExtension::Initialise =:-) 
Initialise(ExtensionAPI *host_)bool LuaExtension::Initialise =:-) 
Initialise(ExtensionAPI *host_)bool MultiplexExtension::Initialise =:-) 
Initialise(ExtensionAPI *host_)bool DirectorExtension::Initialise =:-) 
Initialise(bool resetToStart)void CommandWorker::Initialise =:-) 
InitialiseBuffers()void SciTEBase::InitialiseBuffers =:-) 
Initialised()bool SurfaceImpl::Initialised =:-) 
Initialised()	bool Initialised =:-) 
Initialised()bool SurfaceD2D::Initialised =:-) 
Initialised()bool SurfaceGDI::Initialised =:-) 
InputCodePage()static int InputCodePage =:-) 
Insert(int val)void BreakFinder::Insert =:-) 
Insert(int position, T v)	void Insert =:-) 
Insert(Pane p, int pos, const char *s)void SciTEBase::Insert =:-) 
Insert(const std::string &s)	void Insert =:-) 
InsertAfter(T_POSITION position, ARG_TYPE newElement)	T_POSITION InsertAfter =:-) 
InsertAt(int nIndex, ARG_TYPE newElement, int nCount = 1)	void InsertAt =:-) 
InsertBefore(T_POSITION position, ARG_TYPE newElement)	T_POSITION InsertBefore =:-) 
InsertEmpty(int position, int insertLength)	void InsertEmpty =:-) 
InsertFindInMemory()void Searcher::InsertFindInMemory =:-) 
InsertFromArray(int positionToInsert, const T s[], int positionFrom, int insertLength)	void InsertFromArray =:-) 
InsertHandle(int handle, int markerNum)bool MarkerHandleSet::InsertHandle =:-) 
InsertLine(Sci::Line line, Sci::Position position, bool lineStart)void LineVector::InsertLine =:-) 
InsertLine(Sci::Line lineDoc)void ContractionState::InsertLine =:-) 
InsertLine(Sci::Line line)void Document::InsertLine =:-) 
InsertLine(Sci::Line line)void LineAnnotation::InsertLine =:-) 
InsertLine(Sci::Line line)void LineLevels::InsertLine =:-) 
InsertLine(Sci::Line line)void LineMarkers::InsertLine =:-) 
InsertLine(Sci::Line line)void LineState::InsertLine =:-) 
InsertLine(Sci::Line line)void LineTabstops::InsertLine =:-) 
InsertLines(Sci::Line lineDoc, Sci::Line lineCount)void ContractionState::InsertLines =:-) 
InsertPartition(int partition, int pos)	void InsertPartition =:-) 
InsertPaste(const char *text, int len)void Editor::InsertPaste =:-) 
InsertPasteShape(const char *text, int len, PasteShape shape)void Editor::InsertPasteShape =:-) 
InsertSpace(int position, int insertLength)void DecorationList::InsertSpace =:-) 
InsertSpace(int position, int insertLength)void RunStyles::InsertSpace =:-) 
InsertSpace(int position, int insertLength)	void InsertSpace =:-) 
InsertString(Sci::Position position, const char *s, Sci::Position insertLength)Sci::Position Document::InsertString =:-) 
InsertStringUTF8(Sci::Position bytePos, const gchar *utf8, Sci::Position lengthBytes)bool ScintillaGTKAccessible::InsertStringUTF8 =:-) 
InsertText(AtkEditableText *text, const gchar *contents, gint length, gint *position)void ScintillaGTKAccessible::AtkEditableTextIface::InsertText =:-) 
InsertText(const gchar *text, int lengthBytes, int *charPosition)void ScintillaGTKAccessible::InsertText =:-) 
InsertText(Sci::Line line, Sci::Position delta)void LineVector::InsertText =:-) 
InsertText(int partitionInsert, int delta)	void InsertText =:-) 
InsertValue(int position, int insertLength, T v)	void InsertValue =:-) 
Instance()DirectorExtension =:-) 
Instance()LuaExtension =:-) 
Instance()DirectorExtension =:-) 
IntFromHexByte(const char *hexByte)int IntFromHexByte =:-) 
IntFromHexDigit(int ch)int IntFromHexDigit =:-) 
InternalGrep(GrepFlags gf, const GUI::gui_char *directory, const GUI::gui_char *fileTypes, const char *search, sptr_t &originalEnd)void SciTEBase::InternalGrep =:-) 
InternalIsLeadByte(char ch)bool TextReader::InternalIsLeadByte =:-) 
InternalLeading(Font &)XYPOSITION SurfaceImpl::InternalLeading =:-) 
InternalLeading(Font & )XYPOSITION SurfaceImpl::InternalLeading =:-) 
InternalLeading(Font &font_)XYPOSITION SurfaceD2D::InternalLeading =:-) 
InternalLeading(Font &font_)XYPOSITION SurfaceGDI::InternalLeading =:-) 
Intersect(SelectionSegment check)SelectionSegment SelectionRange::Intersect =:-) 
Intersects(PRectangle other)	bool Intersects =:-) 
Invalidate(validLevel validity_)void LineLayout::Invalidate =:-) 
Invalidate(LineLayout::validLevel validity_)void LineLayoutCache::Invalidate =:-) 
InvalidateAll()void Window::InvalidateAll =:-) 
InvalidateCaret()void Editor::InvalidateCaret =:-) 
InvalidateClose()void Strip::InvalidateClose =:-) 
InvalidateRange(Sci::Position start, Sci::Position end)void Editor::InvalidateRange =:-) 
InvalidateRectangle(PRectangle rc)void Window::InvalidateRectangle =:-) 
InvalidateSelection(SelectionRange newMain, bool invalidateWholeSelection)void Editor::InvalidateSelection =:-) 
InvalidateStyleData()void Editor::InvalidateStyleData =:-) 
InvalidateStyleRedraw()void Editor::InvalidateStyleRedraw =:-) 
InvalidateWholeSelection()void Editor::InvalidateWholeSelection =:-) 
InvertedLight(ColourDesired orig)static ColourDesired InvertedLight =:-) 
IsADigit(int ch)inline bool IsADigit =:-) 
IsADigit(int ch, int base)inline bool IsADigit =:-) 
IsASCII(int ch)inline bool IsASCII =:-) 
IsASCIIPunctuationCharacter(unsigned int ch)static bool IsASCIIPunctuationCharacter =:-) 
IsASCIIWordByte(unsigned char ch)bool Document::IsASCIIWordByte =:-) 
IsASpace(int ch)inline bool IsASpace =:-) 
IsASpace(unsigned int ch)inline bool IsASpace =:-) 
IsASpace(unsigned int ch)static inline bool IsASpace =:-) 
IsASpace(int ch)static bool IsASpace =:-) 
IsASpaceCharacter(unsigned int ch)static bool IsASpaceCharacter =:-) 
IsASpaceOrTab(int ch)inline bool IsASpaceOrTab =:-) 
IsAbsolute()bool FilePath::IsAbsolute =:-) 
IsAllSpacesOrTabs(const char *s, unsigned int len)static inline bool IsAllSpacesOrTabs =:-) 
IsAlphaNumeric(int ch)inline bool IsAlphaNumeric =:-) 
IsAlphabetic(unsigned int ch)inline bool IsAlphabetic =:-) 
IsArrowCharacter(char ch)static bool IsArrowCharacter =:-) 
IsBodyOfFoldBlock(Sci::Line line)	bool IsBodyOfFoldBlock =:-) 
IsBold()bool StyleDefinition::IsBold =:-) 
IsBrace(char ch)static bool IsBrace =:-) 
IsBufferAvailable()bool SciTEBase::IsBufferAvailable =:-) 
IsCollectingUndo()	bool IsCollectingUndo =:-) 
IsCommentLine(const char *line)static bool IsCommentLine =:-) 
IsCompatibleDC(HDC hOtherDC)bool ScintillaWin::IsCompatibleDC =:-) 
IsControlCharacter(int ch)static inline bool IsControlCharacter =:-) 
IsCrLf(Sci::Position pos)bool Document::IsCrLf =:-) 
IsDBCSLeadByte(int codePage, char ch)bool Platform::IsDBCSLeadByte =:-) 
IsDBCSLeadByte(char ch)bool SCI_METHOD Document::IsDBCSLeadByte =:-) 
IsDBCSLeadByte(int codePage, char ch)bool Platform::IsDBCSLeadByte =:-) 
IsDBCSLeadByte(int codePage, char ch)bool IsDBCSLeadByte =:-) 
IsDestroyed()	bool IsDestroyed =:-) 
IsDirectory()bool FilePath::IsDirectory =:-) 
IsDynamic()	bool IsDynamic =:-) 
IsEOLChar(char ch)static inline bool IsEOLChar =:-) 
IsEmpty()	bool IsEmpty =:-) 
IsExecuting()	bool IsExecuting =:-) 
IsFillUpChar(char ch)bool AutoComplete::IsFillUpChar =:-) 
IsFoldBlockHighlighted(Sci::Line line)	bool IsFoldBlockHighlighted =:-) 
IsHangul(const QChar qchar)bool ScintillaEditBase::IsHangul =:-) 
IsHanja(int hanja)	bool IsHanja =:-) 
IsHeadOfFoldBlock(Sci::Line line)	bool IsHeadOfFoldBlock =:-) 
IsIdContinue(int character)bool IsIdContinue =:-) 
IsIdPattern(int character)bool IsIdPattern =:-) 
IsIdStart(int character)bool IsIdStart =:-) 
IsKeyDown(int)bool Platform::IsKeyDown =:-) 
IsKeyDown(int )bool Platform::IsKeyDown =:-) 
IsKeyDown(int key)bool Platform::IsKeyDown =:-) 
IsKeyDown(int key)inline bool IsKeyDown =:-) 
IsLastStep(const DocModification &mh)static bool IsLastStep =:-) 
IsLeadByte(char ch)	bool IsLeadByte =:-) 
IsLineEndChar(char c)static bool IsLineEndChar =:-) 
IsLineEndPosition(Sci::Position position)bool Document::IsLineEndPosition =:-) 
IsLineFrameOpaque(bool caretActive, bool lineContainsCaret)bool ViewStyle::IsLineFrameOpaque =:-) 
IsLinePreprocessorCondition(char *line)int SciTEBase::IsLinePreprocessorCondition =:-) 
IsLineStartPosition(Sci::Position position)bool Document::IsLineStartPosition =:-) 
IsLoading()	virtual bool IsLoading =:-) 
IsLowerCase(int ch)inline bool IsLowerCase =:-) 
IsOctalDigit(char ch)static bool IsOctalDigit =:-) 
IsPositionInLineEnd(Sci::Position position)bool Document::IsPositionInLineEnd =:-) 
IsPropertiesFile(const FilePath &filename)bool IsPropertiesFile =:-) 
IsProtected()	bool IsProtected =:-) 
IsReadOnly()	bool IsReadOnly =:-) 
IsRectExtend(unsigned int iMessage)bool IsRectExtend =:-) 
IsRectangular()bool Selection::IsRectangular =:-) 
IsRectangularInMime(const QMimeData *mimeData)static bool IsRectangularInMime =:-) 
IsRoot()bool FilePath::IsRoot =:-) 
IsSameOrChild(const GUI::Window &wParent, HWND wChild)static bool IsSameOrChild =:-) 
IsSavePoint()	bool IsSavePoint =:-) 
IsSet()bool FilePath::IsSet =:-) 
IsSingleChar()	bool IsSingleChar =:-) 
IsSpaceOrTab(int ch)static inline bool IsSpaceOrTab =:-) 
IsSpaceOrTab(int ch)inline bool IsSpaceOrTab =:-) 
IsSpaceOrTab(char ch)static bool IsSpaceOrTab =:-) 
IsStdinBlocked()bool SciTEBase::IsStdinBlocked =:-) 
IsStdinBlocked()bool SciTEWin::IsStdinBlocked =:-) 
IsStopChar(char ch)bool AutoComplete::IsStopChar =:-) 
IsSubordinate(int levelStart, int levelTry)static bool IsSubordinate =:-) 
IsSwitchCharacter(GUI::gui_char ch)static bool IsSwitchCharacter =:-) 
IsTabCharacter(char ch)bool CallTip::IsTabCharacter =:-) 
IsTailOfFoldBlock(Sci::Line line)	bool IsTailOfFoldBlock =:-) 
IsUTF8TrailByte(int ch)static bool IsUTF8TrailByte =:-) 
IsUnicodeMode()bool Editor::IsUnicodeMode =:-) 
IsUntitled()bool FilePath::IsUntitled =:-) 
IsUpperCase(int ch)inline bool IsUpperCase =:-) 
IsValid()	bool IsValid =:-) 
IsValid(const std::string &name)bool ImportFilter::IsValid =:-) 
IsWhiteLine(Sci::Line line)bool Document::IsWhiteLine =:-) 
IsWord(unsigned char ch)	bool IsWord =:-) 
IsWordAt(Sci::Position start, Sci::Position end)bool Document::IsWordAt =:-) 
IsWordCharacter(int ch)static bool IsWordCharacter =:-) 
IsWordEndAt(Sci::Position pos)bool Document::IsWordEndAt =:-) 
IsWordPartSeparator(unsigned int ch)bool Document::IsWordPartSeparator =:-) 
IsWordStartAt(Sci::Position pos)bool Document::IsWordStartAt =:-) 
IsXidContinue(int character)bool IsXidContinue =:-) 
IsXidStart(int character)bool IsXidStart =:-) 
Item(int id)	HWND Item =:-) 
ItemHeight()int ListBoxX::ItemHeight =:-) 
ItemTextG(int id)	GUI::gui_string ItemTextG =:-) 
ItemTextU(int id)	std::string ItemTextU =:-) 
Job()	Job =:-) 
Job(const std::string &command_, const FilePath &directory_, JobSubsystem jobType_, const std::string &input_, int flags_)	Job =:-) 
JobMode(PropSetFile &props, int item, const char *fileNameExt)JobMode::JobMode =:-) 
JobQueue()	JobQueue =:-) 
Key(GdkEventKey *event)gint SciTEGTK::Key =:-) 
KeyCommand(unsigned int iMessage)int Editor::KeyCommand =:-) 
KeyCommand(unsigned int iMessage)int ScintillaBase::KeyCommand =:-) 
KeyDefault(int key, int modifiers)int ScintillaGTK::KeyDefault =:-) 
KeyDefault(int, int)int Editor::KeyDefault =:-) 
KeyDown(int key, bool shift, bool ctrl, bool alt, bool *consumed)int Editor::KeyDown =:-) 
KeyDown(GdkEventKey *event)bool FindStrip::KeyDown =:-) 
KeyDown(GdkEventKey *event)bool ReplaceStrip::KeyDown =:-) 
KeyDown(GdkEventKey *event)bool UserStrip::KeyDown =:-) 
KeyDown(GdkEventKey *event)bool Strip::KeyDown =:-) 
KeyDown(WPARAM wParam)LRESULT SciTEWin::KeyDown =:-) 
KeyDown(WPARAM key)bool BackgroundStrip::KeyDown =:-) 
KeyDown(WPARAM key)bool FindStrip::KeyDown =:-) 
KeyDown(WPARAM key)bool ReplaceStrip::KeyDown =:-) 
KeyDown(WPARAM key)bool SearchStrip::KeyDown =:-) 
KeyDown(WPARAM key)bool Strip::KeyDown =:-) 
KeyDown(WPARAM key)bool UserStrip::KeyDown =:-) 
KeyDownWithModifiers(int key, int modifiers, bool *consumed)int Editor::KeyDownWithModifiers =:-) 
KeyFromLabel(GUI::gui_string label)GUI::gui_char KeyFromLabel =:-) 
KeyFromString(const char *charBytes, size_t len)static inline int KeyFromString =:-) 
KeyMap()KeyMap::KeyMap =:-) 
KeyMatch(const char *menuKey, int keyval, int modifiers)inline bool KeyMatch =:-) 
KeyMatch(const std::string &sKey, int keyval, int modifiers)inline bool KeyMatch =:-) 
KeyModifiers(int key_, int modifiers_)	KeyModifiers =:-) 
KeyPress(GtkWidget *widget, GdkEventKey *event)gboolean ScintillaGTK::KeyPress =:-) 
KeyPress(GtkWidget * , GdkEventKey *event, SciTEGTK *scitew)gint SciTEGTK::KeyPress =:-) 
KeyRelease(GtkWidget *widget, GdkEventKey *event)gboolean ScintillaGTK::KeyRelease =:-) 
KeyRelease(GtkWidget * , GdkEventKey *event, SciTEGTK *scitew)gint SciTEGTK::KeyRelease =:-) 
KeyThis(GdkEventKey *event)gboolean ScintillaGTK::KeyThis =:-) 
KeyTranslate(int keyIn)static int KeyTranslate =:-) 
KeyUp(WPARAM wParam)LRESULT SciTEWin::KeyUp =:-) 
KoreanIME()bool ScintillaGTK::KoreanIME =:-) 
KoreanIME()bool ScintillaWin::KoreanIME =:-) 
Label(GtkWidget *child)void WTable::Label =:-) 
Last()	Sci::Position Last =:-) 
Last()SelectionPosition Selection::Last =:-) 
LayoutLine(const EditModel &model, Sci::Line line, Surface *surface, const ViewStyle &vstyle, LineLayout *ll, int width)void EditView::LayoutLine =:-) 
LayoutUI()void SciTEGTK::LayoutUI =:-) 
LenChar(Sci::Position pos)int Document::LenChar =:-) 
Length()int ListBoxX::Length =:-) 
Length()	Sci_Position Length =:-) 
Length()	int Length =:-) 
Length(int styleBase)	int Length =:-) 
Length()int WordList::Length =:-) 
Length()int ListBoxImpl::Length =:-) 
Length()	Sci_Position SCI_METHOD Length =:-) 
Length()	size_t Length =:-) 
Length(Sci::Line line)int LineAnnotation::Length =:-) 
Length()int RunStyles::Length =:-) 
Length()Sci::Position Selection::Length =:-) 
Length()Sci::Position SelectionRange::Length =:-) 
Length()	int Length =:-) 
Length()int ListBoxX::Length =:-) 
Length()	int Length =:-) 
Length()	size_t Length =:-) 
Length()int TextReader::Length =:-) 
LengthCurrent()	Sci_Position LengthCurrent =:-) 
LengthDocument()int SciTEBase::LengthDocument =:-) 
LengthOfGSD(GtkSelectionData *sd)static gint LengthOfGSD =:-) 
LengthWithTerminator()	size_t LengthWithTerminator =:-) 
LengthWord(const char *word, char otherSeparator)static size_t LengthWord =:-) 
LevelAt(Sci_Position line)	int LevelAt =:-) 
LevelAt(lua_State *L)	static int LevelAt =:-) 
LevelAt(int line)int TextReader::LevelAt =:-) 
LevelNumber(int level)inline int LevelNumber =:-) 
LevelNumber(int level)static int LevelNumber =:-) 
Levels()LineLevels =:-) 
Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, WordList *keywordlists[], Accessor &styler)void LexerModule::Lex =:-) 
Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD LexerNoExceptions::Lex =:-) 
Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD LexerSimple::Lex =:-) 
LexAccessor(IDocument *pAccess_)	explicit LexAccessor =:-) 
LexInterface(Document *pdoc_)	explicit LexInterface =:-) 
LexState(Document *pdoc_)LexState::LexState =:-) 
LexerBase()LexerBase::LexerBase =:-) 
LexerChanged()void Document::LexerChanged =:-) 
LexerFactoryFunction()typedef ILexer =:-) 
LexerFunction(*LexerFunction)typedef void =:-) 
LexerLibrary(const char *moduleName_)LexerLibrary::LexerLibrary =:-) 
LexerManager()LexerManager::LexerManager =:-) 
LexerModule(int language_, LexerFactoryFunction fnFactory_, const char *languageName_, const char * const wordListDescriptions_[])LexerModule::LexerModule =:-) 
LexerModule(int language_, LexerFunction fnLexer_, const char *languageName_, LexerFunction fnFolder_, const char *const wordListDescriptions_[])LexerModule::LexerModule =:-) 
LexerSimple(const LexerModule *module_)LexerSimple::LexerSimple =:-) 
Limits()SelectionSegment Selection::Limits =:-) 
LimitsForRectangularElseMain()SelectionSegment Selection::LimitsForRectangularElseMain =:-) 
Line(lua_State *L)	static int Line =:-) 
LineAnnotation()	LineAnnotation =:-) 
LineArea(int line)GUI::Rectangle Strip::LineArea =:-) 
LineEnd(Sci_Position line)	Sci_Position LineEnd =:-) 
LineEnd(Sci_Position line)Sci_Position SCI_METHOD Document::LineEnd =:-) 
LineEndPosition(Sci::Position position)Sci::Position Document::LineEndPosition =:-) 
LineEndString(int eolMode)static const char =:-) 
LineEndTypesSupported()int Document::LineEndTypesSupported =:-) 
LineEndTypesSupported()int LexInterface::LineEndTypesSupported =:-) 
LineEndTypesSupported()int LexState::LineEndTypesSupported =:-) 
LineEndWrapPosition(Sci::Position position)Sci::Position Editor::LineEndWrapPosition =:-) 
LineFromHandle(int markerHandle)Sci::Line Document::LineFromHandle =:-) 
LineFromHandle(int markerHandle)Sci::Line LineMarkers::LineFromHandle =:-) 
LineFromLocation(Point pt)Sci::Line Editor::LineFromLocation =:-) 
LineFromPosition(Sci::Position pos)Sci::Line LineVector::LineFromPosition =:-) 
LineFromPosition(Sci::Position pos)	Sci::Line LineFromPosition =:-) 
LineFromPosition(Sci_Position pos)Sci_Position SCI_METHOD Document::LineFromPosition =:-) 
LineLastVisible(int line)int LineLayout::LineLastVisible =:-) 
LineLayout(int maxLineLength_)LineLayout::LineLayout =:-) 
LineLayoutCache()LineLayoutCache::LineLayoutCache =:-) 
LineLength(size_t start)	size_t LineLength =:-) 
LineLevels()	LineLevels =:-) 
LineMarker()	LineMarker =:-) 
LineMarker(const LineMarker &)	LineMarker =:-) 
LineMarkers()	LineMarkers =:-) 
LineNumber()	int LineNumber =:-) 
LineRange(Sci::Line line)	Range LineRange =:-) 
LineRange(int lineStart_, int lineEnd_)	LineRange =:-) 
LineReverse()void Editor::LineReverse =:-) 
LineSelection(Sci::Position lineCurrentPos_, Sci::Position lineAnchorPos_, bool wholeLine)void Editor::LineSelection =:-) 
LineStart(Sci_Position line)	Sci_Position LineStart =:-) 
LineStart(Sci::Line line)	Sci::Position LineStart =:-) 
LineStart(Sci_Position line)Sci_Position SCI_METHOD Document::LineStart =:-) 
LineStart(int line)int LineLayout::LineStart =:-) 
LineStart(int line)int TextReader::LineStart =:-) 
LineState()	LineState =:-) 
LineState(lua_State *L)	static int LineState =:-) 
LineTabstops()	LineTabstops =:-) 
LineTo(int x_, int y_)void SurfaceImpl::LineTo =:-) 
LineTo(int x_, int y_)void SurfaceD2D::LineTo =:-) 
LineTo(int x_, int y_)void SurfaceGDI::LineTo =:-) 
LineToItem()	LineToItem =:-) 
LineTranspose()void Editor::LineTranspose =:-) 
LineVector()LineVector::LineVector =:-) 
Lines()	Sci::Line Lines =:-) 
Lines(Sci::Line line)int LineAnnotation::Lines =:-) 
Lines()int ReplaceStrip::Lines =:-) 
Lines()int Strip::Lines =:-) 
Lines()int UserStrip::Lines =:-) 
LinesAddedOrRemoved(Sci::Line lineOfPos, Sci::Line linesAdded)void EditView::LinesAddedOrRemoved =:-) 
LinesBreak(GUI::ScintillaWindow *pSci)std::vector =:-) 
LinesDisplayed()Sci::Line ContractionState::LinesDisplayed =:-) 
LinesFormFromTextForm(const char *textForm)std::vector =:-) 
LinesFromString(const std::string &s)std::vector =:-) 
LinesInDoc()Sci::Line ContractionState::LinesInDoc =:-) 
LinesJoin()void Editor::LinesJoin =:-) 
LinesOnScreen()Sci::Line Editor::LinesOnScreen =:-) 
LinesOverlap()bool EditView::LinesOverlap =:-) 
LinesSplit(int pixelWidth)void Editor::LinesSplit =:-) 
LinesToScroll()Sci::Line Editor::LinesToScroll =:-) 
LinesTotal()Sci::Line Document::LinesTotal =:-) 
List(FilePathSet &directories, FilePathSet &files)void FilePath::List =:-) 
ListBox()ListBox::ListBox =:-) 
ListBox()ListBox::ListBox =:-) 
ListBoxImpl()ListBoxImpl::ListBoxImpl =:-) 
ListBoxX()	ListBoxX =:-) 
ListBoxX()	ListBoxX =:-) 
ListBoxX_Register()static bool ListBoxX_Register =:-) 
ListBoxX_Unregister()bool ListBoxX_Unregister =:-) 
ListFromString(const GUI::gui_string &args)inline std::vector =:-) 
ListWidget(QWidget *parent)ListWidget::ListWidget =:-) 
LoWord(uptr_t l)static WORD LoWord =:-) 
Load(const char *modulePath)DynamicLibrary =:-) 
Load(const char *path)void LexerManager::Load =:-) 
Load(const char *modulePath)DynamicLibrary =:-) 
Load(const char *)bool DirectorExtension::Load =:-) 
Load(const char *filename)bool LuaExtension::Load =:-) 
Load(const char *filename)bool MultiplexExtension::Load =:-) 
Load(const char *)bool DirectorExtension::Load =:-) 
LoadD2D()bool LoadD2D =:-) 
LoadSessionDialog()void SciTEGTK::LoadSessionDialog =:-) 
LoadSessionDialog()	virtual void LoadSessionDialog =:-) 
LoadSessionDialog()void SciTEWin::LoadSessionDialog =:-) 
LoadSessionFile(const GUI::gui_char *sessionName)void SciTEBase::LoadSessionFile =:-) 
LocaliseControl(HWND w)void SciTEWin::LocaliseControl =:-) 
LocaliseDialog(HWND wDialog)void SciTEWin::LocaliseDialog =:-) 
LocaliseMenu(HMENU hmenu)void SciTEWin::LocaliseMenu =:-) 
LocaliseMenus()void SciTEWin::LocaliseMenus =:-) 
LocaliseMessage(const char *s, const GUI::gui_char *param0, const GUI::gui_char *param1, const GUI::gui_char *param2)GUI::gui_string SciTEBase::LocaliseMessage =:-) 
Localization()	Localization =:-) 
LocationFromPosition(Surface *surface, const EditModel &model, SelectionPosition pos, Sci::Line topLine, const ViewStyle &vs, PointEnd pe)Point EditView::LocationFromPosition =:-) 
LocationFromPosition(Sci::Position pos, PointEnd pe)Point Editor::LocationFromPosition =:-) 
LocationFromPosition(SelectionPosition pos, PointEnd pe)Point Editor::LocationFromPosition =:-) 
Lock(Mutex *mute_)	explicit Lock =:-) 
Lock()	virtual void Lock =:-) 
LogPixelsY()int SurfaceImpl::LogPixelsY =:-) 
LogPixelsY()int SurfaceD2D::LogPixelsY =:-) 
LogPixelsY()int SurfaceGDI::LogPixelsY =:-) 
LongFromTwoShorts(short a,short b)	static long LongFromTwoShorts =:-) 
LongFromTwoShorts(short a,short b)inline long LongFromTwoShorts =:-) 
Lookup(ARG_KEY key, VALUE& rValue)	bool Lookup =:-) 
LowShortFromLong(long x)	static short LowShortFromLong =:-) 
LowerCaseAZ(std::string &s)void LowerCaseAZ =:-) 
LowerCaseAZChar(char c)static char LowerCaseAZChar =:-) 
Lowercase(GUI::gui_string &s)static void Lowercase =:-) 
LuaExtension()LuaExtension::LuaExtension =:-) 
LuaPanicFunction(lua_State *L)static int LuaPanicFunction =:-) 
Main()size_t Selection::Main =:-) 
MainAnchor()Sci::Position Selection::MainAnchor =:-) 
MainCaret()Sci::Position Selection::MainCaret =:-) 
MainForAll(GtkContainer *container, gboolean include_internals, GtkCallback callback, gpointer callback_data)void ScintillaGTK::MainForAll =:-) 
MainHWND()HWND ScintillaWin::MainHWND =:-) 
MainHWND()HWND SciTEWin::MainHWND =:-) 
MaintainIndentation(char ch)void SciTEBase::MaintainIndentation =:-) 
MakeAlias(Font &fontOrigin)void FontAlias::MakeAlias =:-) 
MakeLongPath(const GUI::gui_char* shortPath, GUI::gui_string &longPath)static bool MakeLongPath =:-) 
MakeLowerCase(int ch)inline int MakeLowerCase =:-) 
MakePipe(const char *pipeName)static bool MakePipe =:-) 
MakeUpperCase(int ch)inline int MakeUpperCase =:-) 
MakeUpperCase(char ch)inline char MakeUpperCase =:-) 
Map(GtkWidget *widget)void ScintillaGTK::Map =:-) 
MapImeIndicators(PangoAttrList *attrs, const char *u8Str)static std::vector =:-) 
MapImeIndicators(QInputMethodEvent *event)static std::vector =:-) 
MapImeIndicators(std::vector<BYTE> inputStyle)std::vector =:-) 
MapThis()void ScintillaGTK::MapThis =:-) 
MapWidget(GtkWidget *widget)static void MapWidget =:-) 
MarginClearAll()void Document::MarginClearAll =:-) 
MarginClick(int position, int modifiers)bool SciTEBase::MarginClick =:-) 
MarginFromLocation(Point pt)int ViewStyle::MarginFromLocation =:-) 
MarginSetStyle(Sci::Line line, int style)void Document::MarginSetStyle =:-) 
MarginSetStyles(Sci::Line line, const unsigned char *styles)void Document::MarginSetStyles =:-) 
MarginSetText(Sci::Line line, const char *text)void Document::MarginSetText =:-) 
MarginStyle(int style_, int width_, int mask_)MarginStyle::MarginStyle =:-) 
MarginStyledText(Sci::Line line)StyledText Document::MarginStyledText =:-) 
MarginView()MarginView::MarginView =:-) 
Margins()LineAnnotation =:-) 
MarkAll(MarkPurpose purpose)void SciTEBase::MarkAll =:-) 
MarkAllCmd()void FindStrip::MarkAllCmd =:-) 
MarkIncremental()void FindReplaceStrip::MarkIncremental =:-) 
MarkValue(Sci::Line line)int LineMarkers::MarkValue =:-) 
MarkValue()int MarkerHandleSet::MarkValue =:-) 
MarkerHandleNumber(int handle_, int number_)	MarkerHandleNumber =:-) 
MarkerHandleSet()MarkerHandleSet::MarkerHandleSet =:-) 
MarkerNext(Sci::Line lineStart, int mask)Sci::Line Document::MarkerNext =:-) 
MarkerNext(Sci::Line lineStart, int mask)Sci::Line LineMarkers::MarkerNext =:-) 
Markers()LineMarkers =:-) 
Match(Sci_Position pos, const char *s)	bool Match =:-) 
Match(char ch0)	bool Match =:-) 
Match(char ch0, char ch1)	bool Match =:-) 
Match(const char *s)	bool Match =:-) 
Match(lua_State *L)	static int Match =:-) 
Match(int pos, const char *s)bool TextReader::Match =:-) 
MatchFlags(const Document *doc, Sci::Position startPos, Sci::Position endPos)std::regex_constants::match_flag_type MatchFlags =:-) 
MatchIgnoreCase(const char *s)bool StyleContext::MatchIgnoreCase =:-) 
MatchKeyCode(long parsedKeyCode, int keyval, int modifiers)bool SciTEKeys::MatchKeyCode =:-) 
MatchMarker()MatchMarker::MatchMarker =:-) 
MatchOnLines(const Document *doc, const Regex &regexp, const RESearchRange &resr, RESearch &search)bool MatchOnLines =:-) 
MatchWild(const char *pattern, size_t lenPattern, const char *fileName, bool caseSensitive)static bool MatchWild =:-) 
Matches(const GUI::gui_char *pattern)bool FilePath::Matches =:-) 
MatchesWordOptions(bool word, bool wordStart, Sci::Position pos, Sci::Position length)bool Document::MatchesWordOptions =:-) 
MaxScrollPos()Sci::Line Editor::MaxScrollPos =:-) 
MaxTrackSize()POINT ListBoxX::MaxTrackSize =:-) 
Maximum(int a, int b)int Platform::Maximum =:-) 
Maximum(int a, int b)inline int Maximum =:-) 
Maximum(int a, int b)int Platform::Maximum =:-) 
Maximum(int a, int b)inline int Maximum =:-) 
MeasureLength(const char *s)static size_t MeasureLength =:-) 
MeasureStringWidth()	float MeasureStringWidth =:-) 
MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions)void SurfaceImpl::MeasureWidths =:-) 
MeasureWidths(Font &font, const char *s, int len, XYPOSITION *positions)void SurfaceImpl::MeasureWidths =:-) 
MeasureWidths(Surface *surface, const ViewStyle &vstyle, unsigned int styleNumber, const char *s, unsigned int len, XYPOSITION *positions, const Document *pdoc)void PositionCache::MeasureWidths =:-) 
MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions)void SurfaceD2D::MeasureWidths =:-) 
MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions)void SurfaceGDI::MeasureWidths =:-) 
Menu()Menu::Menu =:-) 
Menu()Menu::Menu =:-) 
Menu()	Menu =:-) 
MenuAction(guint action)void FindStrip::MenuAction =:-) 
MenuAction(guint action)void ReplaceStrip::MenuAction =:-) 
MenuAction(guint )	virtual void MenuAction =:-) 
MenuCommand(int cmdID, int source)void SciTEBase::MenuCommand =:-) 
MenuItemFromAction(int itemID)GtkWidget =:-) 
MenuPositionFunc(GtkMenu *, gint *x, gint *y, gboolean *, gpointer userData)static void MenuPositionFunc =:-) 
MenuPositionFunc(GtkMenu *, gint *x, gint *y, gboolean *, gpointer userData)static void  MenuPositionFunc =:-) 
MenuSignal(GtkMenuItem *menuitem, SciTEGTK *scitew)void SciTEGTK::MenuSignal =:-) 
MenuSignal(GtkMenuItem *menuItem, Strip *pStrip)void Strip::MenuSignal =:-) 
Merge(const SparseState<T> &other, int ignoreAfter)	bool Merge =:-) 
MergeMarkers(Sci::Line line)void LineMarkers::MergeMarkers =:-) 
MinClientWidth()int ListBoxX::MinClientWidth =:-) 
MinTrackSize()POINT ListBoxX::MinTrackSize =:-) 
MinimizeToTray()void SciTEWin::MinimizeToTray =:-) 
MinimizeVirtualSpace()void SelectionRange::MinimizeVirtualSpace =:-) 
Minimum(int a, int b)int Platform::Minimum =:-) 
Minimum(int a, int b)inline int Minimum =:-) 
ModelessHandler(MSG *pmsg)bool SciTEWin::ModelessHandler =:-) 
ModifiedAt(Sci::Position pos)void Document::ModifiedAt =:-) 
ModifiedTime()time_t FilePath::ModifiedTime =:-) 
ModifierFlags(bool shift, bool ctrl, bool alt, bool meta, bool super)int Editor::ModifierFlags =:-) 
ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)bool ScintillaGTK::ModifyScrollBars =:-) 
ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)bool ScintillaQt::ModifyScrollBars =:-) 
ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)bool ScintillaWin::ModifyScrollBars =:-) 
MonitorRectangleForWidget(GtkWidget *wid)GdkRectangle MonitorRectangleForWidget =:-) 
More()	bool More =:-) 
More()bool BreakFinder::More =:-) 
More(lua_State *L)	static int More =:-) 
Motion(GtkWidget *widget, GdkEventMotion *event)gint ScintillaGTK::Motion =:-) 
Mouse(GdkEventButton *event)gint SciTEGTK::Mouse =:-) 
MouseButtonBounce()bool Platform::MouseButtonBounce =:-) 
MouseClick(Point pt)void CallTip::MouseClick =:-) 
MouseInClose(GUI::Point pt)bool Strip::MouseInClose =:-) 
MouseLeave()void Editor::MouseLeave =:-) 
MousePress(GtkWidget * , GdkEventButton *event, SciTEGTK *scitew)gint SciTEGTK::MousePress =:-) 
MouseRelease(GtkWidget *widget, GdkEventButton *event)gint ScintillaGTK::MouseRelease =:-) 
Move(XYPOSITION xDelta, XYPOSITION yDelta)	void Move =:-) 
Move(int delta)void AutoComplete::Move =:-) 
MoveBack()void SciTEBase::MoveBack =:-) 
MoveCaretInsideView(bool ensureVisible)void Editor::MoveCaretInsideView =:-) 
MoveExtends()bool Selection::MoveExtends =:-) 
MoveForInsertDelete(bool insertion, Sci::Position startChange, Sci::Position length)void SelectionPosition::MoveForInsertDelete =:-) 
MoveForInsertDelete(bool insertion, Sci::Position startChange, Sci::Position length)void SelectionRange::MoveForInsertDelete =:-) 
MoveImeCarets(int pos)void ScintillaGTK::MoveImeCarets =:-) 
MoveImeCarets(int offset)void ScintillaEditBase::MoveImeCarets =:-) 
MoveImeCarets(Sci::Position offset)void ScintillaWin::MoveImeCarets =:-) 
MovePositionForDeletion(Sci::Position position, Sci::Position startDeletion, Sci::Position length)static inline Sci::Position MovePositionForDeletion =:-) 
MovePositionForInsertion(Sci::Position position, Sci::Position startInsertion, Sci::Position length)static inline Sci::Position MovePositionForInsertion =:-) 
MovePositionOutsideChar(Sci::Position pos, Sci::Position moveDir, bool checkLineEnd)Sci::Position Document::MovePositionOutsideChar =:-) 
MovePositionOutsideChar(Sci::Position pos, Sci::Position moveDir, bool checkLineEnd)Sci::Position Editor::MovePositionOutsideChar =:-) 
MovePositionOutsideChar(SelectionPosition pos, Sci::Position moveDir, bool checkLineEnd)SelectionPosition Editor::MovePositionOutsideChar =:-) 
MovePositionSoVisible(Sci::Position pos, int moveDir)SelectionPosition Editor::MovePositionSoVisible =:-) 
MovePositionSoVisible(SelectionPosition pos, int moveDir)SelectionPosition Editor::MovePositionSoVisible =:-) 
MovePositionTo(Sci::Position newPos, Selection::selTypes selt, bool ensureVisible)void Editor::MovePositionTo =:-) 
MovePositionTo(SelectionPosition newPos, Selection::selTypes selt, bool ensureVisible)void Editor::MovePositionTo =:-) 
MovePositions(bool insertion, Sci::Position startChange, Sci::Position length)void Selection::MovePositions =:-) 
MoveSelectedLines(int lineDelta)void Editor::MoveSelectedLines =:-) 
MoveSelectedLinesDown()void Editor::MoveSelectedLinesDown =:-) 
MoveSelectedLinesUp()void Editor::MoveSelectedLinesUp =:-) 
MoveSplit(GUI::Point ptNewDrag)void SciTEBase::MoveSplit =:-) 
MoveTabLeft()void SciTEBase::MoveTabLeft =:-) 
MoveTabRight()void SciTEBase::MoveTabRight =:-) 
MoveTo(int x_, int y_)void SurfaceImpl::MoveTo =:-) 
MoveTo(int x_, int y_)void SurfaceD2D::MoveTo =:-) 
MoveTo(int x_, int y_)void SurfaceGDI::MoveTo =:-) 
MoveToStackTop(int index)void BufferList::MoveToStackTop =:-) 
MovedCaret(SelectionPosition newPos, SelectionPosition previousPos, bool ensureVisible)void Editor::MovedCaret =:-) 
MultiByteAccess()	IDocumentWithLineEnd =:-) 
MultiByteLenFromIconv(const Converter &conv, const char *s, size_t len)static size_t MultiByteLenFromIconv =:-) 
MultipleSelectAdd(AddNumber addNumber)void Editor::MultipleSelectAdd =:-) 
MultipleStyles(Sci::Line line)bool LineAnnotation::MultipleStyles =:-) 
MultiplexExtension()MultiplexExtension::MultiplexExtension =:-) 
NS_ENUM(NSInteger, NotificationType)typedef NS_ENUM =:-) 
NS_OPTIONS(NSUInteger, IBDisplay)typedef NS_OPTIONS =:-) 
Name()FilePath FilePath::Name =:-) 
NaturalDirection(unsigned int iMessage)int NaturalDirection =:-) 
NcHitTest(WPARAM wParam, LPARAM lParam)LRESULT ListBoxX::NcHitTest =:-) 
Need(workItems items_, Sci::Position pos)	void Need =:-) 
NeedShown(Sci::Position pos, Sci::Position len)void Editor::NeedShown =:-) 
NeedWrapping(Sci::Line docLineStart, Sci::Line docLineEnd)void Editor::NeedWrapping =:-) 
Needed()	bool Needed =:-) 
NeedsDrawing(Sci::Line line)	bool NeedsDrawing =:-) 
NeedsOnClose()bool DirectorExtension::NeedsOnClose =:-) 
NeedsOnClose()	virtual bool NeedsOnClose =:-) 
NeedsOnClose()bool LuaExtension::NeedsOnClose =:-) 
NeedsOnClose()bool MultiplexExtension::NeedsOnClose =:-) 
NeedsOnClose()bool DirectorExtension::NeedsOnClose =:-) 
NeedsSave(int delayBeforeSave)bool Buffer::NeedsSave =:-) 
NeedsWrap()	bool NeedsWrap =:-) 
New()void SciTEBase::New =:-) 
NewAssoc()	Association =:-) 
NewLine()void Editor::NewLine =:-) 
NewLineInOutput()void SciTEBase::NewLineInOutput =:-) 
NewNode(Node* pPrev, Node* pNext)	Node =:-) 
NewerThan(const PositionCacheEntry &other)bool PositionCacheEntry::NewerThan =:-) 
Next()	void Next =:-) 
Next()TextSegment BreakFinder::Next =:-) 
Next()	void Next =:-) 
Next(lua_State *L)	static int Next =:-) 
Next()void SciTEBase::Next =:-) 
Next()	const char =:-) 
Next(bool markAll, bool invertDirection)void FindStrip::Next =:-) 
Next(bool select)void SearchStrip::Next =:-) 
NextByte()	int NextByte =:-) 
NextCharacter(Sci::Position &pos, int moveDir)bool Document::NextCharacter =:-) 
NextField(const char *s)static const char =:-) 
NextInStack()void SciTEBase::NextInStack =:-) 
NextIncremental()void FindReplaceStrip::NextIncremental =:-) 
NextIncremental(ChangingSource source)void FindReplaceStrip::NextIncremental =:-) 
NextLine()void WTable::NextLine =:-) 
NextPosition(Sci::Position pos, int moveDir)Sci::Position Document::NextPosition =:-) 
NextRandom()	int NextRandom =:-) 
NextTab(Sci::Position pos, Sci::Position tabSize)static Sci::Position NextTab =:-) 
NextTabPos(int x)int CallTip::NextTabPos =:-) 
NextTabstopPos(Sci::Line line, XYPOSITION x, XYPOSITION tabWidth)XYPOSITION EditView::NextTabstopPos =:-) 
NextWordEnd(Sci::Position pos, int delta)Sci::Position Document::NextWordEnd =:-) 
NextWordStart(Sci::Position pos, int delta)Sci::Position Document::NextWordStart =:-) 
NoMatchColour(HDC hdc)LRESULT SearchStripBase::NoMatchColour =:-) 
NormaliseSplit(int splitPos)int SciTEBase::NormaliseSplit =:-) 
NormalizePath()FilePath FilePath::NormalizePath =:-) 
NotificationToStripCommand(int notification)static StripCommand NotificationToStripCommand =:-) 
Notify(GtkWidget *, gint, SCNotification *nt)void ScintillaGTKAccessible::Notify =:-) 
Notify(SCNotification *notification)void SciTEGTK::Notify =:-) 
Notify(SCNotification *notification)void SciTEBase::Notify =:-) 
Notify(SCNotification *notification)void SciTEWin::Notify =:-) 
NotifyCaretMove()void Editor::NotifyCaretMove =:-) 
NotifyCaretMove()void ScintillaWin::NotifyCaretMove =:-) 
NotifyChange()void ScintillaGTK::NotifyChange =:-) 
NotifyChange()void ScintillaQt::NotifyChange =:-) 
NotifyChange()void ScintillaWin::NotifyChange =:-) 
NotifyChar(int ch)void Editor::NotifyChar =:-) 
NotifyClick(Point pt, bool shift, bool ctrl, bool alt)void Editor::NotifyClick =:-) 
NotifyClick(Point pt, int modifiers)void Editor::NotifyClick =:-) 
NotifyDeleted(Document *, void *)void WatcherHelper::NotifyDeleted =:-) 
NotifyDeleted(Document *, void *)void Editor::NotifyDeleted =:-) 
NotifyDoubleClick(Point pt, bool shift, bool ctrl, bool alt)void Editor::NotifyDoubleClick =:-) 
NotifyDoubleClick(Point pt, int modifiers)void Editor::NotifyDoubleClick =:-) 
NotifyDoubleClick(Point pt, int modifiers)void ScintillaWin::NotifyDoubleClick =:-) 
NotifyDwelling(Point pt, bool state)void Editor::NotifyDwelling =:-) 
NotifyErrorOccurred(Document *, void *, int status)void WatcherHelper::NotifyErrorOccurred =:-) 
NotifyErrorOccurred(Document *, void *, int status)void Editor::NotifyErrorOccurred =:-) 
NotifyFocus(bool focus)void ScintillaGTK::NotifyFocus =:-) 
NotifyFocus(bool focus)void ScintillaQt::NotifyFocus =:-) 
NotifyFocus(bool focus)void Editor::NotifyFocus =:-) 
NotifyFocus(bool focus)void ScintillaWin::NotifyFocus =:-) 
NotifyHotSpotClicked(Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::NotifyHotSpotClicked =:-) 
NotifyHotSpotClicked(Sci::Position position, int modifiers)void Editor::NotifyHotSpotClicked =:-) 
NotifyHotSpotDoubleClicked(Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::NotifyHotSpotDoubleClicked =:-) 
NotifyHotSpotDoubleClicked(Sci::Position position, int modifiers)void Editor::NotifyHotSpotDoubleClicked =:-) 
NotifyHotSpotReleaseClick(Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::NotifyHotSpotReleaseClick =:-) 
NotifyHotSpotReleaseClick(Sci::Position position, int modifiers)void Editor::NotifyHotSpotReleaseClick =:-) 
NotifyIndicatorClick(bool click, Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::NotifyIndicatorClick =:-) 
NotifyIndicatorClick(bool click, Sci::Position position, int modifiers)void Editor::NotifyIndicatorClick =:-) 
NotifyKey(int key, int modifiers)void ScintillaGTK::NotifyKey =:-) 
NotifyLexerChanged(Document *, void *)void WatcherHelper::NotifyLexerChanged =:-) 
NotifyLexerChanged(Document *, void *)void Editor::NotifyLexerChanged =:-) 
NotifyLexerChanged(Document *, void *)void ScintillaBase::NotifyLexerChanged =:-) 
NotifyMacroRecord(unsigned int iMessage, uptr_t wParam, sptr_t lParam)void Editor::NotifyMacroRecord =:-) 
NotifyMarginClick(Point pt, bool shift, bool ctrl, bool alt)bool Editor::NotifyMarginClick =:-) 
NotifyMarginClick(Point pt, int modifiers)bool Editor::NotifyMarginClick =:-) 
NotifyMarginRightClick(Point pt, int modifiers)bool Editor::NotifyMarginRightClick =:-) 
NotifyModified(Document *, DocModification mh, void *)void WatcherHelper::NotifyModified =:-) 
NotifyModified(DocModification mh)void Document::NotifyModified =:-) 
NotifyModified(Document *, DocModification mh, void *)void Editor::NotifyModified =:-) 
NotifyModifyAttempt(Document *, void *)void WatcherHelper::NotifyModifyAttempt =:-) 
NotifyModifyAttempt()void Document::NotifyModifyAttempt =:-) 
NotifyModifyAttempt()void Editor::NotifyModifyAttempt =:-) 
NotifyModifyAttempt(Document *, void *)void Editor::NotifyModifyAttempt =:-) 
NotifyNeedShown(Sci::Position pos, Sci::Position len)void Editor::NotifyNeedShown =:-) 
NotifyPainted()void Editor::NotifyPainted =:-) 
NotifyParent(SCNotification scn)void ScintillaGTK::NotifyParent =:-) 
NotifyParent(SCNotification scn)void ScintillaQt::NotifyParent =:-) 
NotifyParent(SCNotification scn)void ScintillaWin::NotifyParent =:-) 
NotifyReadOnly()void ScintillaGTKAccessible::NotifyReadOnly =:-) 
NotifySavePoint(Document *, void *, bool atSavePoint)void WatcherHelper::NotifySavePoint =:-) 
NotifySavePoint(bool atSavePoint)void Document::NotifySavePoint =:-) 
NotifySavePoint(Document *, void *, bool atSavePoint)void Editor::NotifySavePoint =:-) 
NotifySavePoint(bool isSavePoint)void Editor::NotifySavePoint =:-) 
NotifySignal(GtkWidget *, gint , SCNotification *notification, SciTEGTK *scitew)void SciTEGTK::NotifySignal =:-) 
NotifyStyleNeeded(Document *, void *, Sci::Position endPos)void WatcherHelper::NotifyStyleNeeded =:-) 
NotifyStyleNeeded(Document *, void *, Sci::Position endStyleNeeded)void Editor::NotifyStyleNeeded =:-) 
NotifyStyleToNeeded(Sci::Position endStyleNeeded)void Editor::NotifyStyleToNeeded =:-) 
NotifyStyleToNeeded(Sci::Position endStyleNeeded)void ScintillaBase::NotifyStyleToNeeded =:-) 
NotifyURIDropped(const char *list)void ScintillaGTK::NotifyURIDropped =:-) 
NotifyUpdateUI()bool Editor::NotifyUpdateUI =:-) 
NotifyZoom()void Editor::NotifyZoom =:-) 
NumberLines(const char *text)static int NumberLines =:-) 
OP_ADD(C)OP_ADD =:-) 
OP_CALL(A+B-1))OP_CALL =:-) 
OP_CLOSE(A)OP_CLOSE =:-) 
OP_CLOSURE(A+n))OP_CLOSURE =:-) 
OP_CONCAT(C)OP_CONCAT =:-) 
OP_DIV(C)OP_DIV =:-) 
OP_EQ(C)) ~= A)OP_EQ =:-) 
OP_FORLOOP(A+2)OP_FORLOOP =:-) 
OP_FORPREP(A+2)OP_FORPREP =:-) 
OP_GETGLOBAL(Bx)OP_GETGLOBAL =:-) 
OP_GETTABLE(C)OP_GETTABLE =:-) 
OP_GETUPVAL(A)OP_GETUPVAL =:-) 
OP_LE(C)) ~= A)OP_LE =:-) 
OP_LEN(B)OP_LEN =:-) 
OP_LOADBOOL(C)OP_LOADBOOL =:-) 
OP_LOADK(Bx)OP_LOADK =:-) 
OP_LOADNIL(B)OP_LOADNIL =:-) 
OP_LT(C)) ~= A)OP_LT =:-) 
OP_MOD(C)OP_MOD =:-) 
OP_MOVE(B)OP_MOVE =:-) 
OP_MUL(C)OP_MUL =:-) 
OP_NEWTABLE(size = B,C)OP_NEWTABLE =:-) 
OP_NOT(B)OP_NOT =:-) 
OP_POW(C)OP_POW =:-) 
OP_RETURN(see note)OP_RETURN =:-) 
OP_SELF(C)OP_SELF =:-) 
OP_SETGLOBAL(A)OP_SETGLOBAL =:-) 
OP_SETLIST(A+i)OP_SETLIST =:-) 
OP_SETTABLE(C)OP_SETTABLE =:-) 
OP_SETUPVAL(A)OP_SETUPVAL =:-) 
OP_SUB(C)OP_SUB =:-) 
OP_TAILCALL(A+B-1))OP_TAILCALL =:-) 
OP_TEST(A) <=> C)OP_TEST =:-) 
OP_TESTSET(B)OP_TESTSET =:-) 
OP_TFORLOOP(A+2))OP_TFORLOOP =:-) 
OP_UNM(B)OP_UNM =:-) 
OP_VARARG(A+B-1)OP_VARARG =:-) 
OmitXidContinue(int character)bool OmitXidContinue =:-) 
OmitXidStart(int character)bool OmitXidStart =:-) 
OnBeforeSave(const char *)	virtual bool OnBeforeSave =:-) 
OnBeforeSave(const char *filename)bool LuaExtension::OnBeforeSave =:-) 
OnBeforeSave(const char *filename)bool MultiplexExtension::OnBeforeSave =:-) 
OnChar(char)bool DirectorExtension::OnChar =:-) 
OnChar(char)	virtual bool OnChar =:-) 
OnChar(char ch)bool LuaExtension::OnChar =:-) 
OnChar(char c)bool MultiplexExtension::OnChar =:-) 
OnChar(char)bool DirectorExtension::OnChar =:-) 
OnClick(int)	virtual bool OnClick =:-) 
OnClick(int modifiers)bool LuaExtension::OnClick =:-) 
OnClick(int modifiers)bool MultiplexExtension::OnClick =:-) 
OnClick(int)bool DirectorExtension::OnClick =:-) 
OnClose(const char *path)bool DirectorExtension::OnClose =:-) 
OnClose(const char *)	virtual bool OnClose =:-) 
OnClose(const char *filename)bool LuaExtension::OnClose =:-) 
OnClose(const char *filename)bool MultiplexExtension::OnClose =:-) 
OnClose(const char *path)bool DirectorExtension::OnClose =:-) 
OnDoubleClick()void ListBoxX::OnDoubleClick =:-) 
OnDoubleClick()bool DirectorExtension::OnDoubleClick =:-) 
OnDoubleClick()	virtual bool OnDoubleClick =:-) 
OnDoubleClick()bool LuaExtension::OnDoubleClick =:-) 
OnDoubleClick()bool MultiplexExtension::OnDoubleClick =:-) 
OnDoubleClick()bool DirectorExtension::OnDoubleClick =:-) 
OnDwellStart(int, const char *)	virtual bool OnDwellStart =:-) 
OnDwellStart(int pos, const char *word)bool LuaExtension::OnDwellStart =:-) 
OnDwellStart(int pos, const char *word)bool MultiplexExtension::OnDwellStart =:-) 
OnExecute(const char *cmd)bool DirectorExtension::OnExecute =:-) 
OnExecute(const char *)	virtual bool OnExecute =:-) 
OnExecute(const char *s)bool LuaExtension::OnExecute =:-) 
OnExecute(const char *cmd)bool MultiplexExtension::OnExecute =:-) 
OnExecute(const char *cmd)bool DirectorExtension::OnExecute =:-) 
OnIdle()void SciTEBase::OnIdle =:-) 
OnKey(int, int)	virtual bool OnKey =:-) 
OnKey(int keyval, int modifiers)bool LuaExtension::OnKey =:-) 
OnKey(int keyval, int modifiers)bool MultiplexExtension::OnKey =:-) 
OnMacro(const char *command, const char *params)bool DirectorExtension::OnMacro =:-) 
OnMacro(const char *, const char *)	virtual bool OnMacro =:-) 
OnMacro(const char *p, const char *q)bool MultiplexExtension::OnMacro =:-) 
OnMacro(const char *command, const char *params)bool DirectorExtension::OnMacro =:-) 
OnMarginClick()bool DirectorExtension::OnMarginClick =:-) 
OnMarginClick()	virtual bool OnMarginClick =:-) 
OnMarginClick()bool LuaExtension::OnMarginClick =:-) 
OnMarginClick()bool MultiplexExtension::OnMarginClick =:-) 
OnMarginClick()bool DirectorExtension::OnMarginClick =:-) 
OnOpen(const char *path)bool DirectorExtension::OnOpen =:-) 
OnOpen(const char *)	virtual bool OnOpen =:-) 
OnOpen(const char *filename)bool LuaExtension::OnOpen =:-) 
OnOpen(const char *filename)bool MultiplexExtension::OnOpen =:-) 
OnOpen(const char *path)bool DirectorExtension::OnOpen =:-) 
OnSave(const char *path)bool DirectorExtension::OnSave =:-) 
OnSave(const char *)	virtual bool OnSave =:-) 
OnSave(const char *filename)bool LuaExtension::OnSave =:-) 
OnSave(const char *filename)bool MultiplexExtension::OnSave =:-) 
OnSave(const char *path)bool DirectorExtension::OnSave =:-) 
OnSavePointLeft()bool DirectorExtension::OnSavePointLeft =:-) 
OnSavePointLeft()	virtual bool OnSavePointLeft =:-) 
OnSavePointLeft()bool LuaExtension::OnSavePointLeft =:-) 
OnSavePointLeft()bool MultiplexExtension::OnSavePointLeft =:-) 
OnSavePointLeft()bool DirectorExtension::OnSavePointLeft =:-) 
OnSavePointReached()bool DirectorExtension::OnSavePointReached =:-) 
OnSavePointReached()	virtual bool OnSavePointReached =:-) 
OnSavePointReached()bool LuaExtension::OnSavePointReached =:-) 
OnSavePointReached()bool MultiplexExtension::OnSavePointReached =:-) 
OnSavePointReached()bool DirectorExtension::OnSavePointReached =:-) 
OnStyle(unsigned int, int, int, StyleWriter *)bool DirectorExtension::OnStyle =:-) 
OnStyle(unsigned int, int, int, StyleWriter *)	virtual bool OnStyle =:-) 
OnStyle(unsigned int startPos, int lengthDoc, int initStyle, StyleWriter *styler)bool LuaExtension::OnStyle =:-) 
OnStyle(unsigned int p, int q, int r, StyleWriter *s)bool MultiplexExtension::OnStyle =:-) 
OnStyle(unsigned int, int, int, StyleWriter *)bool DirectorExtension::OnStyle =:-) 
OnSwitchFile(const char *path)bool DirectorExtension::OnSwitchFile =:-) 
OnSwitchFile(const char *)	virtual bool OnSwitchFile =:-) 
OnSwitchFile(const char *filename)bool LuaExtension::OnSwitchFile =:-) 
OnSwitchFile(const char *filename)bool MultiplexExtension::OnSwitchFile =:-) 
OnSwitchFile(const char *path)bool DirectorExtension::OnSwitchFile =:-) 
OnTimer()void SciTEBase::OnTimer =:-) 
OnUpdateUI()bool DirectorExtension::OnUpdateUI =:-) 
OnUpdateUI()	virtual bool OnUpdateUI =:-) 
OnUpdateUI()bool LuaExtension::OnUpdateUI =:-) 
OnUpdateUI()bool MultiplexExtension::OnUpdateUI =:-) 
OnUpdateUI()bool DirectorExtension::OnUpdateUI =:-) 
OnUserListSelection(int, const char *)	virtual bool OnUserListSelection =:-) 
OnUserListSelection(int listType, const char *selection)bool LuaExtension::OnUserListSelection =:-) 
OnUserListSelection(int listType, const char *selection)bool MultiplexExtension::OnUserListSelection =:-) 
OnUserStrip(int , int )	virtual bool OnUserStrip =:-) 
OnUserStrip(int control, int change)bool LuaExtension::OnUserStrip =:-) 
OnUserStrip(int control, int change)bool MultiplexExtension::OnUserStrip =:-) 
OneToOne()	bool OneToOne =:-) 
Open(const char *charSetDestination, const char *charSetSource, bool transliterations)	void Open =:-) 
Open(const GUI::gui_char *mode)FILE =:-) 
Open(const FilePath &file, OpenFlags of)bool SciTEBase::Open =:-) 
OpenClipboardRetry(HWND hwnd)static bool OpenClipboardRetry =:-) 
OpenCurrentFile(long long fileSize, bool suppressMessage, bool asynchronous)void SciTEBase::OpenCurrentFile =:-) 
OpenDialog(const FilePath &directory, const char *filter)bool SciTEGTK::OpenDialog =:-) 
OpenDialog(const FilePath &directory, const GUI::gui_char *filesFilter)bool SciTEWin::OpenDialog =:-) 
OpenFilesFromStdin()void SciTEBase::OpenFilesFromStdin =:-) 
OpenFromStdin(bool UseOutputPane)void SciTEBase::OpenFromStdin =:-) 
OpenHandle(const char *fullDestination, const char *charSetSource)	void OpenHandle =:-) 
OpenPipe(const char *pipeName)static int OpenPipe =:-) 
OpenProperties(int propsFile)void SciTEBase::OpenProperties =:-) 
OpenSelected()bool SciTEBase::OpenSelected =:-) 
OpenUriList(const char *list)void SciTEGTK::OpenUriList =:-) 
OpenUriList(const char *)	virtual void OpenUriList =:-) 
Option()		Option =:-) 
Option(plcob pb_, std::string description_=Ó)		Option =:-) 
Option(plcoi pi_, std::string description_)		Option =:-) 
Option(plcos ps_, std::string description_)		Option =:-) 
Original()	const char =:-) 
OtherIDOfCharacter(int character)OtherID OtherIDOfCharacter =:-) 
OutputAppendEncodedStringSynchronised(const GUI::gui_string &s, int codePageDocument)void SciTEWin::OutputAppendEncodedStringSynchronised =:-) 
OutputAppendString(const char *s, int len)void SciTEBase::OutputAppendString =:-) 
OutputAppendStringSynchronised(const char *s, int len)void SciTEBase::OutputAppendStringSynchronised =:-) 
Overlaps(Range other)	bool Overlaps =:-) 
OverridesTextFore()	bool OverridesTextFore =:-) 
OwnPrimarySelection()bool ScintillaGTK::OwnPrimarySelection =:-) 
PFNIsCommentLeader(Accessor &styler, Sci_Position pos, Sci_Position len)typedef bool =:-) 
PFont(Font &f)static FontHandle =:-) 
PMatch(CharacterIndexer &ci, Sci::Position lp, Sci::Position endp, char *ap)Sci::Position RESearch::PMatch =:-) 
PRectFromQRect(QRect qr)inline PRectangle PRectFromQRect =:-) 
PRectangle(XYPOSITION left_=0, XYPOSITION top_=0, XYPOSITION right_=0, XYPOSITION bottom_ = 0)	explicit PRectangle =:-) 
PWidget(WindowID wid)static GtkWidget =:-) 
PWidget(Window &w)static GtkWidget =:-) 
PWidget(WindowID wid)static GtkWidget =:-) 
PWidget(GUI::Window &w)static GtkWidget =:-) 
PWindow(const Window &w)static GdkWindow =:-) 
PackInto(GtkBox *box, gboolean expand)void WTable::PackInto =:-) 
PageMove(int direction, Selection::selTypes selt, bool stuttered)void Editor::PageMove =:-) 
Paint(Surface *surfaceWindow, PRectangle rcArea)void Editor::Paint =:-) 
Paint(HDC hDC)void ListBoxX::Paint =:-) 
Paint(HDC hDC, GUI::Rectangle)void ContentWin::Paint =:-) 
Paint(HDC hDC)void FindStrip::Paint =:-) 
Paint(HDC hDC)void ReplaceStrip::Paint =:-) 
Paint(HDC hDC)void SearchStrip::Paint =:-) 
Paint(HDC hDC)void Strip::Paint =:-) 
PaintCT(Surface *surfaceWindow)void CallTip::PaintCT =:-) 
PaintContains(PRectangle rc)bool ScintillaGTK::PaintContains =:-) 
PaintContains(PRectangle rc)bool Editor::PaintContains =:-) 
PaintContains(PRectangle rc)bool ScintillaWin::PaintContains =:-) 
PaintContainsMargin()bool Editor::PaintContainsMargin =:-) 
PaintContents(Surface *surfaceWindow, bool draw)int CallTip::PaintContents =:-) 
PaintMargin(Surface *surface, Sci::Line topLine, PRectangle rc, PRectangle rcMargin, const EditModel &model, const ViewStyle &vs)void MarginView::PaintMargin =:-) 
PaintSelMargin(Surface *surfaceWindow, PRectangle &rc)void Editor::PaintSelMargin =:-) 
PaintText(Surface *surfaceWindow, const EditModel &model, PRectangle rcArea, PRectangle rcClient, const ViewStyle &vsDraw)void EditView::PaintText =:-) 
PaneButtonRelease(GtkWidget *, GdkEvent *, SciTEGTK *scitew)gint SciTEGTK::PaneButtonRelease =:-) 
PanePositionChanged(GObject *, GParamSpec *, SciTEGTK *scitew)void SciTEGTK::PanePositionChanged =:-) 
PangoLayoutFromStyleDefinition(GtkPrintContext *context, const StyleDefinition &sd)static PangoLayout =:-) 
ParaDown(Sci::Position pos)Sci::Position Document::ParaDown =:-) 
ParaUp(Sci::Position pos)Sci::Position Document::ParaUp =:-) 
ParaUpOrDown(int direction, Selection::selTypes selt)void Editor::ParaUpOrDown =:-) 
ParamCancelCmd()void SciTEGTK::ParamCancelCmd =:-) 
ParamCmd()void SciTEGTK::ParamCmd =:-) 
ParamGrab()void SciTEGTK::ParamGrab =:-) 
ParamGrab()void SciTEWin::ParamGrab =:-) 
ParamResponse(int responseID)void SciTEGTK::ParamResponse =:-) 
ParametersDialog(bool modal)bool SciTEGTK::ParametersDialog =:-) 
ParametersDialog(bool modal)bool SciTEWin::ParametersDialog =:-) 
ParametersDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::ParametersDlg =:-) 
ParametersMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::ParametersMessage =:-) 
ParametersOpen()bool SciTEGTK::ParametersOpen =:-) 
ParametersOpen()bool SciTEWin::ParametersOpen =:-) 
ParseIndicatorDefinition(const char *definition)bool IndicatorDefinition::ParseIndicatorDefinition =:-) 
ParseKeyCode(const char *mnemonic)long SciTEKeys::ParseKeyCode =:-) 
ParseStyleDefinition(const char *definition)bool StyleDefinition::ParseStyleDefinition =:-) 
PartialPaint(const PRectangle &rect)void ScintillaQt::PartialPaint =:-) 
PartitionFromPosition(int pos)	int PartitionFromPosition =:-) 
Partitioning(int growSize)	explicit Partitioning =:-) 
Partitions()	int Partitions =:-) 
Paste()void ScintillaGTK::Paste =:-) 
Paste()void ScintillaQt::Paste =:-) 
Paste()void ScintillaWin::Paste =:-) 
PasteFromMode(QClipboard::Mode clipboardMode_)void ScintillaQt::PasteFromMode =:-) 
PasteRectangular(SelectionPosition pos, const char *ptr, Sci::Position len)void Editor::PasteRectangular =:-) 
PasteText(AtkEditableText *text, gint position)void ScintillaGTKAccessible::AtkEditableTextIface::PasteText =:-) 
PasteText(int charPosition)void ScintillaGTKAccessible::PasteText =:-) 
PathRoundRectangle(cairo_t *context, double left, double top, double width, double height, int radius)static void PathRoundRectangle =:-) 
PenColour(ColourDesired fore)void SurfaceImpl::PenColour =:-) 
PenColour(ColourDesired fore)void SurfaceD2D::PenColour =:-) 
PenColour(ColourDesired fore)void SurfaceGDI::PenColour =:-) 
Perform(const char *actionList)void SciTEBase::Perform =:-) 
PerformDeferredTasks()void SciTEBase::PerformDeferredTasks =:-) 
PerformGrep()void SciTEWin::PerformGrep =:-) 
PerformInsertAbbreviation()bool SciTEBase::PerformInsertAbbreviation =:-) 
PerformOnNewThread(Worker *pWorker)bool SciTEGTK::PerformOnNewThread =:-) 
PerformOnNewThread(Worker *pWorker)bool SciTEWin::PerformOnNewThread =:-) 
PerformOne(char *action)void SciTEBase::PerformOne =:-) 
Pfunc(lua_State *L, void *ud)typedef void =:-) 
PixelAt(int x, int y, ColourDesired &colour, bool &transparent)void XPM::PixelAt =:-) 
PixelGridAlign(const PRectangle &rc)static PRectangle PixelGridAlign =:-) 
Pixels()const unsigned char =:-) 
Platform()	Platform =:-) 
Platform(const Platform &)	Platform =:-) 
Platform_Finalise()void Platform_Finalise =:-) 
Platform_Finalise(bool fromDllMain)void Platform_Finalise =:-) 
Platform_Initialise()void Platform_Initialise =:-) 
Platform_Initialise(void *hInstance)void Platform_Initialise =:-) 
PlayThisSound( const char *sound, int duration, HMODULE &hMM)static void PlayThisSound =:-) 
Point(XYPOSITION x_=0, XYPOSITION y_=0)	explicit Point =:-) 
Point(int x_=0, int y_=0)	explicit Point =:-) 
PointDocument(Point pt)	explicit PointDocument =:-) 
PointDocument(double x_ = 0, double y_ = 0)	explicit PointDocument =:-) 
PointFromLong(LPARAM lPoint)inline GUI::Point PointFromLong =:-) 
PointFromPOINT(POINT pt)static Point PointFromPOINT =:-) 
PointFromPosition(int posInLine, int lineHeight, PointEnd pe)Point LineLayout::PointFromPosition =:-) 
PointFromQPoint(QPoint qp)inline Point PointFromQPoint =:-) 
PointInSelMargin(Point pt)bool Editor::PointInSelMargin =:-) 
PointInSelection(Point pt)bool Editor::PointInSelection =:-) 
PointIsHotspot(Point pt)bool Editor::PointIsHotspot =:-) 
PointMainCaret()Point Editor::PointMainCaret =:-) 
PointOfCursor()GUI::Point PointOfCursor =:-) 
PointPointer(GUI::Point *pt)inline POINT =:-) 
Pointer()GtkWidget =:-) 
PointerFromWindow(HWND hWnd)static void =:-) 
PointerFromWindow(HWND hWnd)void =:-) 
PollTool(SciTEGTK *scitew)int SciTEGTK::PollTool =:-) 
Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back)void SurfaceImpl::Polygon =:-) 
Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back)void SurfaceD2D::Polygon =:-) 
Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back)void SurfaceGDI::Polygon =:-) 
PopStack()void BufferList::PopStack =:-) 
PopUpCB(GtkMenuItem *menuItem, ScintillaGTK *sciThis)void ScintillaGTK::PopUpCB =:-) 
PopUpCmd(GtkMenuItem *menuItem, SciTEGTK *scitew)void SciTEGTK::PopUpCmd =:-) 
Pos()	Sci::Position Pos =:-) 
PosRoundUp()	Sci::Position PosRoundUp =:-) 
Position()	Sci::Position Position =:-) 
Position(lua_State *L)	static int Position =:-) 
PositionAfter(Sci::Position pos)	Sci::Position PositionAfter =:-) 
PositionAfterArea(PRectangle rcArea)Sci::Position Editor::PositionAfterArea =:-) 
PositionAfterMaxStyling(Sci::Position posMax, bool scrolling)Sci::Position Editor::PositionAfterMaxStyling =:-) 
PositionBefore(Sci::Position pos)	Sci::Position PositionBefore =:-) 
PositionCache()PositionCache::PositionCache =:-) 
PositionCacheEntry()PositionCacheEntry::PositionCacheEntry =:-) 
PositionCacheEntry(const PositionCacheEntry &other)PositionCacheEntry::PositionCacheEntry =:-) 
PositionFromLineX(Sci::Line lineDoc, int x)Sci::Position Editor::PositionFromLineX =:-) 
PositionFromLocation(Point pt, bool canReturnInvalid, bool charPosition)Sci::Position Editor::PositionFromLocation =:-) 
PositionFromPartition(int partition)	int PositionFromPartition =:-) 
PositionInSelection(Sci::Position pos)bool Editor::PositionInSelection =:-) 
PositionIsHotspot(Sci::Position position)bool Editor::PositionIsHotspot =:-) 
PositionOfElement(int element)	int PositionOfElement =:-) 
PositionUpOrDown(SelectionPosition spStart, int direction, int lastX)SelectionPosition Editor::PositionUpOrDown =:-) 
PostCallback(void *ptr)gboolean SciTEGTK::PostCallback =:-) 
PostOnMainThread(int cmd, Worker *pWorker)void SciTEGTK::PostOnMainThread =:-) 
PostOnMainThread(int cmd, Worker *pWorker)void SciTEWin::PostOnMainThread =:-) 
PreEditString(GtkIMContext *im_context)	explicit PreEditString =:-) 
PreOpenCheck(const GUI::gui_char *)bool SciTEBase::PreOpenCheck =:-) 
PreOpenCheck(const GUI::gui_char *arg)bool SciTEWin::PreOpenCheck =:-) 
PreeditChanged(GtkIMContext *, ScintillaGTK *sciThis)void ScintillaGTK::PreeditChanged =:-) 
PreeditChangedInlineThis()void ScintillaGTK::PreeditChangedInlineThis =:-) 
PreeditChangedWindowedThis()void ScintillaGTK::PreeditChangedWindowedThis =:-) 
PrepareBufferForSave(const FilePath &saveName)bool SciTEBase::PrepareBufferForSave =:-) 
Present()void Dialog::Present =:-) 
Press(GtkWidget *widget, GdkEventButton *event)gint ScintillaGTK::Press =:-) 
PressCT(GtkWidget *widget, GdkEventButton *event, ScintillaGTK *sciThis)gboolean ScintillaGTK::PressCT =:-) 
PressThis(GdkEventButton *event)gint ScintillaGTK::PressThis =:-) 
Prev()void SciTEBase::Prev =:-) 
PrevInStack()void SciTEBase::PrevInStack =:-) 
Previous(lua_State *L)	static int Previous =:-) 
PrimaryStyleFromStyle(int style)int LexState::PrimaryStyleFromStyle =:-) 
Print(bool )void SciTEGTK::Print =:-) 
Print(bool )	virtual void Print =:-) 
Print( bool showDialog)void SciTEWin::Print =:-) 
PrintParameters()PrintParameters::PrintParameters =:-) 
PrintSetup()void SciTEGTK::PrintSetup =:-) 
PrintSetup()	virtual void PrintSetup =:-) 
PrintSetup()void SciTEWin::PrintSetup =:-) 
PrivateCall(int, void *)void =:-) 
PrivateCall(int operation, void *pointer)void =:-) 
ProcessArgs(const GUI::gui_char *cmdLine)GUI::gui_string SciTEWin::ProcessArgs =:-) 
ProcessCommandLine(GUI::gui_string &args, int phase)bool SciTEBase::ProcessCommandLine =:-) 
ProcessExecute()void SciTEWin::ProcessExecute =:-) 
ProgressMade()	size_t ProgressMade =:-) 
PropGet(const char *key)const char =:-) 
PropGetExpanded(const char *key, char *result)int LexState::PropGetExpanded =:-) 
PropGetInt(const char *key, int defaultValue)int LexState::PropGetInt =:-) 
PropSet(const char *key, const char *val)void LexState::PropSet =:-) 
PropSetFile(bool lowerKeys_)PropSetFile::PropSetFile =:-) 
PropSetFile(const PropSetFile &copy)PropSetFile::PropSetFile =:-) 
PropSetSimple()PropSetSimple::PropSetSimple =:-) 
Property(const char *key)std::string SciTEBase::Property =:-) 
PropertyFromDirector(const char *arg)void SciTEBase::PropertyFromDirector =:-) 
PropertyNames()const char =:-) 
PropertyNames()	const char =:-) 
PropertyNames()const char =:-) 
PropertySet(const char *key, const char *val)Sci_Position SCI_METHOD LexerBase::PropertySet =:-) 
PropertySet(const char *key, const char *val)Sci_Position SCI_METHOD LexerNoExceptions::PropertySet =:-) 
PropertySet(T *base, const char *name, const char *val)	bool PropertySet =:-) 
PropertyToDirector(const char *arg)void SciTEBase::PropertyToDirector =:-) 
PropertyType(const char *)int SCI_METHOD LexerBase::PropertyType =:-) 
PropertyType(const char *name)	int PropertyType =:-) 
PropertyType(const char *name)int LexState::PropertyType =:-) 
ProtectionActive()bool ViewStyle::ProtectionActive =:-) 
PublishGlobalBufferData()static void PublishGlobalBufferData =:-) 
PushMethod(lua_State *L, lua_CFunction fn, const char *name)	void PushMethod =:-) 
QColorFromCA(ColourDesired ca)inline QColor QColorFromCA =:-) 
QRectFFromPRect(PRectangle pr)inline QRectF QRectFFromPRect =:-) 
QRectFromPRect(PRectangle pr)inline QRect QRectFromPRect =:-) 
QuartzFont( const char* name, size_t length, float size, int weight, bool italic )	QuartzFont =:-) 
QuartzTextLayout( CGContextRef context )    explicit QuartzTextLayout =:-) 
QuartzTextStyle()	QuartzTextStyle =:-) 
QuartzTextStyle(const QuartzTextStyle &other)	QuartzTextStyle =:-) 
QueryInterface(REFIID riid, PVOID *ppv)STDMETHODIMP ScintillaWin::QueryInterface =:-) 
QueueIdleWork(WorkNeeded::workItems items, Sci::Position upTo)void ScintillaGTK::QueueIdleWork =:-) 
QueueIdleWork(WorkNeeded::workItems items, Sci::Position upTo)void Editor::QueueIdleWork =:-) 
QuitProgram()void SciTEGTK::QuitProgram =:-) 
QuitProgram()void SciTEWin::QuitProgram =:-) 
QuitSignal(GtkWidget *, GdkEventAny *, SciTEGTK *scitew)gint SciTEGTK::QuitSignal =:-) 
RECTFromRectangle(GUI::Rectangle r)RECT RECTFromRectangle =:-) 
RESearch(CharClassify *charClassTable)RESearch::RESearch =:-) 
RESearchRange(const Document *doc_, Sci::Position minPos, Sci::Position maxPos)	RESearchRange =:-) 
RGBAImage(const XPM &xpm)RGBAImage::RGBAImage =:-) 
RGBAImage(int width_, int height_, float scale_, const unsigned char *pixels_)RGBAImage::RGBAImage =:-) 
RGBAImageSet()RGBAImageSet::RGBAImageSet =:-) 
RandomColour()	RandomColour =:-) 
Range(Sci::Position start_, Sci::Position end_)	Range =:-) 
Range(Sci::Position pos=0)	explicit Range =:-) 
Range(size_t r)SelectionRange =:-) 
Range(size_t r)const SelectionRange =:-) 
Range(Pane p, int start, int end)char =:-) 
RangeAddDelta(int start, int end, int delta)	void RangeAddDelta =:-) 
RangeContainsProtected(Sci::Position start, Sci::Position end)bool Editor::RangeContainsProtected =:-) 
RangeDisplayLine(Surface *surface, const EditModel &model, Sci::Line lineVisible, const ViewStyle &vs)Range EditView::RangeDisplayLine =:-) 
RangeDisplayLine(Sci::Line lineVisible)Range Editor::RangeDisplayLine =:-) 
RangeExtend(char ch))void SciTEBase::RangeExtend =:-) 
RangeExtendAndGrab(char ch), bool stripEol )std::string SciTEBase::RangeExtendAndGrab =:-) 
RangeIsAllWhitespace(int start, int end)bool SciTEBase::RangeIsAllWhitespace =:-) 
RangeMain()SelectionRange =:-) 
RangeMain()const SelectionRange =:-) 
RangePointer(Sci::Position position, Sci::Position rangeLength)	const char =:-) 
RangePointer(int position, int rangeLength)	T =:-) 
RangeText(Sci::Position start, Sci::Position end)std::string Editor::RangeText =:-) 
RangesCopy()	std::vector =:-) 
ReAllocate(int newSize)	void ReAllocate =:-) 
Read()std::vector =:-) 
Read(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)bool PropSetFile::Read =:-) 
ReadAPI(const std::string &fileNameForExtension)void SciTEBase::ReadAPI =:-) 
ReadAbbrevPropFile()void SciTEBase::ReadAbbrevPropFile =:-) 
ReadCharacter()	void ReadCharacter =:-) 
ReadDirectoryPropFile()void SciTEBase::ReadDirectoryPropFile =:-) 
ReadEmbeddedProperties()void SciTEBase::ReadEmbeddedProperties =:-) 
ReadEmbeddedProperties()void SciTEWin::ReadEmbeddedProperties =:-) 
ReadEnvironment()void SciTEBase::ReadEnvironment =:-) 
ReadFontProperties()void SciTEBase::ReadFontProperties =:-) 
ReadFromMemory(const char *data, size_t len, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)void PropSetFile::ReadFromMemory =:-) 
ReadGlobalPropFile()void SciTEBase::ReadGlobalPropFile =:-) 
ReadLine(const char *lineBuffer, ReadLineState rls, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)PropSetFile::ReadLineState PropSetFile::ReadLine =:-) 
ReadLocalPropFile()void SciTEBase::ReadLocalPropFile =:-) 
ReadLocalization()void SciTEGTK::ReadLocalization =:-) 
ReadLocalization()void SciTEBase::ReadLocalization =:-) 
ReadLocalization()void SciTEWin::ReadLocalization =:-) 
ReadNum(const char *&t)static unsigned int ReadNum =:-) 
ReadProperties()void SciTEGTK::ReadProperties =:-) 
ReadProperties(bool reloadScripts)void SciTEBase::ReadProperties =:-) 
ReadProperties()void SciTEWin::ReadProperties =:-) 
ReadPropertiesInitial()void SciTEGTK::ReadPropertiesInitial =:-) 
ReadPropertiesInitial()void SciTEBase::ReadPropertiesInitial =:-) 
ReadPropertiesInitial()void SciTEWin::ReadPropertiesInitial =:-) 
Realise(Surface &surface, int zoomLevel, int technology, const FontSpecification &fs)void FontRealised::Realise =:-) 
Realize(GtkWidget *widget)void ScintillaGTK::Realize =:-) 
RealizeText(GtkWidget *widget, void*)void ScintillaGTK::RealizeText =:-) 
RealizeThis(GtkWidget *widget)void ScintillaGTK::RealizeThis =:-) 
RealizeVirtualSpace(Sci::Position position, Sci::Position virtualSpace)Sci::Position Editor::RealizeVirtualSpace =:-) 
RealizeVirtualSpace(const SelectionPosition &position)SelectionPosition Editor::RealizeVirtualSpace =:-) 
ReapChild(GPid pid, gint status, gpointer user_data)void SciTEGTK::ReapChild =:-) 
ReceivedDrop(GtkSelectionData *selection_data)void ScintillaGTK::ReceivedDrop =:-) 
ReceivedSelection(GtkSelectionData *selection_data)void ScintillaGTK::ReceivedSelection =:-) 
ReceiverPipeSignal(GIOChannel *source, GIOCondition condition, void *data)static gboolean ReceiverPipeSignal =:-) 
RecentFile()	RecentFile =:-) 
ReconfigureScrollBars()void ScintillaGTK::ReconfigureScrollBars =:-) 
ReconfigureScrollBars()void ScintillaQt::ReconfigureScrollBars =:-) 
ReconfigureScrollBars()void Editor::ReconfigureScrollBars =:-) 
RecordMacroCommand(const SCNotification *notification)bool SciTEBase::RecordMacroCommand =:-) 
RectFromMonitor(HMONITOR hMonitor)static RECT RectFromMonitor =:-) 
RectFromPRectangle(PRectangle prc)static RECT RectFromPRectangle =:-) 
Rectangle(int left_=0, int top_=0, int right_=0, int bottom_ = 0)	Rectangle =:-) 
RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceImpl::RectangleDraw =:-) 
RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceD2D::RectangleDraw =:-) 
RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceGDI::RectangleDraw =:-) 
RectangleFromRange(Range r, int overlap)PRectangle Editor::RectangleFromRange =:-) 
Rectangular()SelectionRange =:-) 
Redo()Sci::Position Document::Redo =:-) 
Redo()void Editor::Redo =:-) 
Redraw()void Editor::Redraw =:-) 
Redraw()void SciTEBase::Redraw =:-) 
RedrawMenu()	virtual void RedrawMenu =:-) 
RedrawMenu()void SciTEWin::RedrawMenu =:-) 
RedrawRect(PRectangle rc)void Editor::RedrawRect =:-) 
RedrawSelMargin(Sci::Line line, bool allAfter)void Editor::RedrawSelMargin =:-) 
Refresh(Surface &surface, int tabInChars)void ViewStyle::Refresh =:-) 
RefreshPixMaps(Surface *surfaceWindow, WindowID wid, const ViewStyle &vsDraw)void EditView::RefreshPixMaps =:-) 
RefreshPixMaps(Surface *surfaceWindow)void Editor::RefreshPixMaps =:-) 
RefreshPixMaps(Surface *surfaceWindow, WindowID wid, const ViewStyle &vsDraw)void MarginView::RefreshPixMaps =:-) 
RefreshStyleData()void Editor::RefreshStyleData =:-) 
RegexError()	RegexError =:-) 
Register(HINSTANCE hInstance_)bool ScintillaWin::Register =:-) 
Register(HINSTANCE hInstance_)void SciTEWin::Register =:-) 
RegisterExtension(Extension &ext_)bool MultiplexExtension::RegisterExtension =:-) 
RegisterImage(int type, const char *xpm_data)void ListBoxX::RegisterImage =:-) 
RegisterImage(int type, const char *xpmData)void ListBoxImpl::RegisterImage =:-) 
RegisterImage(int type, const char *xpm_data)void ListBoxX::RegisterImage =:-) 
RegisterQPixmapImage(int type, const QPixmap& pm)void ListBoxImpl::RegisterQPixmapImage =:-) 
RegisterRGBA(int type, RGBAImage *image)void ListBoxX::RegisterRGBA =:-) 
RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage)void ListBoxX::RegisterRGBAImage =:-) 
RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage)void ListBoxImpl::RegisterRGBAImage =:-) 
RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage)void ListBoxX::RegisterRGBAImage =:-) 
Release()void Font::Release =:-) 
Release()void SurfaceImpl::Release =:-) 
Release()void SCI_METHOD LexerBase::Release =:-) 
Release()void Font::Release =:-) 
Release()void SurfaceImpl::Release =:-) 
Release()int SCI_METHOD Document::Release =:-) 
Release()void Font::Release =:-) 
Release()void FontCached::Release =:-) 
Release()void SurfaceD2D::Release =:-) 
Release()void SurfaceGDI::Release =:-) 
Release()STDMETHODIMP_ =:-) 
ReleaseAllExtendedStyles()void ViewStyle::ReleaseAllExtendedStyles =:-) 
ReleaseId(FontID fid_)void FontCached::ReleaseId =:-) 
ReloadProperties()void SciTEBase::ReloadProperties =:-) 
Remove()void FilePath::Remove =:-) 
Remove(Pane p, int start, int end)void SciTEBase::Remove =:-) 
Remove(T &s, const T &sFind)int Remove =:-) 
RemoveAll()	void RemoveAll =:-) 
RemoveAllTabs()void SciTEGTK::RemoveAllTabs =:-) 
RemoveAllTabs()void SciTEWin::RemoveAllTabs =:-) 
RemoveAt(T_POSITION position)	void RemoveAt =:-) 
RemoveAt(int nIndex, int nCount = 1)	void RemoveAt =:-) 
RemoveBuffer(int)	virtual bool RemoveBuffer =:-) 
RemoveBuffer(int index)bool LuaExtension::RemoveBuffer =:-) 
RemoveBuffer(int index)bool MultiplexExtension::RemoveBuffer =:-) 
RemoveCurrent()void BufferList::RemoveCurrent =:-) 
RemoveDuplicates()void Selection::RemoveDuplicates =:-) 
RemoveEscSeq(std::string &s)static void RemoveEscSeq =:-) 
RemoveFileFromStack(const FilePath &file)void SciTEBase::RemoveFileFromStack =:-) 
RemoveFindMarks()void SciTEBase::RemoveFindMarks =:-) 
RemoveHandle(int handle)void MarkerHandleSet::RemoveHandle =:-) 
RemoveHead()	TYPE RemoveHead =:-) 
RemoveInvisible(int index)void BufferList::RemoveInvisible =:-) 
RemoveKey(ARG_KEY key)	bool RemoveKey =:-) 
RemoveLine(Sci::Line line)void LineVector::RemoveLine =:-) 
RemoveLine(Sci::Line line)void Document::RemoveLine =:-) 
RemoveLine(Sci::Line line)void LineAnnotation::RemoveLine =:-) 
RemoveLine(Sci::Line line)void LineLevels::RemoveLine =:-) 
RemoveLine(Sci::Line line)void LineMarkers::RemoveLine =:-) 
RemoveLine(Sci::Line line)void LineState::RemoveLine =:-) 
RemoveLine(Sci::Line line)void LineTabstops::RemoveLine =:-) 
RemoveNumber(int markerNum, bool all)bool MarkerHandleSet::RemoveNumber =:-) 
RemovePartition(int partition)	void RemovePartition =:-) 
RemoveRun(int run)void RunStyles::RemoveRun =:-) 
RemoveRunIfEmpty(int run)void RunStyles::RemoveRunIfEmpty =:-) 
RemoveRunIfSameAsPrevious(int run)void RunStyles::RemoveRunIfSameAsPrevious =:-) 
RemoveSelection(AtkText *text, gint selection_num)gboolean ScintillaGTKAccessible::AtkTextIface::RemoveSelection =:-) 
RemoveSelection(gint selection_num)gboolean ScintillaGTKAccessible::RemoveSelection =:-) 
RemoveSendPipes()static void RemoveSendPipes =:-) 
RemoveStringOnce(std::string &s, const char *marker)bool RemoveStringOnce =:-) 
RemoveTail()	TYPE RemoveTail =:-) 
RemoveText(int position)void WComboBoxEntry::RemoveText =:-) 
RemoveToolsMenu()void SciTEBase::RemoveToolsMenu =:-) 
RemoveWatcher(DocWatcher *watcher, void *userData)bool Document::RemoveWatcher =:-) 
Replace()void SciTEGTK::Replace =:-) 
Replace()void SciTEWin::Replace =:-) 
ReplaceAll(bool inSelection)int SciTEBase::ReplaceAll =:-) 
ReplaceAllCmd()void ReplaceStrip::ReplaceAllCmd =:-) 
ReplaceCmd()void ReplaceStrip::ReplaceCmd =:-) 
ReplaceDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::ReplaceDlg =:-) 
ReplaceInBuffers()int SciTEBase::ReplaceInBuffers =:-) 
ReplaceInSelectionCmd()void ReplaceStrip::ReplaceInSelectionCmd =:-) 
ReplaceMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::ReplaceMessage =:-) 
ReplaceOnce(bool showWarnings)void SciTEBase::ReplaceOnce =:-) 
ReplaceStrip()	ReplaceStrip =:-) 
ReplaceStrip()	ReplaceStrip =:-) 
ReplaceTarget(bool replacePatterns, const char *text, Sci::Position length)Sci::Position Editor::ReplaceTarget =:-) 
Representation(const char *value=Ó)	explicit Representation =:-) 
RepresentationFromCharacter(const char *charBytes, size_t len)const Representation =:-) 
Reset()	void Reset =:-) 
ResetClock()void PositionCacheEntry::ResetClock =:-) 
ResetDefaultStyle()void ViewStyle::ResetDefaultStyle =:-) 
ResetExecution()void SciTEGTK::ResetExecution =:-) 
ResetExecution()void SciTEWin::ResetExecution =:-) 
Resize(int width, int height)void ScintillaGTK::Resize =:-) 
Resize(int maxLineLength_)void LineLayout::Resize =:-) 
Resize(int rows_, int columns_)void WTable::Resize =:-) 
ResizeToCursor()void ListBoxX::ResizeToCursor =:-) 
ResourcesRelease(bool fromDllMain)static int ResourcesRelease =:-) 
ResponseButton(const GUI::gui_string &text, int responseID)GtkWidget =:-) 
RestoreBracesHighlight(Range rangeLine, const Sci::Position braces[], bool ignoreStyle)void LineLayout::RestoreBracesHighlight =:-) 
RestoreFromSession(const Session &session)void SciTEBase::RestoreFromSession =:-) 
RestoreFromTray()void SciTEWin::RestoreFromTray =:-) 
RestorePosition()void SciTEWin::RestorePosition =:-) 
RestoreRecentMenu()void SciTEBase::RestoreRecentMenu =:-) 
RestoreSession()void SciTEBase::RestoreSession =:-) 
RestoreState(const Buffer &buffer, bool restoreBookmarks)void SciTEBase::RestoreState =:-) 
RestrictDLLPath()static void RestrictDLLPath =:-) 
Retrieve(Sci::Line lineNumber, Sci::Line lineCaret, int maxChars, int styleClock_, Sci::Line linesOnScreen, Sci::Line linesInDoc)LineLayout =:-) 
Retrieve(unsigned int styleNumber_, const char *s_, unsigned int len_, XYPOSITION *positions_)bool PositionCacheEntry::Retrieve =:-) 
RetrieveLineLayout(Sci::Line lineNumber, const EditModel &model)LineLayout =:-) 
Revert()void SciTEBase::Revert =:-) 
RightButtonDownWithModifiers(Point pt, unsigned int, int modifiers)void Editor::RightButtonDownWithModifiers =:-) 
RightButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers)void ScintillaBase::RightButtonDownWithModifiers =:-) 
RoomFor(int insertionLength)	void RoomFor =:-) 
RootLength()int FilePath::RootLength =:-) 
RotateMain()void Selection::RotateMain =:-) 
RoundFloat(float f)static float RoundFloat =:-) 
RoundXYPosition(XYPOSITION xyPos)inline int RoundXYPosition =:-) 
RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceImpl::RoundedRectangle =:-) 
RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceD2D::RoundedRectangle =:-) 
RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceGDI::RoundedRectangle =:-) 
Run(int argc, char *argv[])void SciTEGTK::Run =:-) 
Run(const GUI::gui_char *cmdLine)void SciTEWin::Run =:-) 
RunFromPosition(int position)int RunStyles::RunFromPosition =:-) 
RunStyles()RunStyles::RunStyles =:-) 
Runs()int RunStyles::Runs =:-) 
SPositionFromLineX(Surface *surface, const EditModel &model, Sci::Line lineDoc, int x, const ViewStyle &vs)SelectionPosition EditView::SPositionFromLineX =:-) 
SPositionFromLineX(Sci::Line lineDoc, int x)SelectionPosition Editor::SPositionFromLineX =:-) 
SPositionFromLocation(Surface *surface, const EditModel &model, PointDocument pt, bool canReturnInvalid, bool charPosition, bool virtualSpace, const ViewStyle &vs)SelectionPosition EditView::SPositionFromLocation =:-) 
SPositionFromLocation(Point pt, bool canReturnInvalid, bool charPosition, bool virtualSpace)SelectionPosition Editor::SPositionFromLocation =:-) 
SWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ScintillaWin::SWndProc =:-) 
SafeGetCharAt(Sci_Position position, char chDefault=Ã)	char SafeGetCharAt =:-) 
SafeGetCharAt(int position, char chDefault=Ã)	char SafeGetCharAt =:-) 
SafeSegment(const char *text, int length, int lengthSegment)int Document::SafeSegment =:-) 
SameAs(const FontParameters &fp)bool FontCached::SameAs =:-) 
SameNameAs(const FilePath &other)bool FilePath::SameNameAs =:-) 
SameNameAs(const GUI::gui_char *other)bool FilePath::SameNameAs =:-) 
Save(const char *name)const char =:-) 
Save(SaveFlags sf)bool SciTEBase::Save =:-) 
SaveACopy()void SciTEGTK::SaveACopy =:-) 
SaveACopy()void SciTEWin::SaveACopy =:-) 
SaveAllBuffers(bool alwaysYes)SciTEBase::SaveResult SciTEBase::SaveAllBuffers =:-) 
SaveAs(const GUI::gui_char *file, bool fixCase)void SciTEBase::SaveAs =:-) 
SaveAsDialog()bool SciTEGTK::SaveAsDialog =:-) 
SaveAsDialog()bool SciTEWin::SaveAsDialog =:-) 
SaveAsHTML()void SciTEGTK::SaveAsHTML =:-) 
SaveAsHTML()void SciTEWin::SaveAsHTML =:-) 
SaveAsPDF()void SciTEGTK::SaveAsPDF =:-) 
SaveAsPDF()void SciTEWin::SaveAsPDF =:-) 
SaveAsRTF()void SciTEGTK::SaveAsRTF =:-) 
SaveAsRTF()void SciTEWin::SaveAsRTF =:-) 
SaveAsTEX()void SciTEGTK::SaveAsTEX =:-) 
SaveAsTEX()void SciTEWin::SaveAsTEX =:-) 
SaveAsXML()void SciTEGTK::SaveAsXML =:-) 
SaveAsXML()void SciTEWin::SaveAsXML =:-) 
SaveAsXXX(FileFormat fmt, const char *title, const char *ext)bool SciTEGTK::SaveAsXXX =:-) 
SaveBuffer(const FilePath &saveName, SaveFlags sf)bool SciTEBase::SaveBuffer =:-) 
SaveIfNotOpen(const FilePath &destFile, bool fixCase)bool SciTEBase::SaveIfNotOpen =:-) 
SaveIfUnsure(bool forceQuestion, SaveFlags sf)SciTEBase::SaveResult SciTEBase::SaveIfUnsure =:-) 
SaveIfUnsureAll()SciTEBase::SaveResult SciTEBase::SaveIfUnsureAll =:-) 
SaveIfUnsureForBuilt()SciTEBase::SaveResult SciTEBase::SaveIfUnsureForBuilt =:-) 
SaveName(const char *ext)FilePath SciTEBase::SaveName =:-) 
SaveSessionDialog()void SciTEGTK::SaveSessionDialog =:-) 
SaveSessionDialog()	virtual void SaveSessionDialog =:-) 
SaveSessionDialog()void SciTEWin::SaveSessionDialog =:-) 
SaveSessionFile(const GUI::gui_char *sessionName)void SciTEBase::SaveSessionFile =:-) 
SaveTitledBuffers()void SciTEBase::SaveTitledBuffers =:-) 
SaveToHTML(const FilePath &saveName)void SciTEBase::SaveToHTML =:-) 
SaveToPDF(const FilePath &saveName)void SciTEBase::SaveToPDF =:-) 
SaveToRTF(const FilePath &saveName, int start, int end)void SciTEBase::SaveToRTF =:-) 
SaveToStreamRTF(std::ostream &os, int start, int end)void SciTEBase::SaveToStreamRTF =:-) 
SaveToTEX(const FilePath &saveName)void SciTEBase::SaveToTEX =:-) 
SaveToXML(const FilePath &saveName)void SciTEBase::SaveToXML =:-) 
SavingInBackground()bool BufferList::SavingInBackground =:-) 
SciFnDirect(sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam)typedef sptr_t =:-) 
SciMessageFromEM(unsigned int iMessage)static unsigned int SciMessageFromEM =:-) 
SciNotify(GtkWidget *widget, gint code, SCNotification *nt, gpointer data)	static void SciNotify =:-) 
SciNotifyFunc(intptr_t windowid, unsigned int iMessage, uintptr_t wParam, uintptr_t lParam)typedef void =:-) 
SciTEBase(Extension *ext)SciTEBase::SciTEBase =:-) 
SciTEGTK(Extension *ext)SciTEGTK::SciTEGTK =:-) 
SciTEWin(Extension *ext)SciTEWin::SciTEWin =:-) 
ScintillaBase()ScintillaBase::ScintillaBase =:-) 
ScintillaDocument(QObject *parent, void *pdoc_)ScintillaDocument::ScintillaDocument =:-) 
ScintillaEditBase(QWidget *parent)ScintillaEditBase::ScintillaEditBase =:-) 
ScintillaFailure(sptr_t status_)	explicit ScintillaFailure =:-) 
ScintillaGTK(_ScintillaObject *sci_)ScintillaGTK::ScintillaGTK =:-) 
ScintillaGTKAccessible(GtkAccessible *accessible_, GtkWidget *widget_)ScintillaGTKAccessible::ScintillaGTKAccessible =:-) 
ScintillaQt(QAbstractScrollArea *parent)ScintillaQt::ScintillaQt =:-) 
ScintillaRectangularMime()	ScintillaRectangularMime =:-) 
ScintillaWin(HWND hwnd)ScintillaWin::ScintillaWin =:-) 
ScintillaWindow()	ScintillaWindow =:-) 
Scintilla_DirectFunction( ScintillaWin *sci, UINT iMessage, uptr_t wParam, sptr_t lParam)sptr_t __stdcall Scintilla_DirectFunction =:-) 
Scintilla_LinkLexers()int Scintilla_LinkLexers =:-) 
Scintilla_RegisterClasses(void *hInstance)int Scintilla_RegisterClasses =:-) 
Scintilla_ReleaseResources()int Scintilla_ReleaseResources =:-) 
ScrollEditorIfNeeded()void SciTEBase::ScrollEditorIfNeeded =:-) 
ScrollEvent(GtkWidget *widget, GdkEventScroll *event)gint ScintillaGTK::ScrollEvent =:-) 
ScrollHSignal(GtkAdjustment *adj, ScintillaGTK *sciThis)void ScintillaGTK::ScrollHSignal =:-) 
ScrollMessage(WPARAM wParam)void ScintillaWin::ScrollMessage =:-) 
ScrollRange(SelectionRange range)void Editor::ScrollRange =:-) 
ScrollSignal(GtkAdjustment *adj, ScintillaGTK *sciThis)void ScintillaGTK::ScrollSignal =:-) 
ScrollText(Sci::Line linesToMove)void ScintillaGTK::ScrollText =:-) 
ScrollText(Sci::Line linesToMove)void ScintillaQt::ScrollText =:-) 
ScrollText(Sci::Line )void Editor::ScrollText =:-) 
ScrollText(Sci::Line )void ScintillaWin::ScrollText =:-) 
ScrollTo(Sci::Line line, bool moveThumb)void Editor::ScrollTo =:-) 
SearchAnchor()void Editor::SearchAnchor =:-) 
SearchFlags(bool regularExpressions)int SciTEBase::SearchFlags =:-) 
SearchInTarget(const char *text, Sci::Position length)long Editor::SearchInTarget =:-) 
SearchOtherInstance(HWND hWnd, LPARAM lParam)BOOL CALLBACK UniqueInstance::SearchOtherInstance =:-) 
SearchStrip()	SearchStrip =:-) 
SearchStripBase()	SearchStripBase =:-) 
SearchText( unsigned int iMessage, uptr_t wParam, sptr_t lParam)long Editor::SearchText =:-) 
SearchUI()	SearchUI =:-) 
Searcher()Searcher::Searcher =:-) 
Select(int n)void ListBoxX::Select =:-) 
Select(int n)void ListBoxImpl::Select =:-) 
Select(const char *word)void AutoComplete::Select =:-) 
Select(int n)void ListBoxX::Select =:-) 
SelectAll()void Editor::SelectAll =:-) 
SelectedRange(int position_= INVALID_POSITION, int anchor_= INVALID_POSITION)	SelectedRange =:-) 
Selection()Selection::Selection =:-) 
SelectionAdd(AddSelection add)void SciTEBase::SelectionAdd =:-) 
SelectionBackground(const ViewStyle &vsDraw, bool main, bool primarySelection)static ColourDesired SelectionBackground =:-) 
SelectionBackgroundDrawn()bool ViewStyle::SelectionBackgroundDrawn =:-) 
SelectionChanged()void ScintillaQt::SelectionChanged =:-) 
SelectionClear(GtkWidget *widget, GdkEventSelection *selection_event)gint ScintillaGTK::SelectionClear =:-) 
SelectionContainsProtected()bool Editor::SelectionContainsProtected =:-) 
SelectionEmpty()bool Editor::SelectionEmpty =:-) 
SelectionEnd()SelectionPosition Editor::SelectionEnd =:-) 
SelectionExtend(char ch), bool stripEol )std::string SciTEBase::SelectionExtend =:-) 
SelectionFilename()std::string SciTEBase::SelectionFilename =:-) 
SelectionGet(GtkWidget *widget, GtkSelectionData *selection_data, guint info, guint)void ScintillaGTK::SelectionGet =:-) 
SelectionIntoFind(bool stripEol )void SciTEBase::SelectionIntoFind =:-) 
SelectionIntoProperties()void SciTEBase::SelectionIntoProperties =:-) 
SelectionOfGSD(GtkSelectionData *sd)static GdkAtom SelectionOfGSD =:-) 
SelectionPosition(Sci::Position position_=INVALID_POSITION, Sci::Position virtualSpace_=0)	explicit SelectionPosition =:-) 
SelectionRange()	SelectionRange =:-) 
SelectionRange(Sci::Position caret_, Sci::Position anchor_)	SelectionRange =:-) 
SelectionRange(SelectionPosition caret_, SelectionPosition anchor_)	SelectionRange =:-) 
SelectionRange(Sci::Position single)	explicit SelectionRange =:-) 
SelectionRange(SelectionPosition single)	explicit SelectionRange =:-) 
SelectionReceived(GtkWidget *widget, GtkSelectionData *selection_data, guint)void ScintillaGTK::SelectionReceived =:-) 
SelectionSegment()	SelectionSegment =:-) 
SelectionSegment(SelectionPosition a, SelectionPosition b)	SelectionSegment =:-) 
SelectionStart()SelectionPosition Editor::SelectionStart =:-) 
SelectionText()	SelectionText =:-) 
SelectionToHangul()void ScintillaWin::SelectionToHangul =:-) 
SelectionWord(bool stripEol )std::string SciTEBase::SelectionWord =:-) 
Send(unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWindow::Send =:-) 
Send(Pane p, unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t SciTEBase::Send =:-) 
Send(unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWindow::Send =:-) 
SendCommands(const char *cmdLine)void UniqueInstance::SendCommands =:-) 
SendDirector(const char *verb, const char *arg = 0)static void SendDirector =:-) 
SendDirector(const char *verb, sptr_t arg)static void SendDirector =:-) 
SendFileName(int sendPipe, const char* filename)void SciTEGTK::SendFileName =:-) 
SendOneProperty(const char *kind, const char *key, const char *val)void SciTEBase::SendOneProperty =:-) 
SendPipeAvailable()static bool SendPipeAvailable =:-) 
SendPipeCommand(const char *pipeCommand)static bool SendPipeCommand =:-) 
SendProperty(const char *prop)bool DirectorExtension::SendProperty =:-) 
SendProperty(const char *)	virtual bool SendProperty =:-) 
SendProperty(const char *prop)bool MultiplexExtension::SendProperty =:-) 
SendProperty(const char *prop)bool DirectorExtension::SendProperty =:-) 
SendScintilla( WindowID w, unsigned int msg, unsigned long wParam, long lParam)long Platform::SendScintilla =:-) 
SendScintilla(WindowID , unsigned int , unsigned long , long )long Platform::SendScintilla =:-) 
SendScintilla(WindowID w, unsigned int msg, unsigned long wParam, long lParam)long Platform::SendScintilla =:-) 
SendScintillaPointer( WindowID w, unsigned int msg, unsigned long wParam, void *lParam)long Platform::SendScintillaPointer =:-) 
SendScintillaPointer(WindowID , unsigned int , unsigned long , void * )long Platform::SendScintillaPointer =:-) 
SendScintillaPointer(WindowID w, unsigned int msg, unsigned long wParam, void *lParam)long Platform::SendScintillaPointer =:-) 
Sensitive()bool WBase::Sensitive =:-) 
SeqEnd(int ch)static bool SeqEnd =:-) 
Set(const char *val)	void Set =:-) 
Set(long lcol)	void Set =:-) 
Set(unsigned int red, unsigned int green, unsigned int blue)	void Set =:-) 
Set(T *base, const char *val)		bool Set =:-) 
Set(const char *key, const char *val, int lenKey, int lenVal)void PropSetSimple::Set =:-) 
Set(const char *keyVal)void PropSetSimple::Set =:-) 
Set(int position, T value)	void Set =:-) 
Set(const char *s)void WordList::Set =:-) 
Set(LineLayout *ll_)	void Set =:-) 
Set(unsigned int styleNumber_, const char *s_, unsigned int len_, XYPOSITION *positions_, unsigned int clock_)void PositionCacheEntry::Set =:-) 
Set(int control, const char *value)void UserStrip::Set =:-) 
Set(FilePath const &directory, FilePath const &name)void FilePath::Set =:-) 
Set(FilePath const &other)void FilePath::Set =:-) 
Set(const GUI::gui_char *fileName_)void FilePath::Set =:-) 
Set(const char *key, const char *val, ptrdiff_t lenKey, ptrdiff_t lenVal)void PropSetFile::Set =:-) 
Set(const char *keyVal)void PropSetFile::Set =:-) 
Set(const char *s)void StringList::Set =:-) 
Set(const std::vector<char> &data)void StringList::Set =:-) 
Set(int control, const char *value)void UserStrip::Set =:-) 
SetAboutMessage(GUI::ScintillaWindow &wsci, const char *appTitle)void SciTEBase::SetAboutMessage =:-) 
SetAboutStyle(GUI::ScintillaWindow &wsci, int style, Colour fore)static void SetAboutStyle =:-) 
SetAccessibility()void ScintillaGTKAccessible::SetAccessibility =:-) 
SetActive(bool active)void WCheckDraw::SetActive =:-) 
SetActive(bool active)void WToggle::SetActive =:-) 
SetAdjustmentValue(GtkAdjustment *object, int value)static void SetAdjustmentValue =:-) 
SetAnnotationHeights(Sci::Line start, Sci::Line end)void Editor::SetAnnotationHeights =:-) 
SetAnnotationVisible(int visible)void Editor::SetAnnotationVisible =:-) 
SetAt(ARG_KEY key, ARG_VALUE newValue)	void SetAt =:-) 
SetAt(T_POSITION pos, ARG_TYPE newElement)	void SetAt =:-) 
SetAt(int nIndex, ARG_TYPE newElement)	void SetAt =:-) 
SetAverageCharWidth(int width)void ListBoxX::SetAverageCharWidth =:-) 
SetAverageCharWidth(int )void ListBoxImpl::SetAverageCharWidth =:-) 
SetAverageCharWidth(int width)void ListBoxX::SetAverageCharWidth =:-) 
SetBraceHighlight(Sci::Position pos0, Sci::Position pos1, int matchStyle)void Editor::SetBraceHighlight =:-) 
SetBracesHighlight(Range rangeLine, const Sci::Position braces[], char bracesMatchStyle, int xHighlight, bool ignoreStyle)void LineLayout::SetBracesHighlight =:-) 
SetBuffersMenu()void SciTEBase::SetBuffersMenu =:-) 
SetCairoColour(cairo_t *cr, long co)static void SetCairoColour =:-) 
SetCancelFlag(long value)	long SetCancelFlag =:-) 
SetCandidateWindowPos()void ScintillaGTK::SetCandidateWindowPos =:-) 
SetCandidateWindowPos()void ScintillaWin::SetCandidateWindowPos =:-) 
SetCaretAsStart()void SciTEBase::SetCaretAsStart =:-) 
SetCaretOffset(AtkText *text, gint offset)gboolean ScintillaGTKAccessible::AtkTextIface::SetCaretOffset =:-) 
SetCaretOffset(int charOffset)gboolean ScintillaGTKAccessible::SetCaretOffset =:-) 
SetCaseFolder(CaseFolder *pcf_)void Document::SetCaseFolder =:-) 
SetCaseSensitiveFilenames(bool caseSensitiveFilenames_)	static void SetCaseSensitiveFilenames =:-) 
SetChangeFunction(ChangeFunction cdfn_, void *user_)void WCheckDraw::SetChangeFunction =:-) 
SetCharClasses(const unsigned char *chars, cc newCharClass)void CharClassify::SetCharClasses =:-) 
SetCharClasses(const unsigned char *chars, CharClassify::cc newCharClass)void Document::SetCharClasses =:-) 
SetCheck(int id, bool value)	void SetCheck =:-) 
SetClickNotified(bool notified)	void SetClickNotified =:-) 
SetClip(PRectangle rc)void SurfaceImpl::SetClip =:-) 
SetClip(PRectangle rc)void SurfaceD2D::SetClip =:-) 
SetClip(PRectangle rc)void SurfaceGDI::SetClip =:-) 
SetClip(UINT uFormat)	void SetClip =:-) 
SetCoalescableTimerSig(WINAPI *SetCoalescableTimerSig)typedef UINT_PTR =:-) 
SetCodePage(int codePage_)	void SetCodePage =:-) 
SetCodec(Font &font)void SurfaceImpl::SetCodec =:-) 
SetComboFromMemory(GUI::Window w, const ComboMemory &mem)static void SetComboFromMemory =:-) 
SetCompleted()	void SetCompleted =:-) 
SetConverter(int characterSet_)void SurfaceImpl::SetConverter =:-) 
SetCtrlID(int identifier)void Editor::SetCtrlID =:-) 
SetCtrlID(int identifier)void ScintillaWin::SetCtrlID =:-) 
SetCurrent(int index)void BufferList::SetCurrent =:-) 
SetCurrentIndicator(int indicator)void DecorationList::SetCurrentIndicator =:-) 
SetCurrentValue(int value)void DecorationList::SetCurrentValue =:-) 
SetCursor(Cursor curs)void Window::SetCursor =:-) 
SetDBCSCodePage(int dbcsCodePage_)bool Document::SetDBCSCodePage =:-) 
SetDBCSMode(int codePage)void SurfaceImpl::SetDBCSMode =:-) 
SetDBCSMode(int codePage_)void SurfaceImpl::SetDBCSMode =:-) 
SetDBCSMode(int codePage_)void SurfaceD2D::SetDBCSMode =:-) 
SetDBCSMode(int codePage_)void SurfaceGDI::SetDBCSMode =:-) 
SetDefaultCharClasses(bool includeWordClass)void CharClassify::SetDefaultCharClasses =:-) 
SetDefaultCharClasses(bool includeWordClass)void Document::SetDefaultCharClasses =:-) 
SetDescription(const char *description)void UserStrip::SetDescription =:-) 
SetDirectory(FilePath const &directory)void FilePath::SetDirectory =:-) 
SetDocPointer(Document *document)void ScintillaGTK::SetDocPointer =:-) 
SetDocPointer(Document *document)void Editor::SetDocPointer =:-) 
SetDocumentAt(int index, bool updateStack)void SciTEBase::SetDocumentAt =:-) 
SetDoubleClickAction(CallBackAction action, void *data)void ListBoxImpl::SetDoubleClickAction =:-) 
SetDragPosition(SelectionPosition newPos)void Editor::SetDragPosition =:-) 
SetEmptySelection(Sci::Position currentPos_)void Editor::SetEmptySelection =:-) 
SetEmptySelection(SelectionPosition currentPos_)void Editor::SetEmptySelection =:-) 
SetEol()void SciTEBase::SetEol =:-) 
SetErrorStatus(int status)void SCI_METHOD Document::SetErrorStatus =:-) 
SetExecuting(bool state)	void SetExecuting =:-) 
SetExpanded(Sci::Line lineDoc, bool isExpanded)bool ContractionState::SetExpanded =:-) 
SetExtender(Extension *extender_)void UserStrip::SetExtender =:-) 
SetExternal(GetLexerFactoryFunction fFactory, int index)void ExternalLexerModule::SetExternal =:-) 
SetFileName(const FilePath &openName, bool fixCase)void SciTEBase::SetFileName =:-) 
SetFileProperties(PropSetFile &ps)void SciTEGTK::SetFileProperties =:-) 
SetFileProperties( PropSetFile &ps)void SciTEWin::SetFileProperties =:-) 
SetFileStackMenu()void SciTEBase::SetFileStackMenu =:-) 
SetFillUpChars(const char *fillUpChars_)void AutoComplete::SetFillUpChars =:-) 
SetFilter(const std::string &sExcludes, const std::string &sIncludes)void ImportFilter::SetFilter =:-) 
SetFind(const char *sFind)void SciTEBase::SetFind =:-) 
SetFindText(const char *sFind)void SciTEBase::SetFindText =:-) 
SetFlags(int attributes_)void Indicator::SetFlags =:-) 
SetFocus(GUI::ScintillaWindow &w)void SetFocus =:-) 
SetFocusState(bool focusState)void Editor::SetFocusState =:-) 
SetFoldDisplayText(Sci::Line lineDoc, const char *text)bool ContractionState::SetFoldDisplayText =:-) 
SetFoldExpanded(Sci::Line lineDoc, bool expanded)void Editor::SetFoldExpanded =:-) 
SetFont(Font &font)void ListBoxX::SetFont =:-) 
SetFont(Font &)void Window::SetFont =:-) 
SetFont(Font &font)void ListBoxImpl::SetFont =:-) 
SetFont(Font &font)void SurfaceImpl::SetFont =:-) 
SetFont(Font &font)void Window::SetFont =:-) 
SetFont(Font &font)void ListBoxX::SetFont =:-) 
SetFont(Font &font_)void SurfaceD2D::SetFont =:-) 
SetFont(Font &font_)void SurfaceGDI::SetFont =:-) 
SetFont(Font &font)void Window::SetFont =:-) 
SetFontHandle(const GUI::Window &w, HFONT hfont)static void SetFontHandle =:-) 
SetForeBack( ColourDesired fore, ColourDesired back)void ListBoxX::SetForeBack =:-) 
SetForeBack( ColourDesired fore, ColourDesired back)void AutoComplete::SetForeBack =:-) 
SetForeBack(const ColourDesired &fore, const ColourDesired &back)void CallTip::SetForeBack =:-) 
SetForeBack( ColourDesired fore, ColourDesired back)void ListBoxX::SetForeBack =:-) 
SetFromListText()void StringList::SetFromListText =:-) 
SetGrowSize(int growSize_)	void SetGrowSize =:-) 
SetHeight(Sci::Line lineDoc, int height)bool ContractionState::SetHeight =:-) 
SetHighlight(int start, int end)void CallTip::SetHighlight =:-) 
SetHomeProperties()void SciTEBase::SetHomeProperties =:-) 
SetHorizontalScrollPos()void ScintillaGTK::SetHorizontalScrollPos =:-) 
SetHorizontalScrollPos()void ScintillaQt::SetHorizontalScrollPos =:-) 
SetHorizontalScrollPos()void ScintillaWin::SetHorizontalScrollPos =:-) 
SetHotSpotRange(Point *pt)void Editor::SetHotSpotRange =:-) 
SetHoverIndicatorPoint(Point pt)void Editor::SetHoverIndicatorPoint =:-) 
SetHoverIndicatorPosition(Sci::Position position)void Editor::SetHoverIndicatorPosition =:-) 
SetID(FontID fid_)	void SetID =:-) 
SetID(WindowID wid_)	void SetID =:-) 
SetIcon()void SciTEGTK::SetIcon =:-) 
SetIdentifiers(int style, const char *identifiers)	void SetIdentifiers =:-) 
SetIdentifiers(int style, const char *identifiers)void LexState::SetIdentifiers =:-) 
SetIdle(bool on)bool ScintillaGTK::SetIdle =:-) 
SetIdle(bool on)bool ScintillaQt::SetIdle =:-) 
SetIdle(bool )	virtual bool SetIdle =:-) 
SetIdle(bool on)bool ScintillaWin::SetIdle =:-) 
SetIdler(bool on)void SciTEGTK::SetIdler =:-) 
SetIdler(bool on)void SciTEBase::SetIdler =:-) 
SetImportMenu()void SciTEBase::SetImportMenu =:-) 
SetIncrementalBehaviour(int behaviour)void FindReplaceStrip::SetIncrementalBehaviour =:-) 
SetIndentSettings()void SciTEBase::SetIndentSettings =:-) 
SetInteger(const char *key, int i)void PropSetFile::SetInteger =:-) 
SetItemText(int id, const GUI::gui_char *s)	void SetItemText =:-) 
SetItemTextU(int id, const std::string &s)	void SetItemTextU =:-) 
SetLanguageMenu()void SciTEBase::SetLanguageMenu =:-) 
SetLastXChosen()void Editor::SetLastXChosen =:-) 
SetLevel(Sci_Position line, int level)	void SetLevel =:-) 
SetLevel(Sci_Position line, int level)int SCI_METHOD Document::SetLevel =:-) 
SetLevel(Sci::Line line, int level, Sci::Line lines)int LineLevels::SetLevel =:-) 
SetLevel(int level_)void LineLayoutCache::SetLevel =:-) 
SetLevel(int line, int level)void StyleWriter::SetLevel =:-) 
SetLevelAt(lua_State *L)	static int SetLevelAt =:-) 
SetLexInterface(LexInterface *pLexInterface)void Document::SetLexInterface =:-) 
SetLexer(uptr_t wParam)void LexState::SetLexer =:-) 
SetLexerLanguage(const char *languageName)void LexState::SetLexerLanguage =:-) 
SetLexerModule(const LexerModule *lex)void LexState::SetLexerModule =:-) 
SetLineEndTypesAllowed(int lineEndBitSet_)bool Document::SetLineEndTypesAllowed =:-) 
SetLineIndentation(Sci::Line line, Sci::Position indent)Sci::Position Document::SetLineIndentation =:-) 
SetLineIndentation(int line, int indent)void SciTEBase::SetLineIndentation =:-) 
SetLineNumberWidth()void SciTEBase::SetLineNumberWidth =:-) 
SetLineStart(Sci::Line line, Sci::Position position)void LineVector::SetLineStart =:-) 
SetLineStart(int line, int start)void LineLayout::SetLineStart =:-) 
SetLineState(Sci_Position line, int state)	int SetLineState =:-) 
SetLineState(Sci_Position line, int state)int SCI_METHOD Document::SetLineState =:-) 
SetLineState(Sci::Line line, int state)int LineState::SetLineState =:-) 
SetLineState(lua_State *L)	static int SetLineState =:-) 
SetLineState(int line, int state)int StyleWriter::SetLineState =:-) 
SetList(const char *listText, char separator, char typesep)void ListBoxX::SetList =:-) 
SetList(const char *list, char separator, char typesep)void ListBoxImpl::SetList =:-) 
SetList(const char *list)void AutoComplete::SetList =:-) 
SetList(const char *list, char separator, char typesep)void ListBoxX::SetList =:-) 
SetList(int control, const char *value)void UserStrip::SetList =:-) 
SetLocalizer(ILocalize *localiser_)	void SetLocalizer =:-) 
SetLogFont(LOGFONTW &lf, const char *faceName, int characterSet, float size, int weight, bool italic, int extraFontFlag)static void SetLogFont =:-) 
SetMain(size_t r)void Selection::SetMain =:-) 
SetMenuItem(int, int, int itemID, const char *text, const char *mnemonic)void SciTEGTK::SetMenuItem =:-) 
SetMenuItem(int menuNumber, int position, int itemID, const GUI::gui_char *text, const GUI::gui_char *mnemonic)void SciTEWin::SetMenuItem =:-) 
SetMenuItemLocalised(int menuNumber, int position, int itemID, const char *text, const char *mnemonic)void SciTEBase::SetMenuItemLocalised =:-) 
SetMenuItemNew(int, int, int, int itemID, const char *text, const char *mnemonic)void SciTEGTK::SetMenuItemNew =:-) 
SetMenuItemNew(int menuNumber, int subMenuNumber, int position, int itemID, const GUI::gui_char *text, const GUI::gui_char *mnemonic)void SciTEWin::SetMenuItemNew =:-) 
SetMissing(const std::string &missing_)	void SetMissing =:-) 
SetMnemonicFor(WBase &w)void WStatic::SetMnemonicFor =:-) 
SetMouseCapture(bool on)void ScintillaGTK::SetMouseCapture =:-) 
SetMouseCapture(bool on)void ScintillaQt::SetMouseCapture =:-) 
SetMouseCapture(bool on)void ScintillaWin::SetMouseCapture =:-) 
SetMoveExtends(bool moveExtends_)void Selection::SetMoveExtends =:-) 
SetMultiple(const char *s)void PropSetSimple::SetMultiple =:-) 
SetOneIndicator(GUI::ScintillaWindow &win, int indicator, const IndicatorDefinition &ind)void SciTEBase::SetOneIndicator =:-) 
SetOneStyle(GUI::ScintillaWindow &win, int style, const StyleDefinition &sd)void SciTEBase::SetOneStyle =:-) 
SetOutputVisibility(bool show)void SciTEBase::SetOutputVisibility =:-) 
SetOverrideLanguage(int cmdID)void SciTEBase::SetOverrideLanguage =:-) 
SetPaneFocus(bool editPane)void SciTEBase::SetPaneFocus =:-) 
SetPartitionStartPosition(int partition, int pos)	void SetPartitionStartPosition =:-) 
SetPerLine(PerLine *pl)void LineVector::SetPerLine =:-) 
SetPhasesDraw(int phases)bool EditView::SetPhasesDraw =:-) 
SetPixel(int x, int y, ColourDesired colour, int alpha)void RGBAImage::SetPixel =:-) 
SetPosition(PRectangle rc)void Window::SetPosition =:-) 
SetPosition(bool aboveText)void CallTip::SetPosition =:-) 
SetPosition(Sci::Position position_)	void SetPosition =:-) 
SetPosition(PRectangle rc)void Window::SetPosition =:-) 
SetPosition(Rectangle rc)void Window::SetPosition =:-) 
SetPositionRelative(PRectangle rc, Window relativeTo)void Window::SetPositionRelative =:-) 
SetProgress(const GUI::gui_string &explanation, size_t size, size_t progress)void BackgroundStrip::SetProgress =:-) 
SetPropertiesInitial()void SciTEBase::SetPropertiesInitial =:-) 
SetProperty(const char *key, const char *val)void SciTEBase::SetProperty =:-) 
SetRGBAImage(Point sizeRGBAImage, float scale, const unsigned char *pixelsRGBAImage)void LineMarker::SetRGBAImage =:-) 
SetReadOnly(bool set)	void SetReadOnly =:-) 
SetRectangularRange()void Editor::SetRectangularRange =:-) 
SetRedraw(bool on)void ListBoxX::SetRedraw =:-) 
SetReplace(const char *sReplace)void SciTEBase::SetReplace =:-) 
SetRepresentation(const char *charBytes, const char *value)void SpecialRepresentations::SetRepresentation =:-) 
SetRepresentations()void Editor::SetRepresentations =:-) 
SetSavePoint()void Document::SetSavePoint =:-) 
SetScale()void SurfaceD2D::SetScale =:-) 
SetScaleFactor(int scale)void SciTEWin::SetScaleFactor =:-) 
SetSciTE(SciTEGTK *pSciTEGTK_)void UserStrip::SetSciTE =:-) 
SetSciTE(SciTEWin *pSciTEWin_)	void SetSciTE =:-) 
SetSciTE(SciTEWin *pSciTEWin_)void UserStrip::SetSciTE =:-) 
SetScrollBars()void Editor::SetScrollBars =:-) 
SetScrollInfo(int nBar, LPCSCROLLINFO lpsi, BOOL bRedraw)int ScintillaWin::SetScrollInfo =:-) 
SetSearcher(Searcher *pSearcher_)	void SetSearcher =:-) 
SetSelection(AtkText *text, gint selection_num, gint start, gint end)gboolean ScintillaGTKAccessible::AtkTextIface::SetSelection =:-) 
SetSelection(gint selection_num, int startChar, int endChar)gboolean ScintillaGTKAccessible::SetSelection =:-) 
SetSelection(Sci::Position currentPos_, Sci::Position anchor_)void Editor::SetSelection =:-) 
SetSelection(SelectionPosition currentPos_)void Editor::SetSelection =:-) 
SetSelection(SelectionPosition currentPos_, SelectionPosition anchor_)void Editor::SetSelection =:-) 
SetSelection(int currentPos_)void Editor::SetSelection =:-) 
SetSelection(SelectionRange range)void Selection::SetSelection =:-) 
SetSelection(int anchor, int currentPos)void SciTEBase::SetSelection =:-) 
SetSelectionNMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam)void Editor::SetSelectionNMessage =:-) 
SetSeparator(char separator_)void AutoComplete::SetSeparator =:-) 
SetSize(size_t size_)void PositionCache::SetSize =:-) 
SetSizeJob(size_t size)	void SetSizeJob =:-) 
SetStartupTime(const char *timestamp)void SciTEGTK::SetStartupTime =:-) 
SetState(int state_)	void SetState =:-) 
SetState(lua_State *L)	static int SetState =:-) 
SetStatusBarText(const char *s)void SciTEGTK::SetStatusBarText =:-) 
SetStatusBarText(const char *s)void SciTEWin::SetStatusBarText =:-) 
SetStopChars(const char *stopChars_)void AutoComplete::SetStopChars =:-) 
SetStyle(Sci::Line line, int style)void LineAnnotation::SetStyle =:-) 
SetStyleBlock(GUI::ScintillaWindow &win, const char *lang, int start, int last)void SciTEBase::SetStyleBlock =:-) 
SetStyleFontName(int styleIndex, const char *name)void ViewStyle::SetStyleFontName =:-) 
SetStyleFor(Sci_Position length, char style)bool SCI_METHOD Document::SetStyleFor =:-) 
SetStyleFor(GUI::ScintillaWindow &win, const char *lang)void SciTEBase::SetStyleFor =:-) 
SetStyles(Sci_Position length, const char *styles)bool SCI_METHOD Document::SetStyles =:-) 
SetStyles(Sci::Line line, const unsigned char *styles)void LineAnnotation::SetStyles =:-) 
SetTabSize(int tabSz)void CallTip::SetTabSize =:-) 
SetText(Sci::Line line, const char *text)void LineAnnotation::SetText =:-) 
SetText(const GUI::gui_char *text)void WComboBoxEntry::SetText =:-) 
SetText(const GUI::gui_char *text)void WEntry::SetText =:-) 
SetTextContents(AtkEditableText *text, const gchar *contents)void ScintillaGTKAccessible::AtkEditableTextIface::SetTextContents =:-) 
SetTextContents(const gchar *contents)void ScintillaGTKAccessible::SetTextContents =:-) 
SetTextProperties( PropSetFile &ps)void SciTEBase::SetTextProperties =:-) 
SetTheme()void Strip::SetTheme =:-) 
SetTicking(bool )void Editor::SetTicking =:-) 
SetTimeFromFile()	void SetTimeFromFile =:-) 
SetTitle(const char *s)void Window::SetTitle =:-) 
SetTitle(const gui_char *s)void Window::SetTitle =:-) 
SetToggles()void FindStrip::SetToggles =:-) 
SetToggles()void ReplaceStrip::SetToggles =:-) 
SetToolBar()	void SetToolBar =:-) 
SetToolBar()void SciTEWin::SetToolBar =:-) 
SetToolsMenu()void SciTEBase::SetToolsMenu =:-) 
SetTopLine(Sci::Line topLineNew)void Editor::SetTopLine =:-) 
SetTrackMouseLeaveEvent(bool on)void ScintillaWin::SetTrackMouseLeaveEvent =:-) 
SetTranslation(char ch, char chTranslation)void CaseFolderTable::SetTranslation =:-) 
SetTwoPhaseDraw(bool twoPhaseDraw)bool EditView::SetTwoPhaseDraw =:-) 
SetTypesep(char separator_)void AutoComplete::SetTypesep =:-) 
SetUndoCollection(bool collectUndo)	bool SetUndoCollection =:-) 
SetUnicodeMode(bool unicodeMode_)void SurfaceImpl::SetUnicodeMode =:-) 
SetUnicodeMode(bool unicodeMode_)void SurfaceD2D::SetUnicodeMode =:-) 
SetUnicodeMode(bool unicodeMode_)void SurfaceGDI::SetUnicodeMode =:-) 
SetValid(GtkEntry *entry, bool valid)void WEntry::SetValid =:-) 
SetValueAt(int position, int value)void RunStyles::SetValueAt =:-) 
SetValueAt(int position, ParamType &&value)	void SetValueAt =:-) 
SetValueAt(int position, ParamType&& v)	void SetValueAt =:-) 
SetVerticalScrollPos()void ScintillaGTK::SetVerticalScrollPos =:-) 
SetVerticalScrollPos()void ScintillaQt::SetVerticalScrollPos =:-) 
SetVerticalScrollPos()void ScintillaWin::SetVerticalScrollPos =:-) 
SetView()void DecorationList::SetView =:-) 
SetVirtualSpace(Sci::Position virtualSpace_)	void SetVirtualSpace =:-) 
SetVisible(Sci::Line lineDocStart, Sci::Line lineDocEnd, bool isVisible)bool ContractionState::SetVisible =:-) 
SetVisible(int index, bool visible)void BufferList::SetVisible =:-) 
SetVisibleRows(int rows)void ListBoxX::SetVisibleRows =:-) 
SetVisibleRows(int rows)void ListBoxImpl::SetVisibleRows =:-) 
SetVisibleRows(int rows)void ListBoxX::SetVisibleRows =:-) 
SetWindowID(HWND hWnd, int identifier)static void SetWindowID =:-) 
SetWindowName()void SciTEBase::SetWindowName =:-) 
SetWindowPointer(HWND hWnd, void *ptr)static void SetWindowPointer =:-) 
SetWindowPointer(HWND hWnd, void *ptr)void SetWindowPointer =:-) 
SetWordList(int n, const char *wl)void LexState::SetWordList =:-) 
SetWords(const char *s)	char =:-) 
SetWorkingDirectory()bool FilePath::SetWorkingDirectory =:-) 
SetWrapIndentMode(int wrapIndentMode_)bool ViewStyle::SetWrapIndentMode =:-) 
SetWrapState(int wrapState_)bool ViewStyle::SetWrapState =:-) 
SetWrapVisualFlags(int wrapVisualFlags_)bool ViewStyle::SetWrapVisualFlags =:-) 
SetWrapVisualFlagsLocation(int wrapVisualFlagsLocation_)bool ViewStyle::SetWrapVisualFlagsLocation =:-) 
SetWrapVisualStartIndent(int wrapVisualStartIndent_)bool ViewStyle::SetWrapVisualStartIndent =:-) 
SetXPM(const char *const *linesForm)void LineMarker::SetXPM =:-) 
SetXPM(const char *textForm)void LineMarker::SetXPM =:-) 
SetXYScroll(XYScrollPosition newXY)void Editor::SetXYScroll =:-) 
SetterFunction()	IFaceFunction SetterFunction =:-) 
SetupChild(gpointer )static void SetupChild =:-) 
SetupConversions(enum CaseConversion conversion)void SetupConversions =:-) 
SetupFormat(Sci_RangeToFormat &frPrint, GtkPrintContext *context)void SciTEGTK::SetupFormat =:-) 
ShellEscape(const char *toEscape)static std::string ShellEscape =:-) 
ShellExec(const std::string &cmd, const char *dir)void SciTEWin::ShellExec =:-) 
ShiftTab(int indexFrom, int indexTo)void SciTEBase::ShiftTab =:-) 
ShiftTo(int indexFrom, int indexTo)void BufferList::ShiftTo =:-) 
ShouldClose(bool found)	bool ShouldClose =:-) 
ShouldDisplayPopup(Point ptInWindowCoordinates)bool ScintillaBase::ShouldDisplayPopup =:-) 
ShouldNotSave()	bool ShouldNotSave =:-) 
Show(Point pt, Window &w)void Menu::Show =:-) 
Show(bool show)void Window::Show =:-) 
Show(Point pt, Window & )void Menu::Show =:-) 
Show(bool show)void Window::Show =:-) 
Show(bool show)void AutoComplete::Show =:-) 
Show(Point pt, Window &w)void Menu::Show =:-) 
Show(bool show)void Window::Show =:-) 
Show(Point pt G_GNUC_UNUSED, Window &)void Menu::Show =:-) 
Show(bool show)void Window::Show =:-) 
Show(int buttonHeight)void FindStrip::Show =:-) 
Show(int buttonHeight)void ReplaceStrip::Show =:-) 
Show(int buttonHeight)void UserStrip::Show =:-) 
Show(int)void Strip::Show =:-) 
Show(Point pt, Window &w)void Menu::Show =:-) 
Show(bool show)void Window::Show =:-) 
Show()void FindStrip::Show =:-) 
Show()void ReplaceStrip::Show =:-) 
ShowAll()void ContractionState::ShowAll =:-) 
ShowAssertionPopUps(bool assertionPopUps_)bool Platform::ShowAssertionPopUps =:-) 
ShowAssertionPopUps(bool )bool Platform::ShowAssertionPopUps =:-) 
ShowAssertionPopUps(bool assertionPopUps_)bool Platform::ShowAssertionPopUps =:-) 
ShowBackgroundProgress(const GUI::gui_string &explanation, size_t size, size_t progress)void SciTEGTK::ShowBackgroundProgress =:-) 
ShowBackgroundProgress(const GUI::gui_string & , size_t , size_t )	virtual void ShowBackgroundProgress =:-) 
ShowBackgroundProgress(const GUI::gui_string &explanation, size_t size, size_t progress)void SciTEWin::ShowBackgroundProgress =:-) 
ShowCaretAtCurrentPosition()void Editor::ShowCaretAtCurrentPosition =:-) 
ShowMessages(int line)void SciTEBase::ShowMessages =:-) 
ShowOutputOnMainThread()void SciTEBase::ShowOutputOnMainThread =:-) 
ShowOutputOnMainThread()void SciTEWin::ShowOutputOnMainThread =:-) 
ShowOutputPane()	bool ShowOutputPane =:-) 
ShowPopup()void FindStrip::ShowPopup =:-) 
ShowPopup()void ReplaceStrip::ShowPopup =:-) 
ShowPopup()	virtual void ShowPopup =:-) 
ShowPopup()void FindStrip::ShowPopup =:-) 
ShowPopup()void ReplaceStrip::ShowPopup =:-) 
ShowPopup()void Strip::ShowPopup =:-) 
ShowStatusBar()void SciTEGTK::ShowStatusBar =:-) 
ShowStatusBar()void SciTEWin::ShowStatusBar =:-) 
ShowTabBar()void SciTEGTK::ShowTabBar =:-) 
ShowTabBar()void SciTEWin::ShowTabBar =:-) 
ShowToolBar()void SciTEGTK::ShowToolBar =:-) 
ShowToolBar()void SciTEWin::ShowToolBar =:-) 
ShutDown()void SciTEBase::ShutDown =:-) 
SigFunction(GtkWidget *w, SciTEGTK *app)typedef void =:-) 
SignalDestroy(GtkWidget *, Dialog *d)void Dialog::SignalDestroy =:-) 
SimpleAlphaRectangle(Surface *surface, PRectangle rc, ColourDesired fill, int alpha)static void SimpleAlphaRectangle =:-) 
SingleBuffer()bool BufferList::SingleBuffer =:-) 
Size()	SIZE_T Size =:-) 
Size()void BackgroundStrip::Size =:-) 
Size()void FindStrip::Size =:-) 
Size()void ReplaceStrip::Size =:-) 
Size()void SearchStrip::Size =:-) 
Size()void Strip::Size =:-) 
Size()void UserStrip::Size =:-) 
SizeAllocate(GtkWidget *widget, GtkAllocation *allocation)void ScintillaGTK::SizeAllocate =:-) 
SizeButton(const GUI::Window &wButton)static SIZE SizeButton =:-) 
SizeContentWindows()void SciTEGTK::SizeContentWindows =:-) 
SizeContentWindows()void SciTEWin::SizeContentWindows =:-) 
SizeJob()	size_t SizeJob =:-) 
SizeRequest(GtkWidget *widget, GtkRequisition *requisition)void ScintillaGTK::SizeRequest =:-) 
SizeSubWindows()void SciTEGTK::SizeSubWindows =:-) 
SizeSubWindows()void SciTEWin::SizeSubWindows =:-) 
Slash(const std::string &s, bool quoteQuotes)std::string Slash =:-) 
SortIfNeeded(bool ignoreCase)void StringList::SortIfNeeded =:-) 
SortWordList(char **words, unsigned int len)static void SortWordList =:-) 
Sorter(AutoComplete *ac_, const char *list_)	Sorter =:-) 
SparseState(int positionFirst_=-1)	explicit SparseState =:-) 
SparseVector()	SparseVector =:-) 
SpecialRepresentations()SpecialRepresentations::SpecialRepresentations =:-) 
SplitRun(int position)int RunStyles::SplitRun =:-) 
SplitVector()	SplitVector =:-) 
SplitVectorWithRangeAdd(int growSize_)	explicit SplitVectorWithRangeAdd =:-) 
SptrFromPointer(void *p)inline sptr_t SptrFromPointer =:-) 
SptrFromString(const char *cp)inline sptr_t SptrFromString =:-) 
StWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL BaseWin::StWndProc =:-) 
StackMenu(int pos)void SciTEBase::StackMenu =:-) 
StackMenuNext()void SciTEBase::StackMenuNext =:-) 
StackMenuPrev()void SciTEBase::StackMenuPrev =:-) 
StackNext()int BufferList::StackNext =:-) 
StackPrev()int BufferList::StackPrev =:-) 
StandardASCII()void CaseFolderTable::StandardASCII =:-) 
Start()	int Start =:-) 
Start(int styleBase)	int Start =:-) 
Start(Window &parent, int ctrlID, Sci::Position position, Point location, int startLen_, int fontSize_, bool unicodeMode_, int technology_, bool useThickFrame_)void AutoComplete::Start =:-) 
Start(int indicator, int position)int DecorationList::Start =:-) 
Start()SelectionPosition Selection::Start =:-) 
Start()	SelectionPosition Start =:-) 
StartAt(Sci_PositionU start)	void StartAt =:-) 
StartAt(unsigned int start, char chMask)void StyleWriter::StartAt =:-) 
StartAutoComplete()bool SciTEBase::StartAutoComplete =:-) 
StartAutoCompleteWord(bool onlyOneWord)bool SciTEBase::StartAutoCompleteWord =:-) 
StartBlockComment()bool SciTEBase::StartBlockComment =:-) 
StartBoxComment()bool SciTEBase::StartBoxComment =:-) 
StartCallTip()bool SciTEBase::StartCallTip =:-) 
StartDrag()void ScintillaGTK::StartDrag =:-) 
StartDrag()void ScintillaQt::StartDrag =:-) 
StartDrag()void Editor::StartDrag =:-) 
StartDrag()void ScintillaWin::StartDrag =:-) 
StartEndDisplayLine(Surface *surface, const EditModel &model, Sci::Position pos, bool start, const ViewStyle &vs)Sci::Position EditView::StartEndDisplayLine =:-) 
StartEndDisplayLine(Sci::Position pos, bool start)Sci::Position Editor::StartEndDisplayLine =:-) 
StartExpandAbbreviation()bool SciTEBase::StartExpandAbbreviation =:-) 
StartIdleStyling(bool truncatedLastStyling)void Editor::StartIdleStyling =:-) 
StartInsertAbbreviation()bool SciTEBase::StartInsertAbbreviation =:-) 
StartMacroList(const char *words)bool SciTEBase::StartMacroList =:-) 
StartMatch(GUI::ScintillaWindow *pSci_, const std::string &textMatch_, int flagsMatch_, int styleMatch_, int indicator_, int bookMark_)void MatchMarker::StartMatch =:-) 
StartPlayMacro()void SciTEBase::StartPlayMacro =:-) 
StartRecordMacro()void SciTEBase::StartRecordMacro =:-) 
StartResize(WPARAM hitCode)void ListBoxX::StartResize =:-) 
StartRun(int position)int RunStyles::StartRun =:-) 
StartSegment(Sci_PositionU pos)	void StartSegment =:-) 
StartSegment(unsigned int pos)void StyleWriter::StartSegment =:-) 
StartStreamComment()bool SciTEBase::StartStreamComment =:-) 
StartStyling(Sci_Position position, char)void SCI_METHOD Document::StartStyling =:-) 
StartStyling(lua_State *L)	static int StartStyling =:-) 
StartStyling(unsigned int startPos_, unsigned int length, int initStyle_)	void StartStyling =:-) 
StartsWith(GUI::gui_string const &s, GUI::gui_string const &start)bool StartsWith =:-) 
StartsWith(std::string const &s, const char *start)bool StartsWith =:-) 
State(int position_, T value_)		State =:-) 
State(lua_State *L)	static int State =:-) 
States()LineState =:-) 
StaticWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ListBoxX::StaticWndProc =:-) 
StdStringFromDouble(double d, int precision)std::string StdStringFromDouble =:-) 
StdStringFromInteger(int i)std::string StdStringFromInteger =:-) 
StdStringFromSizeT(size_t i)std::string StdStringFromSizeT =:-) 
Stop()void MatchMarker::Stop =:-) 
StopExecute()void SciTEGTK::StopExecute =:-) 
StopExecute()void SciTEWin::StopExecute =:-) 
StopRecordMacro()void SciTEBase::StopRecordMacro =:-) 
StoreOnClipboard(SelectionText *clipText)void ScintillaGTK::StoreOnClipboard =:-) 
StringCopy(&dest)[count], const T* source)void StringCopy =:-) 
StringDecode(const std::string &s, int codePage)static std::wstring StringDecode =:-) 
StringDecode(std::string s, int codePage)static std::wstring StringDecode =:-) 
StringEncode(const std::wstring &s, int codePage)static std::string StringEncode =:-) 
StringEncode(std::wstring s, int codePage)static std::string StringEncode =:-) 
StringEqual(const char *a, const char *b, size_t len, bool caseSensitive)static bool StringEqual =:-) 
StringFromDocument(const char *s)QString ScintillaQt::StringFromDocument =:-) 
StringFromEOLMode(int eolMode)const char =:-) 
StringFromInteger(long i)gui_string StringFromInteger =:-) 
StringFromLines(const std::vector<int> &lines)std::string StringFromLines =:-) 
StringFromLongLong(long long i)gui_string StringFromLongLong =:-) 
StringFromSelectedText(const SelectionText &selectedText)static QString StringFromSelectedText =:-) 
StringFromUTF8(const char *s)gui_string StringFromUTF8 =:-) 
StringFromUTF8(const std::string &s)gui_string StringFromUTF8 =:-) 
StringFromUTF8(const char *s)gui_string StringFromUTF8 =:-) 
StringFromUTF8(const std::string &s)gui_string StringFromUTF8 =:-) 
StringList(bool onlyLineEnds_ = false)	explicit StringList =:-) 
StringMapCase(const std::wstring &ws, DWORD mapFlags)static std::wstring StringMapCase =:-) 
StringResult(sptr_t lParam, const char *val)sptr_t Editor::StringResult =:-) 
StringSplit(const T &text, int separator)std::vector =:-) 
Strip()	Strip =:-) 
Strip()	Strip =:-) 
StripDefinition(GUI::gui_string definition)	explicit StripDefinition =:-) 
StripHasFocus()bool SciTEGTK::StripHasFocus =:-) 
StripTrailingSpaces()void SciTEBase::StripTrailingSpaces =:-) 
Style(Sci::Line line)int LineAnnotation::Style =:-) 
Style()Style::Style =:-) 
Style(const Style &source)Style::Style =:-) 
StyleAndColour()	StyleAndColour =:-) 
StyleAndColour(0, 0, 0))	StyleAndColour =:-) 
StyleAndWords()	StyleAndWords =:-) 
StyleAreaBounded(PRectangle rcArea, bool scrolling)void Editor::StyleAreaBounded =:-) 
StyleAt(Sci::Position position, bool ensureStyle = false)	int StyleAt =:-) 
StyleAt(Sci_Position position)	char StyleAt =:-) 
StyleAt(Sci_Position position)	char SCI_METHOD StyleAt =:-) 
StyleAt(size_t i)	size_t StyleAt =:-) 
StyleAt(lua_State *L)	static int StyleAt =:-) 
StyleAt(int position)int TextReader::StyleAt =:-) 
StyleContext(Sci_PositionU startPos, Sci_PositionU length, int initStyle, LexAccessor &styler_, char chMask=Ã)	StyleContext =:-) 
StyleDefinition(const char *definition)StyleDefinition::StyleDefinition =:-) 
StyleDefinitionFor(int style)StyleDefinition SciTEBase::StyleDefinitionFor =:-) 
StyleFromSubStyle(int subStyle)int LexState::StyleFromSubStyle =:-) 
StyleGetMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t Editor::StyleGetMessage =:-) 
StyleIdle(gpointer pSci)gboolean ScintillaGTK::StyleIdle =:-) 
StyleIndexAt(Sci_Position position)	int StyleIndexAt =:-) 
StyleSet(GtkWidget *w, GtkStyle*, void*)static void StyleSet =:-) 
StyleSetMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam)void Editor::StyleSetMessage =:-) 
StyleSetText(GtkWidget *widget, GtkStyle *, void*)void ScintillaGTK::StyleSetText =:-) 
StyleString(const char *lang, int style)std::string SciTEBase::StyleString =:-) 
StyleToAdjustingLineDuration(Sci::Position pos)void Document::StyleToAdjustingLineDuration =:-) 
StyleToPositionInView(Sci::Position pos)void Editor::StyleToPositionInView =:-) 
StyleWriter(GUI::ScintillaWindow &sw_)StyleWriter::StyleWriter =:-) 
StyledText(size_t length_, const char *text_, bool multipleStyles_, int style_, const unsigned char *styles_)	StyledText =:-) 
Styles(Sci::Line line)const unsigned char =:-) 
SubLineRange(int subLine)Range LineLayout::SubLineRange =:-) 
SubStyles(const char *baseStyles_, int styleFirst_, int stylesAvailable_, int secondaryDistance_)	SubStyles =:-) 
SubStylesLength(int styleBase)int LexState::SubStylesLength =:-) 
SubStylesStart(int styleBase)int LexState::SubStylesStart =:-) 
Substitute(std::string &s, const std::string &sFind, const std::string &sReplace)int Substitute =:-) 
Substitute(std::wstring &s, const std::wstring &sFind, const std::wstring &sReplace)int Substitute =:-) 
SubstituteByPosition(Document *doc, const char *text, Sci::Position *length)const char =:-) 
SubstituteByPosition(const char *text, Sci::Position *length)const char =:-) 
SubstituteMarkerIfEmpty(int markerCheck, int markerDefault, const ViewStyle &vs)static int SubstituteMarkerIfEmpty =:-) 
SubsystemFromChar(char c)JobSubsystem SubsystemFromChar =:-) 
SubsystemType(const char *cmd)JobSubsystem SciTEBase::SubsystemType =:-) 
Succeeded()	bool Succeeded =:-) 
Surface()	Surface =:-) 
Surface(const Surface &)	Surface =:-) 
SurfaceD2D()SurfaceD2D::SurfaceD2D =:-) 
SurfaceGDI()SurfaceGDI::SurfaceGDI =:-) 
SurfaceImpl()SurfaceImpl::SurfaceImpl =:-) 
SurfaceImpl()SurfaceImpl::SurfaceImpl =:-) 
Swap()void SelectionRange::Swap =:-) 
Swap(int indexA, int indexB)void BufferList::Swap =:-) 
SwitchDocumentAt(int index, sptr_t pdoc)void SciTEBase::SwitchDocumentAt =:-) 
TArray()	TArray =:-) 
TList()	TList =:-) 
TMap()	TMap =:-) 
TWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL SciTEWin::TWndProc =:-) 
Tab(bool forwards)void Strip::Tab =:-) 
TabAtPoint(HWND hWnd, GUI::Point pt)int TabAtPoint =:-) 
TabBarRelease(GtkNotebook *notebook, GdkEventButton *event)gint SciTEGTK::TabBarRelease =:-) 
TabBarReleaseSignal(GtkNotebook *notebook, GdkEventButton *event, SciTEGTK *scitew)	static gint TabBarReleaseSignal =:-) 
TabBarScroll(GdkEventScroll *event)gint SciTEGTK::TabBarScroll =:-) 
TabBarScrollSignal(GtkNotebook *, GdkEventScroll *event, SciTEGTK *scitew)	static gint TabBarScrollSignal =:-) 
TabInsert(int index, const GUI::gui_char *title)void SciTEGTK::TabInsert =:-) 
TabInsert(int index, const GUI::gui_char *title)void SciTEWin::TabInsert =:-) 
TabSelect(int index)void SciTEGTK::TabSelect =:-) 
TabSelect(int index)void SciTEWin::TabSelect =:-) 
TabSizeCmd()void SciTEGTK::TabSizeCmd =:-) 
TabSizeConvertCmd()void SciTEGTK::TabSizeConvertCmd =:-) 
TabSizeDialog()void SciTEGTK::TabSizeDialog =:-) 
TabSizeDialog()void SciTEWin::TabSizeDialog =:-) 
TabSizeDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::TabSizeDlg =:-) 
TabSizeMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::TabSizeMessage =:-) 
TabSizeResponse(int responseID)void SciTEGTK::TabSizeResponse =:-) 
TabSizeSet(int &tabSize, bool &useTabs)void SciTEGTK::TabSizeSet =:-) 
TabWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)static LRESULT PASCAL TabWndProc =:-) 
TargetAsUTF8(char *text)int ScintillaGTK::TargetAsUTF8 =:-) 
TargetAsUTF8(char *text)Sci::Position ScintillaWin::TargetAsUTF8 =:-) 
Tentative()	bool Tentative =:-) 
TentativeActive()	bool TentativeActive =:-) 
TentativeCommit()	void TentativeCommit =:-) 
TentativeSelection(SelectionRange range)void Selection::TentativeSelection =:-) 
TentativeStart()	void TentativeStart =:-) 
TentativeUndo()void Document::TentativeUndo =:-) 
Text(Sci::Line line)const char =:-) 
Text()const GUI::gui_char =:-) 
Text(const char *s, bool retainIfNotFound)GUI::gui_string Localization::Text =:-) 
TextBackground(const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, ColourOptional background, int inSelection, bool inHotspot, int styleMain, Sci::Position i)static ColourDesired TextBackground =:-) 
TextOfWindow(HWND hWnd)GUI::gui_string TextOfWindow =:-) 
TextOffset()int ListBoxX::TextOffset =:-) 
TextRead(FileWorker *pFileWorker)void SciTEBase::TextRead =:-) 
TextReader(GUI::ScintillaWindow &sw_)TextReader::TextReader =:-) 
TextSegment(int start_=0, int length_=0, const Representation *representation_=0)	TextSegment =:-) 
TextWide(const char *s, int len, bool unicodeMode, int codePage=0)	TextWide =:-) 
TextWidth(int style, const char *text)int Editor::TextWidth =:-) 
TextWritten(FileWorker *pFileWorker)void SciTEBase::TextWritten =:-) 
ThinRectangularRange()void Editor::ThinRectangularRange =:-) 
ThreadLockMinder()	ThreadLockMinder =:-) 
Tick()void Editor::Tick =:-) 
TickFor(TickReason reason)void Editor::TickFor =:-) 
TimeCommands()	bool TimeCommands =:-) 
TimeOut(gpointer ptt)int ScintillaGTK::TimeOut =:-) 
TimeThunk()		TimeThunk =:-) 
Timer()Timer::Timer =:-) 
TimerEnd(int mask)void SciTEGTK::TimerEnd =:-) 
TimerEnd(int )void SciTEBase::TimerEnd =:-) 
TimerEnd(int mask)void SciTEWin::TimerEnd =:-) 
TimerStart(int mask)void SciTEGTK::TimerStart =:-) 
TimerStart(int )void SciTEBase::TimerStart =:-) 
TimerStart(int mask)void SciTEWin::TimerStart =:-) 
TimerTick(gpointer pSciTE)gboolean SciTEGTK::TimerTick =:-) 
Toggle()void WCheckDraw::Toggle =:-) 
ToggleButton()GtkToggleButton =:-) 
ToggleChanged(WCheckDraw *, void *user)void FindStrip::ToggleChanged =:-) 
ToggleChanged(WCheckDraw *, void *user)void ReplaceStrip::ToggleChanged =:-) 
ToggleFoldRecursive(int line, int level)void SciTEBase::ToggleFoldRecursive =:-) 
ToggleHanja()void ScintillaWin::ToggleHanja =:-) 
ToggleOpenFilesHere()void UniqueInstance::ToggleOpenFilesHere =:-) 
ToggleOutputVisible()void SciTEBase::ToggleOutputVisible =:-) 
Toggled(GtkWidget *, WCheckDraw *pcd)void WCheckDraw::Toggled =:-) 
Token(lua_State *L)	static int Token =:-) 
ToolIsImmediate(int item)bool SciTEBase::ToolIsImmediate =:-) 
ToolsMenu(int item)void SciTEBase::ToolsMenu =:-) 
TopLineOfMain()Sci::Line Editor::TopLineOfMain =:-) 
Trace(const char *s)void SciTEBase::Trace =:-) 
TrackMouse(GUI::Point pt)void Strip::TrackMouse =:-) 
TrackMouseEventSig(LPTRACKMOUSEEVENT)typedef BOOL =:-) 
TransformLineEnds(const char *s, size_t len, int eolModeWanted)std::string Document::TransformLineEnds =:-) 
TranslatePath(const char *path)std::string SciTEGTK::TranslatePath =:-) 
TranslatedLabel(const char *original)GtkWidget =:-) 
Trim(SelectionRange range)bool SelectionRange::Trim =:-) 
TrimAndSetSelection(Sci::Position currentPos_, Sci::Position anchor_)void Editor::TrimAndSetSelection =:-) 
TrimOtherSelections(size_t r, SelectionRange range)void Selection::TrimOtherSelections =:-) 
TrimSelection(SelectionRange range)void Selection::TrimSelection =:-) 
TypeOfGSD(GtkSelectionData *sd)static GdkAtom TypeOfGSD =:-) 
UIAvailable()void SciTEBase::UIAvailable =:-) 
UIClosed()void SciTEGTK::UIClosed =:-) 
UIClosed()void SciTEBase::UIClosed =:-) 
UIClosed()void SciTEWin::UIClosed =:-) 
UIHasFocus()void SciTEGTK::UIHasFocus =:-) 
UIHasFocus()void SciTEBase::UIHasFocus =:-) 
UIShouldBeFlat()bool UIShouldBeFlat =:-) 
UTF16CharLength(wchar_t uch)inline unsigned int UTF16CharLength =:-) 
UTF16FromUTF32Character(unsigned int val, wchar_t *tbuf)unsigned int UTF16FromUTF32Character =:-) 
UTF16FromUTF8(const char *s, size_t len, wchar_t *tbuf, size_t tlen)size_t UTF16FromUTF8 =:-) 
UTF16FromUTF8(const char *s, size_t len, gui_char *tbuf, size_t tlen)static size_t UTF16FromUTF8 =:-) 
UTF16Length(const char *s, size_t len)size_t UTF16Length =:-) 
UTF16Length(const char *s, size_t len)static size_t UTF16Length =:-) 
UTF32Character(const unsigned char *utf8)unsigned int UTF32Character =:-) 
UTF32FromUTF8(const char *s, size_t len, unsigned int *tbuf, size_t tlen)size_t UTF32FromUTF8 =:-) 
UTF8BytesOfLeadInitialise()void UTF8BytesOfLeadInitialise =:-) 
UTF8CharLength(unsigned char ch)unsigned int UTF8CharLength =:-) 
UTF8Classify(const unsigned char *us, int len)int UTF8Classify =:-) 
UTF8DrawBytes(const unsigned char *us, int len)int UTF8DrawBytes =:-) 
UTF8FromIconv(const Converter &conv, const char *s, int len)static std::string UTF8FromIconv =:-) 
UTF8FromLatin1(const char *s, int len)std::string UTF8FromLatin1 =:-) 
UTF8FromString(const gui_string &s)std::string UTF8FromString =:-) 
UTF8FromUTF16(const wchar_t *uptr, size_t tlen, char *putf, size_t len)void UTF8FromUTF16 =:-) 
UTF8FromUTF16(const wchar_t *uptr, size_t tlen, char *putf)static void UTF8FromUTF16 =:-) 
UTF8FromUTF32Character(int uch, char *putf)void UTF8FromUTF32Character =:-) 
UTF8IsAscii(int ch)inline bool UTF8IsAscii =:-) 
UTF8IsNEL(const unsigned char *us)inline bool UTF8IsNEL =:-) 
UTF8IsSeparator(const unsigned char *us)inline bool UTF8IsSeparator =:-) 
UTF8IsTrailByte(int ch)inline bool UTF8IsTrailByte =:-) 
UTF8Iterator(const Document *doc_ = 0, Sci::Position position_ = 0)	UTF8Iterator =:-) 
UTF8Iterator(const Document *doc_=0, Sci::Position position_=0)	UTF8Iterator =:-) 
UTF8Iterator(const UTF8Iterator &other)	UTF8Iterator =:-) 
UTF8Length(const wchar_t *uptr, size_t tlen)size_t UTF8Length =:-) 
UTF8Length(const wchar_t *uptr, size_t tlen)static unsigned int UTF8Length =:-) 
UnMap(GtkWidget *widget)void ScintillaGTK::UnMap =:-) 
UnMapThis()void ScintillaGTK::UnMapThis =:-) 
UnRealize(GtkWidget *widget)void ScintillaGTK::UnRealize =:-) 
UnRealizeThis(GtkWidget *widget)void ScintillaGTK::UnRealizeThis =:-) 
UnRefCursor(GdkCursor *cursor)static void UnRefCursor =:-) 
UnSlash(char *s)unsigned int UnSlash =:-) 
UnSlashAsNeeded(const std::string &s, bool escapes, bool regularExpression)static std::string UnSlashAsNeeded =:-) 
UnSlashLowOctal(char *s)static unsigned int UnSlashLowOctal =:-) 
UnSlashLowOctalString(const char *s)std::string UnSlashLowOctalString =:-) 
UnSlashString(const char *s)std::string UnSlashString =:-) 
UnclaimSelection(GdkEventSelection *selection_event)void ScintillaGTK::UnclaimSelection =:-) 
Undo()Sci::Position Document::Undo =:-) 
Undo()void Editor::Undo =:-) 
UndoGroup(Document *pdoc_, bool groupNeeded_=true)	UndoGroup =:-) 
UnicodeFromUTF8(const unsigned char *us)inline int UnicodeFromUTF8 =:-) 
UniqueInstance()UniqueInstance::UniqueInstance =:-) 
UniqueStringCopy(const char *text)inline UniqueString UniqueStringCopy =:-) 
Unlock()	HGLOBAL Unlock =:-) 
Unlock()	virtual void Unlock =:-) 
Unregister()bool ScintillaWin::Unregister =:-) 
Unset(const char *key, int lenKey)void PropSetFile::Unset =:-) 
UnsetProperty(const char *key)void SciTEBase::UnsetProperty =:-) 
UpdateBuffersCurrent()void SciTEBase::UpdateBuffersCurrent =:-) 
UpdateCursor()void ScintillaGTKAccessible::UpdateCursor =:-) 
UpdateOutputSize()bool SciTEGTK::UpdateOutputSize =:-) 
UpdateProgress(Worker *)void SciTEBase::UpdateProgress =:-) 
UpdateStatusBar(bool bUpdateSlowData)void SciTEGTK::UpdateStatusBar =:-) 
UpdateStatusBar(bool bUpdateSlowData)void SciTEBase::UpdateStatusBar =:-) 
UpdateSystemCaret()void Editor::UpdateSystemCaret =:-) 
UpdateSystemCaret()void ScintillaWin::UpdateSystemCaret =:-) 
UptrFromString(const char *cp)inline uptr_t UptrFromString =:-) 
UseContainerLexing()	bool UseContainerLexing =:-) 
UseStyleCallTip()	bool UseStyleCallTip =:-) 
UserControl(UCControlType controlType_, const GUI::gui_string &text_, int item_)	UserControl =:-) 
UserFilePath(const GUI::gui_char *name)FilePath SciTEBase::UserFilePath =:-) 
UserStrip()	UserStrip =:-) 
UserStrip()	UserStrip =:-) 
UserStripClosed()void SciTEGTK::UserStripClosed =:-) 
UserStripClosed()void SciTEWin::UserStripClosed =:-) 
UserStripSet(int control, const char *value)void SciTEGTK::UserStripSet =:-) 
UserStripSet(int control, const char *value)void SciTEWin::UserStripSet =:-) 
UserStripSetList(int control, const char *value)void SciTEGTK::UserStripSetList =:-) 
UserStripSetList(int control, const char *value)void SciTEWin::UserStripSetList =:-) 
UserStripShow(const char *description)void SciTEGTK::UserStripShow =:-) 
UserStripShow(const char *description)void SciTEWin::UserStripShow =:-) 
UserStripValue(int control)const char =:-) 
UserVirtualSpace()	bool UserVirtualSpace =:-) 
Utf16_Iter()Utf16_Iter::Utf16_Iter =:-) 
Utf8_16_Read()Utf8_16_Read::Utf8_16_Read =:-) 
Utf8_16_Write()Utf8_16_Write::Utf8_16_Write =:-) 
Utf8_Iter()Utf8_Iter::Utf8_Iter =:-) 
VCHomeDisplayPosition(Sci::Position position)Sci::Position Editor::VCHomeDisplayPosition =:-) 
VCHomePosition(Sci::Position position)Sci::Position Document::VCHomePosition =:-) 
VCHomeWrapPosition(Sci::Position position)Sci::Position Editor::VCHomeWrapPosition =:-) 
VFunction(void)typedef void VFunction =:-) 
VINDEXED(or `k')  VINDEXED =:-) 
Valid()	bool Valid =:-) 
ValidCodePage(int codePage)bool ScintillaGTK::ValidCodePage =:-) 
ValidCodePage(int codePage)bool ScintillaQt::ValidCodePage =:-) 
ValidCodePage(int )	virtual bool ValidCodePage =:-) 
ValidCodePage(int codePage)bool ScintillaWin::ValidCodePage =:-) 
ValidMargin(uptr_t wParam)bool Editor::ValidMargin =:-) 
ValidStyle(size_t styleIndex)bool ViewStyle::ValidStyle =:-) 
ValidStyledText(const ViewStyle &vs, size_t styleOffset, const StyledText &st)bool ValidStyledText =:-) 
Value()int WEntry::Value =:-) 
ValueAt(int position)	T ValueAt =:-) 
ValueAt(int indicator, int position)int DecorationList::ValueAt =:-) 
ValueAt(int position)int RunStyles::ValueAt =:-) 
ValueAt(int position)	const T =:-) 
ValueFor(const std::string &s)	int ValueFor =:-) 
ValueOfHex(const char ch)	static inline unsigned int ValueOfHex =:-) 
VarBuffer(size_t length)	explicit VarBuffer =:-) 
VarChain(const char *var_=NULL, const VarChain *link_=NULL)	VarChain =:-) 
VarChain(const char*var_=NULL, const VarChain *link_=NULL)	VarChain =:-) 
Version()int SCI_METHOD LexerBase::Version =:-) 
Version()	int SCI_METHOD Version =:-) 
VerticalCentreCaret()void Editor::VerticalCentreCaret =:-) 
View()	const std::vector =:-) 
ViewStyle()ViewStyle::ViewStyle =:-) 
ViewStyle(const ViewStyle &source)ViewStyle::ViewStyle =:-) 
ViewWhitespace(bool view)void SciTEBase::ViewWhitespace =:-) 
VirtualSpace()	Sci::Position VirtualSpace =:-) 
VirtualSpaceFor(Sci::Position pos)Sci::Position Selection::VirtualSpaceFor =:-) 
VisibleHasFocus()bool Strip::VisibleHasFocus =:-) 
WCheckDraw()WCheckDraw::WCheckDraw =:-) 
WTable(int rows_, int columns_)WTable::WTable =:-) 
WarnUser(int)void SciTEGTK::WarnUser =:-) 
WarnUser(int warnID)void SciTEWin::WarnUser =:-) 
WatcherHelper(ScintillaDocument *owner_)WatcherHelper::WatcherHelper =:-) 
WatcherWithUserData(DocWatcher *watcher_=0, void *userData_=0)		WatcherWithUserData =:-) 
WeakNotify(gpointer data, GObject *obj)	static void WeakNotify =:-) 
WeakNotifyThis(GObject *obj G_GNUC_UNUSED)	void WeakNotifyThis =:-) 
WhiteSpaceVisible(bool inIndent)bool ViewStyle::WhiteSpaceVisible =:-) 
WhitespaceBackgroundDrawn()bool ViewStyle::WhitespaceBackgroundDrawn =:-) 
WidestLineWidth(Surface *surface, const ViewStyle &vs, int styleOffset, const StyledText &st)int WidestLineWidth =:-) 
Widget(const GUI::Window &w)inline GtkWidget =:-) 
WidgetGetAccessibleImpl(GtkWidget *widget, AtkObject **cache, gpointer widget_parent_class G_GNUC_UNUSED)AtkObject =:-) 
WidgetHasFocus(UserControl *ctl)static bool WidgetHasFocus =:-) 
Width()	XYPOSITION Width =:-) 
Width()	int Width =:-) 
WidthChar(Font &font_, char ch)XYPOSITION SurfaceImpl::WidthChar =:-) 
WidthChar(Font &font, char ch)XYPOSITION SurfaceImpl::WidthChar =:-) 
WidthChar(Font &font_, char ch)XYPOSITION SurfaceD2D::WidthChar =:-) 
WidthChar(Font &font_, char ch)XYPOSITION SurfaceGDI::WidthChar =:-) 
WidthControl(GUI::Window &w)static int WidthControl =:-) 
WidthStyledText(Surface *surface, const ViewStyle &vs, int styleOffset, const char *text, const unsigned char *styles, size_t len)static int WidthStyledText =:-) 
WidthText(Font &font_, const char *s, int len)XYPOSITION SurfaceImpl::WidthText =:-) 
WidthText(Font &font, const char *s, int len)XYPOSITION SurfaceImpl::WidthText =:-) 
WidthText(Font &font_, const char *s, int len)XYPOSITION SurfaceD2D::WidthText =:-) 
WidthText(Font &font_, const char *s, int len)XYPOSITION SurfaceGDI::WidthText =:-) 
WidthText(HFONT hfont, const GUI::gui_char *text)static int WidthText =:-) 
Win32MapFontQuality(int extraFontFlag)static BYTE Win32MapFontQuality =:-) 
WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int)int PASCAL WinMain =:-) 
WinMutex()	WinMutex =:-) 
Window()	Window =:-) 
Window(const Window &source)	Window =:-) 
Window()	Window =:-) 
WindowCopyData(const char *s, size_t len)void UniqueInstance::WindowCopyData =:-) 
WindowFromWidget(GtkWidget *w)static GdkWindow =:-) 
WindowMessageBox(GUI::Window &w, const GUI::gui_string &msg, MessageBoxStyle style)SciTEBase::MessageBoxChoice SciTEGTK::WindowMessageBox =:-) 
WindowMessageBox(GUI::Window &w, const GUI::gui_string &msg, MessageBoxStyle style)SciTEBase::MessageBoxChoice SciTEWin::WindowMessageBox =:-) 
WindowSetFocus(GUI::ScintillaWindow &w)void WindowSetFocus =:-) 
Window_SendMessage(Window *w, UINT msg, WPARAM wParam=0, LPARAM lParam=0)static LRESULT Window_SendMessage =:-) 
WithExtends(unsigned int iMessage)unsigned int WithExtends =:-) 
WithoutUnderscore(const char *s)static std::string WithoutUnderscore =:-) 
WndPaint(uptr_t wParam)sptr_t ScintillaWin::WndPaint =:-) 
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaGTK::WndProc =:-) 
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaQt::WndProc =:-) 
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t Editor::WndProc =:-) 
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaBase::WndProc =:-) 
WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT ListBoxX::WndProc =:-) 
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::WndProc =:-) 
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT ContentWin::WndProc =:-) 
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT SciTEWin::WndProc =:-) 
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT BackgroundStrip::WndProc =:-) 
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT SearchStrip::WndProc =:-) 
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT Strip::WndProc =:-) 
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT UserStrip::WndProc =:-) 
WordAt(int n)const char =:-) 
WordCharacterClass(unsigned int ch)CharClassify::cc Document::WordCharacterClass =:-) 
WordClassifier(int baseStyle_)	explicit WordClassifier =:-) 
WordList(bool onlyLineEnds_)WordList::WordList =:-) 
WordListSet(int n, const char *wl)Sci_Position SCI_METHOD LexerBase::WordListSet =:-) 
WordListSet(int n, const char *wl)Sci_Position SCI_METHOD LexerNoExceptions::WordListSet =:-) 
WordPartLeft(Sci::Position pos)Sci::Position Document::WordPartLeft =:-) 
WordPartRight(Sci::Position pos)Sci::Position Document::WordPartRight =:-) 
WordSelection(Sci::Position pos)void Editor::WordSelection =:-) 
WorkNeeded()	WorkNeeded =:-) 
Worker()	Worker =:-) 
WorkerCommand(int cmd, Worker *pWorker)void SciTEBase::WorkerCommand =:-) 
WorkerCommand(int cmd, Worker *pWorker)void SciTEWin::WorkerCommand =:-) 
WorkerThread(void *ptr)static void =:-) 
WorkerThread(void *ptr)static void WorkerThread =:-) 
WrapColour()ColourDesired ViewStyle::WrapColour =:-) 
WrapCount(int line)int Editor::WrapCount =:-) 
WrapLines(WrapScope ws)bool Editor::WrapLines =:-) 
WrapOneLine(Surface *surface, Sci::Line lineToWrap)bool Editor::WrapOneLine =:-) 
WrapPending()	WrapPending =:-) 
Wrapped(Sci::Line line)	void Wrapped =:-) 
Wrapping()bool Editor::Wrapping =:-) 
XFromPosition(Sci::Position pos)int Editor::XFromPosition =:-) 
XFromPosition(SelectionPosition sp)int Editor::XFromPosition =:-) 
XPM(const char *const *linesForm)XPM::XPM =:-) 
XPM(const char *textForm)XPM::XPM =:-) 
XYMaximum(XYPOSITION a, XYPOSITION b)static XYPOSITION XYMaximum =:-) 
XYMinimum(XYPOSITION a, XYPOSITION b)static XYPOSITION XYMinimum =:-) 
XYScrollPosition(int xOffset_, Sci::Line topLine_)		XYScrollPosition =:-) 
XYScrollToMakeVisible(const SelectionRange &range, const XYScrollOptions options)Editor::XYScrollPosition Editor::XYScrollToMakeVisible =:-) 
absolute_index(lua_State *L, int index)inline int absolute_index =:-) 
access(const wchar_t *path, int mode)static int access =:-) 
begin_undo_action()void ScintillaDocument::begin_undo_action =:-) 
call_function(lua_State *L, int nargs, bool ignoreFunctionReturnValue=false)static bool call_function =:-) 
canConvert(const QString &mime, QString flav)	bool canConvert =:-) 
canGet()	bool canGet =:-) 
can_redo()bool ScintillaDocument::can_redo =:-) 
can_undo()bool ScintillaDocument::can_undo =:-) 
cf_global_dostring(lua_State *L)static int cf_global_dostring =:-) 
cf_global_metatable_index(lua_State *L)static int cf_global_metatable_index =:-) 
cf_global_print(lua_State *L)static int cf_global_print =:-) 
cf_global_trace(lua_State *L)static int cf_global_trace =:-) 
cf_ifaceprop_metatable_index(lua_State *L)static int cf_ifaceprop_metatable_index =:-) 
cf_ifaceprop_metatable_newindex(lua_State *L)static int cf_ifaceprop_metatable_newindex =:-) 
cf_match_metatable_index(lua_State *L)static int cf_match_metatable_index =:-) 
cf_match_metatable_tostring(lua_State *L)static int cf_match_metatable_tostring =:-) 
cf_match_replace(lua_State *L)static int cf_match_replace =:-) 
cf_pane_append(lua_State *L)static int cf_pane_append =:-) 
cf_pane_findtext(lua_State *L)static int cf_pane_findtext =:-) 
cf_pane_iface_function(lua_State *L)static int cf_pane_iface_function =:-) 
cf_pane_insert(lua_State *L)static int cf_pane_insert =:-) 
cf_pane_match(lua_State *L)static int cf_pane_match =:-) 
cf_pane_match_generator(lua_State *L)static int cf_pane_match_generator =:-) 
cf_pane_metatable_index(lua_State *L)static int cf_pane_metatable_index =:-) 
cf_pane_metatable_newindex(lua_State *L)static int cf_pane_metatable_newindex =:-) 
cf_pane_remove(lua_State *L)static int cf_pane_remove =:-) 
cf_pane_textrange(lua_State *L)static int cf_pane_textrange =:-) 
cf_props_metatable_index(lua_State *L)static int cf_props_metatable_index =:-) 
cf_props_metatable_newindex(lua_State *L)static int cf_props_metatable_newindex =:-) 
cf_scite_apply_properties(lua_State *L)static int cf_scite_apply_properties =:-) 
cf_scite_constname(lua_State *L)static int cf_scite_constname =:-) 
cf_scite_menu_command(lua_State *L)static int cf_scite_menu_command =:-) 
cf_scite_open(lua_State *L)static int cf_scite_open =:-) 
cf_scite_send(lua_State *L)static int cf_scite_send =:-) 
cf_scite_strip_set(lua_State *L)static int cf_scite_strip_set =:-) 
cf_scite_strip_set_list(lua_State *L)static int cf_scite_strip_set_list =:-) 
cf_scite_strip_show(lua_State *L)static int cf_scite_strip_show =:-) 
cf_scite_strip_value(lua_State *L)static int cf_scite_strip_value =:-) 
cf_scite_update_status_bar(lua_State *L)static int cf_scite_update_status_bar =:-) 
chdir(const wchar_t *dirname)static int chdir =:-) 
check_pane_object(lua_State *L, int index)static ExtensionAPI::Pane check_pane_object =:-) 
checkudata(lua_State *L, int ud, const char *tname)static void =:-) 
clear_table(lua_State *L, int tableIdx, bool clearMetatable = true)static void clear_table =:-) 
clone_table(lua_State *L, int srcTableIdx, bool copyMetatable = false)static bool clone_table =:-) 
cmpWords(const char *a, const char *b)static bool cmpWords =:-) 
cmpWords(const void *a, const void *b)static int cmpWords =:-) 
contains(const char *testVar)	bool contains =:-) 
contextMenuEvent(QContextMenuEvent *event)void ScintillaEditBase::contextMenuEvent =:-) 
convert(char* buf, size_t len)size_t Utf8_16_Read::convert =:-) 
convertFromMime(const QString & , QVariant data, QString )	QList =:-) 
convertToMime(const QString & , QList<QByteArray> data, QString )	QVariant convertToMime =:-) 
convertorName()	QString convertorName =:-) 
copy_(void *src)static void =:-) 
decoration_fill_range(int position, int value, int fillLength)void ScintillaDocument::decoration_fill_range =:-) 
decorations_end(int indic, int position)int ScintillaDocument::decorations_end =:-) 
decorations_start(int indic, int position)int ScintillaDocument::decorations_start =:-) 
decorations_value_at(int indic, int position)int ScintillaDocument::decorations_value_at =:-) 
defineTexStyle(const StyleDefinition &style, FILE* fp, int istyle)static void defineTexStyle =:-) 
delayAlreadyElapsed(or have to be)		delayAlreadyElapsed =:-) 
delayJustEnded(SCN_UPDATEUI and SC_UPDATE_CONTENT for setting indicators)		delayJustEnded =:-) 
delete_chars(int pos, int len)bool ScintillaDocument::delete_chars =:-) 
delete_undo_history()void ScintillaDocument::delete_undo_history =:-) 
destroyDialog(GtkWidget *, gpointer *window)static void destroyDialog =:-) 
determineEncoding()int Utf8_16_Read::determineEncoding =:-) 
doubleFromPangoUnits(int pu)static double doubleFromPangoUnits =:-) 
dragEnterEvent(QDragEnterEvent *event)void ScintillaEditBase::dragEnterEvent =:-) 
dragLeaveEvent(QDragLeaveEvent * )void ScintillaEditBase::dragLeaveEvent =:-) 
dragMoveEvent(QDragMoveEvent *event)void ScintillaEditBase::dragMoveEvent =:-) 
draw( float x, float y )    void draw =:-) 
dropEvent(QDropEvent *event)void ScintillaEditBase::dropEvent =:-) 
dwordFromBGRA(byte b, byte g, byte r, byte a)static DWORD dwordFromBGRA =:-) 
emit_error_occurred(int status)void ScintillaDocument::emit_error_occurred =:-) 
emit_lexer_changed()void ScintillaDocument::emit_lexer_changed =:-) 
emit_modified(int position, int modification_type, const QByteArray& text, int length, int linesAdded, int line, int foldLevelNow, int foldLevelPrev)void ScintillaDocument::emit_modified =:-) 
emit_modify_attempt()void ScintillaDocument::emit_modify_attempt =:-) 
emit_save_point(bool atSavePoint)void ScintillaDocument::emit_save_point =:-) 
emit_style_needed(int pos)void ScintillaDocument::emit_style_needed =:-) 
end()	int end =:-) 
end_undo_action()void ScintillaDocument::end_undo_action =:-) 
ensure_styled_to(int position)void ScintillaDocument::ensure_styled_to =:-) 
escapeValue(unsigned char ch)static unsigned char escapeValue =:-) 
event(QEvent *event)bool ScintillaEditBase::event =:-) 
event_command(uptr_t wParam, sptr_t lParam)void ScintillaEditBase::event_command =:-) 
execCommand(QAction *action)void ScintillaQt::execCommand =:-) 
fclose()int Utf8_16_Write::fclose =:-) 
flavorFor(const QString &mime)	QString flavorFor =:-) 
focusInEvent(QFocusEvent *event)void ScintillaEditBase::focusInEvent =:-) 
focusOutEvent(QFocusEvent *event)void ScintillaEditBase::focusOutEvent =:-) 
fopen(const wchar_t *filename, const wchar_t *mode)static FILE =:-) 
free_(void *)static void free_ =:-) 
fwrite(const void* p, size_t _size)size_t Utf8_16_Write::fwrite =:-) 
get()	int get =:-) 
get()	utf8 get =:-) 
getAscent()	float getAscent =:-) 
getCTLine()    CTLineRef getCTLine =:-) 
getCTStyle()	CFMutableDictionaryRef getCTStyle =:-) 
getCharacterSet()	int getCharacterSet =:-) 
getDescent()	float getDescent =:-) 
getEncoding()	encodingType getEncoding =:-) 
getFontID()	CTFontRef getFontID =:-) 
getFontRef()	CTFontRef getFontRef =:-) 
getLeading()	float getLeading =:-) 
getNewBuf()	char =:-) 
getPDFRGB(const char* stylecolour)inline std::string getPDFRGB =:-) 
getRange(Sci_PositionU start, Sci_PositionU end, LexAccessor &styler, char *s, Sci_PositionU len)static void getRange =:-) 
getRangeLowered(Sci_PositionU start, Sci_PositionU end, LexAccessor &styler, char *s, Sci_PositionU len)static void getRangeLowered =:-) 
getStringLength()    CFIndex getStringLength =:-) 
getTexRGB(char* texcolor, const char* stylecolor)static char =:-) 
get_char_range(int position, int length)QByteArray ScintillaDocument::get_char_range =:-) 
get_character(int pos)int ScintillaDocument::get_character =:-) 
get_code_page()int ScintillaDocument::get_code_page =:-) 
get_end_styled()int ScintillaDocument::get_end_styled =:-) 
get_eol_mode()int ScintillaDocument::get_eol_mode =:-) 
getcwd(wchar_t *buffer, int maxlen)static wchar_t =:-) 
iface_function_helper(lua_State *L, const IFaceFunction &func)static int iface_function_helper =:-) 
includes(const StyleAndWords &symbols, const std::string &value)static bool includes =:-) 
init(::AtkEditableTextIface *iface)void ScintillaGTKAccessible::AtkEditableTextIface::init =:-) 
init(::AtkTextIface *iface)void ScintillaGTKAccessible::AtkTextIface::init =:-) 
init_pixmap(ListImage *list_image)static void init_pixmap =:-) 
inputMethodEvent(QInputMethodEvent *event)void ScintillaEditBase::inputMethodEvent =:-) 
inputMethodQuery(Qt::InputMethodQuery query)QVariant ScintillaEditBase::inputMethodQuery =:-) 
insert_string(int position, QByteArray &str)void ScintillaDocument::insert_string =:-) 
isEncodingChar(char ch)static bool isEncodingChar =:-) 
isSpaceChar(char ch)static bool isSpaceChar =:-) 
is_collecting_undo()bool ScintillaDocument::is_collecting_undo =:-) 
is_cr_lf(int pos)bool ScintillaDocument::is_cr_lf =:-) 
is_read_only()bool ScintillaDocument::is_read_only =:-) 
is_save_point()bool ScintillaDocument::is_save_point =:-) 
isdigitchar(int ch)inline bool isdigitchar =:-) 
isfilenamecharforsel(char ch)bool SciTEBase::isfilenamecharforsel =:-) 
islexerwordcharforsel(char ch)bool SciTEBase::islexerwordcharforsel =:-) 
isoperator(int ch)inline bool isoperator =:-) 
isprefix(const char *target, const char *prefix)bool isprefix =:-) 
isspacechar(int ch)inline bool isspacechar =:-) 
isspacechar(unsigned char ch)inline bool isspacechar =:-) 
istrlen(const char *s)static int istrlen =:-) 
iswordc(unsigned char x)	bool iswordc =:-) 
iswordchar(int ch)inline bool iswordchar =:-) 
iswordcharforsel(char ch)bool SciTEBase::iswordcharforsel =:-) 
iswordstart(int ch)inline bool iswordstart =:-) 
keyPressEvent(QKeyEvent *event)void ScintillaEditBase::keyPressEvent =:-) 
length()int ScintillaDocument::length =:-) 
line_end(int lineno)int ScintillaDocument::line_end =:-) 
line_end_position(int pos)int ScintillaDocument::line_end_position =:-) 
line_from_position(int pos)int ScintillaDocument::line_from_position =:-) 
line_start(int lineno)int ScintillaDocument::line_start =:-) 
lines_total()int ScintillaDocument::lines_total =:-) 
list_image_free(gpointer, gpointer value, gpointer)static void list_image_free =:-) 
lua_Alloc(void *ud, void *ptr, size_t osize, size_t nsize)typedef void =:-) 
lua_CFunction(lua_State *L)typedef int =:-) 
lua_Hook(lua_State *L, lua_Debug *ar)typedef void =:-) 
lua_Reader(lua_State *L, void *ud, size_t *sz)typedef const char =:-) 
lua_Writer(lua_State *L, const void* p, size_t sz, void* ud)typedef int =:-) 
main(int argc, char *argv[])int main =:-) 
merge_table(lua_State *L, int destTableIdx, int srcTableIdx, bool copyMetatable = false)static int merge_table =:-) 
messageBoxDestroy(GtkWidget *, gpointer *)static void messageBoxDestroy =:-) 
messageBoxKey(GtkWidget *w, GdkEventKey *event, gpointer p)static gint messageBoxKey =:-) 
messageBoxOK(GtkWidget *, gpointer p)static void messageBoxOK =:-) 
mimeFor(QString flav)	QString mimeFor =:-) 
modifierTranslated(int sciModifier)static int modifierTranslated =:-) 
mouseDoubleClickEvent(QMouseEvent * )void ListWidget::mouseDoubleClickEvent =:-) 
mouseDoubleClickEvent(QMouseEvent *event)void ScintillaEditBase::mouseDoubleClickEvent =:-) 
mouseMoveEvent(QMouseEvent *event)void ScintillaEditBase::mouseMoveEvent =:-) 
mousePressEvent(QMouseEvent *event)void ScintillaEditBase::mousePressEvent =:-) 
mouseReleaseEvent(QMouseEvent *event)void ScintillaEditBase::mouseReleaseEvent =:-) 
move_position_outside_char(int pos, int move_dir, bool check_line_end)int ScintillaDocument::move_position_outside_char =:-) 
not_empty(const char *s)static bool not_empty =:-) 
notifyParent(SCNotification scn)void ScintillaEditBase::notifyParent =:-) 
onIdle()void ScintillaQt::onIdle =:-) 
operator(const WordList &other)bool WordList::operator =:-) 
operator(const ByteIterator &other)	bool operator =:-) 
operator(const UTF8Iterator &other)	bool operator =:-) 
operator(int a, int b)	bool operator =:-) 
operator(const char *a, const char *b)	bool operator =:-) 
operator()	char operator =:-) 
operator()	wchar_t operator =:-) 
operator()	ByteIterator =:-) 
operator(int)	ByteIterator operator =:-) 
operator()	UTF8Iterator =:-) 
operator(int)	UTF8Iterator operator =:-) 
operator()void Utf16_Iter::operator =:-) 
operator()void Utf8_Iter::operator =:-) 
operator()	ByteIterator =:-) 
operator()	UTF8Iterator =:-) 
operator()	LineLayout =:-) 
operator()	Surface =:-) 
operator(const State &other)		inline bool operator =:-) 
operator(const CharacterConversion &other)		bool operator =:-) 
operator(const KeyModifiers &other)	bool operator =:-) 
operator(const SelectionPosition &other)bool SelectionPosition::operator =:-) 
operator(const SelectionRange &other)	bool operator =:-) 
operator(const FontSpecification &other)bool FontSpecification::operator =:-) 
operator(const FilePath &other)bool FilePath::operator =:-) 
operator(const SelectionPosition &other)bool SelectionPosition::operator =:-) 
operator(const Platform &)	Platform =:-) 
operator(const Surface &)	Surface =:-) 
operator(WindowID wid_)	Window =:-) 
operator(const Window &other)	Window =:-) 
operator(const ByteIterator &other)	ByteIterator =:-) 
operator(const UTF8Iterator &other)	UTF8Iterator =:-) 
operator(const LineMarker &other)	LineMarker =:-) 
operator(const Style &source)Style =:-) 
operator(WindowID wid_)	Window =:-) 
operator(const PropSetFile &assign)PropSetFile =:-) 
operator(const ColourDesired &other)	bool operator =:-) 
operator(const PRectangle &rc)	bool operator =:-) 
operator(const State &other)		inline bool operator =:-) 
operator(const ByteIterator &other)	bool operator =:-) 
operator(const UTF8Iterator &other)	bool operator =:-) 
operator(const WatcherWithUserData &other)		bool operator =:-) 
operator(const Range &other)	bool operator =:-) 
operator(const XYScrollPosition &other)		bool operator =:-) 
operator(const StyleAndColour &other)	bool operator =:-) 
operator(const SelectionPosition &other)	bool operator =:-) 
operator(const SelectionRange &other)	bool operator =:-) 
operator(const FontSpecification &other)bool FontSpecification::operator =:-) 
operator(const FilePath &other)bool FilePath::operator =:-) 
operator(const Rectangle &other)	bool operator =:-) 
operator(const SelectionPosition &other)bool SelectionPosition::operator =:-) 
operator()WBase::operator GtkWidget =:-) 
operator()	operator LineLayout =:-) 
operator()	operator Surface =:-) 
operator(Sci_Position position)	char operator =:-) 
operator(int position)	T =:-) 
operator(int position)	const T =:-) 
operator(int nIndex)	TYPE operator =:-) 
operator(int nIndex)	TYPE =:-) 
operator(ARG_KEY key)	VALUE =:-) 
operator(size_t ind)	char =:-) 
operator(int position)	char operator =:-) 
operator()	operator bool =:-) 
operator()WordList::operator bool =:-) 
operator()	operator bool =:-) 
paintEvent(QPaintEvent *event)void ScintillaEditBase::paintEvent =:-) 
pangoUnitsFromDouble(double d)static int pangoUnitsFromDouble =:-) 
pixmap_new(gchar **xpm)static GtkWidget =:-) 
pointer()void =:-) 
push_iface_function(lua_State *L, const char *name)static int push_iface_function =:-) 
push_iface_propval(lua_State *L, const char *name)static int push_iface_propval =:-) 
push_pane_object(lua_State *L, ExtensionAPI::Pane p)void push_pane_object =:-) 
raise_error(lua_State *L, const char *errMsg=NULL)inline void raise_error =:-) 
read(const ubyte* pRead)Utf8_16::utf16 Utf16_Iter::read =:-) 
redo()int ScintillaDocument::redo =:-) 
reset()void Utf16_Iter::reset =:-) 
reset()void Utf8_Iter::reset =:-) 
resizeEvent(QResizeEvent *)void ScintillaEditBase::resizeEvent =:-) 
scintilla_class_init(ScintillaClass *klass)static void scintilla_class_init =:-) 
scintilla_get_type()GType scintilla_get_type =:-) 
scintilla_init(ScintillaObject *sci)static void scintilla_init =:-) 
scintilla_new()GtkWidget =:-) 
scintilla_object_accessible_class_init(ScintillaObjectAccessibleClass *klass)static void scintilla_object_accessible_class_init =:-) 
scintilla_object_accessible_factory_class_init(AtkObjectFactoryClass * klass)static void scintilla_object_accessible_factory_class_init =:-) 
scintilla_object_accessible_factory_create_accessible(GObject *obj)static AtkObject =:-) 
scintilla_object_accessible_factory_get_accessible_type(void)static GType scintilla_object_accessible_factory_get_accessible_type =:-) 
scintilla_object_accessible_factory_init(ScintillaObjectAccessibleFactory *)static void scintilla_object_accessible_factory_init =:-) 
scintilla_object_accessible_finalize(GObject *object)static void scintilla_object_accessible_finalize =:-) 
scintilla_object_accessible_get_type(GType parent_type G_GNUC_UNUSED)static GType scintilla_object_accessible_get_type =:-) 
scintilla_object_accessible_init(ScintillaObjectAccessible *accessible)static void scintilla_object_accessible_init =:-) 
scintilla_object_accessible_initialize(AtkObject *obj, gpointer data)static void scintilla_object_accessible_initialize =:-) 
scintilla_object_accessible_new(GType parent_type, GObject *obj)static AtkObject =:-) 
scintilla_object_accessible_ref_state_set(AtkObject *accessible)static AtkStateSet =:-) 
scintilla_object_accessible_widget_set(GtkAccessible *accessible)static void scintilla_object_accessible_widget_set =:-) 
scintilla_object_accessible_widget_unset(GtkAccessible *accessible)static void scintilla_object_accessible_widget_unset =:-) 
scintilla_object_get_type()GType scintilla_object_get_type =:-) 
scintilla_object_new()GtkWidget =:-) 
scintilla_object_send_message(ScintillaObject *sci, unsigned int iMessage, uptr_t wParam, sptr_t lParam)gintptr scintilla_object_send_message =:-) 
scintilla_release_resources(void)void scintilla_release_resources =:-) 
scintilla_send_message(ScintillaObject *sci, unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t scintilla_send_message =:-) 
scintilla_set_id(ScintillaObject *sci, uptr_t id)void scintilla_set_id =:-) 
scite_lua_fopen(const char *filename, const char *mode)FILE =:-) 
scite_lua_popen(const char *filename, const char *mode)FILE =:-) 
scnotification_get_type(void)GType scnotification_get_type =:-) 
scrollHorizontal(int value)void ScintillaEditBase::scrollHorizontal =:-) 
scrollVertical(int value)void ScintillaEditBase::scrollVertical =:-) 
send( unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaEditBase::send =:-) 
sends( unsigned int iMessage, uptr_t wParam, const char *s)sptr_t ScintillaEditBase::sends =:-) 
set(const ubyte* pBuf, size_t nLen, encodingType eEncoding, ubyte *endSurrogate)void Utf16_Iter::set =:-) 
set(const ubyte* pBuf, size_t nLen, encodingType eEncoding)void Utf8_Iter::set =:-) 
setCTStyleColor(CGColor *inColor)	void setCTStyleColor =:-) 
setContext(CGContextRef context)    inline void setContext =:-) 
setDoubleClickAction(CallBackAction action, void *data)void ListWidget::setDoubleClickAction =:-) 
setEncoding(Utf8_16::encodingType eType)void Utf8_16_Write::setEncoding =:-) 
setFontRef(CTFontRef inRef, int characterSet_)	void setFontRef =:-) 
setText( const UInt8* buffer, size_t byteLength, CFStringEncoding encoding, const QuartzTextStyle& r )    inline void setText =:-) 
set_code_page(int code_page)void ScintillaDocument::set_code_page =:-) 
set_current_indicator(int indic)void ScintillaDocument::set_current_indicator =:-) 
set_eol_mode(int eol_mode)void ScintillaDocument::set_eol_mode =:-) 
set_read_only(bool read_only)void ScintillaDocument::set_read_only =:-) 
set_save_point()void ScintillaDocument::set_save_point =:-) 
set_style_for(int length, char style)bool ScintillaDocument::set_style_for =:-) 
set_undo_collection(bool collect_undo)bool ScintillaDocument::set_undo_collection =:-) 
setfile(FILE *pFile)void Utf8_16_Write::setfile =:-) 
size()	size_t size =:-) 
size()	int size =:-) 
small_scroller_class_init(SmallScrollerClass *klass)static void small_scroller_class_init =:-) 
small_scroller_get_preferred_height(GtkWidget *widget, gint *min, gint *nat)static void small_scroller_get_preferred_height =:-) 
small_scroller_init(SmallScroller *)static void small_scroller_init =:-) 
start_styling(int position, char flags)void ScintillaDocument::start_styling =:-) 
startswith(const std::string &s, const char *keybase)static bool startswith =:-) 
stat(const wchar_t *path, struct _stat *buffer)static int stat =:-) 
stat(const wchar_t *path, struct _stat64i32 *buffer)static int stat =:-) 
strchr(wchar_t *str, wchar_t c)static wchar_t =:-) 
strcmp(const wchar_t *a, const wchar_t *b)static int strcmp =:-) 
strcpy(wchar_t *strDestination, const wchar_t *strSource)static wchar_t =:-) 
strlen(const wchar_t *str)static size_t strlen =:-) 
strrchr(wchar_t *str, wchar_t c)static wchar_t =:-) 
style_at(int position)char ScintillaDocument::style_at =:-) 
swapped(int v)static int swapped =:-) 
texStyle(int style)static char =:-) 
timerEvent(QTimerEvent *event)void ScintillaQt::timerEvent =:-) 
toStart()void Utf8_Iter::toStart =:-) 
treeViewGetRowHeight(GtkTreeView *view)static int treeViewGetRowHeight =:-) 
undo()int ScintillaDocument::undo =:-) 
unlink(const wchar_t *filename)static int unlink =:-) 
unquote(char *s)static void unquote =:-) 
utf8LengthFromLead(unsigned char uch)static size_t utf8LengthFromLead =:-) 
viewOptions()QStyleOptionViewItem ListWidget::viewOptions =:-) 
wheelEvent(QWheelEvent *event)void ScintillaEditBase::wheelEvent =:-) 
window(WindowID wid)QWidget =:-) 
~AutoComplete()AutoComplete::~AutoComplete =:-) 
~AutoLineLayout()	~AutoLineLayout =:-) 
~AutoSurface()	~AutoSurface =:-) 
~BreakFinder()BreakFinder::~BreakFinder =:-) 
~BufferList()BufferList::~BufferList =:-) 
~BufferedFile()	~BufferedFile =:-) 
~CallTip()CallTip::~CallTip =:-) 
~CaseFolder()CaseFolder::~CaseFolder =:-) 
~CaseFolderTable()CaseFolderTable::~CaseFolderTable =:-) 
~CaseMapper()	~CaseMapper =:-) 
~CharacterIndexer()	virtual ~CharacterIndexer =:-) 
~ClusterIterator()	~ClusterIterator =:-) 
~ContractionState()ContractionState::~ContractionState =:-) 
~Converter()	~Converter =:-) 
~Decoration()Decoration::~Decoration =:-) 
~DecorationList()DecorationList::~DecorationList =:-) 
~DocWatcher()	virtual ~DocWatcher =:-) 
~Document()Document::~Document =:-) 
~DynamicLibrary()	virtual ~DynamicLibrary =:-) 
~DynamicLibraryImpl()	virtual ~DynamicLibraryImpl =:-) 
~EditModel()EditModel::~EditModel =:-) 
~EditView()EditView::~EditView =:-) 
~Editor()Editor::~Editor =:-) 
~Extension()	virtual ~Extension =:-) 
~ExtensionAPI()	virtual ~ExtensionAPI =:-) 
~FileLoader()FileLoader::~FileLoader =:-) 
~FileReader()	~FileReader =:-) 
~FileStorer()FileStorer::~FileStorer =:-) 
~FileWorker()FileWorker::~FileWorker =:-) 
~Font()Font::~Font =:-) 
~FontAlias()FontAlias::~FontAlias =:-) 
~FontAndCharacterSet()	~FontAndCharacterSet =:-) 
~FontHandle()	~FontHandle =:-) 
~FontNames()FontNames::~FontNames =:-) 
~FontRealised()FontRealised::~FontRealised =:-) 
~FormatAndMetrics()	~FormatAndMetrics =:-) 
~GObjectWatcher()	virtual ~GObjectWatcher =:-) 
~GlobalMemory()	~GlobalMemory =:-) 
~HanjaDic()	~HanjaDic =:-) 
~IMContext()	~IMContext =:-) 
~JobQueue()	~JobQueue =:-) 
~KeyMap()KeyMap::~KeyMap =:-) 
~LMMinder()LMMinder::~LMMinder =:-) 
~LexInterface()	virtual ~LexInterface =:-) 
~LexState()LexState::~LexState =:-) 
~LexerBase()LexerBase::~LexerBase =:-) 
~LexerLibrary()LexerLibrary::~LexerLibrary =:-) 
~LexerManager()LexerManager::~LexerManager =:-) 
~LexerModule()	virtual ~LexerModule =:-) 
~LineAnnotation()LineAnnotation::~LineAnnotation =:-) 
~LineLayout()LineLayout::~LineLayout =:-) 
~LineLayoutCache()LineLayoutCache::~LineLayoutCache =:-) 
~LineLevels()LineLevels::~LineLevels =:-) 
~LineMarker()	~LineMarker =:-) 
~LineMarkers()LineMarkers::~LineMarkers =:-) 
~LineState()LineState::~LineState =:-) 
~LineTabstops()LineTabstops::~LineTabstops =:-) 
~LineToItem()	~LineToItem =:-) 
~LineVector()LineVector::~LineVector =:-) 
~ListBox()ListBox::~ListBox =:-) 
~ListBoxImpl()ListBoxImpl::~ListBoxImpl =:-) 
~ListWidget()ListWidget::~ListWidget =:-) 
~Lock()	~Lock =:-) 
~LuaExtension()LuaExtension::~LuaExtension =:-) 
~MarkerHandleSet()MarkerHandleSet::~MarkerHandleSet =:-) 
~MatchMarker()MatchMarker::~MatchMarker =:-) 
~MultiplexExtension()MultiplexExtension::~MultiplexExtension =:-) 
~Mutex()	virtual ~Mutex =:-) 
~OptionSet()	virtual ~OptionSet =:-) 
~Partitioning()	~Partitioning =:-) 
~PerLine()	virtual ~PerLine =:-) 
~PipeEntry()	~PipeEntry =:-) 
~Platform()	~Platform =:-) 
~PositionCache()PositionCache::~PositionCache =:-) 
~PositionCacheEntry()PositionCacheEntry::~PositionCacheEntry =:-) 
~PreEditString()	~PreEditString =:-) 
~PropSetFile()PropSetFile::~PropSetFile =:-) 
~PropSetSimple()PropSetSimple::~PropSetSimple =:-) 
~QuartzTextLayout()    ~QuartzTextLayout =:-) 
~QuartzTextStyle()	~QuartzTextStyle =:-) 
~RESearch()RESearch::~RESearch =:-) 
~RGBAImage()RGBAImage::~RGBAImage =:-) 
~RGBAImageSet()RGBAImageSet::~RGBAImageSet =:-) 
~RegexSearchBase()	virtual ~RegexSearchBase =:-) 
~RunStyles()RunStyles::~RunStyles =:-) 
~SciTEBase()SciTEBase::~SciTEBase =:-) 
~SciTEGTK()SciTEGTK::~SciTEGTK =:-) 
~SciTEWin()SciTEWin::~SciTEWin =:-) 
~ScintillaBase()ScintillaBase::~ScintillaBase =:-) 
~ScintillaDocument()ScintillaDocument::~ScintillaDocument =:-) 
~ScintillaEditBase()ScintillaEditBase::~ScintillaEditBase =:-) 
~ScintillaGTK()ScintillaGTK::~ScintillaGTK =:-) 
~ScintillaGTKAccessible()ScintillaGTKAccessible::~ScintillaGTKAccessible =:-) 
~ScintillaQt()ScintillaQt::~ScintillaQt =:-) 
~ScintillaWin()ScintillaWin::~ScintillaWin =:-) 
~Selection()Selection::~Selection =:-) 
~SelectionText()	~SelectionText =:-) 
~SparseVector()	~SparseVector =:-) 
~SplitVector()	~SplitVector =:-) 
~SplitVectorWithRangeAdd()	~SplitVectorWithRangeAdd =:-) 
~StringList()	~StringList =:-) 
~Strip()	virtual ~Strip =:-) 
~Style()Style::~Style =:-) 
~Surface()	virtual ~Surface =:-) 
~SurfaceD2D()SurfaceD2D::~SurfaceD2D =:-) 
~SurfaceGDI()SurfaceGDI::~SurfaceGDI =:-) 
~SurfaceImpl()SurfaceImpl::~SurfaceImpl =:-) 
~TList()	~TList =:-) 
~TMap()	~TMap =:-) 
~ThreadLockMinder()	~ThreadLockMinder =:-) 
~UndoGroup()	~UndoGroup =:-) 
~UniqueInstance()UniqueInstance::~UniqueInstance =:-) 
~Utf8_16_Read()Utf8_16_Read::~Utf8_16_Read =:-) 
~Utf8_16_Write()Utf8_16_Write::~Utf8_16_Write =:-) 
~VarBuffer()	~VarBuffer =:-) 
~ViewStyle()ViewStyle::~ViewStyle =:-) 
~WCheckDraw()WCheckDraw::~WCheckDraw =:-) 
~WatcherHelper()WatcherHelper::~WatcherHelper =:-) 
~WinMutex()	virtual ~WinMutex =:-) 
~Window()Window::~Window =:-) 
~WordList()WordList::~WordList =:-) 
~Worker()	virtual ~Worker =:-) 
~XPM()XPM::~XPM =:-) 
