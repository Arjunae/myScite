!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/1a94658c/
ACCESSOR_H	..\\scintilla\\lexlib\\Accessor.h	/^#define ACCESSOR_H$/;"	d
ANNOTATION_BOXED	..\\scintilla\\include\\Scintilla.h	/^#define ANNOTATION_BOXED /;"	d
ANNOTATION_HIDDEN	..\\scintilla\\include\\Scintilla.h	/^#define ANNOTATION_HIDDEN /;"	d
ANNOTATION_INDENTED	..\\scintilla\\include\\Scintilla.h	/^#define ANNOTATION_INDENTED /;"	d
ANNOTATION_STANDARD	..\\scintilla\\include\\Scintilla.h	/^#define ANNOTATION_STANDARD /;"	d
ANY	..\\scintilla\\src\\RESearch.cxx	/^#define ANY /;"	d	file:
ANYSKIP	..\\scintilla\\src\\RESearch.cxx	/^#define ANYSKIP /;"	d	file:
ATK_CHECK_VERSION	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^# define ATK_CHECK_VERSION(/;"	d	signature:(x,y,z)
AUTOCOMPLETE_H	..\\scintilla\\src\\AutoComplete.h	/^#define AUTOCOMPLETE_H$/;"	d
AUXMARK	..\\scintilla\\lua\\src\\loadlib.c	/^#define AUXMARK	/;"	d	file:
AbandonAutomaticSave	..\\scite\\src\\SciTEBuffers.cxx	/^void Buffer::AbandonAutomaticSave() {$/;"	f	class:Buffer	typeref:typename:void	signature:()
AbandonAutomaticSave	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::AbandonAutomaticSave() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
AbandonPaint	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::AbandonPaint() {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:()
AbandonPaint	..\\scintilla\\src\\Editor.cxx	/^bool Editor::AbandonPaint() {$/;"	f	class:Editor	typeref:typename:bool	signature:()
AbbrevCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::AbbrevCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
AbbrevDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::AbbrevDialog() {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:()
AbbrevDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::AbbrevDialog() {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:()
AbbrevDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::AbbrevDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
AbbrevMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::AbbrevMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
AbbrevResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::AbbrevResponse(int responseID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int responseID)
AboutDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::AboutDialog() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
AboutDialog	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::AboutDialog() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
AboutDialogWithBuild	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::AboutDialogWithBuild(int staticBuild_) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int staticBuild_)
AboutDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::AboutDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
AboutMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::AboutMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
AbsolutePath	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::AbsolutePath() const {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:() const
AcceptToOpenFiles	..\\scite\\win32\\UniqueInstance.cxx	/^bool UniqueInstance::AcceptToOpenFiles(bool bAccept) {$/;"	f	class:UniqueInstance	typeref:typename:bool	signature:(bool bAccept)
Accessor	..\\scintilla\\lexlib\\Accessor.cxx	/^Accessor::Accessor(IDocument *pAccess_, PropSetSimple *pprops_) : LexAccessor(pAccess_), pprops(/;"	f	class:Accessor	signature:(IDocument * pAccess_,PropSetSimple * pprops_)
Accessor	..\\scintilla\\lexlib\\Accessor.h	/^class Accessor : public LexAccessor {$/;"	c	namespace:Scintilla	inherits:LexAccessor
Action	..\\scintilla\\src\\CellBuffer.cxx	/^Action::Action() {$/;"	f	class:Action	signature:()
Action	..\\scintilla\\src\\CellBuffer.cxx	/^Action::Action(Action &&other) {$/;"	f	class:Action	signature:(Action && other)
Action	..\\scintilla\\src\\CellBuffer.h	/^class Action {$/;"	c	namespace:Scintilla
Activate	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::Activate(bool activeApp) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool activeApp)
ActivateBuffer	..\\scite\\src\\Extender.h	/^	virtual bool ActivateBuffer(int) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int)
ActivateBuffer	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::ActivateBuffer(int index) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int index)
ActivateBuffer	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::ActivateBuffer(int index) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int index)
ActivateSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::ActivateSignal(GtkWidget *, FindStrip *pStrip) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(GtkWidget *,FindStrip * pStrip)
ActivateSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ActivateSignal(GtkWidget *, ReplaceStrip *pStrip) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(GtkWidget *,ReplaceStrip * pStrip)
ActivateSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::ActivateSignal(GtkWidget *, UserStrip *pStrip) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(GtkWidget *,UserStrip * pStrip)
ActivateWindow	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ActivateWindow(const char *timestamp) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const char * timestamp)
ActivateWindow	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::ActivateWindow(const char *) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const char *)
ActivatesDefault	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::ActivatesDefault() {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:()
ActivatesDefault	..\\scite\\gtk\\Widget.cxx	/^void WEntry::ActivatesDefault() {$/;"	f	class:WEntry	typeref:typename:void	signature:()
Active	..\\scintilla\\src\\AutoComplete.cxx	/^bool AutoComplete::Active() const {$/;"	f	class:AutoComplete	typeref:typename:bool	signature:() const
Active	..\\scite\\gtk\\Widget.cxx	/^bool WCheckDraw::Active() {$/;"	f	class:WCheckDraw	typeref:typename:bool	signature:()
Active	..\\scite\\gtk\\Widget.cxx	/^bool WToggle::Active() {$/;"	f	class:WToggle	typeref:typename:bool	signature:()
Add	..\\scintilla\\lexlib\\CharacterSet.h	/^	void Add(int val) {$/;"	f	class:Scintilla::CharacterSet	typeref:typename:void	access:public	signature:(int val)
Add	..\\scintilla\\src\\CaseConvert.cxx	/^	void Add(int character, const char *conversion) {$/;"	f	class:__anon1fb76d660111::CaseConverter	typeref:typename:void	file:	access:public	signature:(int character,const char * conversion)
Add	..\\scintilla\\src\\Selection.h	/^	void Add(Sci::Position increment) {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:void	access:public	signature:(Sci::Position increment)
Add	..\\scintilla\\src\\XPM.cxx	/^void RGBAImageSet::Add(int ident, RGBAImage *image) {$/;"	f	class:RGBAImageSet	typeref:typename:void	signature:(int ident,RGBAImage * image)
Add	..\\scite\\gtk\\Widget.cxx	/^void WTable::Add(GtkWidget *child, int width, bool expand, int xpadding, int ypadding) {$/;"	f	class:WTable	typeref:typename:void	signature:(GtkWidget * child,int width,bool expand,int xpadding,int ypadding)
Add	..\\scite\\src\\Containers.h	/^	int Add(ARG_TYPE newElement) {$/;"	f	class:TArray	typeref:typename:int	access:public	signature:(ARG_TYPE newElement)
Add	..\\scite\\src\\SciTEBuffers.cxx	/^int BufferList::Add() {$/;"	f	class:BufferList	typeref:typename:int	signature:()
AddChar	..\\scintilla\\src\\Editor.cxx	/^void Editor::AddChar(char ch) {$/;"	f	class:Editor	typeref:typename:void	signature:(char ch)
AddCharUTF	..\\scintilla\\src\\Editor.cxx	/^void Editor::AddCharUTF(const char *s, unsigned int len, bool treatAsDBCS) {$/;"	f	class:Editor	typeref:typename:void	signature:(const char * s,unsigned int len,bool treatAsDBCS)
AddCharUTF	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AddCharUTF(const char *s, unsigned int len, bool treatAsDBCS) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(const char * s,unsigned int len,bool treatAsDBCS)
AddCharUTF16	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::AddCharUTF16(wchar_t const *wcs, unsigned int wclen) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(wchar_t const * wcs,unsigned int wclen)
AddCommand	..\\scite\\src\\JobQueue.cxx	/^void JobQueue::AddCommand(const std::string &command, const FilePath &directory, JobSubsystem jo/;"	f	class:JobQueue	typeref:typename:void	signature:(const std::string & command,const FilePath & directory,JobSubsystem jobType,const std::string & input,int flags)
AddCommand	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType,/;"	f	class:SciTEBase	typeref:typename:void	signature:(const std::string & cmd,const std::string & dir,JobSubsystem jobType,const std::string & input,int flags)
AddCommand	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType, /;"	f	class:SciTEWin	typeref:typename:void	signature:(const std::string & cmd,const std::string & dir,JobSubsystem jobType,const std::string & input,int flags)
AddData	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::AddData(const char *data, Sci_Position length) {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(const char * data,Sci_Position length)
AddFileToBuffer	..\\scite\\src\\SciTEBuffers.cxx	/^bool SciTEBase::AddFileToBuffer(const BufferState &bufferState) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const BufferState & bufferState)
AddFileToStack	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::AddFileToStack(FilePath file, SelectedRange selection, int scrollPos) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath file,SelectedRange selection,int scrollPos)
AddFuture	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::AddFuture(int index, Buffer::FutureDo fd) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int index,Buffer::FutureDo fd)
AddHead	..\\scite\\src\\Containers.h	/^	T_POSITION AddHead(ARG_TYPE newElement) {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:(ARG_TYPE newElement)
AddLexerModule	..\\scintilla\\src\\Catalogue.cxx	/^void Catalogue::AddLexerModule(LexerModule *plm) {$/;"	f	class:Catalogue	typeref:typename:void	signature:(LexerModule * plm)
AddMBButton	..\\scite\\gtk\\SciTEGTK.cxx	/^GtkWidget *SciTEGTK::AddMBButton(GtkWidget *dialog, const char *label,$/;"	f	class:SciTEGTK	typeref:typename:GtkWidget *	signature:(GtkWidget * dialog,const char * label,int val,GtkAccelGroup * accel_group,bool isDefault)
AddMark	..\\scintilla\\src\\Document.cxx	/^int Document::AddMark(Sci::Line line, int markerNum) {$/;"	f	class:Document	typeref:typename:int	signature:(Sci::Line line,int markerNum)
AddMark	..\\scintilla\\src\\PerLine.cxx	/^int LineMarkers::AddMark(Sci::Line line, int markerNum, Sci::Line lines) {$/;"	f	class:LineMarkers	typeref:typename:int	signature:(Sci::Line line,int markerNum,Sci::Line lines)
AddMarkSet	..\\scintilla\\src\\Document.cxx	/^void Document::AddMarkSet(Sci::Line line, int valueSet) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,int valueSet)
AddNumber	..\\scintilla\\src\\Editor.h	/^	enum AddNumber { addOne, addEach };$/;"	g	class:Scintilla::Editor	access:protected
AddRange	..\\scintilla\\src\\Editor.h	/^	bool AddRange(Sci::Line lineStart, Sci::Line lineEnd) {$/;"	f	struct:Scintilla::WrapPending	typeref:typename:bool	access:public	signature:(Sci::Line lineStart,Sci::Line lineEnd)
AddRectangularToMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static void AddRectangularToMime(QMimeData *mimeData, QString su)$/;"	f	typeref:typename:void	file:	signature:(QMimeData * mimeData,QString su)
AddRef	..\\scintilla\\src\\Document.cxx	/^int Document::AddRef() {$/;"	f	class:Document	typeref:typename:int	signature:()
AddSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::AddSelection(int startChar, int endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gboolean	signature:(int startChar,int endChar)
AddSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::AtkTextIface::AddSelection(AtkText *text, gint start, gint end)/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gboolean	signature:(AtkText * text,gint start,gint end)
AddSelection	..\\scintilla\\src\\Selection.cxx	/^void Selection::AddSelection(SelectionRange range) {$/;"	f	class:Selection	typeref:typename:void	signature:(SelectionRange range)
AddSelection	..\\scite\\src\\SciTEBase.h	/^	enum AddSelection { addNext, addEach };$/;"	g	class:SciTEBase	access:protected
AddSelectionWithoutTrim	..\\scintilla\\src\\Selection.cxx	/^void Selection::AddSelectionWithoutTrim(SelectionRange range) {$/;"	f	class:Selection	typeref:typename:void	signature:(SelectionRange range)
AddSendPipe	..\\scite\\gtk\\DirectorExtension.cxx	/^static void AddSendPipe(int fd, const char *name) {$/;"	f	typeref:typename:void	file:	signature:(int fd,const char * name)
AddString	..\\scintilla\\lexlib\\CharacterSet.h	/^	void AddString(const char *setToAdd) {$/;"	f	class:Scintilla::CharacterSet	typeref:typename:void	access:public	signature:(const char * setToAdd)
AddStyledText	..\\scintilla\\src\\Editor.cxx	/^void Editor::AddStyledText(char *buffer, Sci::Position appendLength) {$/;"	f	class:Editor	typeref:typename:void	signature:(char * buffer,Sci::Position appendLength)
AddStyledText	..\\scite\\src\\Credits.cxx	/^static void AddStyledText(GUI::ScintillaWindow &wsci, const char *s, int attr) {$/;"	f	typeref:typename:void	file:	signature:(GUI::ScintillaWindow & wsci,const char * s,int attr)
AddSymmetric	..\\scintilla\\src\\CaseConvert.cxx	/^void AddSymmetric(enum CaseConversion conversion, int lower,int upper) {$/;"	f	namespace:__anon1fb76d660111	typeref:typename:void	signature:(enum CaseConversion conversion,int lower,int upper)
AddTabstop	..\\scintilla\\src\\EditView.cxx	/^bool EditView::AddTabstop(Sci::Line line, int x) {$/;"	f	class:EditView	typeref:typename:bool	signature:(Sci::Line line,int x)
AddTabstop	..\\scintilla\\src\\PerLine.cxx	/^bool LineTabstops::AddTabstop(Sci::Line line, int x) {$/;"	f	class:LineTabstops	typeref:typename:bool	signature:(Sci::Line line,int x)
AddTail	..\\scite\\src\\Containers.h	/^	T_POSITION AddTail(ARG_TYPE newElement) {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:(ARG_TYPE newElement)
AddTextAttribute	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static AtkAttributeSet *AddTextAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, gch/;"	f	typeref:typename:AtkAttributeSet *	file:	signature:(AtkAttributeSet * attributes,AtkTextAttribute attr,gchar * value)
AddTextColorAttribute	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static AtkAttributeSet *AddTextColorAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr/;"	f	typeref:typename:AtkAttributeSet *	file:	signature:(AtkAttributeSet * attributes,AtkTextAttribute attr,const ColourDesired & colour)
AddTextIntAttribute	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static AtkAttributeSet *AddTextIntAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, /;"	f	typeref:typename:AtkAttributeSet *	file:	signature:(AtkAttributeSet * attributes,AtkTextAttribute attr,gint i)
AddToPopUp	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void AddToPopUp(const char *label, int cmd=0, bool enabled=true) {}$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(const char * label,int cmd=0,bool enabled=true)
AddToPopUp	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::AddToPopUp(const char *label, int cmd, bool enabled) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(const char * label,int cmd,bool enabled)
AddToPopUp	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::AddToPopUp(const char *label,$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const char * label,int cmd,bool enabled)
AddToPopUp	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::AddToPopUp(const char *label, int cmd, bool enabled) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(const char * label,int cmd,bool enabled)
AddToPopUp	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::AddToPopUp(const char *label, int cmd, bool enabled) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const char * label,int cmd,bool enabled)
AddToPopUp	..\\scite\\gtk\\Widget.cxx	/^void Strip::AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked) {$/;"	f	class:Strip	typeref:typename:void	signature:(GUI::Menu & popup,const char * label,int cmd,bool checked)
AddToPopUp	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::AddToPopUp(const char *label, int cmd, bool enabled) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const char * label,int cmd,bool enabled)
AddToPopUp	..\\scite\\win32\\Strips.cxx	/^void FindStrip::AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked) const {$/;"	f	class:FindStrip	typeref:typename:void	signature:(GUI::Menu & popup,const char * label,int cmd,bool checked) const
AddToPopUp	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked) const /;"	f	class:ReplaceStrip	typeref:typename:void	signature:(GUI::Menu & popup,const char * label,int cmd,bool checked) const
AddToolBar	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::AddToolBar() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
AddToolButton	..\\scite\\gtk\\SciTEGTK.cxx	/^GtkWidget *SciTEGTK::AddToolButton(const char *text, int cmd, GtkWidget *toolbar_icon) {$/;"	f	class:SciTEGTK	typeref:typename:GtkWidget *	signature:(const char * text,int cmd,GtkWidget * toolbar_icon)
AddToolSpace	..\\scite\\gtk\\SciTEGTK.cxx	/^static void AddToolSpace(GtkToolbar *toolbar) {$/;"	f	typeref:typename:void	file:	signature:(GtkToolbar * toolbar)
AddUndoAction	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::AddUndoAction(Sci::Position token, bool mayCoalesce) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(Sci::Position token,bool mayCoalesce)
AddUndoAction	..\\scintilla\\src\\Document.h	/^	void AddUndoAction(Sci::Position token, bool mayCoalesce) { cb.AddUndoAction(token, mayCoalesce/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:(Sci::Position token,bool mayCoalesce)
AddWString	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::AddWString(std::wstring wcs) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(std::wstring wcs)
AddWatcher	..\\scintilla\\src\\Document.cxx	/^bool Document::AddWatcher(DocWatcher *watcher, void *userData) {$/;"	f	class:Document	typeref:typename:bool	signature:(DocWatcher * watcher,void * userData)
AdjustWindowRect	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::AdjustWindowRect(PRectangle *rc) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(PRectangle * rc)
AfterName	..\\scite\\src\\SciTEBase.cxx	/^static GUI::gui_char AfterName(const GUI::gui_char *s) {$/;"	f	typeref:typename:GUI::gui_char	file:	signature:(const GUI::gui_char * s)
AllFour	..\\scintilla\\win32\\PlatWin.cxx	/^static void AllFour(DWORD *pixels, int width, int height, int x, int y, DWORD val) {$/;"	f	namespace:Scintilla	typeref:typename:void	file:	signature:(DWORD * pixels,int width,int height,int x,int y,DWORD val)
AllOnFor	..\\scintilla\\src\\Decoration.cxx	/^int DecorationList::AllOnFor(Sci::Position position) const {$/;"	f	class:DecorationList	typeref:typename:int	signature:(Sci::Position position) const
AllSame	..\\scintilla\\src\\RunStyles.cxx	/^bool RunStyles<DISTANCE, STYLE>::AllSame() const {$/;"	f	class:RunStyles	typeref:typename:bool	signature:() const
AllSameAs	..\\scintilla\\src\\RunStyles.cxx	/^bool RunStyles<DISTANCE, STYLE>::AllSameAs(STYLE value) const {$/;"	f	class:RunStyles	typeref:typename:bool	signature:(STYLE value) const
AllocItem	..\\scintilla\\win32\\PlatWin.cxx	/^	void AllocItem(const char *text, int pixId) {$/;"	f	class:Scintilla::LineToItem	typeref:typename:void	file:	access:public	signature:(const char * text,int pixId)
AllocStyles	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::AllocStyles(size_t sizeNew) {$/;"	f	class:ViewStyle	typeref:typename:void	signature:(size_t sizeNew)
Allocate	..\\scintilla\\curses\\ScintillaCurses.cxx	/^ListBox *ListBox::Allocate() { return new ListBoxImpl(); }$/;"	f	class:ListBox	typeref:typename:ListBox *	signature:()
Allocate	..\\scintilla\\curses\\ScintillaCurses.cxx	/^Surface *Surface::Allocate(int) { return new SurfaceImpl(); }$/;"	f	class:Surface	typeref:typename:Surface *	signature:(int)
Allocate	..\\scintilla\\gtk\\PlatGTK.cxx	/^ListBox *ListBox::Allocate() {$/;"	f	class:ListBox	typeref:typename:ListBox *	signature:()
Allocate	..\\scintilla\\gtk\\PlatGTK.cxx	/^Surface *Surface::Allocate(int) {$/;"	f	class:Surface	typeref:typename:Surface *	signature:(int)
Allocate	..\\scintilla\\lexlib\\SubStyles.h	/^	int Allocate(int styleBase, int numberStyles) {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:(int styleBase,int numberStyles)
Allocate	..\\scintilla\\lexlib\\SubStyles.h	/^	void Allocate(int firstStyle_, int lenStyles_) {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:void	access:public	signature:(int firstStyle_,int lenStyles_)
Allocate	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListBox *ListBox::Allocate()$/;"	f	class:Scintilla::ListBox	typeref:typename:ListBox *	signature:()
Allocate	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^Surface *Surface::Allocate(int)$/;"	f	class:Scintilla::Surface	typeref:typename:Surface *	signature:(int)
Allocate	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::Allocate(Sci::Position newSize) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(Sci::Position newSize)
Allocate	..\\scintilla\\src\\Document.h	/^	void Allocate(Sci::Position newSize) { cb.Allocate(newSize); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:(Sci::Position newSize)
Allocate	..\\scintilla\\src\\Partitioning.h	/^	void Allocate(ptrdiff_t growSize) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:private	signature:(ptrdiff_t growSize)
Allocate	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayoutCache::Allocate(size_t length_) {$/;"	f	class:LineLayoutCache	typeref:typename:void	signature:(size_t length_)
Allocate	..\\scintilla\\win32\\PlatWin.cxx	/^ListBox *ListBox::Allocate() {$/;"	f	class:Scintilla::ListBox	typeref:typename:ListBox *	signature:()
Allocate	..\\scintilla\\win32\\PlatWin.cxx	/^Surface *Surface::Allocate(int technology) {$/;"	f	class:Scintilla::Surface	typeref:typename:Surface *	signature:(int technology)
Allocate	..\\scintilla\\win32\\ScintillaWin.cxx	/^	void Allocate(size_t bytes) {$/;"	f	class:GlobalMemory	typeref:typename:void	file:	access:public	signature:(size_t bytes)
Allocate	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::Allocate(int maxSize) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int maxSize)
AllocateAnnotation	..\\scintilla\\src\\PerLine.cxx	/^static char *AllocateAnnotation(int length, int style) {$/;"	f	typeref:typename:char *	file:	signature:(int length,int style)
AllocateExtendedStyles	..\\scintilla\\src\\ViewStyle.cxx	/^int ViewStyle::AllocateExtendedStyles(int numberStyles) {$/;"	f	class:ViewStyle	typeref:typename:int	signature:(int numberStyles)
AllocateForLevel	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayoutCache::AllocateForLevel(Sci::Line linesOnScreen, Sci::Line linesInDoc) {$/;"	f	class:LineLayoutCache	typeref:typename:void	signature:(Sci::Line linesOnScreen,Sci::Line linesInDoc)
AllocateGraphics	..\\scintilla\\src\\EditView.cxx	/^void EditView::AllocateGraphics(const ViewStyle &vsDraw) {$/;"	f	class:EditView	typeref:typename:void	signature:(const ViewStyle & vsDraw)
AllocateGraphics	..\\scintilla\\src\\Editor.cxx	/^void Editor::AllocateGraphics() {$/;"	f	class:Editor	typeref:typename:void	signature:()
AllocateGraphics	..\\scintilla\\src\\MarginView.cxx	/^void MarginView::AllocateGraphics(const ViewStyle &vsDraw) {$/;"	f	class:Scintilla::MarginView	typeref:typename:void	signature:(const ViewStyle & vsDraw)
AllocateSubStyles	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::AllocateSubStyles(int, int) {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:(int,int)
AllocateSubStyles	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::AllocateSubStyles(int, int) {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:(int,int)
AllocateSubStyles	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::AllocateSubStyles(int styleBase, int numberStyles) {$/;"	f	class:LexState	typeref:typename:int	signature:(int styleBase,int numberStyles)
AllowVirtualSpace	..\\scintilla\\src\\Editor.cxx	/^static bool AllowVirtualSpace(int virtualSpaceOptions, bool rectangular) {$/;"	f	typeref:typename:bool	file:	signature:(int virtualSpaceOptions,bool rectangular)
AlphaRectangle	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,int cornerSize,ColourDesired fill,int alphaFill,ColourDesired outline,int alphaOutline,int flags)
AlphaRectangle	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFil/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,int cornerSize,ColourDesired fill,int alphaFill,ColourDesired outline,int alphaOutline,int)
AlphaRectangle	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::AlphaRectangle(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,int cornerSize,ColourDesired fill,int alphaFill,ColourDesired outline,int alphaOutline,int)
AlphaRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,int cornerSize,ColourDesired fill,int alphaFill,ColourDesired outline,int alphaOutline,int)
AlphaRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,int cornerSize,ColourDesired fill,int alphaFill,ColourDesired outline,int alphaOutline,int)
AnnotationBoxedOrIndented	..\\scintilla\\src\\EditView.cxx	/^static bool AnnotationBoxedOrIndented(int annotationVisible) {$/;"	f	typeref:typename:bool	file:	signature:(int annotationVisible)
AnnotationClearAll	..\\scintilla\\src\\Document.cxx	/^void Document::AnnotationClearAll() {$/;"	f	class:Document	typeref:typename:void	signature:()
AnnotationHeader	..\\scintilla\\src\\PerLine.cxx	/^struct AnnotationHeader {$/;"	s	file:
AnnotationLines	..\\scintilla\\src\\Document.cxx	/^int Document::AnnotationLines(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:int	signature:(Sci::Line line) const
AnnotationSetStyle	..\\scintilla\\src\\Document.cxx	/^void Document::AnnotationSetStyle(Sci::Line line, int style) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,int style)
AnnotationSetStyles	..\\scintilla\\src\\Document.cxx	/^void Document::AnnotationSetStyles(Sci::Line line, const unsigned char *styles) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,const unsigned char * styles)
AnnotationSetText	..\\scintilla\\src\\Document.cxx	/^void Document::AnnotationSetText(Sci::Line line, const char *text) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,const char * text)
AnnotationStyledText	..\\scintilla\\src\\Document.cxx	/^StyledText Document::AnnotationStyledText(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:StyledText	signature:(Sci::Line line) const
Annotations	..\\scintilla\\src\\Document.cxx	/^LineAnnotation *Document::Annotations() const {$/;"	f	class:Document	typeref:typename:LineAnnotation *	signature:() const
Append	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Append(char *s, int type = -1) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(char * s,int type=-1)
Append	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::Append(char *s, int type) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(char * s,int type)
Append	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::Append(char *s, int type)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(char * s,int type)
Append	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::Append(char *, int) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(char *,int)
AppendAction	..\\scintilla\\src\\CellBuffer.cxx	/^const char *UndoHistory::AppendAction(actionType at, Sci::Position position, const char *data, S/;"	f	class:UndoHistory	typeref:typename:const char *	signature:(actionType at,Sci::Position position,const char * data,Sci::Position lengthData,bool & startSequence,bool mayCoalesce)
AppendIfNotPresent	..\\scite\\src\\StringHelpers.h	/^	void AppendIfNotPresent(const std::string &s) {$/;"	f	class:EntryMemory	typeref:typename:void	access:public	signature:(const std::string & s)
AppendList	..\\scite\\src\\StringHelpers.h	/^	void AppendList(const std::string &s, char sep = '|') {$/;"	f	class:EntryMemory	typeref:typename:void	access:public	signature:(const std::string & s,char sep='|')
AppendListItem	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::AppendListItem(const char *text, const char *numword) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(const char * text,const char * numword)
AppendName	..\\scintilla\\lexlib\\OptionSet.h	/^	void AppendName(const char *name) {$/;"	f	class:Scintilla::OptionSet	typeref:typename:void	access:private	signature:(const char * name)
AppendText	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::AppendText(const char *text) {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:(const char * text)
ApplyStep	..\\scintilla\\src\\Partitioning.h	/^	void ApplyStep(T partitionUpTo) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:private	signature:(T partitionUpTo)
Arith	..\\scintilla\\lua\\src\\lvm.c	/^static void Arith (lua_State *L, StkId ra, const TValue *rb,$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,StkId ra,const TValue * rb,const TValue * rc,TMS op)
ArrayFromStringList	..\\scite\\src\\StringList.cxx	/^static std::vector<char *> ArrayFromStringList(char *stringList, bool onlyLineEnds = false) {$/;"	f	typeref:typename:std::vector<char * >	file:	signature:(char * stringList,bool onlyLineEnds=false)
ArrayFromWordList	..\\scintilla\\lexlib\\WordList.cxx	/^static char **ArrayFromWordList(char *wordlist, int *len, bool onlyLineEnds = false) {$/;"	f	typeref:typename:char **	file:	signature:(char * wordlist,int * len,bool onlyLineEnds=false)
AsInternal	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char *FilePath::AsInternal() const {$/;"	f	class:FilePath	typeref:typename:const GUI::gui_char *	signature:() const
AsLong	..\\scintilla\\include\\Platform.h	/^	long AsLong() const {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:long	access:public	signature:() const
AsUTF8	..\\scite\\src\\FilePath.cxx	/^std::string FilePath::AsUTF8() const {$/;"	f	class:FilePath	typeref:typename:std::string	signature:() const
AsVector	..\\scite\\src\\StringHelpers.h	/^	std::vector<std::string>AsVector() {$/;"	f	class:EntryMemory	typeref:typename:std::vector<std::string>	access:public	signature:()
Ascent	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION Ascent(Font &font_) { return 0; }$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_)
Ascent	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::Ascent(Font &font_) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font_)
Ascent	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::Ascent(Font &font)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font)
Ascent	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::Ascent(Font &font_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_)
Ascent	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::Ascent(Font &font_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_)
AskMacroList	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::AskMacroList() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Assert	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Platform::Assert(const char *c, const char *file, int line) {$/;"	f	class:Platform	typeref:typename:void	signature:(const char * c,const char * file,int line)
Assert	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Platform::Assert(const char *c, const char *file, int line) {$/;"	f	class:Platform	typeref:typename:void	signature:(const char * c,const char * file,int line)
Assert	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Platform::Assert(const char *c, const char *file, int line)$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char * c,const char * file,int line)
Assert	..\\scintilla\\win32\\PlatWin.cxx	/^void Platform::Assert(const char *c, const char *file, int line) {$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char * c,const char * file,int line)
AssignCmdKey	..\\scintilla\\src\\KeyMap.cxx	/^void KeyMap::AssignCmdKey(int key, int modifiers, unsigned int msg) {$/;"	f	class:KeyMap	typeref:typename:void	signature:(int key,int modifiers,unsigned int msg)
AssignKey	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::AssignKey(int key, int mods, int cmd) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int key,int mods,int cmd)
Association	..\\scite\\src\\Containers.h	/^	struct Association {$/;"	s	class:TMap	access:protected
At	..\\scite\\src\\StringHelpers.h	/^	std::string At(int n) const {$/;"	f	class:EntryMemory	typeref:typename:std::string	access:public	signature:(int n) const
AtLineEnd	..\\scite\\src\\LuaExtension.cxx	/^	static int AtLineEnd(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
AtLineStart	..\\scite\\src\\LuaExtension.cxx	/^	static int AtLineStart(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
AtkEditableTextIface	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	class AtkEditableTextIface {$/;"	c	class:Scintilla::ScintillaGTKAccessible	access:public
AtkTextIface	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	class AtkTextIface {$/;"	c	class:Scintilla::ScintillaGTKAccessible	access:public
AttachResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^inline void AttachResponse(GtkWidget *w, SciTEGTK *object) {$/;"	f	typeref:typename:void	signature:(GtkWidget * w,SciTEGTK * object)
AutoComplete	..\\scintilla\\src\\AutoComplete.cxx	/^AutoComplete::AutoComplete() :$/;"	f	class:AutoComplete	signature:()
AutoComplete	..\\scintilla\\src\\AutoComplete.h	/^class AutoComplete {$/;"	c	namespace:Scintilla
AutoCompleteCancel	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteCancel() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
AutoCompleteCharacterAdded	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteCharacterAdded(char ch) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(char ch)
AutoCompleteCharacterDeleted	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteCharacterDeleted() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
AutoCompleteCompleted	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteCompleted(char ch, unsigned int completionMethod) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(char ch,unsigned int completionMethod)
AutoCompleteGetCurrent	..\\scintilla\\src\\ScintillaBase.cxx	/^int ScintillaBase::AutoCompleteGetCurrent() const {$/;"	f	class:ScintillaBase	typeref:typename:int	signature:() const
AutoCompleteGetCurrentText	..\\scintilla\\src\\ScintillaBase.cxx	/^int ScintillaBase::AutoCompleteGetCurrentText(char *buffer) const {$/;"	f	class:ScintillaBase	typeref:typename:int	signature:(char * buffer) const
AutoCompleteInsert	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteInsert(Sci::Position startPos, Sci::Position removeLen, const ch/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Sci::Position startPos,Sci::Position removeLen,const char * text,Sci::Position textLen)
AutoCompleteMove	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteMove(int delta) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(int delta)
AutoCompleteMoveToCurrentWord	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteMoveToCurrentWord() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
AutoCompleteSelection	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteSelection() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
AutoCompleteStart	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::AutoCompleteStart(Sci::Position lenEntered, const char *list) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Sci::Position lenEntered,const char * list)
AutoLineLayout	..\\scintilla\\src\\EditView.h	/^	AutoLineLayout(LineLayoutCache &llc_, LineLayout *ll_) : llc(llc_), ll(ll_) {}$/;"	f	class:Scintilla::AutoLineLayout	access:public	signature:(LineLayoutCache & llc_,LineLayout * ll_)
AutoLineLayout	..\\scintilla\\src\\EditView.h	/^class AutoLineLayout {$/;"	c	namespace:Scintilla
AutoSurface	..\\scintilla\\src\\Editor.h	/^	AutoSurface(Editor *ed, int technology = -1) {$/;"	f	class:Scintilla::AutoSurface	access:public	signature:(Editor * ed,int technology=-1)
AutoSurface	..\\scintilla\\src\\Editor.h	/^	AutoSurface(SurfaceID sid, Editor *ed, int technology = -1) {$/;"	f	class:Scintilla::AutoSurface	access:public	signature:(SurfaceID sid,Editor * ed,int technology=-1)
AutoSurface	..\\scintilla\\src\\Editor.h	/^class AutoSurface {$/;"	c	namespace:Scintilla
AutomaticIndentation	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::AutomaticIndentation(char ch) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(char ch)
AverageCharWidth	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION AverageCharWidth(Font &font_) { return 1; }$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_)
AverageCharWidth	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::AverageCharWidth(Font &font_) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font_)
AverageCharWidth	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::AverageCharWidth(Font &font)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font)
AverageCharWidth	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::AverageCharWidth(Font &font_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_)
AverageCharWidth	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::AverageCharWidth(Font &font_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_)
BASIC_CI_SIZE	..\\scintilla\\lua\\src\\lstate.h	/^#define BASIC_CI_SIZE /;"	d
BASIC_STACK_SIZE	..\\scintilla\\lua\\src\\lstate.h	/^#define BASIC_STACK_SIZE /;"	d
BEFORE_START_T_POSITION	..\\scite\\src\\Containers.h	/^#define BEFORE_START_T_POSITION /;"	d
BITBLK	..\\scintilla\\src\\RESearch.h	/^#define BITBLK	/;"	d
BITIND	..\\scintilla\\src\\RESearch.cxx	/^#define BITIND /;"	d	file:
BITRK	..\\scintilla\\lua\\src\\lopcodes.h	/^#define BITRK	/;"	d
BITSPERCHAR	..\\scintilla\\lua\\src\\lptypes.h	/^#define BITSPERCHAR	/;"	d
BITS_PER_COMPONENT	..\\scintilla\\cocoa\\PlatCocoa.h	/^  static const int BITS_PER_COMPONENT = 8;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:const int	access:private
BITS_PER_PIXEL	..\\scintilla\\cocoa\\PlatCocoa.h	/^  static const int BITS_PER_PIXEL = BITS_PER_COMPONENT * 4;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:const int	access:private
BLACK	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired BLACK(0, 0, 0);$/;"	v	typeref:typename:ColourDesired	file:
BLACKBIT	..\\scintilla\\lua\\src\\lgc.h	/^#define BLACKBIT	/;"	d
BLKIND	..\\scintilla\\src\\RESearch.cxx	/^#define BLKIND /;"	d	file:
BLUE	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired BLUE(0, 0, 0x80);$/;"	v	typeref:typename:ColourDesired	file:
BOL	..\\scintilla\\src\\RESearch.cxx	/^#define BOL /;"	d	file:
BOT	..\\scintilla\\src\\RESearch.cxx	/^#define BOT /;"	d	file:
BOW	..\\scintilla\\src\\RESearch.cxx	/^#define BOW /;"	d	file:
BYTES_PER_PIXEL	..\\scintilla\\cocoa\\PlatCocoa.h	/^  static const int BYTES_PER_PIXEL = BITS_PER_PIXEL \/ 8;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:const int	access:private
BackAsLong	..\\scite\\src\\StyleDefinition.cxx	/^long StyleDefinition::BackAsLong() const {$/;"	f	class:StyleDefinition	typeref:typename:long	signature:() const
BackStep	..\\scintilla\\src\\Partitioning.h	/^	void BackStep(T partitionDownTo) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:private	signature:(T partitionDownTo)
Background	..\\scintilla\\src\\ViewStyle.cxx	/^ColourOptional ViewStyle::Background(int marksOfLine, bool caretActive, bool lineContainsCaret) /;"	f	class:ViewStyle	typeref:typename:ColourOptional	signature:(int marksOfLine,bool caretActive,bool lineContainsCaret) const
BackgroundActivities	..\\scite\\src\\SciTEBase.h	/^struct BackgroundActivities {$/;"	s
BackgroundStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	BackgroundStrip() {$/;"	f	class:BackgroundStrip	file:	access:public	signature:()
BackgroundStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^class BackgroundStrip : public Strip {$/;"	c	file:	inherits:Strip
BackgroundStrip	..\\scite\\win32\\Strips.h	/^	BackgroundStrip() {$/;"	f	class:BackgroundStrip	access:public	signature:()
BackgroundStrip	..\\scite\\win32\\Strips.h	/^class BackgroundStrip : public Strip {$/;"	c	inherits:Strip
Band	..\\scite\\win32\\SciTEWin.h	/^	Band(bool visible_, int height_, bool expands_, GUI::Window win_) :$/;"	f	struct:Band	access:public	signature:(bool visible_,int height_,bool expands_,GUI::Window win_)
Band	..\\scite\\win32\\SciTEWin.h	/^struct Band {$/;"	s
BarButtonIn	..\\scite\\win32\\SciTEWinBar.cxx	/^	BarButtonIn() :id(0), cmd(0) {};$/;"	f	struct:BarButtonIn	file:	access:public	signature:()
BarButtonIn	..\\scite\\win32\\SciTEWinBar.cxx	/^	BarButtonIn(int _id, int _cmd) : id(_id), cmd(_cmd) {};$/;"	f	struct:BarButtonIn	file:	access:public	signature:(int _id,int _cmd)
BarButtonIn	..\\scite\\win32\\SciTEWinBar.cxx	/^struct BarButtonIn {$/;"	s	file:
Base	..\\scintilla\\lexlib\\SubStyles.h	/^	int Base() const {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:int	access:public	signature:() const
BaseName	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::BaseName() const {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:() const
BaseStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	int BaseStyle(int subStyle) const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:(int subStyle) const
BaseWin	..\\scite\\gtk\\Widget.h	/^	BaseWin() : localiser(0) {$/;"	f	class:BaseWin	access:public	signature:()
BaseWin	..\\scite\\gtk\\Widget.h	/^class BaseWin : public GUI::Window {$/;"	c	inherits:GUI::Window
BaseWin	..\\scite\\win32\\Strips.h	/^	BaseWin() : localiser(0) {$/;"	f	class:BaseWin	access:public	signature:()
BaseWin	..\\scite\\win32\\Strips.h	/^class BaseWin : public GUI::Window {$/;"	c	inherits:GUI::Window
BasicDeleteChars	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::BasicDeleteChars(Sci::Position position, Sci::Position deleteLength) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(Sci::Position position,Sci::Position deleteLength)
BasicInsertString	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::BasicInsertString(Sci::Position position, const char *s, Sci::Position insertLe/;"	f	class:CellBuffer	typeref:typename:void	signature:(Sci::Position position,const char * s,Sci::Position insertLength)
BeginPrint	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::BeginPrint(GtkPrintOperation *operation, GtkPrintContext *context, SciTEGTK *scit/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkPrintOperation * operation,GtkPrintContext * context,SciTEGTK * scitew)
BeginPrintThis	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::BeginPrintThis(GtkPrintOperation *operation, GtkPrintContext *context) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkPrintOperation * operation,GtkPrintContext * context)
BeginUndoAction	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::BeginUndoAction() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
BeginUndoAction	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::BeginUndoAction() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
BeginUndoAction	..\\scintilla\\src\\Document.h	/^	void BeginUndoAction() { cb.BeginUndoAction(); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:()
BinOpr	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum BinOpr {$/;"	g
BinOpr	..\\scintilla\\lua\\src\\lcode.h	/^} BinOpr;$/;"	t	typeref:enum:BinOpr
BlockCnt	..\\scintilla\\lua\\src\\lparser.c	/^typedef struct BlockCnt {$/;"	s	file:
BlockCnt	..\\scintilla\\lua\\src\\lparser.c	/^} BlockCnt;$/;"	t	typeref:struct:BlockCnt	file:
BlockFromBaseStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	int BlockFromBaseStyle(int baseStyle) const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:private	signature:(int baseStyle) const
BlockFromStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	int BlockFromStyle(int style) const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:private	signature:(int style) const
BookmarkAdd	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::BookmarkAdd(int lineno) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int lineno)
BookmarkDelete	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::BookmarkDelete(int lineno) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int lineno)
BookmarkNext	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::BookmarkNext(bool forwardScan, bool select) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool forwardScan,bool select)
BookmarkPresent	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::BookmarkPresent(int lineno) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(int lineno)
BookmarkToggle	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::BookmarkToggle(int lineno) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int lineno)
BoundsContains	..\\scintilla\\win32\\ScintillaWin.cxx	/^static bool BoundsContains(PRectangle rcBounds, HRGN hRgnBounds, PRectangle rcCheck) {$/;"	f	typeref:typename:bool	file:	signature:(PRectangle rcBounds,HRGN hRgnBounds,PRectangle rcCheck)
BraceMatch	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::BraceMatch(Sci::Position position, Sci::Position \/*maxReStyle*\/) {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position position,Sci::Position)
BraceMatch	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::BraceMatch(bool editor) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool editor)
BraceOpposite	..\\scintilla\\src\\Document.cxx	/^static char BraceOpposite(char ch) {$/;"	f	typeref:typename:char	file:	signature:(char ch)
BreakFinder	..\\scintilla\\src\\PositionCache.cxx	/^BreakFinder::BreakFinder(const LineLayout *ll_, const Selection *psel, Range lineRange_, Sci::Po/;"	f	class:BreakFinder	signature:(const LineLayout * ll_,const Selection * psel,Range lineRange_,Sci::Position posLineStart_,int xStart,bool breakForSelection,const Document * pdoc_,const SpecialRepresentations * preprs_,const ViewStyle * pvsDraw)
BreakFinder	..\\scintilla\\src\\PositionCache.h	/^class BreakFinder {$/;"	c	namespace:Scintilla
BrowseCallbackProc	..\\scite\\win32\\SciTEWinDlg.cxx	/^static int __stdcall BrowseCallbackProc(HWND hwnd, UINT uMsg, LPARAM, LPARAM pData) {$/;"	f	typeref:typename:int __stdcall	file:	signature:(HWND hwnd,UINT uMsg,LPARAM,LPARAM pData)
BrushColor	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::BrushColor(ColourDesired back) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(ColourDesired back)
BrushColour	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::BrushColour(ColourDesired back)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(ColourDesired back)
Buffer	..\\scite\\src\\SciTEBase.h	/^	Buffer() :$/;"	f	class:Buffer	access:public	signature:()
Buffer	..\\scite\\src\\SciTEBase.h	/^class Buffer : public RecentFile {$/;"	c	inherits:RecentFile
BufferContainsNull	..\\scite\\src\\SciTEIO.cxx	/^	bool BufferContainsNull() {$/;"	f	class:BufferedFile	typeref:typename:bool	file:	access:public	signature:()
BufferContainsNull	..\\scite\\src\\SciTEIO.cxx	/^	bool BufferContainsNull() {$/;"	f	class:FileReader	typeref:typename:bool	file:	access:public	signature:()
BufferList	..\\scite\\src\\SciTEBase.h	/^class BufferList {$/;"	c
BufferList	..\\scite\\src\\SciTEBuffers.cxx	/^BufferList::BufferList() : current(0), stackcurrent(0), stack(0), buffers(0), size(0), length(0)/;"	f	class:BufferList	signature:()
BufferPointer	..\\scintilla\\src\\CellBuffer.cxx	/^const char *CellBuffer::BufferPointer() {$/;"	f	class:CellBuffer	typeref:typename:const char *	signature:()
BufferPointer	..\\scintilla\\src\\Document.h	/^	const char * SCI_METHOD BufferPointer() { return cb.BufferPointer(); }$/;"	f	class:Scintilla::Document	typeref:typename:const char * SCI_METHOD	access:public	signature:()
BufferPointer	..\\scintilla\\src\\SplitVector.h	/^	T *BufferPointer() {$/;"	f	class:Scintilla::SplitVector	typeref:typename:T *	access:public	signature:()
BufferState	..\\scite\\src\\SciTEBase.h	/^struct BufferState : public RecentFile {$/;"	s	inherits:RecentFile
BufferedFile	..\\scite\\src\\SciTEIO.cxx	/^	explicit BufferedFile(FilePath fPath) {$/;"	f	class:BufferedFile	file:	access:public	signature:(FilePath fPath)
BufferedFile	..\\scite\\src\\SciTEIO.cxx	/^class BufferedFile {$/;"	c	file:
BuffersMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::BuffersMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
BuiltinRegex	..\\scintilla\\src\\Document.cxx	/^	explicit BuiltinRegex(CharClassify *charClassTable) : search(charClassTable) {}$/;"	f	class:BuiltinRegex	file:	access:public	signature:(CharClassify * charClassTable)
BuiltinRegex	..\\scintilla\\src\\Document.cxx	/^class BuiltinRegex : public RegexSearchBase {$/;"	c	file:	inherits:RegexSearchBase
ButtonDownWithModifiers	..\\scintilla\\src\\Editor.cxx	/^void Editor::ButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,unsigned int curTime,int modifiers)
ButtonDownWithModifiers	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::ButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Point pt,unsigned int curTime,int modifiers)
ButtonMoveWithModifiers	..\\scintilla\\src\\Editor.cxx	/^void Editor::ButtonMoveWithModifiers(Point pt, unsigned int, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,unsigned int,int modifiers)
ButtonPress	..\\scintilla\\gtk\\PlatGTK.cxx	/^static gboolean ButtonPress(GtkWidget *, GdkEventButton* ev, gpointer p) {$/;"	f	typeref:typename:gboolean	file:	signature:(GtkWidget *,GdkEventButton * ev,gpointer p)
ButtonRelease	..\\scintilla\\gtk\\PlatGTK.cxx	/^static gboolean ButtonRelease(GtkWidget *, GdkEventButton* ev, gpointer p) {$/;"	f	typeref:typename:gboolean	file:	signature:(GtkWidget *,GdkEventButton * ev,gpointer p)
ButtonSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ButtonSignal(GtkWidget *, gpointer data) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkWidget *,gpointer data)
ButtonUpWithModifiers	..\\scintilla\\src\\Editor.cxx	/^void Editor::ButtonUpWithModifiers(Point pt, unsigned int curTime, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,unsigned int curTime,int modifiers)
ButtonsPress	..\\scite\\gtk\\Widget.cxx	/^gint Strip::ButtonsPress(GtkWidget *, GdkEventButton *event, Strip *pstrip) {$/;"	f	class:Strip	typeref:typename:gint	signature:(GtkWidget *,GdkEventButton * event,Strip * pstrip)
ByteIterator	..\\scintilla\\src\\Document.cxx	/^	ByteIterator(const ByteIterator &other) NOEXCEPT {$/;"	f	class:__anon1ef09aa80111::ByteIterator	file:	access:public	signature:(const ByteIterator & other)
ByteIterator	..\\scintilla\\src\\Document.cxx	/^	ByteIterator(const Document *doc_ = 0, Sci::Position position_ = 0) : doc(doc_), position(posit/;"	f	class:__anon1ef09aa80111::ByteIterator	file:	access:public	signature:(const Document * doc_=0,Sci::Position position_=0)
ByteIterator	..\\scintilla\\src\\Document.cxx	/^class ByteIterator {$/;"	c	namespace:__anon1ef09aa80111	file:
ByteOffsetFromCharacterOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	Sci::Position ByteOffsetFromCharacterOffset(Sci::Position characterOffset) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:Sci::Position	access:private	signature:(Sci::Position characterOffset)
ByteOffsetFromCharacterOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	Sci::Position ByteOffsetFromCharacterOffset(Sci::Position startByte, int characterOffset) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:Sci::Position	access:private	signature:(Sci::Position startByte,int characterOffset)
ByteRangeFromCharacterRange	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	void ByteRangeFromCharacterRange(int startChar, int endChar, Sci::Position& startByte, Sci::Pos/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:void	access:private	signature:(int startChar,int endChar,Sci::Position & startByte,Sci::Position & endByte)
BytesForDocument	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^QByteArray ScintillaQt::BytesForDocument(const QString &text) const$/;"	f	class:ScintillaQt	typeref:typename:QByteArray	signature:(const QString & text) const
BytesFromLead	..\\scintilla\\src\\UniConversion.cxx	/^static int BytesFromLead(int leadByte) {$/;"	f	namespace:Scintilla	typeref:typename:int	file:	signature:(int leadByte)
BytesResult	..\\scintilla\\src\\Editor.cxx	/^sptr_t Editor::BytesResult(sptr_t lParam, const unsigned char *val, size_t len) {$/;"	f	class:Editor	typeref:typename:sptr_t	signature:(sptr_t lParam,const unsigned char * val,size_t len)
CALLTIP_H	..\\scintilla\\src\\CallTip.h	/^#define CALLTIP_H$/;"	d
CAP_POSITION	..\\scintilla\\lua\\src\\lstrlib.c	/^#define CAP_POSITION	/;"	d	file:
CAP_UNFINISHED	..\\scintilla\\lua\\src\\lstrlib.c	/^#define CAP_UNFINISHED	/;"	d	file:
CARETSTYLE_BLOCK	..\\scintilla\\include\\Scintilla.h	/^#define CARETSTYLE_BLOCK /;"	d
CARETSTYLE_INVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define CARETSTYLE_INVISIBLE /;"	d
CARETSTYLE_LINE	..\\scintilla\\include\\Scintilla.h	/^#define CARETSTYLE_LINE /;"	d
CARET_EVEN	..\\scintilla\\include\\Scintilla.h	/^#define CARET_EVEN /;"	d
CARET_JUMPS	..\\scintilla\\include\\Scintilla.h	/^#define CARET_JUMPS /;"	d
CARET_SLOP	..\\scintilla\\include\\Scintilla.h	/^#define CARET_SLOP /;"	d
CARET_STRICT	..\\scintilla\\include\\Scintilla.h	/^#define CARET_STRICT /;"	d
CASECONVERT_H	..\\scintilla\\src\\CaseConvert.h	/^#define CASECONVERT_H$/;"	d
CASEFOLDER_H	..\\scintilla\\src\\CaseFolder.h	/^#define CASEFOLDER_H$/;"	d
CATALOGUE_H	..\\scintilla\\src\\Catalogue.h	/^#define CATALOGUE_H$/;"	d
CBS_HOT	..\\scite\\win32\\SciTEWin.h	/^#define CBS_HOT /;"	d
CBS_NORMAL	..\\scite\\win32\\SciTEWin.h	/^#define CBS_NORMAL /;"	d
CBS_PUSHED	..\\scite\\win32\\SciTEWin.h	/^#define CBS_PUSHED /;"	d
CCL	..\\scintilla\\src\\RESearch.cxx	/^#define CCL /;"	d	file:
CCLSKIP	..\\scintilla\\src\\RESearch.cxx	/^#define CCLSKIP /;"	d	file:
CCallS	..\\scintilla\\lua\\src\\lapi.c	/^struct CCallS {  \/* data to `f_Ccall' *\/$/;"	s	file:
CClosure	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct CClosure {$/;"	s
CClosure	..\\scintilla\\lua\\src\\lobject.h	/^} CClosure;$/;"	t	typeref:struct:CClosure
CELLBUFFER_H	..\\scintilla\\src\\CellBuffer.h	/^#define CELLBUFFER_H$/;"	d
CHARACTERCATEGORY_H	..\\scintilla\\lexlib\\CharacterCategory.h	/^#define CHARACTERCATEGORY_H$/;"	d
CHARACTERSET_H	..\\scintilla\\lexlib\\CharacterSet.h	/^#define CHARACTERSET_H$/;"	d
CHARCLASSIFY_H	..\\scintilla\\src\\CharClassify.h	/^#define CHARCLASSIFY_H$/;"	d
CHARSETINSTSIZE	..\\scintilla\\lua\\src\\lptypes.h	/^#define CHARSETINSTSIZE	/;"	d
CHARSETSIZE	..\\scintilla\\lua\\src\\lptypes.h	/^#define CHARSETSIZE	/;"	d
CHARZ	..\\scite\\src\\ExportTEX.cxx	/^#define CHARZ /;"	d	file:
CHR	..\\scintilla\\src\\RESearch.cxx	/^#define CHR /;"	d	file:
CHRBIT	..\\scintilla\\src\\RESearch.h	/^#define CHRBIT	/;"	d
CHRSKIP	..\\scintilla\\src\\RESearch.cxx	/^#define CHRSKIP /;"	d	file:
CLANG_ANALYZER_NORETURN	..\\scintilla\\include\\Platform.h	/^#  define CLANG_ANALYZER_NORETURN /;"	d
CLANG_ANALYZER_NORETURN	..\\scintilla\\include\\Platform.h	/^#  define CLANG_ANALYZER_NORETURN$/;"	d
CLANG_ANALYZER_NORETURN	..\\scintilla\\include\\Platform.h	/^# define CLANG_ANALYZER_NORETURN$/;"	d
CLEARTYPE_QUALITY	..\\scintilla\\win32\\PlatWin.cxx	/^#define CLEARTYPE_QUALITY /;"	d	file:
CLO	..\\scintilla\\src\\RESearch.cxx	/^#define CLO /;"	d	file:
CLQ	..\\scintilla\\src\\RESearch.cxx	/^#define CLQ /;"	d	file:
CLSID_HanjaDic	..\\scintilla\\win32\\HanjaDic.cxx	/^	CLSID CLSID_HanjaDic;$/;"	m	class:Scintilla::HanjaDict::HanjaDic	typeref:typename:CLSID	file:	access:private
COLOR_LBLACK	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LBLACK = COLOR_BLACK + 8;$/;"	v	typeref:typename:int	file:
COLOR_LBLUE	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LBLUE = COLOR_BLUE + 8;$/;"	v	typeref:typename:int	file:
COLOR_LCYAN	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LCYAN = COLOR_CYAN + 8;$/;"	v	typeref:typename:int	file:
COLOR_LGREEN	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LGREEN = COLOR_GREEN + 8;$/;"	v	typeref:typename:int	file:
COLOR_LMAGENTA	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LMAGENTA = COLOR_MAGENTA + 8;$/;"	v	typeref:typename:int	file:
COLOR_LRED	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LRED = COLOR_RED + 8;$/;"	v	typeref:typename:int	file:
COLOR_LWHITE	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LWHITE = COLOR_WHITE + 8;$/;"	v	typeref:typename:int	file:
COLOR_LYELLOW	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int COLOR_LYELLOW = COLOR_YELLOW + 8;$/;"	v	typeref:typename:int	file:
COMMAND_SIGNAL	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    COMMAND_SIGNAL,$/;"	e	enum:__anon9c9cef500103	file:	access:public
CONTAINERS_H	..\\scite\\src\\Containers.h	/^#define CONTAINERS_H$/;"	d
CONTRACTIONSTATE_H	..\\scintilla\\src\\ContractionState.h	/^#define CONTRACTIONSTATE_H$/;"	d
CONVERTER_H	..\\scintilla\\gtk\\Converter.h	/^#define CONVERTER_H$/;"	d
COPYRIGHT_DATES	..\\scite\\src\\SciTE.h	/^#define COPYRIGHT_DATES /;"	d
COPYRIGHT_YEARS	..\\scite\\src\\SciTE.h	/^#define COPYRIGHT_YEARS /;"	d
CO_DEAD	..\\scintilla\\lua\\src\\lbaselib.c	/^#define CO_DEAD	/;"	d	file:
CO_NOR	..\\scintilla\\lua\\src\\lbaselib.c	/^#define CO_NOR	/;"	d	file:
CO_RUN	..\\scintilla\\lua\\src\\lbaselib.c	/^#define CO_RUN	/;"	d	file:
CO_SUS	..\\scintilla\\lua\\src\\lbaselib.c	/^#define CO_SUS	/;"	d	file:
CREATE_ABC	..\\scintilla\\lua\\src\\lopcodes.h	/^#define CREATE_ABC(/;"	d	signature:(o,a,b,c)
CREATE_ABx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define CREATE_ABx(/;"	d	signature:(o,a,bc)
CRectContains	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static bool CRectContains(const cairo_rectangle_t &crcContainer, const cairo_rectangle_t &crcTes/;"	f	typeref:typename:bool	file:	signature:(const cairo_rectangle_t & crcContainer,const cairo_rectangle_t & crcTest)
CRectListContains	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static bool CRectListContains(const cairo_rectangle_list_t *crcListContainer, const cairo_rectan/;"	f	typeref:typename:bool	file:	signature:(const cairo_rectangle_list_t * crcListContainer,const cairo_rectangle_t & crcTest)
CSI	..\\scite\\src\\SciTEBuffers.cxx	/^#define CSI /;"	d	file:
CTWndProc	..\\scintilla\\win32\\ScintillaWin.cxx	/^LRESULT PASCAL ScintillaWin::CTWndProc($/;"	f	class:ScintillaWin	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
CYAN	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired CYAN(0, 0x80, 0x80);$/;"	v	typeref:typename:ColourDesired	file:
CalcLargestMarkerHeight	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::CalcLargestMarkerHeight() {$/;"	f	class:ViewStyle	typeref:typename:void	signature:()
CalculateColumnWidths	..\\scite\\src\\StripDefinition.h	/^	void CalculateColumnWidths(int widthToAllocate) {$/;"	f	class:StripDefinition	typeref:typename:void	access:public	signature:(int widthToAllocate)
CalculateMarginWidthAndMask	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::CalculateMarginWidthAndMask() {$/;"	f	class:ViewStyle	typeref:typename:void	signature:()
Call	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^	def Call(self, message, wParam=0, lParam=0):$/;"	m	class:Form	access:public	signature:(self, message, wParam=0, lParam=0)
Call	..\\scite\\src\\GUI.h	/^	int Call(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:int	access:public	signature:(unsigned int msg,uptr_t wParam=0,sptr_t lParam=0)
CallBackAction	..\\scintilla\\include\\Platform.h	/^typedef void (*CallBackAction)(void*);$/;"	t	namespace:Scintilla	typeref:typename:void (*)(void *)
CallChildren	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::CallChildren(unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(unsigned int msg,uptr_t wParam,sptr_t lParam)
CallFocused	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::CallFocused(unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(unsigned int msg,uptr_t wParam,sptr_t lParam)
CallFocusedElseDefault	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::CallFocusedElseDefault(int defaultValue, unsigned int msg, uptr_t wParam, sptr_t /;"	f	class:SciTEBase	typeref:typename:int	signature:(int defaultValue,unsigned int msg,uptr_t wParam,sptr_t lParam)
CallInfo	..\\scintilla\\lua\\src\\lstate.h	/^typedef struct CallInfo {$/;"	s
CallInfo	..\\scintilla\\lua\\src\\lstate.h	/^} CallInfo;$/;"	t	typeref:struct:CallInfo
CallNamedFunction	..\\scite\\src\\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name) {$/;"	f	typeref:typename:bool	file:	signature:(const char * name)
CallNamedFunction	..\\scite\\src\\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name, const char *arg) {$/;"	f	typeref:typename:bool	file:	signature:(const char * name,const char * arg)
CallNamedFunction	..\\scite\\src\\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name, int numberArg, const char *stringArg) {$/;"	f	typeref:typename:bool	file:	signature:(const char * name,int numberArg,const char * stringArg)
CallNamedFunction	..\\scite\\src\\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name, int numberArg, int numberArg2) {$/;"	f	typeref:typename:bool	file:	signature:(const char * name,int numberArg,int numberArg2)
CallPane	..\\scite\\src\\SciTEBase.cxx	/^sptr_t SciTEBase::CallPane(int destination, unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	typeref:typename:sptr_t	signature:(int destination,unsigned int msg,uptr_t wParam,sptr_t lParam)
CallPointer	..\\scite\\src\\GUI.h	/^	int CallPointer(unsigned int msg, uptr_t wParam, void *s) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:int	access:public	signature:(unsigned int msg,uptr_t wParam,void * s)
CallReturnPointer	..\\scite\\src\\GUI.h	/^	sptr_t CallReturnPointer(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:sptr_t	access:public	signature:(unsigned int msg,uptr_t wParam=0,sptr_t lParam=0)
CallS	..\\scintilla\\lua\\src\\lapi.c	/^struct CallS {  \/* data to `f_call' *\/$/;"	s	file:
CallSearchOnAllWindows	..\\scite\\win32\\UniqueInstance.cxx	/^void UniqueInstance::CallSearchOnAllWindows() {$/;"	f	class:UniqueInstance	typeref:typename:void	signature:()
CallString	..\\scite\\src\\GUI.h	/^	int CallString(unsigned int msg, uptr_t wParam, const char *s) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:int	access:public	signature:(unsigned int msg,uptr_t wParam,const char * s)
CallTip	..\\scintilla\\src\\CallTip.cxx	/^CallTip::CallTip() {$/;"	f	class:CallTip	signature:()
CallTip	..\\scintilla\\src\\CallTip.h	/^class CallTip {$/;"	c	namespace:Scintilla
CallTipCancel	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::CallTipCancel() {$/;"	f	class:CallTip	typeref:typename:void	signature:()
CallTipClick	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::CallTipClick() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
CallTipShow	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::CallTipShow(Point pt, const char *defn) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Point pt,const char * defn)
CallTipStart	..\\scintilla\\src\\CallTip.cxx	/^PRectangle CallTip::CallTipStart(Sci::Position pos, Point pt, int textHeight, const char *defn,$/;"	f	class:CallTip	typeref:typename:PRectangle	signature:(Sci::Position pos,Point pt,int textHeight,const char * defn,const char * faceName,int size,int codePage_,int characterSet,int technology,Window & wParent)
CallbackData	..\\scite\\gtk\\SciTEGTK.cxx	/^	CallbackData(SciTEGTK *pSciTE_, int cmd_, Worker *pWorker_) : pSciTE(pSciTE_), cmd(cmd_), pWork/;"	f	struct:CallbackData	file:	access:public	signature:(SciTEGTK * pSciTE_,int cmd_,Worker * pWorker_)
CallbackData	..\\scite\\gtk\\SciTEGTK.cxx	/^struct CallbackData {$/;"	s	file:
Caller	..\\scite\\win32\\SciTEWinDlg.cxx	/^static SciTEWin *Caller(HWND hDlg, UINT message, LPARAM lParam) {$/;"	f	typeref:typename:SciTEWin *	file:	signature:(HWND hDlg,UINT message,LPARAM lParam)
CanCall	..\\scite\\src\\GUI.h	/^	bool CanCall() const {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:bool	access:public	signature:() const
CanDeferToLastStep	..\\scintilla\\src\\Editor.cxx	/^static bool CanDeferToLastStep(const DocModification &mh) {$/;"	f	typeref:typename:bool	file:	signature:(const DocModification & mh)
CanEliminate	..\\scintilla\\src\\Editor.cxx	/^static bool CanEliminate(const DocModification &mh) {$/;"	f	typeref:typename:bool	file:	signature:(const DocModification & mh)
CanMakeRoom	..\\scite\\src\\SciTEBuffers.cxx	/^bool SciTEBase::CanMakeRoom(bool maySaveIfDirty) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(bool maySaveIfDirty)
CanPaste	..\\scintilla\\src\\Editor.cxx	/^bool Editor::CanPaste() {$/;"	f	class:Editor	typeref:typename:bool	signature:()
CanPaste	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::CanPaste() {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:()
CanRedo	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::CanRedo() const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:() const
CanRedo	..\\scintilla\\src\\CellBuffer.cxx	/^bool UndoHistory::CanRedo() const {$/;"	f	class:UndoHistory	typeref:typename:bool	signature:() const
CanRedo	..\\scintilla\\src\\Document.h	/^	bool CanRedo() const { return cb.CanRedo(); }$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:() const
CanUndo	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::CanUndo() const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:() const
CanUndo	..\\scintilla\\src\\CellBuffer.cxx	/^bool UndoHistory::CanUndo() const {$/;"	f	class:UndoHistory	typeref:typename:bool	signature:() const
CanUndo	..\\scintilla\\src\\Document.h	/^	bool CanUndo() const { return cb.CanUndo(); }$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:() const
Cancel	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::Cancel() {$/;"	f	class:AutoComplete	typeref:typename:void	signature:()
Cancel	..\\scite\\src\\FileWorker.cxx	/^void FileLoader::Cancel() {$/;"	f	class:FileLoader	typeref:typename:void	signature:()
Cancel	..\\scite\\src\\FileWorker.cxx	/^void FileStorer::Cancel() {$/;"	f	class:FileStorer	typeref:typename:void	signature:()
Cancel	..\\scite\\src\\FileWorker.h	/^	virtual void Cancel() {$/;"	f	struct:FileWorker	typeref:typename:void	access:public	signature:()
Cancel	..\\scite\\src\\Worker.h	/^	virtual void Cancel() {$/;"	f	struct:Worker	typeref:typename:void	access:public	signature:()
CancelLoad	..\\scite\\src\\SciTEBuffers.cxx	/^void Buffer::CancelLoad() {$/;"	f	class:Buffer	typeref:typename:void	signature:()
CancelModes	..\\scintilla\\src\\Editor.cxx	/^void Editor::CancelModes() {$/;"	f	class:Editor	typeref:typename:void	signature:()
CancelModes	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::CancelModes() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
Cancelled	..\\scite\\src\\JobQueue.h	/^	long Cancelled() {$/;"	f	class:JobQueue	typeref:typename:long	access:public	signature:()
Cancelling	..\\scite\\src\\Worker.h	/^	bool Cancelling() const {$/;"	f	struct:Worker	typeref:typename:bool	access:public	signature:() const
CapKind	..\\scintilla\\lua\\src\\lpcap.h	/^typedef enum CapKind {$/;"	g
CapKind	..\\scintilla\\lua\\src\\lpcap.h	/^} CapKind;$/;"	t	typeref:enum:CapKind
CapState	..\\scintilla\\lua\\src\\lpcap.h	/^typedef struct CapState {$/;"	s
CapState	..\\scintilla\\lua\\src\\lpcap.h	/^} CapState;$/;"	t	typeref:struct:CapState
Capture	..\\scintilla\\lua\\src\\lpcap.h	/^typedef struct Capture {$/;"	s
Capture	..\\scintilla\\lua\\src\\lpcap.h	/^} Capture;$/;"	t	typeref:struct:Capture
Caret	..\\scintilla\\src\\EditModel.cxx	/^Caret::Caret() :$/;"	f	class:Caret	signature:()
Caret	..\\scintilla\\src\\EditModel.h	/^class Caret {$/;"	c	namespace:Scintilla
CaretFromEdge	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int CaretFromEdge() { return 2; }$/;"	f	class:ListBoxImpl	typeref:typename:int	file:	access:public	signature:()
CaretFromEdge	..\\scintilla\\gtk\\PlatGTK.cxx	/^int ListBoxX::CaretFromEdge() {$/;"	f	class:ListBoxX	typeref:typename:int	signature:()
CaretFromEdge	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int ListBoxImpl::CaretFromEdge()$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:int	signature:()
CaretFromEdge	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::CaretFromEdge() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:()
CaretSetPeriod	..\\scintilla\\src\\Editor.cxx	/^void Editor::CaretSetPeriod(int period) {$/;"	f	class:Editor	typeref:typename:void	signature:(int period)
Carg	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
CaseConversion	..\\scintilla\\src\\CaseConvert.h	/^enum CaseConversion {$/;"	g	namespace:Scintilla
CaseConversionFold	..\\scintilla\\src\\CaseConvert.h	/^	CaseConversionFold,$/;"	e	enum:Scintilla::CaseConversion	access:public
CaseConversionLower	..\\scintilla\\src\\CaseConvert.h	/^	CaseConversionLower$/;"	e	enum:Scintilla::CaseConversion	access:public
CaseConversionUpper	..\\scintilla\\src\\CaseConvert.h	/^	CaseConversionUpper,$/;"	e	enum:Scintilla::CaseConversion	access:public
CaseConvert	..\\scintilla\\src\\CaseConvert.cxx	/^const char *CaseConvert(int character, enum CaseConversion conversion) {$/;"	f	namespace:Scintilla	typeref:typename:const char *	signature:(int character,enum CaseConversion conversion)
CaseConvertString	..\\scintilla\\src\\CaseConvert.cxx	/^	size_t CaseConvertString(char *converted, size_t sizeConverted, const char *mixed, size_t lenMi/;"	f	class:__anon1fb76d660111::CaseConverter	typeref:typename:size_t	file:	access:public	signature:(char * converted,size_t sizeConverted,const char * mixed,size_t lenMixed)
CaseConvertString	..\\scintilla\\src\\CaseConvert.cxx	/^size_t CaseConvertString(char *converted, size_t sizeConverted, const char *mixed, size_t lenMix/;"	f	namespace:Scintilla	typeref:typename:size_t	signature:(char * converted,size_t sizeConverted,const char * mixed,size_t lenMixed,enum CaseConversion conversion)
CaseConvertString	..\\scintilla\\src\\CaseConvert.cxx	/^std::string CaseConvertString(const std::string &s, enum CaseConversion conversion) {$/;"	f	namespace:Scintilla	typeref:typename:std::string	signature:(const std::string & s,enum CaseConversion conversion)
CaseConverter	..\\scintilla\\src\\CaseConvert.cxx	/^	CaseConverter() {$/;"	f	class:__anon1fb76d660111::CaseConverter	file:	access:public	signature:()
CaseConverter	..\\scintilla\\src\\CaseConvert.cxx	/^class CaseConverter : public ICaseConverter {$/;"	c	namespace:__anon1fb76d660111	file:	inherits:ICaseConverter
CaseFolder	..\\scintilla\\src\\CaseFolder.h	/^class CaseFolder {$/;"	c	namespace:Scintilla
CaseFolderASCII	..\\scintilla\\src\\Editor.cxx	/^	CaseFolderASCII() {$/;"	f	class:CaseFolderASCII	file:	access:public	signature:()
CaseFolderASCII	..\\scintilla\\src\\Editor.cxx	/^class CaseFolderASCII : public CaseFolderTable {$/;"	c	file:	inherits:CaseFolderTable
CaseFolderDBCS	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	explicit CaseFolderDBCS(const char *charSet_) : charSet(charSet_) {$/;"	f	class:CaseFolderDBCS	file:	access:public	signature:(const char * charSet_)
CaseFolderDBCS	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^class CaseFolderDBCS : public CaseFolderTable {$/;"	c	file:	inherits:CaseFolderTable
CaseFolderDBCS	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	explicit CaseFolderDBCS(QTextCodec *codec_) : codec(codec_) {$/;"	f	class:CaseFolderDBCS	file:	access:public	signature:(QTextCodec * codec_)
CaseFolderDBCS	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^class CaseFolderDBCS : public CaseFolderTable {$/;"	c	file:	inherits:CaseFolderTable
CaseFolderDBCS	..\\scintilla\\win32\\ScintillaWin.cxx	/^	explicit CaseFolderDBCS(UINT cp_) : cp(cp_) {$/;"	f	class:CaseFolderDBCS	file:	access:public	signature:(UINT cp_)
CaseFolderDBCS	..\\scintilla\\win32\\ScintillaWin.cxx	/^class CaseFolderDBCS : public CaseFolderTable {$/;"	c	file:	inherits:CaseFolderTable
CaseFolderForEncoding	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^CaseFolder *ScintillaGTK::CaseFolderForEncoding() {$/;"	f	class:ScintillaGTK	typeref:typename:CaseFolder *	signature:()
CaseFolderForEncoding	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^CaseFolder *ScintillaQt::CaseFolderForEncoding()$/;"	f	class:ScintillaQt	typeref:typename:CaseFolder *	signature:()
CaseFolderForEncoding	..\\scintilla\\src\\Editor.cxx	/^CaseFolder *Editor::CaseFolderForEncoding() {$/;"	f	class:Editor	typeref:typename:CaseFolder *	signature:()
CaseFolderForEncoding	..\\scintilla\\win32\\ScintillaWin.cxx	/^CaseFolder *ScintillaWin::CaseFolderForEncoding() {$/;"	f	class:ScintillaWin	typeref:typename:CaseFolder *	signature:()
CaseFolderTable	..\\scintilla\\src\\CaseFolder.cxx	/^CaseFolderTable::CaseFolderTable() {$/;"	f	class:CaseFolderTable	signature:()
CaseFolderTable	..\\scintilla\\src\\CaseFolder.h	/^class CaseFolderTable : public CaseFolder {$/;"	c	namespace:Scintilla	inherits:CaseFolder
CaseFolderUnicode	..\\scintilla\\src\\CaseFolder.cxx	/^CaseFolderUnicode::CaseFolderUnicode() {$/;"	f	class:CaseFolderUnicode	signature:()
CaseFolderUnicode	..\\scintilla\\src\\CaseFolder.h	/^class CaseFolderUnicode : public CaseFolderTable {$/;"	c	namespace:Scintilla	inherits:CaseFolderTable
CaseMapString	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^std::string ScintillaGTK::CaseMapString(const std::string &s, int caseMapping) {$/;"	f	class:ScintillaGTK	typeref:typename:std::string	signature:(const std::string & s,int caseMapping)
CaseMapString	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^std::string ScintillaQt::CaseMapString(const std::string &s, int caseMapping)$/;"	f	class:ScintillaQt	typeref:typename:std::string	signature:(const std::string & s,int caseMapping)
CaseMapString	..\\scintilla\\src\\Editor.cxx	/^std::string Editor::CaseMapString(const std::string &s, int caseMapping) {$/;"	f	class:Editor	typeref:typename:std::string	signature:(const std::string & s,int caseMapping)
CaseMapString	..\\scintilla\\win32\\ScintillaWin.cxx	/^std::string ScintillaWin::CaseMapString(const std::string &s, int caseMapping) {$/;"	f	class:ScintillaWin	typeref:typename:std::string	signature:(const std::string & s,int caseMapping)
CaseMapper	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	CaseMapper(const std::string &sUTF8, bool toUpperCase) {$/;"	f	struct:__anon9c9cef500411::CaseMapper	file:	access:public	signature:(const std::string & sUTF8,bool toUpperCase)
CaseMapper	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^struct CaseMapper {$/;"	s	namespace:__anon9c9cef500411	file:
Catalogue	..\\scintilla\\src\\Catalogue.h	/^class Catalogue {$/;"	c	namespace:Scintilla
CategoriseCharacter	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^CharacterCategory CategoriseCharacter(int character) {$/;"	f	namespace:Scintilla	typeref:typename:CharacterCategory	signature:(int character)
Cbackref	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
Cclose	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
Cconst	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
CellBuffer	..\\scintilla\\src\\CellBuffer.cxx	/^CellBuffer::CellBuffer(bool hasStyles_) :$/;"	f	class:CellBuffer	signature:(bool hasStyles_)
CellBuffer	..\\scintilla\\src\\CellBuffer.h	/^class CellBuffer {$/;"	c	namespace:Scintilla
CentreItem	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::CentreItem(int n) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int n)
Cfold	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
Cfunction	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
Cgroup	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
ChSet	..\\scintilla\\src\\RESearch.cxx	/^void RESearch::ChSet(unsigned char c) {$/;"	f	class:RESearch	typeref:typename:void	signature:(unsigned char c)
ChSetWithCase	..\\scintilla\\src\\RESearch.cxx	/^void RESearch::ChSetWithCase(unsigned char c, bool caseSensitive) {$/;"	f	class:RESearch	typeref:typename:void	signature:(unsigned char c,bool caseSensitive)
ChangeCaseOfSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::ChangeCaseOfSelection(int caseMapping) {$/;"	f	class:Editor	typeref:typename:void	signature:(int caseMapping)
ChangeDocument	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::ChangeDocument(Document *oldDoc, Document *newDoc) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(Document * oldDoc,Document * newDoc)
ChangeFunction	..\\scite\\gtk\\Widget.h	/^	typedef void (*ChangeFunction)(WCheckDraw *cd, void *user);$/;"	t	class:WCheckDraw	typeref:typename:void (*)(WCheckDraw * cd,void * user)	access:public
ChangeInsertion	..\\scintilla\\src\\Document.cxx	/^void Document::ChangeInsertion(const char *s, Sci::Position length) {$/;"	f	class:Document	typeref:typename:void	signature:(const char * s,Sci::Position length)
ChangeLexerState	..\\scintilla\\lexlib\\LexAccessor.h	/^	void ChangeLexerState(Sci_Position start, Sci_Position end) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:(Sci_Position start,Sci_Position end)
ChangeLexerState	..\\scintilla\\src\\Document.cxx	/^void SCI_METHOD Document::ChangeLexerState(Sci_Position start, Sci_Position end) {$/;"	f	class:Document	typeref:typename:void SCI_METHOD	signature:(Sci_Position start,Sci_Position end)
ChangeScrollPos	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ChangeScrollPos(int barType, Sci::Position pos) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(int barType,Sci::Position pos)
ChangeSize	..\\scintilla\\src\\Editor.cxx	/^void Editor::ChangeSize() {$/;"	f	class:Editor	typeref:typename:void	signature:()
ChangeState	..\\scintilla\\lexlib\\StyleContext.h	/^	void ChangeState(int state_) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:(int state_)
ChangeState	..\\scite\\src\\LuaExtension.cxx	/^	static int ChangeState(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
ChangingSource	..\\scite\\win32\\Strips.h	/^	enum ChangingSource { changingEdit, changingCombo };$/;"	g	class:FindReplaceStrip	access:protected
CharAdded	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::CharAdded(int utf32) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int utf32)
CharAddedOutput	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::CharAddedOutput(int ch) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int ch)
CharAt	..\\scintilla\\src\\CellBuffer.cxx	/^char CellBuffer::CharAt(Sci::Position position) const {$/;"	f	class:CellBuffer	typeref:typename:char	signature:(Sci::Position position) const
CharAt	..\\scintilla\\src\\Document.cxx	/^	char CharAt(Sci::Position index) const override {$/;"	f	class:__anon1ef09aa80111::DocumentIndexer	typeref:typename:char	file:	access:public	signature:(Sci::Position index) const
CharAt	..\\scintilla\\src\\Document.h	/^	char CharAt(Sci::Position position) const { return cb.CharAt(position); }$/;"	f	class:Scintilla::Document	typeref:typename:char	access:public	signature:(Sci::Position position) const
CharAt	..\\scite\\src\\LuaExtension.cxx	/^	static int CharAt(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
CharClassify	..\\scintilla\\src\\CharClassify.cxx	/^CharClassify::CharClassify() {$/;"	f	class:CharClassify	signature:()
CharClassify	..\\scintilla\\src\\CharClassify.h	/^class CharClassify {$/;"	c	namespace:Scintilla
CharPtrFromSPtr	..\\scintilla\\src\\Editor.cxx	/^static char *CharPtrFromSPtr(sptr_t lParam) {$/;"	f	typeref:typename:char *	file:	signature:(sptr_t lParam)
CharacterAfter	..\\scintilla\\src\\Document.cxx	/^Document::CharacterExtracted Document::CharacterAfter(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:Document::CharacterExtracted	signature:(Sci::Position position) const
CharacterBefore	..\\scintilla\\src\\Document.cxx	/^Document::CharacterExtracted Document::CharacterBefore(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:Document::CharacterExtracted	signature:(Sci::Position position) const
CharacterCategory	..\\scintilla\\lexlib\\CharacterCategory.h	/^enum CharacterCategory {$/;"	g	namespace:Scintilla
CharacterConversion	..\\scintilla\\src\\CaseConvert.cxx	/^		CharacterConversion(int character_=0, const char *conversion_="") : character(character_) {$/;"	f	struct:__anon1fb76d660111::CaseConverter::CharacterConversion	file:	access:public	signature:(int character_=0,const char * conversion_="")
CharacterConversion	..\\scintilla\\src\\CaseConvert.cxx	/^	struct CharacterConversion {$/;"	s	class:__anon1fb76d660111::CaseConverter	file:	access:private
CharacterExtracted	..\\scintilla\\src\\Document.h	/^		CharacterExtracted(unsigned int character_, unsigned int widthBytes_) :$/;"	f	struct:Scintilla::Document::CharacterExtracted	access:public	signature:(unsigned int character_,unsigned int widthBytes_)
CharacterExtracted	..\\scintilla\\src\\Document.h	/^	struct CharacterExtracted {$/;"	s	class:Scintilla::Document	access:public
CharacterInSelection	..\\scintilla\\src\\Selection.cxx	/^int Selection::CharacterInSelection(Sci::Position posCharacter) const {$/;"	f	class:Selection	typeref:typename:int	signature:(Sci::Position posCharacter) const
CharacterIndexer	..\\scintilla\\src\\RESearch.h	/^class CharacterIndexer {$/;"	c	namespace:Scintilla
CharacterOffsetFromByteOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	Sci::Position CharacterOffsetFromByteOffset(Sci::Position byteOffset) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:Sci::Position	access:private	signature:(Sci::Position byteOffset)
CharacterRange	..\\scintilla\\include\\Scintilla.h	/^#define CharacterRange /;"	d
CharacterRangeFromByteRange	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	void CharacterRangeFromByteRange(Sci::Position startByte, Sci::Position endByte, int *startChar/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:void	access:private	signature:(Sci::Position startByte,Sci::Position endByte,int * startChar,int * endChar)
CharacterSet	..\\scintilla\\lexlib\\CharacterSet.h	/^	CharacterSet(const CharacterSet &other) {$/;"	f	class:Scintilla::CharacterSet	access:public	signature:(const CharacterSet & other)
CharacterSet	..\\scintilla\\lexlib\\CharacterSet.h	/^	CharacterSet(setBase base=setNone, const char *initialSet="", int size_=0x80, bool valueAfter_=/;"	f	class:Scintilla::CharacterSet	access:public	signature:(setBase base=setNone,const char * initialSet="",int size_=0x80,bool valueAfter_=false)
CharacterSet	..\\scintilla\\lexlib\\CharacterSet.h	/^class CharacterSet {$/;"	c	namespace:Scintilla
CharacterSetID	..\\scintilla\\gtk\\PlatGTK.cxx	/^const char *CharacterSetID(int characterSet) {$/;"	f	typeref:typename:const char *	signature:(int characterSet)
CharacterSetID	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^const char *ScintillaGTK::CharacterSetID() const {$/;"	f	class:ScintillaGTK	typeref:typename:const char *	signature:() const
CharacterSetID	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^const char *CharacterSetID(int characterSet)$/;"	f	namespace:Scintilla	typeref:typename:const char *	signature:(int characterSet)
CharacterSetIDOfDocument	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^const char *ScintillaQt::CharacterSetIDOfDocument() const$/;"	f	class:ScintillaQt	typeref:typename:const char *	signature:() const
CharacterSetOfDocument	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^int ScintillaQt::CharacterSetOfDocument() const$/;"	f	class:ScintillaQt	typeref:typename:int	signature:() const
CharacterToConversion	..\\scintilla\\src\\CaseConvert.cxx	/^	typedef std::vector<CharacterConversion> CharacterToConversion;$/;"	t	class:__anon1fb76d660111::CaseConverter	typeref:typename:std::vector<CharacterConversion>	file:	access:private
Charset	..\\scintilla\\lua\\src\\lptypes.h	/^typedef struct Charset {$/;"	s
Charset	..\\scintilla\\lua\\src\\lptypes.h	/^} Charset;$/;"	t	typeref:struct:Charset
Check	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::Check() const {$/;"	f	class:ContractionState	typeref:typename:void	signature:() const
Check	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::Check() const {$/;"	f	class:RunStyles	typeref:typename:void	signature:() const
Check	..\\scintilla\\src\\SparseVector.h	/^	void Check() const {$/;"	f	class:Scintilla::SparseVector	typeref:typename:void	access:public	signature:() const
CheckAMenuItem	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CheckAMenuItem(int wIDCheckItem, bool val) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int wIDCheckItem,bool val)
CheckAMenuItem	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::CheckAMenuItem(int wIDCheckItem, bool val) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int wIDCheckItem,bool val)
CheckButton	..\\scite\\win32\\Strips.cxx	/^static void CheckButton(const GUI::Window &wButton, bool checked) {$/;"	f	typeref:typename:void	file:	signature:(const GUI::Window & wButton,bool checked)
CheckButtons	..\\scite\\win32\\Strips.cxx	/^void FindStrip::CheckButtons() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
CheckButtons	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::CheckButtons() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
CheckCommonDialogError	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::CheckCommonDialogError() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
CheckEnvironment	..\\scite\\gtk\\DirectorExtension.cxx	/^static void CheckEnvironment(ExtensionAPI *host) {$/;"	f	typeref:typename:void	file:	signature:(ExtensionAPI * host)
CheckEnvironment	..\\scite\\win32\\DirectorExtension.cxx	/^static void CheckEnvironment(ExtensionAPI *phost) {$/;"	f	typeref:typename:void	file:	signature:(ExtensionAPI * phost)
CheckFiles	..\\scintilla\\scripts\\HeaderCheck.py	/^def CheckFiles(root):$/;"	f	access:public	signature:(root)
CheckForChangeOutsidePaint	..\\scintilla\\src\\Editor.cxx	/^void Editor::CheckForChangeOutsidePaint(Range r) {$/;"	f	class:Editor	typeref:typename:void	signature:(Range r)
CheckForRunningInstance	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::CheckForRunningInstance(int argc, char *argv[]) {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:(int argc,char * argv[])
CheckForScintillaFailure	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::CheckForScintillaFailure(int statusFailure) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int statusFailure)
CheckMenus	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CheckMenus() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
CheckMenus	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::CheckMenus() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
CheckMenus	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::CheckMenus() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
CheckMenusClipboard	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CheckMenusClipboard() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
CheckMenusClipboard	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::CheckMenusClipboard() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
CheckMessage	..\\scite\\win32\\UniqueInstance.cxx	/^LRESULT UniqueInstance::CheckMessage(UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:UniqueInstance	typeref:typename:LRESULT	signature:(UINT message,WPARAM wParam,LPARAM lParam)
CheckModificationForWrap	..\\scintilla\\src\\Editor.cxx	/^void Editor::CheckModificationForWrap(DocModification mh) {$/;"	f	class:Editor	typeref:typename:void	signature:(DocModification mh)
CheckOtherInstance	..\\scite\\win32\\UniqueInstance.cxx	/^void UniqueInstance::CheckOtherInstance() {$/;"	f	class:UniqueInstance	typeref:typename:void	signature:()
CheckReadOnly	..\\scintilla\\src\\Document.cxx	/^void Document::CheckReadOnly() {$/;"	f	class:Document	typeref:typename:void	signature:()
CheckReload	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::CheckReload() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
CheckStartupScript	..\\scite\\src\\LuaExtension.cxx	/^static bool CheckStartupScript() {$/;"	f	typeref:typename:bool	file:	signature:()
CheckToolbarButton	..\\scite\\win32\\SciTEWinBar.cxx	/^static void CheckToolbarButton(HWND wTools, int id, bool enable) {$/;"	f	typeref:typename:void	file:	signature:(HWND wTools,int id,bool enable)
Checked	..\\scite\\win32\\SciTEWinDlg.cxx	/^	bool Checked(int id) {$/;"	f	class:Dialog	typeref:typename:bool	file:	access:public	signature:(int id)
ChildFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::ChildFocus(GtkWidget *widget) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(GtkWidget * widget)
ChildFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ChildFocus(GtkWidget *widget) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(GtkWidget * widget)
ChildFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::ChildFocus(GtkWidget *widget) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(GtkWidget * widget)
ChildFocus	..\\scite\\gtk\\Widget.cxx	/^void Strip::ChildFocus(GtkWidget *widget) {$/;"	f	class:Strip	typeref:typename:void	signature:(GtkWidget * widget)
ChildFocusSignal	..\\scite\\gtk\\Widget.cxx	/^gboolean Strip::ChildFocusSignal(GtkContainer *\/*container*\/, GtkWidget *widget, Strip *pStrip/;"	f	class:Strip	typeref:typename:gboolean	signature:(GtkContainer *,GtkWidget * widget,Strip * pStrip)
Chomp	..\\scite\\src\\SciTEBuffers.cxx	/^static void Chomp(std::string &s, int ch) {$/;"	f	typeref:typename:void	file:	signature:(std::string & s,int ch)
ChooseSaveName	..\\scite\\win32\\SciTEWinDlg.cxx	/^FilePath SciTEWin::ChooseSaveName(FilePath directory, const char *title, const GUI::gui_char *fi/;"	f	class:SciTEWin	typeref:typename:FilePath	signature:(FilePath directory,const char * title,const GUI::gui_char * filesFilter,const char * ext)
ChooseStrategy	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^static QFont::StyleStrategy ChooseStrategy(int eff)$/;"	f	namespace:Scintilla	typeref:typename:QFont::StyleStrategy	file:	signature:(int eff)
Chrome	..\\scintilla\\curses\\ScintillaCurses.cxx	/^ColourDesired Platform::Chrome() { return ColourDesired(0, 0, 0); }$/;"	f	class:Platform	typeref:typename:ColourDesired	signature:()
Chrome	..\\scintilla\\gtk\\PlatGTK.cxx	/^ColourDesired Platform::Chrome() {$/;"	f	class:Platform	typeref:typename:ColourDesired	signature:()
Chrome	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ColourDesired Platform::Chrome()$/;"	f	class:Scintilla::Platform	typeref:typename:ColourDesired	signature:()
Chrome	..\\scintilla\\win32\\PlatWin.cxx	/^ColourDesired Platform::Chrome() {$/;"	f	class:Scintilla::Platform	typeref:typename:ColourDesired	signature:()
ChromeHighlight	..\\scintilla\\curses\\ScintillaCurses.cxx	/^ColourDesired Platform::ChromeHighlight() { return ColourDesired(0, 0, 0); }$/;"	f	class:Platform	typeref:typename:ColourDesired	signature:()
ChromeHighlight	..\\scintilla\\gtk\\PlatGTK.cxx	/^ColourDesired Platform::ChromeHighlight() {$/;"	f	class:Platform	typeref:typename:ColourDesired	signature:()
ChromeHighlight	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ColourDesired Platform::ChromeHighlight()$/;"	f	class:Scintilla::Platform	typeref:typename:ColourDesired	signature:()
ChromeHighlight	..\\scintilla\\win32\\PlatWin.cxx	/^ColourDesired Platform::ChromeHighlight() {$/;"	f	class:Scintilla::Platform	typeref:typename:ColourDesired	signature:()
ClaimSelection	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void ClaimSelection() {}$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
ClaimSelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ClaimSelection() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
ClaimSelection	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::ClaimSelection()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
ClaimSelection	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ClaimSelection() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
ClampPositionIntoDocument	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::ClampPositionIntoDocument(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos) const
ClampPositionIntoDocument	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::ClampPositionIntoDocument(SelectionPosition sp) const {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(SelectionPosition sp) const
ClassInit	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ClassInit(OBJECT_CLASS* object_class, GtkWidgetClass *widget_class, GtkContai/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(OBJECT_CLASS * object_class,GtkWidgetClass * widget_class,GtkContainerClass * container_class)
ClassNameOfWindow	..\\scite\\win32\\Strips.cxx	/^GUI::gui_string ClassNameOfWindow(HWND hWnd) {$/;"	f	typeref:typename:GUI::gui_string	signature:(HWND hWnd)
Classifier	..\\scintilla\\lexlib\\SubStyles.h	/^	const WordClassifier &Classifier(int baseStyle) const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:const WordClassifier &	access:public	signature:(int baseStyle) const
Clear	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Clear() {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:()
Clear	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::Clear() {$/;"	f	class:ListBoxX	typeref:typename:void	signature:()
Clear	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Clear() {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:()
Clear	..\\scintilla\\lexlib\\SubStyles.h	/^	void Clear() {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:void	access:public	signature:()
Clear	..\\scintilla\\lexlib\\WordList.cxx	/^void WordList::Clear() {$/;"	f	class:WordList	typeref:typename:void	signature:()
Clear	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::Clear()$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\CellBuffer.cxx	/^void Action::Clear() {$/;"	f	class:Action	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::Clear() {$/;"	f	class:ContractionState	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\Document.h	/^	void Clear() {$/;"	f	class:Scintilla::HighlightDelimiter	typeref:typename:void	access:public	signature:()
Clear	..\\scintilla\\src\\Editor.cxx	/^void Editor::Clear() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\Editor.h	/^	void Clear() {$/;"	f	class:Scintilla::SelectionText	typeref:typename:void	access:public	signature:()
Clear	..\\scintilla\\src\\ExternalLexer.cxx	/^void LexerManager::Clear() {$/;"	f	class:LexerManager	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\KeyMap.cxx	/^void KeyMap::Clear() {$/;"	f	class:KeyMap	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\PositionCache.cxx	/^void PositionCache::Clear() {$/;"	f	class:PositionCache	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\PositionCache.cxx	/^void PositionCacheEntry::Clear() {$/;"	f	class:PositionCacheEntry	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\PositionCache.cxx	/^void SpecialRepresentations::Clear() {$/;"	f	class:SpecialRepresentations	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\RESearch.cxx	/^void RESearch::Clear() {$/;"	f	class:RESearch	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\Selection.cxx	/^void Selection::Clear() {$/;"	f	class:Selection	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\Style.cxx	/^void FontMeasurements::Clear() {$/;"	f	class:FontMeasurements	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\Style.cxx	/^void Style::Clear(ColourDesired fore_, ColourDesired back_, int size_,$/;"	f	class:Style	typeref:typename:void	signature:(ColourDesired fore_,ColourDesired back_,int size_,const char * fontName_,int characterSet_,int weight_,bool italic_,bool eolFilled_,bool underline_,ecaseForced caseForce_,bool visible_,bool changeable_,bool hotspot_)
Clear	..\\scintilla\\src\\ViewStyle.cxx	/^void FontNames::Clear() {$/;"	f	class:FontNames	typeref:typename:void	signature:()
Clear	..\\scintilla\\src\\XPM.cxx	/^void RGBAImageSet::Clear() {$/;"	f	class:RGBAImageSet	typeref:typename:void	signature:()
Clear	..\\scintilla\\win32\\PlatWin.cxx	/^	void Clear() {$/;"	f	class:Scintilla::LineToItem	typeref:typename:void	file:	access:public	signature:()
Clear	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::Clear() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:()
Clear	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::Clear() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
Clear	..\\scite\\src\\JobQueue.h	/^	void Clear() {$/;"	f	class:Job	typeref:typename:void	access:public	signature:()
Clear	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::Clear() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
Clear	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::Clear() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
Clear	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::Clear() {$/;"	f	class:PropSetFile	typeref:typename:void	signature:()
Clear	..\\scite\\src\\StringList.cxx	/^void StringList::Clear() {$/;"	f	class:StringList	typeref:typename:void	signature:()
Clear	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::Clear() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
ClearAll	..\\scintilla\\src\\Editor.cxx	/^void Editor::ClearAll() {$/;"	f	class:Editor	typeref:typename:void	signature:()
ClearAll	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::ClearAll() {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:()
ClearAllTabstops	..\\scintilla\\src\\EditView.cxx	/^void EditView::ClearAllTabstops() {$/;"	f	class:EditView	typeref:typename:void	signature:()
ClearBeforeExecute	..\\scite\\src\\JobQueue.h	/^	bool ClearBeforeExecute() const {$/;"	f	class:JobQueue	typeref:typename:bool	access:public	signature:() const
ClearBeforeTentativeStart	..\\scintilla\\src\\Editor.cxx	/^void Editor::ClearBeforeTentativeStart() {$/;"	f	class:Editor	typeref:typename:void	signature:()
ClearDocument	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::ClearDocument() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ClearDocumentStyle	..\\scintilla\\src\\Editor.cxx	/^void Editor::ClearDocumentStyle() {$/;"	f	class:Editor	typeref:typename:void	signature:()
ClearFont	..\\scintilla\\src\\Style.cxx	/^void FontAlias::ClearFont() {$/;"	f	class:FontAlias	typeref:typename:void	signature:()
ClearJobs	..\\scite\\src\\JobQueue.cxx	/^void JobQueue::ClearJobs() {$/;"	f	class:JobQueue	typeref:typename:void	signature:()
ClearLevels	..\\scintilla\\src\\Document.cxx	/^void Document::ClearLevels() {$/;"	f	class:Document	typeref:typename:void	signature:()
ClearLevels	..\\scintilla\\src\\PerLine.cxx	/^void LineLevels::ClearLevels() {$/;"	f	class:LineLevels	typeref:typename:void	signature:()
ClearList	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::ClearList() {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:()
ClearRegisteredImages	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void ClearRegisteredImages() {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:()
ClearRegisteredImages	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::ClearRegisteredImages() {$/;"	f	class:ListBoxX	typeref:typename:void	signature:()
ClearRegisteredImages	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::ClearRegisteredImages()$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:()
ClearRegisteredImages	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::ClearRegisteredImages() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:()
ClearRepresentation	..\\scintilla\\src\\PositionCache.cxx	/^void SpecialRepresentations::ClearRepresentation(const char *charBytes) {$/;"	f	class:SpecialRepresentations	typeref:typename:void	signature:(const char * charBytes)
ClearSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::ClearSelection(bool retainMultipleSelections) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool retainMultipleSelections)
ClearStyles	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::ClearStyles() {$/;"	f	class:ViewStyle	typeref:typename:void	signature:()
ClearTabstops	..\\scintilla\\src\\EditView.cxx	/^bool EditView::ClearTabstops(Sci::Line line) {$/;"	f	class:EditView	typeref:typename:bool	signature:(Sci::Line line)
ClearTabstops	..\\scintilla\\src\\PerLine.cxx	/^bool LineTabstops::ClearTabstops(Sci::Line line) {$/;"	f	class:LineTabstops	typeref:typename:bool	signature:(Sci::Line line)
ClearTo	..\\scintilla\\src\\Style.cxx	/^void Style::ClearTo(const Style &source) {$/;"	f	class:Style	typeref:typename:void	signature:(const Style & source)
ClearValue	..\\scintilla\\src\\SparseVector.h	/^	void ClearValue(Sci::Position partition) {$/;"	f	class:Scintilla::SparseVector	typeref:typename:void	access:private	signature:(Sci::Position partition)
ClearVirtualSpace	..\\scintilla\\src\\Selection.h	/^	void ClearVirtualSpace() {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:void	access:public	signature:()
ClickNotified	..\\scintilla\\src\\Decoration.h	/^	bool ClickNotified() const {$/;"	f	class:Scintilla::DecorationList	typeref:typename:bool	access:public	signature:() const
ClickSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::ClickSignal(GtkWidget *w, UserStrip *pStrip) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(GtkWidget * w,UserStrip * pStrip)
ClickThis	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::ClickThis(GtkWidget *w) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(GtkWidget * w)
ClientFromScreen	..\\scite\\win32\\SciTEWinBar.cxx	/^GUI::Point ClientFromScreen(HWND hWnd, GUI::Point ptScreen) {$/;"	f	typeref:typename:GUI::Point	signature:(HWND hWnd,GUI::Point ptScreen)
ClipboardClearSelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ClipboardClearSelection(GtkClipboard *, void *data) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkClipboard *,void * data)
ClipboardGetSelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ClipboardGetSelection(GtkClipboard *, GtkSelectionData *selection_data, guint/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkClipboard *,GtkSelectionData * selection_data,guint info,void * data)
ClipboardReceived	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^		static void ClipboardReceived(GtkClipboard *, GtkSelectionData *selection_data, gpointer data)/;"	f	class:ScintillaGTK::Paste::Helper	typeref:typename:void	file:	access:public	signature:(GtkClipboard *,GtkSelectionData * selection_data,gpointer data)
Close	..\\scintilla\\gtk\\Converter.h	/^	void Close() {$/;"	f	class:Scintilla::Converter	typeref:typename:void	access:public	signature:()
Close	..\\scintilla\\src\\Editor.cxx	/^static bool Close(Point pt1, Point pt2, Point threshold) {$/;"	f	typeref:typename:bool	file:	signature:(Point pt1,Point pt2,Point threshold)
Close	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::Close() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Close	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::Close() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
Close	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::Close() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
Close	..\\scite\\gtk\\Widget.cxx	/^void Strip::Close() {$/;"	f	class:Strip	typeref:typename:void	signature:()
Close	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::Close(bool updateUI, bool loadingSession, bool makingRoomForNew) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool updateUI,bool loadingSession,bool makingRoomForNew)
Close	..\\scite\\win32\\Strips.cxx	/^void BackgroundStrip::Close() {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:()
Close	..\\scite\\win32\\Strips.cxx	/^void FindReplaceStrip::Close() {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:()
Close	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Close() {$/;"	f	class:SearchStrip	typeref:typename:void	signature:()
Close	..\\scite\\win32\\Strips.cxx	/^void Strip::Close() {$/;"	f	class:Strip	typeref:typename:void	signature:()
Close	..\\scite\\win32\\Strips.cxx	/^void UserStrip::Close() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
CloseAllBuffers	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::CloseAllBuffers(bool loadingSession) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool loadingSession)
CloseArea	..\\scite\\win32\\Strips.cxx	/^GUI::Rectangle Strip::CloseArea() {$/;"	f	class:Strip	typeref:typename:GUI::Rectangle	signature:()
CloseFind	..\\scite\\src\\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	g	class:Searcher	access:public
CloseTab	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::CloseTab(int tab) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int tab)
Closure	..\\scintilla\\lua\\src\\lobject.h	/^typedef union Closure {$/;"	u
Closure	..\\scintilla\\lua\\src\\lobject.h	/^} Closure;$/;"	t	typeref:union:Closure
ClosureHeader	..\\scintilla\\lua\\src\\lobject.h	/^#define ClosureHeader /;"	d
ClusterIterator	..\\scintilla\\gtk\\PlatGTK.cxx	/^	ClusterIterator(PangoLayout *layout, int len) : lenPositions(len), finished(false),$/;"	f	class:ClusterIterator	file:	access:public	signature:(PangoLayout * layout,int len)
ClusterIterator	..\\scintilla\\gtk\\PlatGTK.cxx	/^class ClusterIterator {$/;"	c	file:
CmpString	..\\scite\\src\\StringList.cxx	/^static bool CmpString(const char *a, const char *b) {$/;"	f	typeref:typename:bool	file:	signature:(const char * a,const char * b)
CmpStringNoCase	..\\scite\\src\\StringList.cxx	/^static bool CmpStringNoCase(const char *a, const char *b) {$/;"	f	typeref:typename:bool	file:	signature:(const char * a,const char * b)
Cnum	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
CodePage	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::CodePage() const {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:() const
CodePage	..\\scintilla\\src\\Editor.cxx	/^int Editor::CodePage() const {$/;"	f	class:Editor	typeref:typename:int	signature:() const
CodePageFamily	..\\scintilla\\src\\Document.cxx	/^EncodingFamily Document::CodePageFamily() const {$/;"	f	class:Document	typeref:typename:EncodingFamily	signature:() const
CodePageFromCharSet	..\\scintilla\\win32\\ScintillaWin.cxx	/^UINT CodePageFromCharSet(DWORD characterSet, UINT documentCodePage) {$/;"	f	typeref:typename:UINT	signature:(DWORD characterSet,UINT documentCodePage)
CodePageFromCharSet	..\\scite\\win32\\SciTEWin.cxx	/^static UINT CodePageFromCharSet(DWORD characterSet, UINT documentCodePage) {$/;"	f	typeref:typename:UINT	file:	signature:(DWORD characterSet,UINT documentCodePage)
CodePageFromName	..\\scite\\win32\\SciTEWin.cxx	/^static int CodePageFromName(const std::string &encodingName) {$/;"	f	typeref:typename:int	file:	signature:(const std::string & encodingName)
CodePageOfDocument	..\\scintilla\\win32\\ScintillaWin.cxx	/^UINT ScintillaWin::CodePageOfDocument() const {$/;"	f	class:ScintillaWin	typeref:typename:UINT	signature:() const
CodingCookieValue	..\\scite\\src\\Cookie.cxx	/^UniMode CodingCookieValue(const char *buf, size_t length) {$/;"	f	typeref:typename:UniMode	signature:(const char * buf,size_t length)
Colour	..\\scite\\src\\StyleDefinition.h	/^typedef long Colour;$/;"	t	typeref:typename:long
ColourDesired	..\\scintilla\\include\\Platform.h	/^	ColourDesired(long lcol=0) {$/;"	f	class:Scintilla::ColourDesired	access:public	signature:(long lcol=0)
ColourDesired	..\\scintilla\\include\\Platform.h	/^	ColourDesired(unsigned int red, unsigned int green, unsigned int blue) {$/;"	f	class:Scintilla::ColourDesired	access:public	signature:(unsigned int red,unsigned int green,unsigned int blue)
ColourDesired	..\\scintilla\\include\\Platform.h	/^class ColourDesired {$/;"	c	namespace:Scintilla
ColourFromCode	..\\scintilla\\src\\XPM.cxx	/^ColourDesired XPM::ColourFromCode(int ch) const {$/;"	f	class:XPM	typeref:typename:ColourDesired	signature:(int ch) const
ColourFromString	..\\scite\\src\\StyleDefinition.cxx	/^Colour ColourFromString(const std::string &s) {$/;"	f	typeref:typename:Colour	signature:(const std::string & s)
ColourOfProperty	..\\scite\\src\\SciTEProps.cxx	/^Colour ColourOfProperty(PropSetFile &props, const char *key, Colour colourDefault) {$/;"	f	typeref:typename:Colour	signature:(PropSetFile & props,const char * key,Colour colourDefault)
ColourOptional	..\\scintilla\\src\\ViewStyle.h	/^	ColourOptional(ColourDesired colour_=ColourDesired(0,0,0), bool isSet_=false) : ColourDesired(c/;"	f	class:Scintilla::ColourOptional	access:public	signature:(ColourDesired colour_=ColourDesired (0,0,0),bool isSet_=false)
ColourOptional	..\\scintilla\\src\\ViewStyle.h	/^	ColourOptional(uptr_t wParam, sptr_t lParam) : ColourDesired(static_cast<long>(lParam)), isSet(/;"	f	class:Scintilla::ColourOptional	access:public	signature:(uptr_t wParam,sptr_t lParam)
ColourOptional	..\\scintilla\\src\\ViewStyle.h	/^class ColourOptional : public ColourDesired {$/;"	c	namespace:Scintilla	inherits:ColourDesired
ColourRGB	..\\scite\\src\\StyleDefinition.h	/^inline Colour ColourRGB(unsigned int red, unsigned int green, unsigned int blue) {$/;"	f	typeref:typename:Colour	signature:(unsigned int red,unsigned int green,unsigned int blue)
ColourTo	..\\scintilla\\lexlib\\LexAccessor.h	/^	void ColourTo(Sci_PositionU pos, int chAttr) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:(Sci_PositionU pos,int chAttr)
ColourTo	..\\scite\\src\\StyleWriter.cxx	/^void StyleWriter::ColourTo(unsigned int pos, int chAttr) {$/;"	f	class:StyleWriter	typeref:typename:void	signature:(unsigned int pos,int chAttr)
Colourise	..\\scintilla\\src\\Document.cxx	/^void LexInterface::Colourise(Sci::Position start, Sci::Position end) {$/;"	f	class:LexInterface	typeref:typename:void	signature:(Sci::Position start,Sci::Position end)
Colourize	..\\scite\\src\\LuaExtension.cxx	/^	void Colourize() {$/;"	f	struct:StylingContext	typeref:typename:void	file:	access:public	signature:()
ColumnWidth	..\\scite\\src\\StripDefinition.h	/^	ColumnWidth() : widthDesired(0), widthAllocated(0), isResizeable(false) {$/;"	f	struct:ColumnWidth	access:public	signature:()
ColumnWidth	..\\scite\\src\\StripDefinition.h	/^struct ColumnWidth {$/;"	s
CombineWith	..\\scintilla\\src\\PerLine.cxx	/^void MarkerHandleSet::CombineWith(MarkerHandleSet *other) {$/;"	f	class:MarkerHandleSet	typeref:typename:void	signature:(MarkerHandleSet * other)
ComboMemory	..\\scite\\src\\StringHelpers.h	/^typedef EntryMemory < 10 > ComboMemory;$/;"	t	typeref:typename:EntryMemory<10>
ComboSelectionText	..\\scite\\win32\\Strips.cxx	/^static std::string ComboSelectionText(GUI::Window w) {$/;"	f	typeref:typename:std::string	file:	signature:(GUI::Window w)
Command	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::Command(int cmdId) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(int cmdId)
Command	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Command(unsigned long wParam, long) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(unsigned long wParam,long)
Command	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::Command(WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(WPARAM wParam,LPARAM lParam)
Command	..\\scite\\win32\\Strips.cxx	/^bool BackgroundStrip::Command(WPARAM \/* wParam *\/) {$/;"	f	class:BackgroundStrip	typeref:typename:bool	signature:(WPARAM)
Command	..\\scite\\win32\\Strips.cxx	/^bool FindStrip::Command(WPARAM wParam) {$/;"	f	class:FindStrip	typeref:typename:bool	signature:(WPARAM wParam)
Command	..\\scite\\win32\\Strips.cxx	/^bool ReplaceStrip::Command(WPARAM wParam) {$/;"	f	class:ReplaceStrip	typeref:typename:bool	signature:(WPARAM wParam)
Command	..\\scite\\win32\\Strips.cxx	/^bool SearchStrip::Command(WPARAM wParam) {$/;"	f	class:SearchStrip	typeref:typename:bool	signature:(WPARAM wParam)
Command	..\\scite\\win32\\Strips.cxx	/^bool Strip::Command(WPARAM) {$/;"	f	class:Strip	typeref:typename:bool	signature:(WPARAM)
Command	..\\scite\\win32\\Strips.cxx	/^bool UserStrip::Command(WPARAM wParam) {$/;"	f	class:UserStrip	typeref:typename:bool	signature:(WPARAM wParam)
CommandExecute	..\\scite\\src\\FilePath.cxx	/^std::string CommandExecute(const GUI::gui_char *command, const GUI::gui_char *directoryForRun) {$/;"	f	typeref:typename:std::string	signature:(const GUI::gui_char * command,const GUI::gui_char * directoryForRun)
CommandWorker	..\\scite\\win32\\SciTEWin.cxx	/^CommandWorker::CommandWorker() : pSciTE(NULL) {$/;"	f	class:CommandWorker	signature:()
CommandWorker	..\\scite\\win32\\SciTEWin.h	/^class CommandWorker : public Worker {$/;"	c	inherits:Worker
CommentString	..\\scite\\scripts\\IFaceTableGen.py	/^def CommentString(prop):$/;"	f	access:public	signature:(prop)
Commit	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Commit(GtkIMContext *, char  *str, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkIMContext *,char * str,ScintillaGTK * sciThis)
CommitStackSelection	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::CommitStackSelection() {$/;"	f	class:BufferList	typeref:typename:void	signature:()
CommitTentative	..\\scintilla\\src\\Selection.cxx	/^void Selection::CommitTentative() {$/;"	f	class:Selection	typeref:typename:void	signature:()
CommitThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::CommitThis(char *commitStr) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(char * commitStr)
CommonHeader	..\\scintilla\\lua\\src\\lobject.h	/^#define CommonHeader	/;"	d
CompareCaseInsensitive	..\\scintilla\\lexlib\\CharacterSet.cxx	/^int CompareCaseInsensitive(const char *a, const char *b) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(const char * a,const char * b)
CompareDevCap	..\\scintilla\\win32\\ScintillaWin.cxx	/^static bool CompareDevCap(HDC hdc, HDC hOtherDC, int nIndex) {$/;"	f	typeref:typename:bool	file:	signature:(HDC hdc,HDC hOtherDC,int nIndex)
CompareNCaseInsensitive	..\\scintilla\\lexlib\\CharacterSet.cxx	/^int CompareNCaseInsensitive(const char *a, const char *b, size_t len) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(const char * a,const char * b,size_t len)
CompareNCaseInsensitive	..\\scite\\src\\StringList.cxx	/^static int CompareNCaseInsensitive(const char *a, const char *b, size_t len) {$/;"	f	typeref:typename:int	file:	signature:(const char * a,const char * b,size_t len)
CompareNoCase	..\\scite\\src\\StringHelpers.cxx	/^int CompareNoCase(const char *a, const char *b) {$/;"	f	typeref:typename:int	signature:(const char * a,const char * b)
CompareString	..\\scite\\src\\StringList.cxx	/^	explicit CompareString(size_t searchLen_) : searchLen(searchLen_) {}$/;"	f	struct:__anon6836dfd10111::CompareString	file:	access:public	signature:(size_t searchLen_)
CompareString	..\\scite\\src\\StringList.cxx	/^struct CompareString {$/;"	s	namespace:__anon6836dfd10111	file:
CompareStringInsensitive	..\\scite\\src\\StringList.cxx	/^	explicit CompareStringInsensitive(size_t searchLen_) : searchLen(searchLen_) {}$/;"	f	struct:__anon6836dfd10111::CompareStringInsensitive	file:	access:public	signature:(size_t searchLen_)
CompareStringInsensitive	..\\scite\\src\\StringList.cxx	/^struct CompareStringInsensitive {$/;"	s	namespace:__anon6836dfd10111	file:
Compile	..\\scintilla\\src\\RESearch.cxx	/^const char *RESearch::Compile(const char *pattern, Sci::Position length, bool caseSensitive, boo/;"	f	class:RESearch	typeref:typename:const char *	signature:(const char * pattern,Sci::Position length,bool caseSensitive,bool posix)
CompileState	..\\scintilla\\lua\\src\\lpcode.c	/^typedef struct CompileState {$/;"	s	file:
CompileState	..\\scintilla\\lua\\src\\lpcode.c	/^} CompileState;$/;"	t	typeref:struct:CompileState	file:
Complete	..\\scintilla\\lexlib\\StyleContext.h	/^	void Complete() {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:()
Complete	..\\scite\\src\\MatchMarker.cxx	/^bool MatchMarker::Complete() const {$/;"	f	class:MatchMarker	typeref:typename:bool	signature:() const
CompleteLoading	..\\scite\\src\\SciTEBuffers.cxx	/^void Buffer::CompleteLoading() {$/;"	f	class:Buffer	typeref:typename:void	signature:()
CompleteOpen	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::CompleteOpen(OpenCompletion oc) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(OpenCompletion oc)
CompleteStoring	..\\scite\\src\\SciTEBuffers.cxx	/^void Buffer::CompleteStoring() {$/;"	f	class:Buffer	typeref:typename:void	signature:()
CompletedRedoStep	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::CompletedRedoStep() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
CompletedUndoStep	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::CompletedUndoStep() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
ConsControl	..\\scintilla\\lua\\src\\lparser.c	/^struct ConsControl {$/;"	s	file:
ContainerNeedsUpdate	..\\scintilla\\src\\Editor.cxx	/^void Editor::ContainerNeedsUpdate(int flags) {$/;"	f	class:Editor	typeref:typename:void	signature:(int flags)
Contains	..\\scintilla\\include\\Platform.h	/^	bool Contains(PRectangle rc) const {$/;"	f	class:Scintilla::PRectangle	typeref:typename:bool	access:public	signature:(PRectangle rc) const
Contains	..\\scintilla\\include\\Platform.h	/^	bool Contains(Point pt) const {$/;"	f	class:Scintilla::PRectangle	typeref:typename:bool	access:public	signature:(Point pt) const
Contains	..\\scintilla\\lexlib\\CharacterSet.h	/^	bool Contains(int val) const {$/;"	f	class:Scintilla::CharacterSet	typeref:typename:bool	access:public	signature:(int val) const
Contains	..\\scintilla\\src\\Document.h	/^	bool Contains(Range other) const {$/;"	f	class:Scintilla::Range	typeref:typename:bool	access:public	signature:(Range other) const
Contains	..\\scintilla\\src\\Document.h	/^	bool Contains(Sci::Position pos) const {$/;"	f	class:Scintilla::Range	typeref:typename:bool	access:public	signature:(Sci::Position pos) const
Contains	..\\scintilla\\src\\PerLine.cxx	/^bool MarkerHandleSet::Contains(int handle) const {$/;"	f	class:MarkerHandleSet	typeref:typename:bool	signature:(int handle) const
Contains	..\\scintilla\\src\\PositionCache.cxx	/^bool SpecialRepresentations::Contains(const char *charBytes, size_t len) const {$/;"	f	class:SpecialRepresentations	typeref:typename:bool	signature:(const char * charBytes,size_t len) const
Contains	..\\scintilla\\src\\Selection.cxx	/^bool SelectionRange::Contains(Sci::Position pos) const {$/;"	f	class:SelectionRange	typeref:typename:bool	signature:(Sci::Position pos) const
Contains	..\\scintilla\\src\\Selection.cxx	/^bool SelectionRange::Contains(SelectionPosition sp) const {$/;"	f	class:SelectionRange	typeref:typename:bool	signature:(SelectionPosition sp) const
Contains	..\\scite\\scripts\\IFaceTableGen.py	/^def Contains(s,sub):$/;"	f	access:public	signature:(s,sub)
Contains	..\\scite\\src\\GUI.h	/^	bool Contains(Point pt) const {$/;"	f	class:GUI::Rectangle	typeref:typename:bool	access:public	signature:(Point pt) const
Contains	..\\scite\\src\\StringHelpers.cxx	/^bool Contains(std::string const &s, char ch) {$/;"	f	typeref:typename:bool	signature:(std::string const & s,char ch)
ContainsCharacter	..\\scintilla\\src\\Document.h	/^	bool ContainsCharacter(Sci::Position pos) const {$/;"	f	class:Scintilla::Range	typeref:typename:bool	access:public	signature:(Sci::Position pos) const
ContainsCharacter	..\\scintilla\\src\\Selection.cxx	/^bool SelectionRange::ContainsCharacter(Sci::Position posCharacter) const {$/;"	f	class:SelectionRange	typeref:typename:bool	signature:(Sci::Position posCharacter) const
ContainsLineEnd	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::ContainsLineEnd(const char *s, Sci::Position length) const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:(const char * s,Sci::Position length) const
ContainsLineEnd	..\\scintilla\\src\\Document.h	/^	bool ContainsLineEnd(const char *s, Sci::Position length) const { return cb.ContainsLineEnd(s, /;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:(const char * s,Sci::Position length) const
ContainsWholePixel	..\\scintilla\\include\\Platform.h	/^	bool ContainsWholePixel(Point pt) const {$/;"	f	class:Scintilla::PRectangle	typeref:typename:bool	access:public	signature:(Point pt) const
ContentArea	..\\scite\\gtk\\Widget.cxx	/^GtkWidget *Dialog::ContentArea() {$/;"	f	class:Dialog	typeref:typename:GtkWidget *	signature:()
ContentWin	..\\scite\\win32\\SciTEWin.h	/^	ContentWin() : pSciTEWin(0), capturedMouse(false) {$/;"	f	class:ContentWin	access:public	signature:()
ContentWin	..\\scite\\win32\\SciTEWin.h	/^class ContentWin : public BaseWin {$/;"	c	inherits:BaseWin
Context	..\\scite\\src\\LuaExtension.cxx	/^	static StylingContext *Context(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:StylingContext *	file:	access:public	signature:(lua_State * L)
ContextMenu	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::ContextMenu(Point pt) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Point pt)
ContextMenu	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ContextMenu(GUI::ScintillaWindow &wSource, GUI::Point pt, GUI::Window wCmd) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & wSource,GUI::Point pt,GUI::Window wCmd)
ContextMenuMessage	..\\scite\\win32\\SciTEWin.cxx	/^LRESULT SciTEWin::ContextMenuMessage(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
Continue	..\\scite\\src\\MatchMarker.cxx	/^void MatchMarker::Continue() {$/;"	f	class:MatchMarker	typeref:typename:void	signature:()
ContinueCallTip	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ContinueCallTip() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ContinueExecute	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ContinueExecute(int fromPoll) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int fromPoll)
ContinueMacroList	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ContinueMacroList(const char *stext) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * stext)
ContractedFoldNext	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::ContractedFoldNext(Sci::Line lineStart) const {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:(Sci::Line lineStart) const
ContractedNext	..\\scintilla\\src\\ContractionState.cxx	/^Sci::Line ContractionState::ContractedNext(Sci::Line lineDocStart) const {$/;"	f	class:ContractionState	typeref:typename:Sci::Line	signature:(Sci::Line lineDocStart) const
ContractionState	..\\scintilla\\src\\ContractionState.cxx	/^ContractionState::ContractionState() : linesInDocument(1) {$/;"	f	class:ContractionState	signature:()
ContractionState	..\\scintilla\\src\\ContractionState.h	/^class ContractionState {$/;"	c	namespace:Scintilla
ControlCharacterString	..\\scintilla\\src\\EditView.cxx	/^static const char *ControlCharacterString(unsigned char ch) {$/;"	f	typeref:typename:const char *	file:	signature:(unsigned char ch)
ControlGText	..\\scite\\win32\\Strips.cxx	/^static GUI::gui_string ControlGText(GUI::Window w) {$/;"	f	typeref:typename:GUI::gui_string	file:	signature:(GUI::Window w)
ControlIDOfCommand	..\\scite\\src\\SciTEBase.cxx	/^int ControlIDOfCommand(unsigned long wParam) {$/;"	f	typeref:typename:int	signature:(unsigned long wParam)
ControlIDOfWParam	..\\scite\\win32\\SciTEWin.h	/^inline int ControlIDOfWParam(WPARAM wParam) {$/;"	f	typeref:typename:int	signature:(WPARAM wParam)
ControlText	..\\scite\\win32\\Strips.cxx	/^static std::string ControlText(GUI::Window w) {$/;"	f	typeref:typename:std::string	file:	signature:(GUI::Window w)
ControlWndProc	..\\scintilla\\win32\\PlatWin.cxx	/^LRESULT PASCAL ListBoxX::ControlWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam) /;"	f	class:Scintilla::ListBoxX	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
ConversionString	..\\scintilla\\src\\CaseConvert.cxx	/^		ConversionString() {$/;"	f	struct:__anon1fb76d660111::CaseConverter::ConversionString	file:	access:public	signature:()
ConversionString	..\\scintilla\\src\\CaseConvert.cxx	/^	struct ConversionString {$/;"	s	class:__anon1fb76d660111::CaseConverter	file:	access:private
Convert	..\\scintilla\\gtk\\Converter.h	/^	gsize Convert(char** src, gsize *srcleft, char **dst, gsize *dstleft) const {$/;"	f	class:Scintilla::Converter	typeref:typename:gsize	access:public	signature:(char ** src,gsize * srcleft,char ** dst,gsize * dstleft) const
ConvertEncoding	..\\scite\\win32\\SciTEWin.cxx	/^static std::string ConvertEncoding(const char *original, int codePage) {$/;"	f	typeref:typename:std::string	file:	signature:(const char * original,int codePage)
ConvertIndentation	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ConvertIndentation(int tabSize, int useTabs) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int tabSize,int useTabs)
ConvertLineEnds	..\\scintilla\\src\\Document.cxx	/^void Document::ConvertLineEnds(int eolModeSet) {$/;"	f	class:Document	typeref:typename:void	signature:(int eolModeSet)
ConvertText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^std::string ConvertText(const char *s, size_t len, const char *charSetDest,$/;"	f	namespace:Scintilla	typeref:typename:std::string	signature:(const char * s,size_t len,const char * charSetDest,const char * charSetSource,bool transliterations,bool silent)
ConvertToDocument	..\\scintilla\\src\\Document.cxx	/^void * SCI_METHOD Document::ConvertToDocument() {$/;"	f	class:Document	typeref:typename:void * SCI_METHOD	signature:()
Converter	..\\scintilla\\gtk\\Converter.h	/^	Converter() {$/;"	f	class:Scintilla::Converter	access:public	signature:()
Converter	..\\scintilla\\gtk\\Converter.h	/^	Converter(const char *charSetDestination, const char *charSetSource, bool transliterations) {$/;"	f	class:Scintilla::Converter	access:public	signature:(const char * charSetDestination,const char * charSetSource,bool transliterations)
Converter	..\\scintilla\\gtk\\Converter.h	/^class Converter {$/;"	c	namespace:Scintilla
ConverterFor	..\\scintilla\\src\\CaseConvert.cxx	/^ICaseConverter *ConverterFor(enum CaseConversion conversion) {$/;"	f	namespace:Scintilla	typeref:typename:ICaseConverter *	signature:(enum CaseConversion conversion)
ConverterForConversion	..\\scintilla\\src\\CaseConvert.cxx	/^CaseConverter *ConverterForConversion(enum CaseConversion conversion) {$/;"	f	namespace:__anon1fb76d660111	typeref:typename:CaseConverter *	signature:(enum CaseConversion conversion)
CookieValue	..\\scite\\src\\Cookie.cxx	/^static UniMode CookieValue(const std::string &s) {$/;"	f	typeref:typename:UniMode	file:	signature:(const std::string & s)
Copy	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Copy() { if (!sel.Empty()) CopySelectionRange(&clipboard); }$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
Copy	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Copy(PRectangle rc, Point from, Surface &surfaceSource) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,Point from,Surface & surfaceSource)
Copy	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Copy(PRectangle rc, Point from, Surface &surfaceSource) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Point from,Surface & surfaceSource)
Copy	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Copy() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
Copy	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::Copy(PRectangle rc, Point from, Surface &surfaceSource)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Point from,Surface & surfaceSource)
Copy	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::Copy()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
Copy	..\\scintilla\\src\\Editor.h	/^	void Copy(const SelectionText &other) {$/;"	f	class:Scintilla::SelectionText	typeref:typename:void	access:public	signature:(const SelectionText & other)
Copy	..\\scintilla\\src\\Editor.h	/^	void Copy(const std::string &s_, int codePage_, int characterSet_, bool rectangular_, bool line/;"	f	class:Scintilla::SelectionText	typeref:typename:void	access:public	signature:(const std::string & s_,int codePage_,int characterSet_,bool rectangular_,bool lineCopy_)
Copy	..\\scintilla\\src\\Style.cxx	/^void Style::Copy(Font &font_, const FontMeasurements &fm_) {$/;"	f	class:Style	typeref:typename:void	signature:(Font & font_,const FontMeasurements & fm_)
Copy	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::Copy(PRectangle rc, Point from, Surface &surfaceSource) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,Point from,Surface & surfaceSource)
Copy	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::Copy(PRectangle rc, Point from, Surface &surfaceSource) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,Point from,Surface & surfaceSource)
Copy	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::Copy() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
CopyAllowLine	..\\scintilla\\src\\Editor.cxx	/^void Editor::CopyAllowLine() {$/;"	f	class:Editor	typeref:typename:void	signature:()
CopyAllowLine	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::CopyAllowLine() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
CopyAsRTF	..\\scite\\src\\SciTEBase.h	/^	virtual void CopyAsRTF() {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:()
CopyAsRTF	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::CopyAsRTF() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
CopyData	..\\scite\\win32\\UniqueInstance.cxx	/^LRESULT UniqueInstance::CopyData(COPYDATASTRUCT *pcds) {$/;"	f	class:UniqueInstance	typeref:typename:LRESULT	signature:(COPYDATASTRUCT * pcds)
CopyPath	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CopyPath() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
CopyPath	..\\scite\\src\\SciTEBase.h	/^	virtual void CopyPath() {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:()
CopyPath	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::CopyPath() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
CopyRangeToClipboard	..\\scintilla\\src\\Editor.cxx	/^void Editor::CopyRangeToClipboard(Sci::Position start, Sci::Position end) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position start,Sci::Position end)
CopySelectionRange	..\\scintilla\\src\\Editor.cxx	/^void Editor::CopySelectionRange(SelectionText *ss, bool allowLineCopy) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionText * ss,bool allowLineCopy)
CopyText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::CopyText(AtkEditableText *text, gint start, g/;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(AtkEditableText * text,gint start,gint end)
CopyText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::CopyText(int startChar, int endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(int startChar,int endChar)
CopyText	..\\scintilla\\src\\Editor.cxx	/^void Editor::CopyText(int length, const char *text) {$/;"	f	class:Editor	typeref:typename:void	signature:(int length,const char * text)
CopyToClipboard	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void CopyToClipboard(const SelectionText &selectedText) {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(const SelectionText & selectedText)
CopyToClipboard	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::CopyToClipboard(const SelectionText &selectedText) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(const SelectionText & selectedText)
CopyToClipboard	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::CopyToClipboard(const SelectionText &selectedText)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const SelectionText & selectedText)
CopyToClipboard	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::CopyToClipboard(const SelectionText &selectedText) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(const SelectionText & selectedText)
CopyToModeClipboard	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::CopyToModeClipboard(const SelectionText &selectedText, QClipboard::Mode clipbo/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const SelectionText & selectedText,QClipboard::Mode clipboardMode_)
CopyWithInsertion	..\\scintilla\\scripts\\FileGenerator.py	/^def CopyWithInsertion(input, commentPrefix, retainDefs, lists):$/;"	f	access:public	signature:(input, commentPrefix, retainDefs, lists)
Count	..\\scintilla\\src\\Selection.cxx	/^size_t Selection::Count() const {$/;"	f	class:Selection	typeref:typename:size_t	signature:() const
Count	..\\scintilla\\win32\\PlatWin.cxx	/^	int Count() const {$/;"	f	class:Scintilla::LineToItem	typeref:typename:int	file:	access:public	signature:() const
CountBackgroundActivities	..\\scite\\src\\SciTEBuffers.cxx	/^BackgroundActivities BufferList::CountBackgroundActivities() const {$/;"	f	class:BufferList	typeref:typename:BackgroundActivities	signature:() const
CountBytes	..\\scintilla\\src\\XPM.cxx	/^int RGBAImage::CountBytes() const {$/;"	f	class:RGBAImage	typeref:typename:int	signature:() const
CountCharacters	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::CountCharacters(Sci::Position startPos, Sci::Position endPos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position startPos,Sci::Position endPos) const
CountLineEnds	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::CountLineEnds(int &linesCR, int &linesLF, int &linesCRLF) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int & linesCR,int & linesLF,int & linesCRLF)
CountUTF16	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::CountUTF16(Sci::Position startPos, Sci::Position endPos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position startPos,Sci::Position endPos) const
Cposition	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
Cquery	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
Create	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Create(Window &parent, int ctrlID, Point location_, int lineHeight_,$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(Window & parent,int ctrlID,Point location_,int lineHeight_,bool unicodeMode_,int technology_)
Create	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Font::Create(const FontParameters &fp) {$/;"	f	class:Font	typeref:typename:void	signature:(const FontParameters & fp)
Create	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Font::Create(const FontParameters &fp) {$/;"	f	class:Font	typeref:typename:void	signature:(const FontParameters & fp)
Create	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::Create(Window &parent, int, Point, int, bool, int,bool) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(Window & parent,int,Point,int,bool,int,bool)
Create	..\\scintilla\\lexlib\\LexerModule.cxx	/^ILexer *LexerModule::Create() const {$/;"	f	class:LexerModule	typeref:typename:ILexer *	signature:() const
Create	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Font::Create(const FontParameters &fp)$/;"	f	class:Scintilla::Font	typeref:typename:void	signature:(const FontParameters & fp)
Create	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::Create(Window &parent,$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(Window & parent,int,Point location,int,bool unicodeMode_,int)
Create	..\\scintilla\\src\\CellBuffer.cxx	/^void Action::Create(actionType at_, Sci::Position position_, const char *data_, Sci::Position le/;"	f	class:Action	typeref:typename:void	signature:(actionType at_,Sci::Position position_,const char * data_,Sci::Position lenData_,bool mayCoalesce_)
Create	..\\scintilla\\src\\Decoration.cxx	/^Decoration *DecorationList::Create(int indicator, Sci::Position length) {$/;"	f	class:DecorationList	typeref:typename:Decoration *	signature:(int indicator,Sci::Position length)
Create	..\\scintilla\\win32\\PlatWin.cxx	/^void Font::Create(const FontParameters &fp) {$/;"	f	class:Scintilla::Font	typeref:typename:void	signature:(const FontParameters & fp)
Create	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::Create(Window &parent_, int ctrlID_, Point location_, int lineHeight_, bool unico/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(Window & parent_,int ctrlID_,Point location_,int lineHeight_,bool unicodeMode_,int technology_,bool useThickFrame_)
Create	..\\scite\\gtk\\GTKMutex.cxx	/^Mutex *Mutex::Create() {$/;"	f	class:Mutex	typeref:typename:Mutex *	signature:()
Create	..\\scite\\gtk\\Widget.cxx	/^void Dialog::Create(const GUI::gui_string &title) {$/;"	f	class:Dialog	typeref:typename:void	signature:(const GUI::gui_string & title)
Create	..\\scite\\gtk\\Widget.cxx	/^void WButton::Create(GUI::gui_string text) {$/;"	f	class:WButton	typeref:typename:void	signature:(GUI::gui_string text)
Create	..\\scite\\gtk\\Widget.cxx	/^void WButton::Create(GUI::gui_string text, GCallback func, gpointer data) {$/;"	f	class:WButton	typeref:typename:void	signature:(GUI::gui_string text,GCallback func,gpointer data)
Create	..\\scite\\gtk\\Widget.cxx	/^void WCheckDraw::Create(const char **xpmImage, GUI::gui_string toolTip, GtkStyle *pStyle_) {$/;"	f	class:WCheckDraw	typeref:typename:void	signature:(const char ** xpmImage,GUI::gui_string toolTip,GtkStyle * pStyle_)
Create	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::Create() {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:()
Create	..\\scite\\gtk\\Widget.cxx	/^void WEntry::Create(const GUI::gui_char *text) {$/;"	f	class:WEntry	typeref:typename:void	signature:(const GUI::gui_char * text)
Create	..\\scite\\gtk\\Widget.cxx	/^void WProgress::Create() {$/;"	f	class:WProgress	typeref:typename:void	signature:()
Create	..\\scite\\gtk\\Widget.cxx	/^void WStatic::Create(GUI::gui_string text) {$/;"	f	class:WStatic	typeref:typename:void	signature:(GUI::gui_string text)
Create	..\\scite\\gtk\\Widget.cxx	/^void WToggle::Create(const GUI::gui_string &text) {$/;"	f	class:WToggle	typeref:typename:void	signature:(const GUI::gui_string & text)
Create	..\\scite\\win32\\WinMutex.cxx	/^Mutex *Mutex::Create() {$/;"	f	class:Mutex	typeref:typename:Mutex *	signature:()
CreateAndAddFont	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::CreateAndAddFont(const FontSpecification &fs) {$/;"	f	class:ViewStyle	typeref:typename:void	signature:(const FontSpecification & fs)
CreateBuffers	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::CreateBuffers() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
CreateButton	..\\scite\\win32\\Strips.cxx	/^GUI::Window Strip::CreateButton(const char *text, size_t ident, bool check) {$/;"	f	class:Strip	typeref:typename:GUI::Window	signature:(const char * text,size_t ident,bool check)
CreateCallTipWindow	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void CreateCallTipWindow(PRectangle rc) {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(PRectangle rc)
CreateCallTipWindow	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::CreateCallTipWindow(PRectangle rc) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(PRectangle rc)
CreateCallTipWindow	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::CreateCallTipWindow(PRectangle rc)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(PRectangle rc)
CreateCallTipWindow	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::CreateCallTipWindow(PRectangle) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(PRectangle)
CreateIndentation	..\\scintilla\\src\\Document.cxx	/^static std::string CreateIndentation(Sci::Position indent, int tabSize, bool insertSpaces) {$/;"	f	typeref:typename:std::string	file:	signature:(Sci::Position indent,int tabSize,bool insertSpaces)
CreateIndentation	..\\scite\\src\\SciTEBase.cxx	/^static std::string CreateIndentation(int indent, int tabSize, bool insertSpaces) {$/;"	f	typeref:typename:std::string	file:	signature:(int indent,int tabSize,bool insertSpaces)
CreateMenu	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CreateMenu() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
CreateNewFont	..\\scintilla\\gtk\\PlatGTK.cxx	/^FontHandle *FontHandle::CreateNewFont(const FontParameters &fp) {$/;"	f	class:FontHandle	typeref:typename:FontHandle *	signature:(const FontParameters & fp)
CreateParameterisedDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^HWND SciTEWin::CreateParameterisedDialog(LPCWSTR lpTemplateName, DLGPROC lpProc) {$/;"	f	class:SciTEWin	typeref:typename:HWND	signature:(LPCWSTR lpTemplateName,DLGPROC lpProc)
CreatePipe	..\\scite\\gtk\\DirectorExtension.cxx	/^void DirectorExtension::CreatePipe(bool) {$/;"	f	class:DirectorExtension	typeref:typename:void	signature:(bool)
CreatePopUp	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Menu::CreatePopUp() {}$/;"	f	class:Menu	typeref:typename:void	signature:()
CreatePopUp	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Menu::CreatePopUp() {$/;"	f	class:Menu	typeref:typename:void	signature:()
CreatePopUp	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Menu::CreatePopUp()$/;"	f	class:Scintilla::Menu	typeref:typename:void	signature:()
CreatePopUp	..\\scintilla\\win32\\PlatWin.cxx	/^void Menu::CreatePopUp() {$/;"	f	class:Scintilla::Menu	typeref:typename:void	signature:()
CreatePopUp	..\\scite\\gtk\\GUIGTK.cxx	/^void Menu::CreatePopUp() {$/;"	f	class:GUI::Menu	typeref:typename:void	signature:()
CreatePopUp	..\\scite\\win32\\GUIWin.cxx	/^void Menu::CreatePopUp() {$/;"	f	class:GUI::Menu	typeref:typename:void	signature:()
CreateRegexSearch	..\\scintilla\\src\\Document.cxx	/^RegexSearchBase *Scintilla::CreateRegexSearch(CharClassify *charClassTable) {$/;"	f	class:Scintilla	typeref:typename:RegexSearchBase *	signature:(CharClassify * charClassTable)
CreateSimilarSurface	..\\scintilla\\gtk\\PlatGTK.cxx	/^static cairo_surface_t *CreateSimilarSurface(GdkWindow *window, cairo_content_t content, int wid/;"	f	typeref:typename:cairo_surface_t *	file:	signature:(GdkWindow * window,cairo_content_t content,int width,int height)
CreateStrips	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CreateStrips(GtkWidget *boxMain) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkWidget * boxMain)
CreateSystemCaret	..\\scintilla\\win32\\ScintillaWin.cxx	/^BOOL ScintillaWin::CreateSystemCaret() {$/;"	f	class:ScintillaWin	typeref:typename:BOOL	signature:()
CreateText	..\\scite\\win32\\Strips.cxx	/^GUI::Window Strip::CreateText(const char *text) {$/;"	f	class:Strip	typeref:typename:GUI::Window	signature:(const char * text)
CreateTranslatedMenu	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CreateTranslatedMenu(int n, SciTEItemFactoryEntry items[],$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int n,SciTEItemFactoryEntry items[],int nRepeats,const char * prefix,int startNum,int startID,const char * radioStart)
CreateUI	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::CreateUI() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
CreateUI	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::CreateUI() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
Created	..\\scintilla\\include\\Platform.h	/^	bool Created() const { return wid != 0; }$/;"	f	class:Scintilla::Window	typeref:typename:bool	access:public	signature:() const
Created	..\\scite\\src\\GUI.h	/^	bool Created() const {$/;"	f	class:GUI::Window	typeref:typename:bool	access:public	signature:() const
Creation	..\\scite\\gtk\\SciTEGTK.cxx	/^void BackgroundStrip::Creation(GtkWidget *container) {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:(GtkWidget * container)
Creation	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::Creation(GtkWidget *container) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(GtkWidget * container)
Creation	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::Creation(GtkWidget *container) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(GtkWidget * container)
Creation	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::Creation(GtkWidget *container) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(GtkWidget * container)
Creation	..\\scite\\gtk\\Widget.cxx	/^void Strip::Creation(GtkWidget *) {$/;"	f	class:Strip	typeref:typename:void	signature:(GtkWidget *)
Creation	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::Creation() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void BackgroundStrip::Creation() {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Creation() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::Creation() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Creation() {$/;"	f	class:SearchStrip	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void SearchStripBase::Creation() {$/;"	f	class:SearchStripBase	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void Strip::Creation() {$/;"	f	class:Strip	typeref:typename:void	signature:()
Creation	..\\scite\\win32\\Strips.cxx	/^void UserStrip::Creation() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
CreditsWndProc	..\\scite\\win32\\SciTEWinDlg.cxx	/^LRESULT CALLBACK CreditsWndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam) {$/;"	f	typeref:typename:LRESULT CALLBACK	signature:(HWND hwnd,UINT uMsg,WPARAM wParam,LPARAM lParam)
Cruntime	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
Csimple	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
Cstring	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
Csubst	..\\scintilla\\lua\\src\\lpcap.h	/^  Cquery, Cstring, Cnum, Csubst, Cfold, Cruntime, Cgroup$/;"	e	enum:CapKind	access:public
Ctable	..\\scintilla\\lua\\src\\lpcap.h	/^  Cclose, Cposition, Cconst, Cbackref, Carg, Csimple, Ctable, Cfunction,$/;"	e	enum:CapKind	access:public
Current	..\\scite\\src\\LuaExtension.cxx	/^	static int Current(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
Current	..\\scite\\src\\SciTEBuffers.cxx	/^int BufferList::Current() const {$/;"	f	class:BufferList	typeref:typename:int	signature:() const
CurrentBuffer	..\\scite\\src\\SciTEBase.h	/^	Buffer *CurrentBuffer() const {$/;"	f	class:SciTEBase	typeref:typename:Buffer *	access:protected	signature:() const
CurrentBuffer	..\\scite\\src\\SciTEBuffers.cxx	/^Buffer *BufferList::CurrentBuffer() const {$/;"	f	class:BufferList	typeref:typename:Buffer *	signature:() const
CurrentPosition	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::CurrentPosition() const {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:() const
CurrentWordHighlight	..\\scite\\src\\SciTEBase.h	/^	CurrentWordHighlight() {$/;"	f	struct:CurrentWordHighlight	access:public	signature:()
CurrentWordHighlight	..\\scite\\src\\SciTEBase.h	/^struct CurrentWordHighlight {$/;"	s
Cursor	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	g	class:Scintilla::Window	access:public
CursorUpOrDown	..\\scintilla\\src\\Editor.cxx	/^void Editor::CursorUpOrDown(int direction, Selection::selTypes selt) {$/;"	f	class:Editor	typeref:typename:void	signature:(int direction,Selection::selTypes selt)
CustomDraw	..\\scite\\win32\\Strips.cxx	/^LRESULT Strip::CustomDraw(NMHDR *pnmh) {$/;"	f	class:Strip	typeref:typename:LRESULT	signature:(NMHDR * pnmh)
Cut	..\\scintilla\\src\\Editor.cxx	/^void Editor::Cut() {$/;"	f	class:Editor	typeref:typename:void	signature:()
CutText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::CutText(AtkEditableText *text, gint start, gi/;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(AtkEditableText * text,gint start,gint end)
CutText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::CutText(int startChar, int endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(int startChar,int endChar)
Cxx11RegexFindText	..\\scintilla\\src\\Document.cxx	/^Sci::Position Cxx11RegexFindText(Document *doc, Sci::Position minPos, Sci::Position maxPos, cons/;"	f	namespace:__anon1ef09aa80111	typeref:typename:Sci::Position	signature:(Document * doc,Sci::Position minPos,Sci::Position maxPos,const char * s,bool caseSensitive,Sci::Position * length,RESearch & search)
D2D1CFSig	..\\scintilla\\win32\\PlatWin.cxx	/^		typedef HRESULT (WINAPI *D2D1CFSig)(D2D1_FACTORY_TYPE factoryType, REFIID riid,$/;"	t	function:Scintilla::LoadD2D	typeref:typename:HRESULT (WINAPI *)(D2D1_FACTORY_TYPE factoryType,REFIID riid,CONST D2D1_FACTORY_OPTIONS * pFactoryOptions,IUnknown ** factory)	file:
D2DPenColour	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::D2DPenColour(ColourDesired fore, int alpha) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(ColourDesired fore,int alpha)
DBCS	..\\scintilla\\src\\Document.h	/^		static CharacterExtracted DBCS(unsigned char lead, unsigned char trail) {$/;"	f	struct:Scintilla::Document::CharacterExtracted	typeref:typename:CharacterExtracted	access:public	signature:(unsigned char lead,unsigned char trail)
DBCSIsLeadByte	..\\scintilla\\src\\DBCS.cxx	/^bool DBCSIsLeadByte(int codePage, char ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int codePage,char ch)
DBCS_H	..\\scintilla\\src\\DBCS.h	/^#define DBCS_H$/;"	d
DECORATION_H	..\\scintilla\\src\\Decoration.h	/^#define DECORATION_H$/;"	d
DEFAULTLEXER_H	..\\scintilla\\lexlib\\DefaultLexer.h	/^#define DEFAULTLEXER_H$/;"	d
DFCS_HOT	..\\scite\\win32\\SciTEWin.h	/^#define DFCS_HOT /;"	d
DLMSG	..\\scintilla\\lua\\src\\loadlib.c	/^#define DLMSG	/;"	d	file:
DOCUMENT_H	..\\scintilla\\src\\Document.h	/^#define DOCUMENT_H$/;"	d
DWriteCFSig	..\\scintilla\\win32\\PlatWin.cxx	/^		typedef HRESULT (WINAPI *DWriteCFSig)(DWRITE_FACTORY_TYPE factoryType, REFIID iid,$/;"	t	function:Scintilla::LoadD2D	typeref:typename:HRESULT (WINAPI *)(DWRITE_FACTORY_TYPE factoryType,REFIID iid,IUnknown ** factory)	file:
DWriteMapFontQuality	..\\scintilla\\win32\\PlatWin.cxx	/^static D2D1_TEXT_ANTIALIAS_MODE DWriteMapFontQuality(int extraFontFlag) {$/;"	f	namespace:Scintilla	typeref:typename:D2D1_TEXT_ANTIALIAS_MODE	file:	signature:(int extraFontFlag)
Data	..\\scintilla\\src\\Editor.h	/^	const char *Data() const {$/;"	f	class:Scintilla::SelectionText	typeref:typename:const char *	access:public	signature:() const
DataObject	..\\scintilla\\win32\\ScintillaWin.cxx	/^DataObject::DataObject() {$/;"	f	class:DataObject	signature:()
DataObject	..\\scintilla\\win32\\ScintillaWin.cxx	/^class DataObject {$/;"	c	file:
DataObject_AddRef	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)DataObject_AddRef(DataObject *pd) {$/;"	f	typeref:typename:ULONG	signature:(DataObject * pd)
DataObject_DAdvise	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_DAdvise(DataObject *, FORMATETC *, DWORD, IAdviseSink *, PDWORD) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject *,FORMATETC *,DWORD,IAdviseSink *,PDWORD)
DataObject_DUnadvise	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_DUnadvise(DataObject *, DWORD) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject *,DWORD)
DataObject_EnumDAdvise	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_EnumDAdvise(DataObject *, IEnumSTATDATA **) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject *,IEnumSTATDATA **)
DataObject_EnumFormatEtc	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_EnumFormatEtc(DataObject *pd, DWORD dwDirection, IEnumFORMATETC **ppEnum/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject * pd,DWORD dwDirection,IEnumFORMATETC ** ppEnum)
DataObject_GetCanonicalFormatEtc	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_GetCanonicalFormatEtc(DataObject *pd, FORMATETC *, FORMATETC *pFEOut) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject * pd,FORMATETC *,FORMATETC * pFEOut)
DataObject_GetData	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_GetData(DataObject *pd, FORMATETC *pFEIn, STGMEDIUM *pSTM) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject * pd,FORMATETC * pFEIn,STGMEDIUM * pSTM)
DataObject_GetDataHere	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_GetDataHere(DataObject *, FORMATETC *, STGMEDIUM *) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject *,FORMATETC *,STGMEDIUM *)
DataObject_QueryGetData	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_QueryGetData(DataObject *pd, FORMATETC *pFE) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject * pd,FORMATETC * pFE)
DataObject_QueryInterface	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_QueryInterface(DataObject *pd, REFIID riid, PVOID *ppv) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject * pd,REFIID riid,PVOID * ppv)
DataObject_Release	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)DataObject_Release(DataObject *pd) {$/;"	f	typeref:typename:ULONG	signature:(DataObject * pd)
DataObject_SetData	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DataObject_SetData(DataObject *, FORMATETC *, STGMEDIUM *, BOOL) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DataObject *,FORMATETC *,STGMEDIUM *,BOOL)
DataOfGSD	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static const guchar *DataOfGSD(GtkSelectionData *sd) { return gtk_selection_data_get_data(sd); }$/;"	f	typeref:typename:const guchar *	file:	signature:(GtkSelectionData * sd)
Deallocate	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayoutCache::Deallocate() {$/;"	f	class:LineLayoutCache	typeref:typename:void	signature:()
DebugDisplay	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Platform::DebugDisplay(const char *s) { fprintf(stderr, "%s", s); }$/;"	f	class:Platform	typeref:typename:void	signature:(const char * s)
DebugDisplay	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Platform::DebugDisplay(const char *s) {$/;"	f	class:Platform	typeref:typename:void	signature:(const char * s)
DebugDisplay	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Platform::DebugDisplay(const char *s)$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char * s)
DebugDisplay	..\\scintilla\\win32\\PlatWin.cxx	/^void Platform::DebugDisplay(const char *s) {$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char * s)
DebugPrintf	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Platform::DebugPrintf(const char *format, ...) {}$/;"	f	class:Platform	typeref:typename:void	signature:(const char * format,...)
DebugPrintf	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Platform::DebugPrintf(const char *, ...) {}$/;"	f	class:Platform	typeref:typename:void	signature:(const char *,...)
DebugPrintf	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Platform::DebugPrintf(const char *format, ...) {$/;"	f	class:Platform	typeref:typename:void	signature:(const char * format,...)
DebugPrintf	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Platform::DebugPrintf(const char *format, ...)$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char * format,...)
DebugPrintf	..\\scintilla\\win32\\PlatWin.cxx	/^void Platform::DebugPrintf(const char *, ...) {$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char *,...)
DebugPrintf	..\\scintilla\\win32\\PlatWin.cxx	/^void Platform::DebugPrintf(const char *format, ...) {$/;"	f	class:Scintilla::Platform	typeref:typename:void	signature:(const char * format,...)
DecodeMessage	..\\scite\\src\\SciTEBuffers.cxx	/^static int DecodeMessage(const char *cdoc, std::string &sourcePath, int format, int &column) {$/;"	f	typeref:typename:int	file:	signature:(const char * cdoc,std::string & sourcePath,int format,int & column)
Decoration	..\\scintilla\\src\\Decoration.cxx	/^Decoration::Decoration(int indicator_) : indicator(indicator_) {$/;"	f	class:Decoration	signature:(int indicator_)
Decoration	..\\scintilla\\src\\Decoration.h	/^class Decoration {$/;"	c	namespace:Scintilla
DecorationFillRange	..\\scintilla\\src\\Document.cxx	/^void SCI_METHOD Document::DecorationFillRange(Sci_Position position, int value, Sci_Position fil/;"	f	class:Document	typeref:typename:void SCI_METHOD	signature:(Sci_Position position,int value,Sci_Position fillLength)
DecorationFromIndicator	..\\scintilla\\src\\Decoration.cxx	/^Decoration *DecorationList::DecorationFromIndicator(int indicator) {$/;"	f	class:DecorationList	typeref:typename:Decoration *	signature:(int indicator)
DecorationList	..\\scintilla\\src\\Decoration.cxx	/^DecorationList::DecorationList() : currentIndicator(0), currentValue(1), current(nullptr),$/;"	f	class:DecorationList	signature:()
DecorationList	..\\scintilla\\src\\Decoration.h	/^class DecorationList {$/;"	c	namespace:Scintilla
DecorationSetCurrentIndicator	..\\scintilla\\src\\Document.cxx	/^void SCI_METHOD Document::DecorationSetCurrentIndicator(int indicator) {$/;"	f	class:Document	typeref:typename:void SCI_METHOD	signature:(int indicator)
DefWndProc	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  sptr_t DefWndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaCurses	typeref:typename:sptr_t	file:	access:public	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
DefWndProc	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^sptr_t ScintillaGTK::DefWndProc(unsigned int, uptr_t, sptr_t) {$/;"	f	class:ScintillaGTK	typeref:typename:sptr_t	signature:(unsigned int,uptr_t,sptr_t)
DefWndProc	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^sptr_t ScintillaQt::DefWndProc(unsigned int, uptr_t, sptr_t)$/;"	f	class:ScintillaQt	typeref:typename:sptr_t	signature:(unsigned int,uptr_t,sptr_t)
DefWndProc	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::DefWndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
DefaultFont	..\\scintilla\\curses\\ScintillaCurses.cxx	/^const char *Platform::DefaultFont() { return "monospace"; }$/;"	f	class:Platform	typeref:typename:const char *	signature:()
DefaultFont	..\\scintilla\\gtk\\PlatGTK.cxx	/^const char *Platform::DefaultFont() {$/;"	f	class:Platform	typeref:typename:const char *	signature:()
DefaultFont	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^const char *Platform::DefaultFont()$/;"	f	class:Scintilla::Platform	typeref:typename:const char *	signature:()
DefaultFont	..\\scintilla\\win32\\PlatWin.cxx	/^const char *Platform::DefaultFont() {$/;"	f	class:Scintilla::Platform	typeref:typename:const char *	signature:()
DefaultFontSize	..\\scintilla\\curses\\ScintillaCurses.cxx	/^int Platform::DefaultFontSize() { return 10; }$/;"	f	class:Platform	typeref:typename:int	signature:()
DefaultFontSize	..\\scintilla\\gtk\\PlatGTK.cxx	/^int Platform::DefaultFontSize() {$/;"	f	class:Platform	typeref:typename:int	signature:()
DefaultFontSize	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int Platform::DefaultFontSize()$/;"	f	class:Scintilla::Platform	typeref:typename:int	signature:()
DefaultFontSize	..\\scintilla\\win32\\PlatWin.cxx	/^int Platform::DefaultFontSize() {$/;"	f	class:Scintilla::Platform	typeref:typename:int	signature:()
DefaultLexer	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^DefaultLexer::DefaultLexer(const LexicalClass *lexClasses_, size_t nClasses_) :$/;"	f	class:DefaultLexer	signature:(const LexicalClass * lexClasses_,size_t nClasses_)
DefaultLexer	..\\scintilla\\lexlib\\DefaultLexer.h	/^class DefaultLexer : public ILexerWithMetaData {$/;"	c	namespace:Scintilla	inherits:ILexerWithMetaData
DefineMarker	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::DefineMarker(int marker, int markerType, Colour fore, Colour back, Colour backSe/;"	f	class:SciTEBase	typeref:typename:void	signature:(int marker,int markerType,Colour fore,Colour back,Colour backSelected)
DefineProperty	..\\scintilla\\lexlib\\OptionSet.h	/^	void DefineProperty(const char *name, plcob pb, std::string description="") {$/;"	f	class:Scintilla::OptionSet	typeref:typename:void	access:public	signature:(const char * name,plcob pb,std::string description="")
DefineProperty	..\\scintilla\\lexlib\\OptionSet.h	/^	void DefineProperty(const char *name, plcoi pi, std::string description="") {$/;"	f	class:Scintilla::OptionSet	typeref:typename:void	access:public	signature:(const char * name,plcoi pi,std::string description="")
DefineProperty	..\\scintilla\\lexlib\\OptionSet.h	/^	void DefineProperty(const char *name, plcos ps, std::string description="") {$/;"	f	class:Scintilla::OptionSet	typeref:typename:void	access:public	signature:(const char * name,plcos ps,std::string description="")
DefineWordListSets	..\\scintilla\\lexlib\\OptionSet.h	/^	void DefineWordListSets(const char * const wordListDescriptions[]) {$/;"	f	class:Scintilla::OptionSet	typeref:typename:void	access:public	signature:(const char * const wordListDescriptions[])
DelChar	..\\scintilla\\src\\Document.cxx	/^void Document::DelChar(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Position pos)
DelCharBack	..\\scintilla\\src\\Document.cxx	/^void Document::DelCharBack(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Position pos)
DelCharBack	..\\scintilla\\src\\Editor.cxx	/^void Editor::DelCharBack(bool allowLineStartDeletion) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool allowLineStartDeletion)
DelWordOrLine	..\\scintilla\\src\\Editor.cxx	/^int Editor::DelWordOrLine(unsigned int iMessage) {$/;"	f	class:Editor	typeref:typename:int	signature:(unsigned int iMessage)
Delete	..\\scintilla\\lexlib\\SparseState.h	/^	bool Delete(Sci_Position position) {$/;"	f	class:Scintilla::SparseState	typeref:typename:bool	access:public	signature:(Sci_Position position)
Delete	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::Delete(int indicator) {$/;"	f	class:DecorationList	typeref:typename:void	signature:(int indicator)
Delete	..\\scintilla\\src\\SplitVector.h	/^	void Delete(ptrdiff_t position) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t position)
DeleteAll	..\\scintilla\\src\\Partitioning.h	/^	void DeleteAll() {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:public	signature:()
DeleteAll	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::DeleteAll() {$/;"	f	class:RunStyles	typeref:typename:void	signature:()
DeleteAll	..\\scintilla\\src\\SplitVector.h	/^	void DeleteAll() {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:()
DeleteAllMarks	..\\scintilla\\src\\Document.cxx	/^void Document::DeleteAllMarks(int markerNum) {$/;"	f	class:Document	typeref:typename:void	signature:(int markerNum)
DeleteAnyEmpty	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::DeleteAnyEmpty() {$/;"	f	class:DecorationList	typeref:typename:void	signature:()
DeleteChars	..\\scintilla\\src\\CellBuffer.cxx	/^const char *CellBuffer::DeleteChars(Sci::Position position, Sci::Position deleteLength, bool &st/;"	f	class:CellBuffer	typeref:typename:const char *	signature:(Sci::Position position,Sci::Position deleteLength,bool & startSequence)
DeleteChars	..\\scintilla\\src\\Document.cxx	/^bool Document::DeleteChars(Sci::Position pos, Sci::Position len) {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position pos,Sci::Position len)
DeleteFileStackMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::DeleteFileStackMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
DeleteFontObject	..\\scite\\win32\\SciTEWinDlg.cxx	/^static void DeleteFontObject(HFONT &font) {$/;"	f	typeref:typename:void	file:	signature:(HFONT & font)
DeleteInstance	..\\scintilla\\src\\ExternalLexer.cxx	/^void LexerManager::DeleteInstance() {$/;"	f	class:LexerManager	typeref:typename:void	signature:()
DeleteLexerDecorations	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::DeleteLexerDecorations() {$/;"	f	class:DecorationList	typeref:typename:void	signature:()
DeleteLine	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::DeleteLine(Sci::Line lineDoc) {$/;"	f	class:ContractionState	typeref:typename:void	signature:(Sci::Line lineDoc)
DeleteLines	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::DeleteLines(Sci::Line lineDoc, Sci::Line lineCount) {$/;"	f	class:ContractionState	typeref:typename:void	signature:(Sci::Line lineDoc,Sci::Line lineCount)
DeleteMark	..\\scintilla\\src\\Document.cxx	/^void Document::DeleteMark(Sci::Line line, int markerNum) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,int markerNum)
DeleteMark	..\\scintilla\\src\\PerLine.cxx	/^bool LineMarkers::DeleteMark(Sci::Line line, int markerNum, bool all) {$/;"	f	class:LineMarkers	typeref:typename:bool	signature:(Sci::Line line,int markerNum,bool all)
DeleteMarkFromHandle	..\\scintilla\\src\\Document.cxx	/^void Document::DeleteMarkFromHandle(int markerHandle) {$/;"	f	class:Document	typeref:typename:void	signature:(int markerHandle)
DeleteMarkFromHandle	..\\scintilla\\src\\PerLine.cxx	/^void LineMarkers::DeleteMarkFromHandle(int markerHandle) {$/;"	f	class:LineMarkers	typeref:typename:void	signature:(int markerHandle)
DeletePosition	..\\scintilla\\src\\SparseVector.h	/^	void DeletePosition(Sci::Position position) {$/;"	f	class:Scintilla::SparseVector	typeref:typename:void	access:public	signature:(Sci::Position position)
DeleteRange	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::DeleteRange(Sci::Position position, Sci::Position deleteLength) {$/;"	f	class:DecorationList	typeref:typename:void	signature:(Sci::Position position,Sci::Position deleteLength)
DeleteRange	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::DeleteRange(DISTANCE position, DISTANCE deleteLength) {$/;"	f	class:RunStyles	typeref:typename:void	signature:(DISTANCE position,DISTANCE deleteLength)
DeleteRange	..\\scintilla\\src\\SplitVector.h	/^	void DeleteRange(ptrdiff_t position, ptrdiff_t deleteLength) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t position,ptrdiff_t deleteLength)
DeleteText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::DeleteText(AtkEditableText *text, gint start,/;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(AtkEditableText * text,gint start,gint end)
DeleteText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::DeleteText(int startChar, int endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(int startChar,int endChar)
DeleteUndoHistory	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::DeleteUndoHistory() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
DeleteUndoHistory	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::DeleteUndoHistory() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
DeleteUndoHistory	..\\scintilla\\src\\Document.h	/^	void DeleteUndoHistory() { cb.DeleteUndoHistory(); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:()
Delta	..\\scintilla\\gtk\\PlatGTK.cxx	/^static int Delta(int difference) {$/;"	f	typeref:typename:int	file:	signature:(int difference)
Delta	..\\scintilla\\win32\\PlatWin.cxx	/^static int Delta(int difference) {$/;"	f	namespace:Scintilla	typeref:typename:int	file:	signature:(int difference)
Descent	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION Descent(Font &font_) { return 0; }$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_)
Descent	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::Descent(Font &font_) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font_)
Descent	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::Descent(Font &font)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font)
Descent	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::Descent(Font &font_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_)
Descent	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::Descent(Font &font_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_)
DescribeProperty	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::DescribeProperty(const char *) {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:(const char *)
DescribeProperty	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::DescribeProperty(const char *) {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:(const char *)
DescribeProperty	..\\scintilla\\lexlib\\OptionSet.h	/^	const char *DescribeProperty(const char *name) {$/;"	f	class:Scintilla::OptionSet	typeref:typename:const char *	access:public	signature:(const char * name)
DescribeProperty	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::DescribeProperty(const char *name) {$/;"	f	class:LexState	typeref:typename:const char *	signature:(const char * name)
DescribeWordListSets	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::DescribeWordListSets() {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:()
DescribeWordListSets	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::DescribeWordListSets() {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:()
DescribeWordListSets	..\\scintilla\\lexlib\\LexerSimple.cxx	/^const char * SCI_METHOD LexerSimple::DescribeWordListSets() {$/;"	f	class:LexerSimple	typeref:typename:const char * SCI_METHOD	signature:()
DescribeWordListSets	..\\scintilla\\lexlib\\OptionSet.h	/^	const char *DescribeWordListSets() const {$/;"	f	class:Scintilla::OptionSet	typeref:typename:const char *	access:public	signature:() const
DescribeWordListSets	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::DescribeWordListSets() {$/;"	f	class:LexState	typeref:typename:const char *	signature:()
DescriptionOfStyle	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::DescriptionOfStyle(int style) {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:(int style)
DescriptionOfStyle	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::DescriptionOfStyle(int style) {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:(int style)
DescriptionOfStyle	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::DescriptionOfStyle(int style) {$/;"	f	class:LexState	typeref:typename:const char *	signature:(int style)
Destroy	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Menu::Destroy() {}$/;"	f	class:Menu	typeref:typename:void	signature:()
Destroy	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::Destroy() {$/;"	f	class:Window	typeref:typename:void	signature:()
Destroy	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Menu::Destroy() {$/;"	f	class:Menu	typeref:typename:void	signature:()
Destroy	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::Destroy() {$/;"	f	class:Window	typeref:typename:void	signature:()
Destroy	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Destroy(GObject *object) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GObject * object)
Destroy	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Menu::Destroy()$/;"	f	class:Scintilla::Menu	typeref:typename:void	signature:()
Destroy	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::Destroy()$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:()
Destroy	..\\scintilla\\win32\\PlatWin.cxx	/^void Menu::Destroy() {$/;"	f	class:Scintilla::Menu	typeref:typename:void	signature:()
Destroy	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::Destroy() {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:()
Destroy	..\\scite\\gtk\\GUIGTK.cxx	/^void Menu::Destroy() {$/;"	f	class:GUI::Menu	typeref:typename:void	signature:()
Destroy	..\\scite\\gtk\\GUIGTK.cxx	/^void Window::Destroy() {$/;"	f	class:GUI::Window	typeref:typename:void	signature:()
Destroy	..\\scite\\win32\\GUIWin.cxx	/^void Menu::Destroy() {$/;"	f	class:GUI::Menu	typeref:typename:void	signature:()
Destroy	..\\scite\\win32\\GUIWin.cxx	/^void Window::Destroy() {$/;"	f	class:GUI::Window	typeref:typename:void	signature:()
DestroyFindReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::DestroyFindReplace() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
DestroyFindReplace	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::DestroyFindReplace() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
DestroyMenuItem	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::DestroyMenuItem(int, int itemID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int,int itemID)
DestroyMenuItem	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::DestroyMenuItem(int menuNumber, int itemID) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int menuNumber,int itemID)
DestroySystemCaret	..\\scintilla\\win32\\ScintillaWin.cxx	/^BOOL ScintillaWin::DestroySystemCaret() {$/;"	f	class:ScintillaWin	typeref:typename:BOOL	signature:()
Destroyed	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^		void Destroyed() override {$/;"	f	class:ScintillaGTK::Paste::Helper	typeref:typename:void	file:	access:private	signature:()
Destroyed	..\\scintilla\\gtk\\ScintillaGTK.h	/^	virtual void Destroyed() {}$/;"	f	class:Scintilla::GObjectWatcher	typeref:typename:void	access:public	signature:()
Destroyed	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^		void Destroyed() override {$/;"	f	struct:ScintillaGTKAccessible::PasteText::Helper	typeref:typename:void	file:	access:public	signature:()
Destruction	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::Destruction() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::Destruction() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::Destruction() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void BackgroundStrip::Destruction() {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Destruction() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::Destruction() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Destruction() {$/;"	f	class:SearchStrip	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void SearchStripBase::Destruction() {$/;"	f	class:SearchStripBase	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void Strip::Destruction() {$/;"	f	class:Strip	typeref:typename:void	signature:()
Destruction	..\\scite\\win32\\Strips.cxx	/^void UserStrip::Destruction() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
DeviceHeightFont	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int DeviceHeightFont(int points) { return 1; }$/;"	f	class:SurfaceImpl	typeref:typename:int	file:	access:public	signature:(int points)
DeviceHeightFont	..\\scintilla\\gtk\\PlatGTK.cxx	/^int SurfaceImpl::DeviceHeightFont(int points) {$/;"	f	class:SurfaceImpl	typeref:typename:int	signature:(int points)
DeviceHeightFont	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int SurfaceImpl::DeviceHeightFont(int points)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:int	signature:(int points)
DeviceHeightFont	..\\scintilla\\win32\\PlatWin.cxx	/^int SurfaceD2D::DeviceHeightFont(int points) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:int	signature:(int points)
DeviceHeightFont	..\\scintilla\\win32\\PlatWin.cxx	/^int SurfaceGDI::DeviceHeightFont(int points) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:int	signature:(int points)
Dialog	..\\scite\\gtk\\Widget.h	/^class Dialog : public GUI::Window {$/;"	c	inherits:GUI::Window
Dialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^	explicit Dialog(HWND hDlg_) : hDlg(hDlg_) {$/;"	f	class:Dialog	file:	access:public	signature:(HWND hDlg_)
Dialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^class Dialog {$/;"	c	file:
DialogAbbrev	..\\scite\\gtk\\SciTEGTK.cxx	/^class DialogAbbrev : public Dialog {$/;"	c	file:	inherits:Dialog
DialogFilterFromProperty	..\\scite\\win32\\SciTEWinDlg.cxx	/^GUI::gui_string SciTEWin::DialogFilterFromProperty(const GUI::gui_char *filterProperty) {$/;"	f	class:SciTEWin	typeref:typename:GUI::gui_string	signature:(const GUI::gui_char * filterProperty)
DialogFindInFiles	..\\scite\\gtk\\SciTEGTK.cxx	/^class DialogFindInFiles : public Dialog, public SearchUI {$/;"	c	file:	inherits:Dialog,SearchUI
DialogFindReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^class DialogFindReplace : public Dialog, public SearchUI {$/;"	c	file:	inherits:Dialog,SearchUI
DialogFindReplace	..\\scite\\win32\\SciTEWinDlg.cxx	/^	DialogFindReplace(HWND hDlg_, bool advanced_) :$/;"	f	class:DialogFindReplace	file:	access:public	signature:(HWND hDlg_,bool advanced_)
DialogFindReplace	..\\scite\\win32\\SciTEWinDlg.cxx	/^class DialogFindReplace : public Dialog, public SearchUI  {$/;"	c	file:	inherits:Dialog,SearchUI
DialogGoto	..\\scite\\gtk\\SciTEGTK.cxx	/^class DialogGoto : public Dialog {$/;"	c	file:	inherits:Dialog
DialogHandled	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::DialogHandled(GUI::WindowID id, MSG *pmsg) {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:(GUI::WindowID id,MSG * pmsg)
DialogParameters	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogParameters() :  paramDialogCanceled(true) {$/;"	f	class:DialogParameters	file:	access:public	signature:()
DialogParameters	..\\scite\\gtk\\SciTEGTK.cxx	/^class DialogParameters : public Dialog {$/;"	c	file:	inherits:Dialog
DialogTabSize	..\\scite\\gtk\\SciTEGTK.cxx	/^class DialogTabSize : public Dialog {$/;"	c	file:	inherits:Dialog
DirectFunction	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^sptr_t ScintillaGTK::DirectFunction($/;"	f	class:ScintillaGTK	typeref:typename:sptr_t	signature:(sptr_t ptr,unsigned int iMessage,uptr_t wParam,sptr_t lParam)
DirectFunction	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^sptr_t ScintillaQt::DirectFunction($/;"	f	class:ScintillaQt	typeref:typename:sptr_t	signature:(sptr_t ptr,unsigned int iMessage,uptr_t wParam,sptr_t lParam)
DirectFunction	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::DirectFunction($/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(sptr_t ptr,UINT iMessage,uptr_t wParam,sptr_t lParam)
DirectorExtension	..\\scite\\gtk\\DirectorExtension.h	/^	DirectorExtension() : inputWatcher(-1), inputChannel(0), host(0) {} \/\/ Singleton$/;"	f	class:DirectorExtension	access:private	signature:()
DirectorExtension	..\\scite\\gtk\\DirectorExtension.h	/^class DirectorExtension : public Extension {$/;"	c	inherits:Extension
DirectorExtension	..\\scite\\win32\\DirectorExtension.h	/^	DirectorExtension() : host(0) {} \/\/ Singleton$/;"	f	class:DirectorExtension	access:private	signature:()
DirectorExtension	..\\scite\\win32\\DirectorExtension.h	/^class DirectorExtension : public Extension {$/;"	c	inherits:Extension
DirectorExtension_ClassName	..\\scite\\win32\\DirectorExtension.cxx	/^static TCHAR DirectorExtension_ClassName[] = TEXT("DirectorExtension");$/;"	v	typeref:typename:TCHAR[]	file:
DirectorExtension_Register	..\\scite\\win32\\DirectorExtension.cxx	/^static void DirectorExtension_Register(HINSTANCE hInstance) {$/;"	f	typeref:typename:void	file:	signature:(HINSTANCE hInstance)
DirectorExtension_WndProc	..\\scite\\win32\\DirectorExtension.cxx	/^LRESULT PASCAL DirectorExtension_WndProc($/;"	f	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
Directory	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::Directory() const {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:() const
DiscardOverdraw	..\\scintilla\\src\\Editor.cxx	/^void Editor::DiscardOverdraw() {$/;"	f	class:Editor	typeref:typename:void	signature:()
DiscoverEOLSetting	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::DiscoverEOLSetting() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
DiscoverIndentSetting	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::DiscoverIndentSetting() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
DiscoverLanguage	..\\scite\\src\\SciTEIO.cxx	/^std::string SciTEBase::DiscoverLanguage() {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:()
Display	..\\scite\\gtk\\Widget.cxx	/^void Dialog::Display(GtkWidget *parent, bool modal) {$/;"	f	class:Dialog	typeref:typename:void	signature:(GtkWidget * parent,bool modal)
DisplayAround	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::DisplayAround(const RecentFile &rf) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const RecentFile & rf)
DisplayCursor	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::DisplayCursor(Window::Cursor c) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(Window::Cursor c)
DisplayCursor	..\\scintilla\\src\\Editor.cxx	/^void Editor::DisplayCursor(Window::Cursor c) {$/;"	f	class:Editor	typeref:typename:void	signature:(Window::Cursor c)
DisplayFromDoc	..\\scintilla\\src\\ContractionState.cxx	/^Sci::Line ContractionState::DisplayFromDoc(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:Sci::Line	signature:(Sci::Line lineDoc) const
DisplayFromPosition	..\\scintilla\\src\\EditView.cxx	/^Sci::Line EditView::DisplayFromPosition(Surface *surface, const EditModel &model, Sci::Position /;"	f	class:EditView	typeref:typename:Sci::Line	signature:(Surface * surface,const EditModel & model,Sci::Position pos,const ViewStyle & vs)
DisplayFromPosition	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::DisplayFromPosition(Sci::Position pos) {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:(Sci::Position pos)
DisplayLastFromDoc	..\\scintilla\\src\\ContractionState.cxx	/^Sci::Line ContractionState::DisplayLastFromDoc(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:Sci::Line	signature:(Sci::Line lineDoc) const
Dispose	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Dispose(GObject *object) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GObject * object)
Dispose	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayoutCache::Dispose(LineLayout *ll) {$/;"	f	class:LineLayoutCache	typeref:typename:void	signature:(LineLayout * ll)
DistanceToSecondaryStyles	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::DistanceToSecondaryStyles() {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:()
DistanceToSecondaryStyles	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::DistanceToSecondaryStyles() {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:()
DistanceToSecondaryStyles	..\\scintilla\\lexlib\\SubStyles.h	/^	int DistanceToSecondaryStyles() const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:() const
DistanceToSecondaryStyles	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::DistanceToSecondaryStyles() {$/;"	f	class:LexState	typeref:typename:int	signature:()
DllMain	..\\scintilla\\win32\\ScintillaWin.cxx	/^extern "C" int APIENTRY DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved) {$/;"	f	typeref:typename:int APIENTRY	signature:(HINSTANCE hInstance,DWORD dwReason,LPVOID lpvReserved)
DoDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^int SciTEWin::DoDialog(const TCHAR *resName, DLGPROC lpProc) {$/;"	f	class:SciTEWin	typeref:typename:int	signature:(const TCHAR * resName,DLGPROC lpProc)
DoMenuCommand	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::DoMenuCommand(int cmdID) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int cmdID)
DoReplaceAll	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::DoReplaceAll(bool inSelection) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(bool inSelection)
DocFromDisplay	..\\scintilla\\src\\ContractionState.cxx	/^Sci::Line ContractionState::DocFromDisplay(Sci::Line lineDisplay) const {$/;"	f	class:ContractionState	typeref:typename:Sci::Line	signature:(Sci::Line lineDisplay) const
DocModification	..\\scintilla\\src\\Document.h	/^	DocModification(int modificationType_, Sci::Position position_=0, Sci::Position length_=0,$/;"	f	class:Scintilla::DocModification	access:public	signature:(int modificationType_,Sci::Position position_=0,Sci::Position length_=0,Sci::Line linesAdded_=0,const char * text_=0,Sci::Line line_=0)
DocModification	..\\scintilla\\src\\Document.h	/^	DocModification(int modificationType_, const Action &act, Sci::Line linesAdded_=0) :$/;"	f	class:Scintilla::DocModification	access:public	signature:(int modificationType_,const Action & act,Sci::Line linesAdded_=0)
DocModification	..\\scintilla\\src\\Document.h	/^class DocModification {$/;"	c	namespace:Scintilla
DocWatcher	..\\scintilla\\src\\Document.h	/^class DocWatcher {$/;"	c	namespace:Scintilla
Document	..\\scintilla\\src\\Document.cxx	/^Document::Document(int options) :$/;"	f	class:Document	signature:(int options)
Document	..\\scintilla\\src\\Document.h	/^class Document : PerLine, public IDocumentWithLineEnd, public ILoader {$/;"	c	namespace:Scintilla	inherits:PerLine,IDocumentWithLineEnd,ILoader
DocumentIndexer	..\\scintilla\\src\\Document.cxx	/^	DocumentIndexer(Document *pdoc_, Sci::Position end_) :$/;"	f	class:__anon1ef09aa80111::DocumentIndexer	file:	access:public	signature:(Document * pdoc_,Sci::Position end_)
DocumentIndexer	..\\scintilla\\src\\Document.cxx	/^class DocumentIndexer : public CharacterIndexer {$/;"	c	namespace:__anon1ef09aa80111	file:	inherits:CharacterIndexer
DocumentLexState	..\\scintilla\\src\\ScintillaBase.cxx	/^LexState *ScintillaBase::DocumentLexState() {$/;"	f	class:ScintillaBase	typeref:typename:LexState *	signature:()
DocumentModified	..\\scite\\src\\SciTEBuffers.cxx	/^void Buffer::DocumentModified() {$/;"	f	class:Buffer	typeref:typename:void	signature:()
DocumentPointFromView	..\\scintilla\\src\\Editor.cxx	/^PointDocument Editor::DocumentPointFromView(Point ptView) const {$/;"	f	class:Editor	typeref:typename:PointDocument	signature:(Point ptView) const
DoubleClickTime	..\\scintilla\\curses\\ScintillaCurses.cxx	/^unsigned int Platform::DoubleClickTime() { return 500; \/* ms *\/ }$/;"	f	class:Platform	typeref:typename:unsigned int	signature:()
DoubleClickTime	..\\scintilla\\gtk\\PlatGTK.cxx	/^unsigned int Platform::DoubleClickTime() {$/;"	f	class:Platform	typeref:typename:unsigned int	signature:()
DoubleClickTime	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^unsigned int Platform::DoubleClickTime()$/;"	f	class:Scintilla::Platform	typeref:typename:unsigned int	signature:()
DoubleClickTime	..\\scintilla\\win32\\PlatWin.cxx	/^unsigned int Platform::DoubleClickTime() {$/;"	f	class:Scintilla::Platform	typeref:typename:unsigned int	signature:()
DragDataGet	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::DragDataGet(GtkWidget *widget, GdkDragContext *context,$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GdkDragContext * context,GtkSelectionData * selection_data,guint info,guint)
DragDataReceived	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::DragDataReceived(GtkWidget *widget, GdkDragContext * \/*context*\/,$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GdkDragContext *,gint,gint,GtkSelectionData * selection_data,guint,guint)
DragDataReceived	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::DragDataReceived(GtkWidget *, GdkDragContext *context,$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkWidget *,GdkDragContext * context,gint,gint,GtkSelectionData * seldata,guint,guint time,SciTEGTK * scitew)
DragEnd	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::DragEnd(GtkWidget *widget, GdkDragContext * \/*context*\/) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GdkDragContext *)
DragEnter	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::DragEnter(const Point &point)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const Point & point)
DragEnter	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP ScintillaWin::DragEnter(LPDATAOBJECT pIDataSource, DWORD grfKeyState,$/;"	f	class:ScintillaWin	typeref:typename:STDMETHODIMP	signature:(LPDATAOBJECT pIDataSource,DWORD grfKeyState,POINTL,PDWORD pdwEffect)
DragIsRectangularOK	..\\scintilla\\win32\\ScintillaWin.cxx	/^	bool DragIsRectangularOK(CLIPFORMAT fmt) const {$/;"	f	class:ScintillaWin	typeref:typename:bool	file:	access:public	signature:(CLIPFORMAT fmt) const
DragLeave	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::DragLeave(GtkWidget *widget, GdkDragContext * \/*context*\/, guint) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GdkDragContext *,guint)
DragLeave	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::DragLeave()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
DragLeave	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP ScintillaWin::DragLeave() {$/;"	f	class:ScintillaWin	typeref:typename:STDMETHODIMP	signature:()
DragMotion	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DragMotion(GtkWidget *widget, GdkDragContext *context,$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkDragContext * context,gint x,gint y,guint dragtime)
DragMotionThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DragMotionThis(GdkDragContext *context,$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GdkDragContext * context,gint x,gint y,guint dragtime)
DragMove	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::DragMove(const Point &point)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const Point & point)
DragOver	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP ScintillaWin::DragOver(DWORD grfKeyState, POINTL pt, PDWORD pdwEffect) {$/;"	f	class:ScintillaWin	typeref:typename:STDMETHODIMP	signature:(DWORD grfKeyState,POINTL pt,PDWORD pdwEffect)
DragThreshold	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::DragThreshold(Point ptStart, Point ptNow) {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:(Point ptStart,Point ptNow)
DragThreshold	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^bool ScintillaQt::DragThreshold(Point ptStart, Point ptNow)$/;"	f	class:ScintillaQt	typeref:typename:bool	signature:(Point ptStart,Point ptNow)
DragThreshold	..\\scintilla\\src\\Editor.cxx	/^bool Editor::DragThreshold(Point ptStart, Point ptNow) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Point ptStart,Point ptNow)
DragThreshold	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::DragThreshold(Point ptStart, Point ptNow) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(Point ptStart,Point ptNow)
Draw	..\\scintilla\\src\\Indicator.cxx	/^void Indicator::Draw(Surface *surface, const PRectangle &rc, const PRectangle &rcLine, const PRe/;"	f	class:Indicator	typeref:typename:void	signature:(Surface * surface,const PRectangle & rc,const PRectangle & rcLine,const PRectangle & rcCharacter,DrawState drawState,int value) const
Draw	..\\scintilla\\src\\LineMarker.cxx	/^void LineMarker::Draw(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, typeOfFold /;"	f	class:LineMarker	typeref:typename:void	signature:(Surface * surface,PRectangle & rcWhole,Font & fontForCharacter,typeOfFold tFold,int marginStyle) const
Draw	..\\scintilla\\src\\XPM.cxx	/^void XPM::Draw(Surface *surface, const PRectangle &rc) {$/;"	f	class:XPM	typeref:typename:void	signature:(Surface * surface,const PRectangle & rc)
Draw	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::Draw(DRAWITEMSTRUCT *pDrawItem) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(DRAWITEMSTRUCT * pDrawItem)
DrawAnnotation	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawAnnotation(Surface *surface, const EditModel &model, const ViewStyle &vsDraw,/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,int xStart,PRectangle rcLine,int subLine,DrawPhase phase)
DrawBackground	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawBackground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw,/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,PRectangle rcLine,Range lineRange,Sci::Position posLineStart,int xStart,int subLine,ColourOptional background) const
DrawBlockCaret	..\\scintilla\\src\\EditView.cxx	/^static void DrawBlockCaret(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, co/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,int subLine,int xStart,Sci::Position offset,Sci::Position posCaret,PRectangle rcCaret,ColourDesired caretColour)
DrawBox	..\\scintilla\\src\\LineMarker.cxx	/^static void DrawBox(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore,/;"	f	typeref:typename:void	file:	signature:(Surface * surface,int centreX,int centreY,int armSize,ColourDesired fore,ColourDesired back)
DrawCT	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawCT(GtkWidget *widget, cairo_t *cr, CallTip *ctip) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,cairo_t * cr,CallTip * ctip)
DrawCaretLineFramed	..\\scintilla\\src\\EditView.cxx	/^static void DrawCaretLineFramed(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll,/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const ViewStyle & vsDraw,const LineLayout * ll,PRectangle rcLine,int subLine)
DrawCarets	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawCarets(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, con/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line lineDoc,int xStart,PRectangle rcLine,int subLine) const
DrawChunk	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::DrawChunk(Surface *surface, int &x, const char *s,$/;"	f	class:CallTip	typeref:typename:void	signature:(Surface * surface,int & x,const char * s,int posStart,int posEnd,int ytext,PRectangle rcClient,bool highlight,bool draw)
DrawCircle	..\\scintilla\\src\\LineMarker.cxx	/^static void DrawCircle(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fo/;"	f	typeref:typename:void	file:	signature:(Surface * surface,int centreX,int centreY,int armSize,ColourDesired fore,ColourDesired back)
DrawEOL	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawEOL(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const /;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,PRectangle rcLine,Sci::Line line,Sci::Position lineEnd,int xStart,int subLine,XYACCUMULATOR subLineStart,ColourOptional background)
DrawEdgeLine	..\\scintilla\\src\\EditView.cxx	/^static void DrawEdgeLine(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, PRecta/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const ViewStyle & vsDraw,const LineLayout * ll,PRectangle rcLine,Range lineRange,int xStart)
DrawFoldDisplayText	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawFoldDisplayText(Surface *surface, const EditModel &model, const ViewStyle &vs/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,int xStart,PRectangle rcLine,int subLine,XYACCUMULATOR subLineStart,DrawPhase phase)
DrawFoldLines	..\\scintilla\\src\\EditView.cxx	/^static void DrawFoldLines(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, Sci/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,Sci::Line line,PRectangle rcLine)
DrawForeground	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawForeground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw,/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line lineVisible,PRectangle rcLine,Range lineRange,Sci::Position posLineStart,int xStart,int subLine,ColourOptional background)
DrawFrame	..\\scintilla\\src\\EditView.cxx	/^static void DrawFrame(Surface *surface, ColourDesired colour, int alpha, PRectangle rcFrame) {$/;"	f	typeref:typename:void	file:	signature:(Surface * surface,ColourDesired colour,int alpha,PRectangle rcFrame)
DrawImeIndicator	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::DrawImeIndicator(int indicator, int len) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(int indicator,int len)
DrawImeIndicator	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::DrawImeIndicator(int indicator, int len)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(int indicator,int len)
DrawImeIndicator	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::DrawImeIndicator(int indicator, int len) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(int indicator,int len)
DrawIndentGuide	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawIndentGuide(Surface *surface, Sci::Line lineVisible, int lineHeight, Sci::Pos/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,Sci::Line lineVisible,int lineHeight,Sci::Position start,PRectangle rcSegment,bool highlight)
DrawIndentGuidesOverEmpty	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawIndentGuidesOverEmpty(Surface *surface, const EditModel &model, const ViewSty/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,Sci::Line lineVisible,PRectangle rcLine,int xStart,int subLine)
DrawIndicator	..\\scintilla\\src\\EditView.cxx	/^static void DrawIndicator(int indicNum, Sci::Position startPos, Sci::Position endPos, Surface *s/;"	f	typeref:typename:void	file:	signature:(int indicNum,Sci::Position startPos,Sci::Position endPos,Surface * surface,const ViewStyle & vsDraw,const LineLayout * ll,int xStart,PRectangle rcLine,Sci::Position secondCharacter,int subLine,Indicator::DrawState drawState,int value)
DrawIndicators	..\\scintilla\\src\\EditView.cxx	/^static void DrawIndicators(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, co/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,int xStart,PRectangle rcLine,int subLine,Sci::Position lineEnd,bool under,Sci::Position hoverIndicatorPos)
DrawLine	..\\scintilla\\src\\EditView.cxx	/^void EditView::DrawLine(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,Sci::Line lineVisible,int xStart,PRectangle rcLine,int subLine,DrawPhase phase)
DrawLineMarker	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawLineMarker(PRectangle &rcWhole, Font &fontForCharacter, int tFold,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle & rcWhole,Font & fontForCharacter,int tFold,const void * data)
DrawLineMarker	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static void DrawLineMarker(Surface *surface, PRectangle &rcWhole,$/;"	f	typeref:typename:void	file:	signature:(Surface * surface,PRectangle & rcWhole,Font & fontForCharacter,int tFold,int marginStyle,const void * data)
DrawLineMarkerFn	..\\scintilla\\src\\LineMarker.h	/^typedef void (*DrawLineMarkerFn)(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, /;"	t	namespace:Scintilla	typeref:typename:void (*)(Surface * surface,PRectangle & rcWhole,Font & fontForCharacter,int tFold,int marginStyle,const void * lineMarker)
DrawMain	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawMain(GtkWidget *widget, cairo_t *cr) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,cairo_t * cr)
DrawMarkUnderline	..\\scintilla\\src\\EditView.cxx	/^static void DrawMarkUnderline(Surface *surface, const EditModel &model, const ViewStyle &vsDraw,$/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,Sci::Line line,PRectangle rcLine)
DrawMinus	..\\scintilla\\src\\LineMarker.cxx	/^static void DrawMinus(Surface *surface, int centreX, int centreY, int armSize, ColourDesired for/;"	f	typeref:typename:void	file:	signature:(Surface * surface,int centreX,int centreY,int armSize,ColourDesired fore)
DrawPage	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::DrawPage(GtkPrintOperation *operation, GtkPrintContext *context, gint page_nr, Sc/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkPrintOperation * operation,GtkPrintContext * context,gint page_nr,SciTEGTK * scitew)
DrawPageThis	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::DrawPageThis(GtkPrintOperation * \/* operation *\/, GtkPrintContext *context, gin/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkPrintOperation *,GtkPrintContext * context,gint page_nr)
DrawPhase	..\\scintilla\\src\\EditView.h	/^enum DrawPhase {$/;"	g	namespace:Scintilla
DrawPlus	..\\scintilla\\src\\LineMarker.cxx	/^static void DrawPlus(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore/;"	f	typeref:typename:void	file:	signature:(Surface * surface,int centreX,int centreY,int armSize,ColourDesired fore)
DrawPreedit	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawPreedit(GtkWidget *widget, cairo_t *cr, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,cairo_t * cr,ScintillaGTK * sciThis)
DrawPreeditThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawPreeditThis(GtkWidget *, cairo_t *cr) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget *,cairo_t * cr)
DrawRGBAImage	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawRGBAImage(PRectangle rc, int width, int height,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,int width,int height,const unsigned char * pixelsImage)
DrawRGBAImage	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixel/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,int width,int height,const unsigned char * pixelsImage)
DrawRGBAImage	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixel/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,int width,int height,const unsigned char * pixelsImage)
DrawRGBAImage	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixels/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,int width,int height,const unsigned char * pixelsImage)
DrawRGBAImage	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixels/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,int width,int height,const unsigned char * pixelsImage)
DrawState	..\\scintilla\\src\\Indicator.h	/^	enum DrawState { drawNormal, drawHover };$/;"	g	class:Scintilla::Indicator	access:public
DrawStyledText	..\\scintilla\\src\\EditView.cxx	/^void DrawStyledText(Surface *surface, const ViewStyle &vs, int styleOffset, PRectangle rcText,$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(Surface * surface,const ViewStyle & vs,int styleOffset,PRectangle rcText,const StyledText & st,size_t start,size_t length,DrawPhase phase)
DrawTabArrow	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawTabArrow(PRectangle rcTab) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rcTab)
DrawTabArrow	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static void DrawTabArrow(Surface *surface, PRectangle rcTab, int ymid) {$/;"	f	typeref:typename:void	file:	signature:(Surface * surface,PRectangle rcTab,int ymid)
DrawTabArrow	..\\scintilla\\src\\EditView.cxx	/^static void DrawTabArrow(Surface *surface, PRectangle rcTab, int ymid, const ViewStyle &vsDraw) /;"	f	typeref:typename:void	file:	signature:(Surface * surface,PRectangle rcTab,int ymid,const ViewStyle & vsDraw)
DrawTabArrowFn	..\\scintilla\\src\\EditView.h	/^typedef void (*DrawTabArrowFn)(Surface *surface, PRectangle rcTab, int ymid);$/;"	t	namespace:Scintilla	typeref:typename:void (*)(Surface * surface,PRectangle rcTab,int ymid)
DrawText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawText(GtkWidget *, cairo_t *cr, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget *,cairo_t * cr,ScintillaGTK * sciThis)
DrawTextBase	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::DrawTextBase(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int /;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore)
DrawTextBlob	..\\scintilla\\src\\EditView.cxx	/^static void DrawTextBlob(Surface *surface, const ViewStyle &vsDraw, PRectangle rcSegment,$/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const ViewStyle & vsDraw,PRectangle rcSegment,const char * s,ColourDesired textBack,ColourDesired textFore,bool fillBackground)
DrawTextClipped	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextClipped	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, i/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextClipped	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::DrawTextClipped(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextClipped	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, in/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextClipped	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, in/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextCommon	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::DrawTextCommon(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,UINT fuOptions)
DrawTextCommon	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::DrawTextCommon(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,UINT fuOptions)
DrawTextNoClip	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextNoClip	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, in/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextNoClip	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::DrawTextNoClip(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextNoClip	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextNoClip	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore,ColourDesired back)
DrawTextNoClipPhase	..\\scintilla\\src\\EditView.cxx	/^void DrawTextNoClipPhase(Surface *surface, PRectangle rc, const Style &style, XYPOSITION ybase,$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(Surface * surface,PRectangle rc,const Style & style,XYPOSITION ybase,const char * s,int len,DrawPhase phase)
DrawTextThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawTextThis(cairo_t *cr) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(cairo_t * cr)
DrawTextTransparent	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore)
DrawTextTransparent	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char */;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore)
DrawTextTransparent	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::DrawTextTransparent(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Font & font,XYPOSITION ybase,const char * s,int len,ColourDesired fore)
DrawTextTransparent	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore)
DrawTextTransparent	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,Font & font_,XYPOSITION ybase,const char * s,int len,ColourDesired fore)
DrawThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::DrawThis(cairo_t *cr) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(cairo_t * cr)
DrawTranslucentLineState	..\\scintilla\\src\\EditView.cxx	/^static void DrawTranslucentLineState(Surface *surface, const EditModel &model, const ViewStyle &/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,PRectangle rcLine,int subLine)
DrawTranslucentSelection	..\\scintilla\\src\\EditView.cxx	/^static void DrawTranslucentSelection(Surface *surface, const EditModel &model, const ViewStyle &/;"	f	typeref:typename:void	file:	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,PRectangle rcLine,int subLine,Range lineRange,int xStart)
DrawWrapIndentAndMarker	..\\scintilla\\src\\EditView.cxx	/^static void DrawWrapIndentAndMarker(Surface *surface, const ViewStyle &vsDraw, const LineLayout /;"	f	typeref:typename:void	file:	signature:(Surface * surface,const ViewStyle & vsDraw,const LineLayout * ll,int xStart,PRectangle rcLine,ColourOptional background,DrawWrapMarkerFn customDrawWrapMarker,bool caretActive)
DrawWrapMarker	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void DrawWrapMarker(PRectangle rcPlace, bool isEndMarker,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rcPlace,bool isEndMarker,ColourDesired wrapColour)
DrawWrapMarker	..\\scintilla\\src\\MarginView.cxx	/^void DrawWrapMarker(Surface *surface, PRectangle rcPlace,$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(Surface * surface,PRectangle rcPlace,bool isEndMarker,ColourDesired wrapColour)
DrawWrapMarkerFn	..\\scintilla\\src\\MarginView.h	/^typedef void (*DrawWrapMarkerFn)(Surface *surface, PRectangle rcPlace, bool isEndMarker, ColourD/;"	t	namespace:Scintilla	typeref:typename:void (*)(Surface * surface,PRectangle rcPlace,bool isEndMarker,ColourDesired wrapColour)
DrawWrapVisualMarker	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static void DrawWrapVisualMarker(Surface *surface, PRectangle rcPlace,$/;"	f	typeref:typename:void	file:	signature:(Surface * surface,PRectangle rcPlace,bool isEndMarker,ColourDesired wrapColour)
Drop	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::Drop(GtkWidget *widget, GdkDragContext * \/*context*\/,$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkDragContext *,gint,gint,guint)
Drop	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::Drop(const Point &point, const QMimeData *data, bool move)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const Point & point,const QMimeData * data,bool move)
Drop	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP ScintillaWin::Drop(LPDATAOBJECT pIDataSource, DWORD grfKeyState,$/;"	f	class:ScintillaWin	typeref:typename:STDMETHODIMP	signature:(LPDATAOBJECT pIDataSource,DWORD grfKeyState,POINTL pt,PDWORD pdwEffect)
DropAdditionalRanges	..\\scintilla\\src\\Selection.cxx	/^void Selection::DropAdditionalRanges() {$/;"	f	class:Selection	typeref:typename:void	signature:()
DropAt	..\\scintilla\\src\\Editor.cxx	/^void Editor::DropAt(SelectionPosition position, const char *value, bool moving, bool rectangular/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition position,const char * value,bool moving,bool rectangular)
DropAt	..\\scintilla\\src\\Editor.cxx	/^void Editor::DropAt(SelectionPosition position, const char *value, size_t lengthValue, bool movi/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition position,const char * value,size_t lengthValue,bool moving,bool rectangular)
DropCaret	..\\scintilla\\src\\Editor.cxx	/^void Editor::DropCaret() {$/;"	f	class:Editor	typeref:typename:void	signature:()
DropFiles	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::DropFiles(HDROP hdrop) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(HDROP hdrop)
DropGraphics	..\\scintilla\\src\\EditView.cxx	/^void EditView::DropGraphics(bool freeObjects) {$/;"	f	class:EditView	typeref:typename:void	signature:(bool freeObjects)
DropGraphics	..\\scintilla\\src\\Editor.cxx	/^void Editor::DropGraphics(bool freeObjects) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool freeObjects)
DropGraphics	..\\scintilla\\src\\MarginView.cxx	/^void MarginView::DropGraphics(bool freeObjects) {$/;"	f	class:Scintilla::MarginView	typeref:typename:void	signature:(bool freeObjects)
DropRenderTarget	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::DropRenderTarget() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
DropSelection	..\\scintilla\\src\\Selection.cxx	/^void Selection::DropSelection(size_t r) {$/;"	f	class:Selection	typeref:typename:void	signature:(size_t r)
DropSource	..\\scintilla\\win32\\ScintillaWin.cxx	/^DropSource::DropSource() {$/;"	f	class:DropSource	signature:()
DropSource	..\\scintilla\\win32\\ScintillaWin.cxx	/^class DropSource {$/;"	c	file:
DropSource_AddRef	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)DropSource_AddRef(DropSource *ds) {$/;"	f	typeref:typename:ULONG	signature:(DropSource * ds)
DropSource_GiveFeedback	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropSource_GiveFeedback(DropSource *, DWORD) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropSource *,DWORD)
DropSource_QueryContinueDrag	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropSource_QueryContinueDrag(DropSource *, BOOL fEsc, DWORD grfKeyState) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropSource *,BOOL fEsc,DWORD grfKeyState)
DropSource_QueryInterface	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropSource_QueryInterface(DropSource *ds, REFIID riid, PVOID *ppv) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropSource * ds,REFIID riid,PVOID * ppv)
DropSource_Release	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)DropSource_Release(DropSource *ds) {$/;"	f	typeref:typename:ULONG	signature:(DropSource * ds)
DropTarget	..\\scintilla\\win32\\ScintillaWin.cxx	/^DropTarget::DropTarget() {$/;"	f	class:DropTarget	signature:()
DropTarget	..\\scintilla\\win32\\ScintillaWin.cxx	/^class DropTarget {$/;"	c	file:
DropTarget_AddRef	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)DropTarget_AddRef(DropTarget *dt) {$/;"	f	typeref:typename:ULONG	signature:(DropTarget * dt)
DropTarget_DragEnter	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropTarget_DragEnter(DropTarget *dt, LPDATAOBJECT pIDataSource, DWORD grfKeyState,$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropTarget * dt,LPDATAOBJECT pIDataSource,DWORD grfKeyState,POINTL pt,PDWORD pdwEffect)
DropTarget_DragLeave	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropTarget_DragLeave(DropTarget *dt) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropTarget * dt)
DropTarget_DragOver	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropTarget_DragOver(DropTarget *dt, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)/;"	f	typeref:typename:STDMETHODIMP	signature:(DropTarget * dt,DWORD grfKeyState,POINTL pt,PDWORD pdwEffect)
DropTarget_Drop	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropTarget_Drop(DropTarget *dt, LPDATAOBJECT pIDataSource, DWORD grfKeyState,$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropTarget * dt,LPDATAOBJECT pIDataSource,DWORD grfKeyState,POINTL pt,PDWORD pdwEffect)
DropTarget_QueryInterface	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP DropTarget_QueryInterface(DropTarget *dt, REFIID riid, PVOID *ppv) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(DropTarget * dt,REFIID riid,PVOID * ppv)
DropTarget_Release	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)DropTarget_Release(DropTarget *dt) {$/;"	f	typeref:typename:ULONG	signature:(DropTarget * dt)
DropUndoSequence	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::DropUndoSequence() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
DropUrls	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::DropUrls(const QMimeData *data)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const QMimeData * data)
DumpBlock	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpBlock(const void* b, size_t size, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(const void * b,size_t size,DumpState * D)
DumpChar	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpChar(int y, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(int y,DumpState * D)
DumpCode	..\\scintilla\\lua\\src\\ldump.c	/^#define DumpCode(/;"	d	file:	signature:(f,D)
DumpConstants	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpConstants(const Proto* f, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f,DumpState * D)
DumpDebug	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpDebug(const Proto* f, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f,DumpState * D)
DumpFunction	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpFunction(const Proto* f, const TString* p, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f,const TString * p,DumpState * D)
DumpHeader	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpHeader(DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(DumpState * D)
DumpInt	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpInt(int x, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(int x,DumpState * D)
DumpMem	..\\scintilla\\lua\\src\\ldump.c	/^#define DumpMem(/;"	d	file:	signature:(b,n,size,D)
DumpNumber	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpNumber(lua_Number x, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(lua_Number x,DumpState * D)
DumpState	..\\scintilla\\lua\\src\\ldump.c	/^} DumpState;$/;"	t	typeref:struct:__anonbc205f790108	file:
DumpString	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpString(const TString* s, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(const TString * s,DumpState * D)
DumpVar	..\\scintilla\\lua\\src\\ldump.c	/^#define DumpVar(/;"	d	file:	signature:(x,D)
DumpVector	..\\scintilla\\lua\\src\\ldump.c	/^static void DumpVector(const void* b, int n, size_t size, DumpState* D)$/;"	f	typeref:typename:void	file:	signature:(const void * b,int n,size_t size,DumpState * D)
Duplicate	..\\scintilla\\src\\Editor.cxx	/^void Editor::Duplicate(bool forLine) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool forLine)
Duration	..\\scintilla\\curses\\ScintillaCurses.cxx	/^double ElapsedTime::Duration(bool reset) { return 1; }$/;"	f	class:ElapsedTime	typeref:typename:double	signature:(bool reset)
Duration	..\\scintilla\\gtk\\PlatGTK.cxx	/^double ElapsedTime::Duration(bool reset) {$/;"	f	class:ElapsedTime	typeref:typename:double	signature:(bool reset)
Duration	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^double ElapsedTime::Duration(bool reset)$/;"	f	class:Scintilla::ElapsedTime	typeref:typename:double	signature:(bool reset)
Duration	..\\scintilla\\win32\\PlatWin.cxx	/^double ElapsedTime::Duration(bool reset) {$/;"	f	class:Scintilla::ElapsedTime	typeref:typename:double	signature:(bool reset)
Duration	..\\scite\\gtk\\GUIGTK.cxx	/^double ElapsedTime::Duration(bool reset) {$/;"	f	class:GUI::ElapsedTime	typeref:typename:double	signature:(bool reset)
Duration	..\\scite\\src\\FileWorker.cxx	/^double FileWorker::Duration() {$/;"	f	class:FileWorker	typeref:typename:double	signature:()
Duration	..\\scite\\win32\\GUIWin.cxx	/^double ElapsedTime::Duration(bool reset) {$/;"	f	class:GUI::ElapsedTime	typeref:typename:double	signature:(bool reset)
DwellEnd	..\\scintilla\\src\\Editor.cxx	/^void Editor::DwellEnd(bool mouseMoved) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool mouseMoved)
DynamicLibrary	..\\scintilla\\include\\Platform.h	/^class DynamicLibrary {$/;"	c	namespace:Scintilla
DynamicLibraryImpl	..\\scintilla\\gtk\\PlatGTK.cxx	/^	explicit DynamicLibraryImpl(const char *modulePath) {$/;"	f	class:DynamicLibraryImpl	file:	access:public	signature:(const char * modulePath)
DynamicLibraryImpl	..\\scintilla\\gtk\\PlatGTK.cxx	/^class DynamicLibraryImpl : public DynamicLibrary {$/;"	c	file:	inherits:DynamicLibrary
DynamicLibraryImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	explicit DynamicLibraryImpl(const char *modulePath) {$/;"	f	class:Scintilla::DynamicLibraryImpl	file:	access:public	signature:(const char * modulePath)
DynamicLibraryImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^class DynamicLibraryImpl : public DynamicLibrary {$/;"	c	namespace:Scintilla	file:	inherits:DynamicLibrary
DynamicLibraryImpl	..\\scintilla\\win32\\PlatWin.cxx	/^	explicit DynamicLibraryImpl(const char *modulePath) {$/;"	f	class:Scintilla::DynamicLibraryImpl	file:	access:public	signature:(const char * modulePath)
DynamicLibraryImpl	..\\scintilla\\win32\\PlatWin.cxx	/^class DynamicLibraryImpl : public DynamicLibrary {$/;"	c	namespace:Scintilla	file:	inherits:DynamicLibrary
EDGE_BACKGROUND	..\\scintilla\\include\\Scintilla.h	/^#define EDGE_BACKGROUND /;"	d
EDGE_LINE	..\\scintilla\\include\\Scintilla.h	/^#define EDGE_LINE /;"	d
EDGE_MULTILINE	..\\scintilla\\include\\Scintilla.h	/^#define EDGE_MULTILINE /;"	d
EDGE_NONE	..\\scintilla\\include\\Scintilla.h	/^#define EDGE_NONE /;"	d
EDITMODEL_H	..\\scintilla\\src\\EditModel.h	/^#define EDITMODEL_H$/;"	d
EDITOR_H	..\\scintilla\\src\\Editor.h	/^#define EDITOR_H$/;"	d
EDITVIEW_H	..\\scintilla\\src\\EditView.h	/^#define EDITVIEW_H$/;"	d
ELEMENTS	..\\scintilla\\lexlib\\StringCopy.h	/^#define ELEMENTS(/;"	d	signature:(a)
ELEMENTS	..\\scite\\src\\GUI.h	/^#define ELEMENTS(/;"	d	signature:(a)
END	..\\scintilla\\src\\RESearch.cxx	/^#define END /;"	d	file:
EOL	..\\scintilla\\src\\RESearch.cxx	/^#define EOL /;"	d	file:
EOT	..\\scintilla\\src\\RESearch.cxx	/^#define EOT /;"	d	file:
EOW	..\\scintilla\\src\\RESearch.cxx	/^#define EOW /;"	d	file:
EOZ	..\\scintilla\\lua\\src\\lzio.h	/^#define EOZ	/;"	d
ERRFUNC	..\\scintilla\\lua\\src\\loadlib.c	/^#define ERRFUNC	/;"	d	file:
ERRLIB	..\\scintilla\\lua\\src\\loadlib.c	/^#define ERRLIB	/;"	d	file:
EXPORT_IMPORT_API	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^#define EXPORT_IMPORT_API /;"	d
EXPORT_IMPORT_API	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^#define EXPORT_IMPORT_API$/;"	d
EXPORT_IMPORT_API	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.h	/^#define EXPORT_IMPORT_API /;"	d
EXPORT_IMPORT_API	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.h	/^#define EXPORT_IMPORT_API$/;"	d
EXTENDER_H	..\\scite\\src\\Extender.h	/^#define EXTENDER_H$/;"	d
EXTERNALLEXER_H	..\\scintilla\\src\\ExternalLexer.h	/^#define EXTERNALLEXER_H$/;"	d
EXTRA_STACK	..\\scintilla\\lua\\src\\lstate.h	/^#define EXTRA_STACK /;"	d
EXT_LEXER_DECL	..\\scintilla\\src\\ExternalLexer.h	/^#define EXT_LEXER_DECL /;"	d
EXT_LEXER_DECL	..\\scintilla\\src\\ExternalLexer.h	/^#define EXT_LEXER_DECL$/;"	d
EdgeProperties	..\\scintilla\\src\\ViewStyle.h	/^	EdgeProperties(int column_ = 0, ColourDesired colour_ = ColourDesired(0)) :$/;"	f	struct:Scintilla::EdgeProperties	access:public	signature:(int column_=0,ColourDesired colour_=ColourDesired (0))
EdgeProperties	..\\scintilla\\src\\ViewStyle.h	/^	EdgeProperties(uptr_t wParam, sptr_t lParam) :$/;"	f	struct:Scintilla::EdgeProperties	access:public	signature:(uptr_t wParam,sptr_t lParam)
EdgeProperties	..\\scintilla\\src\\ViewStyle.h	/^struct EdgeProperties {$/;"	s	namespace:Scintilla
EditColour	..\\scite\\win32\\Strips.cxx	/^LRESULT FindReplaceStrip::EditColour(HWND hwnd, HDC hdc) {$/;"	f	class:FindReplaceStrip	typeref:typename:LRESULT	signature:(HWND hwnd,HDC hdc)
EditColour	..\\scite\\win32\\Strips.cxx	/^LRESULT SearchStrip::EditColour(HWND hwnd, HDC hdc) {$/;"	f	class:SearchStrip	typeref:typename:LRESULT	signature:(HWND hwnd,HDC hdc)
EditColour	..\\scite\\win32\\Strips.cxx	/^LRESULT Strip::EditColour(HWND hwnd, HDC hdc) {$/;"	f	class:Strip	typeref:typename:LRESULT	signature:(HWND hwnd,HDC hdc)
EditModel	..\\scintilla\\src\\EditModel.cxx	/^EditModel::EditModel() {$/;"	f	class:EditModel	signature:()
EditModel	..\\scintilla\\src\\EditModel.h	/^class EditModel {$/;"	c	namespace:Scintilla
EditView	..\\scintilla\\src\\EditView.cxx	/^EditView::EditView() {$/;"	f	class:EditView	signature:()
EditView	..\\scintilla\\src\\EditView.h	/^class EditView {$/;"	c	namespace:Scintilla
Editor	..\\scintilla\\src\\Editor.cxx	/^Editor::Editor() {$/;"	f	class:Editor	signature:()
Editor	..\\scintilla\\src\\Editor.h	/^class Editor : public EditModel, public DocWatcher {$/;"	c	namespace:Scintilla	inherits:EditModel,DocWatcher
EffectFromState	..\\scintilla\\win32\\ScintillaWin.cxx	/^DWORD ScintillaWin::EffectFromState(DWORD grfKeyState) const {$/;"	f	class:ScintillaWin	typeref:typename:DWORD	signature:(DWORD grfKeyState) const
ElapsedTime	..\\scintilla\\curses\\ScintillaCurses.cxx	/^ElapsedTime::ElapsedTime() : bigBit(0), littleBit(0) {}$/;"	f	class:ElapsedTime	signature:()
ElapsedTime	..\\scintilla\\gtk\\PlatGTK.cxx	/^ElapsedTime::ElapsedTime() {$/;"	f	class:ElapsedTime	signature:()
ElapsedTime	..\\scintilla\\include\\Platform.h	/^class ElapsedTime {$/;"	c	namespace:Scintilla
ElapsedTime	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ElapsedTime::ElapsedTime() : bigBit(0), littleBit(0)$/;"	f	class:Scintilla::ElapsedTime	signature:()
ElapsedTime	..\\scintilla\\win32\\PlatWin.cxx	/^ElapsedTime::ElapsedTime() {$/;"	f	class:Scintilla::ElapsedTime	signature:()
ElapsedTime	..\\scite\\gtk\\GUIGTK.cxx	/^ElapsedTime::ElapsedTime() {$/;"	f	class:GUI::ElapsedTime	signature:()
ElapsedTime	..\\scite\\src\\GUI.h	/^class ElapsedTime {$/;"	c	namespace:GUI
ElapsedTime	..\\scite\\win32\\GUIWin.cxx	/^ElapsedTime::ElapsedTime() {$/;"	f	class:GUI::ElapsedTime	signature:()
ElementAt	..\\scite\\src\\Containers.h	/^	TYPE& ElementAt(int nIndex) {$/;"	f	class:TArray	typeref:typename:TYPE &	access:public	signature:(int nIndex)
Elements	..\\scintilla\\src\\SparseVector.h	/^	Sci::Position Elements() const {$/;"	f	class:Scintilla::SparseVector	typeref:typename:Sci::Position	access:public	signature:() const
EliminateDuplicateWords	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::EliminateDuplicateWords(std::string &words) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(std::string & words)
Ellipse	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
Ellipse	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
Ellipse	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::Ellipse(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
Ellipse	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
Ellipse	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
Empty	..\\scintilla\\include\\Platform.h	/^	bool Empty() const {$/;"	f	class:Scintilla::PRectangle	typeref:typename:bool	access:public	signature:() const
Empty	..\\scintilla\\src\\Decoration.cxx	/^bool Decoration::Empty() const {$/;"	f	class:Decoration	typeref:typename:bool	signature:() const
Empty	..\\scintilla\\src\\Editor.h	/^	bool Empty() const {$/;"	f	class:Scintilla::SelectionText	typeref:typename:bool	access:public	signature:() const
Empty	..\\scintilla\\src\\PerLine.cxx	/^bool MarkerHandleSet::Empty() const {$/;"	f	class:MarkerHandleSet	typeref:typename:bool	signature:() const
Empty	..\\scintilla\\src\\Selection.cxx	/^bool Selection::Empty() const {$/;"	f	class:Selection	typeref:typename:bool	signature:() const
Empty	..\\scintilla\\src\\Selection.h	/^	bool Empty() const {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:bool	access:public	signature:() const
Empty	..\\scintilla\\src\\Selection.h	/^	bool Empty() const {$/;"	f	struct:Scintilla::SelectionSegment	typeref:typename:bool	access:public	signature:() const
Enable	..\\scite\\win32\\SciTEWinDlg.cxx	/^	void Enable(int id, bool enable) {$/;"	f	class:Dialog	typeref:typename:void	file:	access:public	signature:(int id,bool enable)
EnableAMenuItem	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::EnableAMenuItem(int wIDCheckItem, bool val) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int wIDCheckItem,bool val)
EnableAMenuItem	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::EnableAMenuItem(int wIDCheckItem, bool val) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int wIDCheckItem,bool val)
EnableButton	..\\scite\\win32\\SciTEWinBar.cxx	/^void EnableButton(HWND wTools, int id, bool enable) {$/;"	f	typeref:typename:void	signature:(HWND wTools,int id,bool enable)
Enabled	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^bool ScintillaGTKAccessible::Enabled() const {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:bool	signature:() const
EncodeString	..\\scite\\gtk\\SciTEGTK.cxx	/^std::string SciTEGTK::EncodeString(const std::string &s) {$/;"	f	class:SciTEGTK	typeref:typename:std::string	signature:(const std::string & s)
EncodeString	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::EncodeString(const std::string &s) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const std::string & s)
EncodeString	..\\scite\\win32\\SciTEWin.cxx	/^std::string SciTEWin::EncodeString(const std::string &s) {$/;"	f	class:SciTEWin	typeref:typename:std::string	signature:(const std::string & s)
EncodedFromUTF8	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^int ScintillaGTK::EncodedFromUTF8(char *utf8, char *encoded) const {$/;"	f	class:ScintillaGTK	typeref:typename:int	signature:(char * utf8,char * encoded) const
EncodedFromUTF8	..\\scintilla\\win32\\ScintillaWin.cxx	/^Sci::Position ScintillaWin::EncodedFromUTF8(const char *utf8, char *encoded) const {$/;"	f	class:ScintillaWin	typeref:typename:Sci::Position	signature:(const char * utf8,char * encoded) const
Encoding	..\\scintilla\\lexlib\\LexAccessor.h	/^	EncodingType Encoding() const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:EncodingType	access:public	signature:() const
Encoding	..\\scite\\win32\\SciTEWin.cxx	/^	struct Encoding {$/;"	s	function:CodePageFromName	file:
EncodingFamily	..\\scintilla\\src\\Document.h	/^enum EncodingFamily { efEightBit, efUnicode, efDBCS };$/;"	g	namespace:Scintilla
EncodingType	..\\scintilla\\lexlib\\LexAccessor.h	/^enum EncodingType { enc8bit, encUnicode, encDBCS };$/;"	g	namespace:Scintilla
End	..\\scintilla\\src\\Decoration.cxx	/^Sci::Position DecorationList::End(int indicator, Sci::Position position) {$/;"	f	class:DecorationList	typeref:typename:Sci::Position	signature:(int indicator,Sci::Position position)
End	..\\scintilla\\src\\Selection.h	/^	SelectionPosition End() const {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:SelectionPosition	access:public	signature:() const
EndLineStyle	..\\scintilla\\src\\PositionCache.cxx	/^int LineLayout::EndLineStyle() const {$/;"	f	class:LineLayout	typeref:typename:int	signature:() const
EndMatches	..\\scite\\src\\FilePath.cxx	/^static bool EndMatches(GUI::gui_string const &s, GUI::gui_string const &end) {$/;"	f	typeref:typename:bool	file:	signature:(GUI::gui_string const & s,GUI::gui_string const & end)
EndRun	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::EndRun(DISTANCE position) const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:(DISTANCE position) const
EndStackedTabbing	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::EndStackedTabbing() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
EndStyling	..\\scite\\src\\LuaExtension.cxx	/^	static int EndStyling(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
EndUndoAction	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::EndUndoAction() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
EndUndoAction	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::EndUndoAction() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
EndUndoAction	..\\scintilla\\src\\Document.h	/^	void EndUndoAction() { cb.EndUndoAction(); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:()
EndsWith	..\\scite\\src\\StringHelpers.cxx	/^bool EndsWith(GUI::gui_string const &s, GUI::gui_string const &end) {$/;"	f	typeref:typename:bool	signature:(GUI::gui_string const & s,GUI::gui_string const & end)
EnsureAllChildrenVisible	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::EnsureAllChildrenVisible(int line, int level) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line,int level)
EnsureCaretVisible	..\\scintilla\\src\\Editor.cxx	/^void Editor::EnsureCaretVisible(bool useMargin, bool vert, bool horiz) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool useMargin,bool vert,bool horiz)
EnsureData	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::EnsureData() {$/;"	f	class:ContractionState	typeref:typename:void	signature:()
EnsureData	..\\scite\\src\\SciTEIO.cxx	/^	void EnsureData() {$/;"	f	class:BufferedFile	typeref:typename:void	file:	access:private	signature:()
EnsureFinalNewLine	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::EnsureFinalNewLine() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
EnsureLength	..\\scintilla\\src\\SplitVector.h	/^	void EnsureLength(ptrdiff_t wantedLength) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t wantedLength)
EnsureLineVisible	..\\scintilla\\src\\Editor.cxx	/^void Editor::EnsureLineVisible(Sci::Line lineDoc, bool enforcePolicy) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line lineDoc,bool enforcePolicy)
EnsureRangeVisible	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::EnsureRangeVisible(GUI::ScintillaWindow &win, int posStart, int posEnd, bool enf/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & win,int posStart,int posEnd,bool enforcePolicy)
EnsureRenderTarget	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::EnsureRenderTarget(HDC hdc) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(HDC hdc)
EnsureStyle	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::EnsureStyle(size_t index) {$/;"	f	class:ViewStyle	typeref:typename:void	signature:(size_t index)
EnsureStyledTo	..\\scintilla\\src\\Document.cxx	/^void Document::EnsureStyledTo(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Position pos)
EnsureUndoRoom	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::EnsureUndoRoom() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
Entry	..\\scite\\gtk\\Widget.cxx	/^GtkEntry *WComboBoxEntry::Entry() {$/;"	f	class:WComboBoxEntry	typeref:typename:GtkEntry *	signature:()
EntryMemory	..\\scite\\src\\StringHelpers.h	/^class EntryMemory {$/;"	c
EnumProperties	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::EnumProperties(const char *propkind) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * propkind)
EqualCaseInsensitive	..\\scite\\src\\StringHelpers.cxx	/^bool EqualCaseInsensitive(const char *a, const char *b) {$/;"	f	typeref:typename:bool	signature:(const char * a,const char * b)
EscapeFilePathsForMenu	..\\scite\\src\\SciTEBuffers.cxx	/^static void EscapeFilePathsForMenu(GUI::gui_string &path) {$/;"	f	typeref:typename:void	file:	signature:(GUI::gui_string & path)
EscapeHanja	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::EscapeHanja() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
EscapeSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean FindStrip::EscapeSignal(GtkWidget *w, GdkEventKey *event, FindStrip *pStrip) {$/;"	f	class:FindStrip	typeref:typename:gboolean	signature:(GtkWidget * w,GdkEventKey * event,FindStrip * pStrip)
EscapeSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean ReplaceStrip::EscapeSignal(GtkWidget *w, GdkEventKey *event, ReplaceStrip *pStrip) {$/;"	f	class:ReplaceStrip	typeref:typename:gboolean	signature:(GtkWidget * w,GdkEventKey * event,ReplaceStrip * pStrip)
EscapeSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean UserStrip::EscapeSignal(GtkWidget *w, GdkEventKey *event, UserStrip *pStrip) {$/;"	f	class:UserStrip	typeref:typename:gboolean	signature:(GtkWidget * w,GdkEventKey * event,UserStrip * pStrip)
Evaluate	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::Evaluate(const char *key) const {$/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const char * key) const
EventLoop	..\\scite\\win32\\SciTEWin.cxx	/^uptr_t SciTEWin::EventLoop() {$/;"	f	class:SciTEWin	typeref:typename:uptr_t	signature:()
EventType	..\\scintilla\\include\\Platform.h	/^	enum class EventType { selectionChange, doubleClick } event;$/;"	g	struct:Scintilla::ListBoxEvent	access:public
Execute	..\\scintilla\\src\\RESearch.cxx	/^int RESearch::Execute(const CharacterIndexer &ci, Sci::Position lp, Sci::Position endp) {$/;"	f	class:RESearch	typeref:typename:int	signature:(const CharacterIndexer & ci,Sci::Position lp,Sci::Position endp)
Execute	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Execute() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
Execute	..\\scite\\src\\FileWorker.cxx	/^void FileLoader::Execute() {$/;"	f	class:FileLoader	typeref:typename:void	signature:()
Execute	..\\scite\\src\\FileWorker.cxx	/^void FileStorer::Execute() {$/;"	f	class:FileStorer	typeref:typename:void	signature:()
Execute	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Execute() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Execute	..\\scite\\src\\Worker.h	/^	virtual void Execute() {}$/;"	f	struct:Worker	typeref:typename:void	access:public	signature:()
Execute	..\\scite\\win32\\SciTEWin.cxx	/^void CommandWorker::Execute() {$/;"	f	class:CommandWorker	typeref:typename:void	signature:()
Execute	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::Execute() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ExecuteHelp	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ExecuteHelp(const char *cmd) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const char * cmd)
ExecuteMacroCommand	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ExecuteMacroCommand(const char *command) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * command)
ExecuteNext	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ExecuteNext() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ExecuteNext	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ExecuteNext() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ExecuteOne	..\\scite\\win32\\SciTEWin.cxx	/^DWORD SciTEWin::ExecuteOne(const Job &jobToRun) {$/;"	f	class:SciTEWin	typeref:typename:DWORD	signature:(const Job & jobToRun)
ExecuteOtherHelp	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ExecuteOtherHelp(const char *cmd) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const char * cmd)
Exhausted	..\\scite\\src\\SciTEIO.cxx	/^	bool Exhausted() const {$/;"	f	class:BufferedFile	typeref:typename:bool	file:	access:public	signature:() const
Exists	..\\scite\\src\\FilePath.cxx	/^bool FilePath::Exists() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
Exists	..\\scite\\src\\PropSetFile.cxx	/^bool PropSetFile::Exists(const char *key) const {$/;"	f	class:PropSetFile	typeref:typename:bool	signature:(const char * key) const
Exists	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::Exists(const GUI::gui_char *dir, const GUI::gui_char *path, FilePath *resultPath/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const GUI::gui_char * dir,const GUI::gui_char * path,FilePath * resultPath)
Expand	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::Expand(const std::string &withVars, int maxExpands) const {$/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const std::string & withVars,int maxExpands) const
ExpandAllInPlace	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^static int ExpandAllInPlace(const PropSetSimple &props, std::string &withVars, int maxExpands, c/;"	f	typeref:typename:int	file:	signature:(const PropSetSimple & props,std::string & withVars,int maxExpands,const VarChain & blankVars)
ExpandAllInPlace	..\\scite\\src\\PropSetFile.cxx	/^static int ExpandAllInPlace(const PropSetFile &props, std::string &withVars, int maxExpands, con/;"	f	typeref:typename:int	file:	signature:(const PropSetFile & props,std::string & withVars,int maxExpands,const VarChain & blankVars=VarChain ())
ExpandFolds	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ExpandFolds(int line, bool expand, int level) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line,bool expand,int level)
ExpandLevels	..\\scintilla\\src\\PerLine.cxx	/^void LineLevels::ExpandLevels(Sci::Line sizeNew) {$/;"	f	class:LineLevels	typeref:typename:void	signature:(Sci::Line sizeNew)
ExpandLine	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::ExpandLine(Sci::Line line) {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:(Sci::Line line)
Expose	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::Expose(GtkWidget *, GdkEventExpose *ose) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget *,GdkEventExpose * ose)
ExposeCT	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::ExposeCT(GtkWidget *widget, GdkEventExpose * \/*ose*\/, CallTip *ctip) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventExpose *,CallTip * ctip)
ExposeMain	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::ExposeMain(GtkWidget *widget, GdkEventExpose *ose) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventExpose * ose)
ExposePreedit	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::ExposePreedit(GtkWidget *widget, GdkEventExpose *ose, ScintillaGTK *sciTh/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventExpose * ose,ScintillaGTK * sciThis)
ExposePreeditThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::ExposePreeditThis(GtkWidget *widget, GdkEventExpose *) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventExpose *)
ExposeText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::ExposeText(GtkWidget *widget, GdkEventExpose *ose, ScintillaGTK *sciThis)/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventExpose * ose,ScintillaGTK * sciThis)
ExposeTextThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::ExposeTextThis(GtkWidget * \/*widget*\/, GdkEventExpose *ose) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget *,GdkEventExpose * ose)
Extend	..\\scintilla\\src\\Selection.h	/^	void Extend(SelectionPosition p) {$/;"	f	struct:Scintilla::SelectionSegment	typeref:typename:void	access:public	signature:(SelectionPosition p)
ExtendStyleRange	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::ExtendStyleRange(Sci::Position pos, int delta, bool singleLine) {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos,int delta,bool singleLine)
ExtendWordSelect	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::ExtendWordSelect(Sci::Position pos, int delta, bool onlyWordCharacters) /;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos,int delta,bool onlyWordCharacters) const
Extension	..\\scite\\src\\Extender.h	/^class Extension {$/;"	c
Extension	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::Extension() const {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:() const
ExtensionAPI	..\\scite\\src\\Extender.h	/^class ExtensionAPI {$/;"	c
ExtensionFileName	..\\scite\\src\\SciTEProps.cxx	/^std::string SciTEBase::ExtensionFileName() const {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:() const
ExternalLexerModule	..\\scintilla\\src\\ExternalLexer.h	/^	ExternalLexerModule(int language_, LexerFunction fnLexer_,$/;"	f	class:Scintilla::ExternalLexerModule	access:public	signature:(int language_,LexerFunction fnLexer_,const char * languageName_=0,LexerFunction fnFolder_=0)
ExternalLexerModule	..\\scintilla\\src\\ExternalLexer.h	/^class ExternalLexerModule : public LexerModule {$/;"	c	namespace:Scintilla	inherits:LexerModule
ExternalMarginWidth	..\\scintilla\\src\\ViewStyle.cxx	/^int ViewStyle::ExternalMarginWidth() const {$/;"	f	class:ViewStyle	typeref:typename:int	signature:() const
ExtractCharacter	..\\scintilla\\src\\Document.cxx	/^Document::CharacterExtracted Document::ExtractCharacter(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:Document::CharacterExtracted	signature:(Sci::Position position) const
ExtractHeaders	..\\scintilla\\scripts\\HeaderCheck.py	/^def ExtractHeaders(filename):$/;"	f	access:public	signature:(filename)
ExtractLine	..\\scite\\src\\Cookie.cxx	/^std::string ExtractLine(const char *buf, size_t length) {$/;"	f	typeref:typename:std::string	signature:(const char * buf,size_t length)
FINALIZEDBIT	..\\scintilla\\lua\\src\\lgc.h	/^#define FINALIZEDBIT	/;"	d
FIRST_RESERVED	..\\scintilla\\lua\\src\\llex.h	/^#define FIRST_RESERVED	/;"	d
FIXEDARGS	..\\scintilla\\lua\\src\\lptypes.h	/^#define FIXEDARGS	/;"	d
FIXEDBIT	..\\scintilla\\lua\\src\\lgc.h	/^#define FIXEDBIT	/;"	d
FLAGS	..\\scintilla\\lua\\src\\lstrlib.c	/^#define FLAGS	/;"	d	file:
FONTQUALITY_H	..\\scintilla\\src\\FontQuality.h	/^#define FONTQUALITY_H$/;"	d
FONTS_CACHED	..\\scintilla\\win32\\PlatWin.cxx	/^#define FONTS_CACHED$/;"	d	file:
FREELIST_REF	..\\scintilla\\lua\\src\\lauxlib.c	/^#define FREELIST_REF	/;"	d	file:
FRFindCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FRFindCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FRMarkAllCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FRMarkAllCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FRReplaceAllCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FRReplaceAllCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FRReplaceCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FRReplaceCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FRReplaceInBuffersCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FRReplaceInBuffersCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FRReplaceInSelectionCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FRReplaceInSelectionCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
Face	..\\scintilla\\scripts\\Face.py	/^class Face:$/;"	c	inherits:	access:public
FailedSaveMessageBox	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::FailedSaveMessageBox(const FilePath &filePathSaving) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const FilePath & filePathSaving)
FileCache	..\\scite\\scripts\\tags2api.py	/^class FileCache:$/;"	c	inherits:	access:public
FileFormat	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	g	class:SciTEGTK	file:	access:protected
FileLoader	..\\scite\\src\\FileWorker.cxx	/^FileLoader::FileLoader(WorkerListener *pListener_, ILoader *pLoader_, FilePath path_, long size_/;"	f	class:FileLoader	signature:(WorkerListener * pListener_,ILoader * pLoader_,FilePath path_,long size_,FILE * fp_)
FileLoader	..\\scite\\src\\FileWorker.h	/^class FileLoader : public FileWorker {$/;"	c	inherits:FileWorker
FileNameExt	..\\scite\\src\\SciTEBase.h	/^	FilePath FileNameExt() const {$/;"	f	class:SciTEBase	typeref:typename:FilePath	access:protected	signature:() const
FilePath	..\\scite\\src\\FilePath.cxx	/^FilePath::FilePath(FilePath const &directory, FilePath const &name) {$/;"	f	class:FilePath	signature:(FilePath const & directory,FilePath const & name)
FilePath	..\\scite\\src\\FilePath.cxx	/^FilePath::FilePath(const GUI::gui_char *fileName_) : fileName(fileName_ ? fileName_ : GUI_TEXT("/;"	f	class:FilePath	signature:(const GUI::gui_char * fileName_)
FilePath	..\\scite\\src\\FilePath.cxx	/^FilePath::FilePath(const GUI::gui_string &fileName_) : fileName(fileName_) {}$/;"	f	class:FilePath	signature:(const GUI::gui_string & fileName_)
FilePath	..\\scite\\src\\FilePath.h	/^class FilePath {$/;"	c
FilePathSet	..\\scite\\src\\FilePath.h	/^typedef std::vector<FilePath> FilePathSet;$/;"	t	typeref:typename:std::vector<FilePath>
FileReader	..\\scite\\src\\SciTEIO.cxx	/^	FileReader(FilePath fPath, bool caseSensitive_) {$/;"	f	class:FileReader	file:	access:public	signature:(FilePath fPath,bool caseSensitive_)
FileReader	..\\scite\\src\\SciTEIO.cxx	/^class FileReader {$/;"	c	file:
FileStorer	..\\scite\\src\\FileWorker.cxx	/^FileStorer::FileStorer(WorkerListener *pListener_, const char *documentBytes_, FilePath path_,$/;"	f	class:FileStorer	signature:(WorkerListener * pListener_,const char * documentBytes_,FilePath path_,long size_,FILE * fp_,UniMode unicodeMode_,bool visibleProgress_)
FileStorer	..\\scite\\src\\FileWorker.h	/^class FileStorer : public FileWorker {$/;"	c	inherits:FileWorker
FileWorker	..\\scite\\src\\FileWorker.cxx	/^FileWorker::FileWorker(WorkerListener *pListener_, FilePath path_, long size_, FILE *fp_) :$/;"	f	class:FileWorker	signature:(WorkerListener * pListener_,FilePath path_,long size_,FILE * fp_)
FileWorker	..\\scite\\src\\FileWorker.h	/^struct FileWorker : public Worker {$/;"	s	inherits:Worker
Fill	..\\scintilla\\lexlib\\LexAccessor.h	/^	void Fill(Sci_Position position) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:private	signature:(Sci_Position position)
Fill	..\\scite\\src\\StyleWriter.cxx	/^void TextReader::Fill(int position) {$/;"	f	class:TextReader	typeref:typename:void	signature:(int position)
FillComboFromMemory	..\\scite\\gtk\\SciTEGTK.cxx	/^static void FillComboFromMemory(WComboBoxEntry *combo, const ComboMemory &mem, bool useTop = fal/;"	f	typeref:typename:void	file:	signature:(WComboBoxEntry * combo,const ComboMemory & mem,bool useTop=false)
FillComboFromMemory	..\\scite\\win32\\SciTEWinDlg.cxx	/^	void FillComboFromMemory(int id, const ComboMemory &mem, bool useTop = false) {$/;"	f	class:Dialog	typeref:typename:void	file:	access:public	signature:(int id,const ComboMemory & mem,bool useTop=false)
FillComboFromProps	..\\scite\\gtk\\SciTEGTK.cxx	/^static void FillComboFromProps(WComboBoxEntry *combo, PropSetFile &props) {$/;"	f	typeref:typename:void	file:	signature:(WComboBoxEntry * combo,PropSetFile & props)
FillComboFromProps	..\\scite\\win32\\SciTEWinDlg.cxx	/^static void FillComboFromProps(HWND combo, PropSetFile &props) {$/;"	f	typeref:typename:void	file:	signature:(HWND combo,PropSetFile & props)
FillCombos	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::FillCombos(Dialog &dlg) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(Dialog & dlg)
FillFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void DialogFindInFiles::FillFields() {$/;"	f	class:DialogFindInFiles	typeref:typename:void	signature:()
FillFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void DialogFindReplace::FillFields() {$/;"	f	class:DialogFindReplace	typeref:typename:void	signature:()
FillFields	..\\scite\\win32\\SciTEWinDlg.cxx	/^void DialogFindReplace::FillFields() {$/;"	f	class:DialogFindReplace	typeref:typename:void	signature:()
FillFromMemory	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::FillFromMemory(const std::vector<std::string> &mem, bool useTop) {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:(const std::vector<std::string> & mem,bool useTop)
FillFunctionDefinition	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::FillFunctionDefinition(int pos \/*= -1*\/) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int pos)
FillLineRemainder	..\\scintilla\\src\\EditView.cxx	/^void EditView::FillLineRemainder(Surface *surface, const EditModel &model, const ViewStyle &vsDr/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surface,const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,Sci::Line line,PRectangle rcArea,int subLine) const
FillRange	..\\scintilla\\src\\Decoration.cxx	/^bool DecorationList::FillRange(Sci::Position &position, int value, Sci::Position &fillLength) {$/;"	f	class:DecorationList	typeref:typename:bool	signature:(Sci::Position & position,int value,Sci::Position & fillLength)
FillRange	..\\scintilla\\src\\RunStyles.cxx	/^bool RunStyles<DISTANCE, STYLE>::FillRange(DISTANCE &position, STYLE value, DISTANCE &fillLength/;"	f	class:RunStyles	typeref:typename:bool	signature:(DISTANCE & position,STYLE value,DISTANCE & fillLength)
FillRectangle	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void FillRectangle(PRectangle rc, ColourDesired back) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,ColourDesired back)
FillRectangle	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void FillRectangle(PRectangle rc, Surface &surfacePattern) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,Surface & surfacePattern)
FillRectangle	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::FillRectangle(PRectangle rc, ColourDesired back) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired back)
FillRectangle	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::FillRectangle(PRectangle rc, Surface &surfacePattern) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Surface & surfacePattern)
FillRectangle	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::FillRectangle(PRectangle rc, ColourDesired back)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired back)
FillRectangle	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::FillRectangle(PRectangle rc, Surface &surfacePattern)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,Surface & surfacePattern)
FillRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::FillRectangle(PRectangle rc, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,ColourDesired back)
FillRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::FillRectangle(PRectangle rc, Surface &surfacePattern) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,Surface & surfacePattern)
FillRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::FillRectangle(PRectangle rc, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,ColourDesired back)
FillRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::FillRectangle(PRectangle rc, Surface &surfacePattern) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,Surface & surfacePattern)
FillRun	..\\scintilla\\src\\XPM.cxx	/^void XPM::FillRun(Surface *surface, int code, int startX, int y, int x) const {$/;"	f	class:XPM	typeref:typename:void	signature:(Surface * surface,int code,int startX,int y,int x) const
FilterFromString	..\\scite\\src\\PropSetFile.cxx	/^static std::set<std::string> FilterFromString(std::string values) {$/;"	f	typeref:typename:std::set<std::string>	file:	signature:(std::string values)
FilterSelections	..\\scintilla\\src\\Editor.cxx	/^void Editor::FilterSelections() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Finalise	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Finalise() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
Finalise	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::Finalise()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
Finalise	..\\scintilla\\src\\Editor.cxx	/^void Editor::Finalise() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Finalise	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::Finalise() {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:()
Finalise	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::Finalise() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
Finalise	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::Finalise() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
Finalise	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::Finalise() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
Finalise	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::Finalise() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
Finalise	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::Finalise() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
Find	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int Find(const char *prefix) {$/;"	f	class:ListBoxImpl	typeref:typename:int	file:	access:public	signature:(const char * prefix)
Find	..\\scintilla\\gtk\\PlatGTK.cxx	/^int ListBoxX::Find(const char *prefix) {$/;"	f	class:ListBoxX	typeref:typename:int	signature:(const char * prefix)
Find	..\\scintilla\\lexlib\\SparseState.h	/^	typename stateVector::iterator Find(Sci_Position position) {$/;"	f	class:Scintilla::SparseState	typeref:typename:stateVector::iterator	access:private	signature:(Sci_Position position)
Find	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int ListBoxImpl::Find(const char *prefix)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:int	signature:(const char * prefix)
Find	..\\scintilla\\src\\CaseConvert.cxx	/^	const char *Find(int character) {$/;"	f	class:__anon1fb76d660111::CaseConverter	typeref:typename:const char *	file:	access:public	signature:(int character)
Find	..\\scintilla\\src\\Catalogue.cxx	/^const LexerModule *Catalogue::Find(const char *languageName) {$/;"	f	class:Catalogue	typeref:typename:const LexerModule *	signature:(const char * languageName)
Find	..\\scintilla\\src\\Catalogue.cxx	/^const LexerModule *Catalogue::Find(int language) {$/;"	f	class:Catalogue	typeref:typename:const LexerModule *	signature:(int language)
Find	..\\scintilla\\src\\KeyMap.cxx	/^unsigned int KeyMap::Find(int key, int modifiers) const {$/;"	f	class:KeyMap	typeref:typename:unsigned int	signature:(int key,int modifiers) const
Find	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::Find(STYLE value, DISTANCE start) const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:(STYLE value,DISTANCE start) const
Find	..\\scintilla\\src\\ViewStyle.cxx	/^FontRealised *ViewStyle::Find(const FontSpecification &fs) {$/;"	f	class:ViewStyle	typeref:typename:FontRealised *	signature:(const FontSpecification & fs)
Find	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::Find(const char *) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:(const char *)
Find	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Find() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
Find	..\\scite\\src\\Containers.h	/^	T_POSITION Find(ARG_TYPE searchValue, T_POSITION startAfter = (T_POSITION)0) const {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:(ARG_TYPE searchValue,T_POSITION startAfter=(T_POSITION)0) const
Find	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::Find() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
FindBefore	..\\scintilla\\src\\PositionCache.cxx	/^int LineLayout::FindBefore(XYPOSITION x, int lower, int upper) const {$/;"	f	class:LineLayout	typeref:typename:int	signature:(XYPOSITION x,int lower,int upper) const
FindCaseInsensitive	..\\scite\\src\\ExportRTF.cxx	/^static size_t FindCaseInsensitive(const std::vector<std::string> &values, const std::string &s) /;"	f	typeref:typename:size_t	file:	signature:(const std::vector<std::string> & values,const std::string & s)
FindCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::FindCmd() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
FindColumn	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::FindColumn(Sci::Line line, Sci::Position column) {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Line line,Sci::Position column)
FindComboChanged	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::FindComboChanged(GtkEditable *, FindStrip *pStrip) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(GtkEditable *,FindStrip * pStrip)
FindComboChanged	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::FindComboChanged(GtkEditable *, ReplaceStrip *pStrip) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(GtkEditable *,ReplaceStrip * pStrip)
FindConstant	..\\scite\\src\\IFaceTable.cxx	/^int IFaceTable::FindConstant(const char *name) {$/;"	f	class:IFaceTable	typeref:typename:int	signature:(const char * name)
FindControl	..\\scite\\src\\StripDefinition.h	/^	UserControl *FindControl(int control) {$/;"	f	class:StripDefinition	typeref:typename:UserControl *	access:public	signature:(int control)
FindControl	..\\scite\\win32\\Strips.cxx	/^UserControl *UserStrip::FindControl(int control) {$/;"	f	class:UserStrip	typeref:typename:UserControl *	signature:(int control)
FindCredits	..\\scintilla\\scripts\\ScintillaData.py	/^def FindCredits(historyFile):$/;"	f	access:public	signature:(historyFile)
FindDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::FindDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
FindFunction	..\\scintilla\\gtk\\PlatGTK.cxx	/^	Function FindFunction(const char *name) override {$/;"	f	class:DynamicLibraryImpl	typeref:typename:Function	file:	access:public	signature:(const char * name)
FindFunction	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	Function FindFunction(const char *name) override {$/;"	f	class:Scintilla::DynamicLibraryImpl	typeref:typename:Function	file:	access:public	signature:(const char * name)
FindFunction	..\\scintilla\\win32\\PlatWin.cxx	/^	Function FindFunction(const char *name) override {$/;"	f	class:Scintilla::DynamicLibraryImpl	typeref:typename:Function	file:	access:public	signature:(const char * name)
FindFunction	..\\scite\\src\\IFaceTable.cxx	/^int IFaceTable::FindFunction(const char *name) {$/;"	f	class:IFaceTable	typeref:typename:int	signature:(const char * name)
FindFunctionByConstantName	..\\scite\\src\\IFaceTable.cxx	/^int IFaceTable::FindFunctionByConstantName(const char *name) {$/;"	f	class:IFaceTable	typeref:typename:int	signature:(const char * name)
FindHasText	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::FindHasText() const {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:() const
FindInFiles	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindInFiles() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindInFiles	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::FindInFiles() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
FindInFilesBrowse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindInFilesBrowse() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindInFilesCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindInFilesCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindInFilesDotDot	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindInFilesDotDot() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindInFilesResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindInFilesResponse(int responseID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int responseID)
FindInTarget	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::FindInTarget(std::string findWhatText, int startPosition, int endPosition) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(std::string findWhatText,int startPosition,int endPosition)
FindIncrement	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindIncrement() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindIncrement	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::FindIncrement() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
FindIncrementChanged	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindIncrementChanged() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindIncrementCompleteCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindIncrementCompleteCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindIncrementEscapeSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean SciTEGTK::FindIncrementEscapeSignal(GtkWidget *w, GdkEventKey *event, SciTEGTK *scitew)/;"	f	class:SciTEGTK	typeref:typename:gboolean	signature:(GtkWidget * w,GdkEventKey * event,SciTEGTK * scitew)
FindIncrementFocusOutSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean SciTEGTK::FindIncrementFocusOutSignal(GtkWidget *) {$/;"	f	class:SciTEGTK	typeref:typename:gboolean	signature:(GtkWidget *)
FindIncrementNext	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindIncrementNext(bool select) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(bool select)
FindIncrementSetColour	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindIncrementSetColour(bool valid) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(bool valid)
FindIndex	..\\scite\\src\\Containers.h	/^	T_POSITION FindIndex(int nIndex) const {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:(int nIndex) const
FindLanguageProperty	..\\scite\\src\\SciTEProps.cxx	/^std::string SciTEBase::FindLanguageProperty(const char *pattern, const char *defaultValue) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char * pattern,const char * defaultValue)
FindLexersInXcode	..\\scintilla\\scripts\\ScintillaData.py	/^def FindLexersInXcode(xCodeProject):$/;"	f	access:public	signature:(xCodeProject)
FindMatchingBracePosition	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::FindMatchingBracePosition(bool editor, int &braceAtCaret, int &braceOpposite, bo/;"	f	class:SciTEBase	typeref:typename:bool	signature:(bool editor,int & braceAtCaret,int & braceOpposite,bool sloppy)
FindMatchingPreprocCondPosition	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::FindMatchingPreprocCondPosition($/;"	f	class:SciTEBase	typeref:typename:bool	signature:(bool isForward,int & mppcAtCaret,int & mppcMatch)
FindMatchingPreprocessorCondition	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::FindMatchingPreprocessorCondition($/;"	f	class:SciTEBase	typeref:typename:bool	signature:(int & curLine,int direction,int condEnd1,int condEnd2)
FindMaxAscentDescent	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::FindMaxAscentDescent() {$/;"	f	class:ViewStyle	typeref:typename:void	signature:()
FindMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::FindMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
FindMessageBox	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindMessageBox(const std::string &msg, const std::string *findItem) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const std::string & msg,const std::string * findItem)
FindMessageBox	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::FindMessageBox(const std::string &msg, const std::string *findItem) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const std::string & msg,const std::string * findItem)
FindModules	..\\scintilla\\scripts\\ScintillaData.py	/^def FindModules(lexFile):$/;"	f	access:public	signature:(lexFile)
FindNext	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::FindNext(bool reverseDirection, bool showWarnings, bool allowRegExp) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(bool reverseDirection,bool showWarnings,bool allowRegExp)
FindNextChange	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::FindNextChange(DISTANCE position, DISTANCE end) const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:(DISTANCE position,DISTANCE end) const
FindNextCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::FindNextCmd() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
FindOpenXmlTag	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::FindOpenXmlTag(const char sel[], int nSize) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char sel[],int nSize)
FindOrCreate	..\\scintilla\\win32\\PlatWin.cxx	/^FontID FontCached::FindOrCreate(const FontParameters &fp) {$/;"	f	class:Scintilla::FontCached	typeref:typename:FontID	signature:(const FontParameters & fp)
FindOtherInstance	..\\scite\\win32\\UniqueInstance.cxx	/^bool UniqueInstance::FindOtherInstance() {$/;"	f	class:UniqueInstance	typeref:typename:bool	signature:()
FindPositionFromX	..\\scintilla\\src\\PositionCache.cxx	/^int LineLayout::FindPositionFromX(XYPOSITION x, Range range, bool charPosition) const {$/;"	f	class:LineLayout	typeref:typename:int	signature:(XYPOSITION x,Range range,bool charPosition) const
FindProperties	..\\scintilla\\scripts\\ScintillaData.py	/^def FindProperties(lexFile):$/;"	f	access:public	signature:(lexFile)
FindProperty	..\\scite\\src\\IFaceTable.cxx	/^int IFaceTable::FindProperty(const char *name) {$/;"	f	class:IFaceTable	typeref:typename:int	signature:(const char * name)
FindPropertyDocumentation	..\\scintilla\\scripts\\ScintillaData.py	/^def FindPropertyDocumentation(lexFile):$/;"	f	access:public	signature:(lexFile)
FindReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindReplace(bool replace) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(bool replace)
FindReplace	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::FindReplace(bool replace) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(bool replace)
FindReplaceAdvanced	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::FindReplaceAdvanced() const {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:() const
FindReplaceGrabFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindReplaceGrabFields() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
FindReplaceResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::FindReplaceResponse(int responseID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int responseID)
FindReplaceStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	FindReplaceStrip() : initializingSearch(false), incrementalBehaviour(simple) {$/;"	f	class:FindReplaceStrip	file:	access:public	signature:()
FindReplaceStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^class FindReplaceStrip : public Strip, public SearchUI {$/;"	c	file:	inherits:Strip,SearchUI
FindReplaceStrip	..\\scite\\win32\\Strips.h	/^	FindReplaceStrip() : incrementalBehaviour(simple) {$/;"	f	class:FindReplaceStrip	access:protected	signature:()
FindReplaceStrip	..\\scite\\win32\\Strips.h	/^class FindReplaceStrip : public SearchStripBase {$/;"	c	inherits:SearchStripBase
FindSectionInList	..\\scintilla\\scripts\\FileGenerator.py	/^def FindSectionInList(lines, markers):$/;"	f	access:public	signature:(lines, markers)
FindStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	FindStrip() {$/;"	f	class:FindStrip	file:	access:public	signature:()
FindStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^class FindStrip : public FindReplaceStrip {$/;"	c	file:	inherits:FindReplaceStrip
FindStrip	..\\scite\\win32\\Strips.h	/^	FindStrip() {$/;"	f	class:FindStrip	access:public	signature:()
FindStrip	..\\scite\\win32\\Strips.h	/^class FindStrip : public FindReplaceStrip {$/;"	c	inherits:FindReplaceStrip
FindText	..\\scintilla\\src\\Document.cxx	/^Sci::Position BuiltinRegex::FindText(Document *doc, Sci::Position minPos, Sci::Position maxPos, /;"	f	class:BuiltinRegex	typeref:typename:Sci::Position	signature:(Document * doc,Sci::Position minPos,Sci::Position maxPos,const char * s,bool caseSensitive,bool,bool,int flags,Sci::Position * length)
FindText	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::FindText(Sci::Position minPos, Sci::Position maxPos, const char *search,$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position minPos,Sci::Position maxPos,const char * search,int flags,Sci::Position * length)
FindText	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::FindText($/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(uptr_t wParam,sptr_t lParam)
FineTickerCancel	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void FineTickerCancel(TickReason reason) {}$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(TickReason reason)
FineTickerCancel	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::FineTickerCancel(TickReason reason) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(TickReason reason)
FineTickerCancel	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::FineTickerCancel(TickReason reason)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(TickReason reason)
FineTickerCancel	..\\scintilla\\src\\Editor.cxx	/^void Editor::FineTickerCancel(TickReason) {$/;"	f	class:Editor	typeref:typename:void	signature:(TickReason)
FineTickerCancel	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::FineTickerCancel(TickReason reason) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(TickReason reason)
FineTickerRunning	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool FineTickerRunning(TickReason reason) { return false; }$/;"	f	class:ScintillaCurses	typeref:typename:bool	file:	access:public	signature:(TickReason reason)
FineTickerRunning	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::FineTickerRunning(TickReason reason) {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:(TickReason reason)
FineTickerRunning	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^bool ScintillaQt::FineTickerRunning(TickReason reason)$/;"	f	class:ScintillaQt	typeref:typename:bool	signature:(TickReason reason)
FineTickerRunning	..\\scintilla\\src\\Editor.cxx	/^bool Editor::FineTickerRunning(TickReason) {$/;"	f	class:Editor	typeref:typename:bool	signature:(TickReason)
FineTickerRunning	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::FineTickerRunning(TickReason reason) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(TickReason reason)
FineTickerStart	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void FineTickerStart(TickReason reason, int millis, int tolerance) {}$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(TickReason reason,int millis,int tolerance)
FineTickerStart	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::FineTickerStart(TickReason reason, int millis, int \/* tolerance *\/) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(TickReason reason,int millis,int)
FineTickerStart	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::FineTickerStart(TickReason reason, int millis, int \/* tolerance *\/)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(TickReason reason,int millis,int)
FineTickerStart	..\\scintilla\\src\\Editor.cxx	/^void Editor::FineTickerStart(TickReason, int, int) {$/;"	f	class:Editor	typeref:typename:void	signature:(TickReason,int,int)
FineTickerStart	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::FineTickerStart(TickReason reason, int millis, int tolerance) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(TickReason reason,int millis,int tolerance)
FinishedAdding	..\\scintilla\\src\\CaseConvert.cxx	/^	void FinishedAdding() {$/;"	f	class:__anon1fb76d660111::CaseConverter	typeref:typename:void	file:	access:public	signature:()
FinishedFuture	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::FinishedFuture(int index, Buffer::FutureDo fd) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int index,Buffer::FutureDo fd)
FinishedJob	..\\scite\\src\\Worker.h	/^	bool FinishedJob() const {$/;"	f	struct:Worker	typeref:typename:bool	access:public	signature:() const
First	..\\scintilla\\src\\Document.h	/^	Sci::Position First() const {$/;"	f	class:Scintilla::Range	typeref:typename:Sci::Position	access:public	signature:() const
FirstAllocated	..\\scintilla\\lexlib\\SubStyles.h	/^	int FirstAllocated() const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:() const
FixInvalidUTF8	..\\scintilla\\src\\UniConversion.cxx	/^std::string FixInvalidUTF8(const std::string &text) {$/;"	f	namespace:Scintilla	typeref:typename:std::string	signature:(const std::string & text)
FixName	..\\scite\\src\\FilePath.cxx	/^void FilePath::FixName() {$/;"	f	class:FilePath	typeref:typename:void	signature:()
FixSelectionForClipboard	..\\scintilla\\src\\Editor.h	/^	void FixSelectionForClipboard() {$/;"	f	class:Scintilla::SelectionText	typeref:typename:void	access:private	signature:()
FlagFromCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^bool &SciTEGTK::FlagFromCmd(int cmd) {$/;"	f	class:SciTEGTK	typeref:typename:bool &	signature:(int cmd)
FlagFromCmd	..\\scite\\src\\SciTEBase.cxx	/^bool &Searcher::FlagFromCmd(int cmd) {$/;"	f	class:Searcher	typeref:typename:bool &	signature:(int cmd)
Flags	..\\scintilla\\src\\Indicator.h	/^	int Flags() const {$/;"	f	class:Scintilla::Indicator	typeref:typename:int	access:public	signature:() const
FlashThisWindow	..\\scite\\win32\\SciTEWinDlg.cxx	/^static void FlashThisWindow($/;"	f	typeref:typename:void	file:	signature:(HWND hWnd,int duration)
FlipBitmap	..\\scintilla\\win32\\PlatWin.cxx	/^static void FlipBitmap(HBITMAP bitmap, int width, int height) {$/;"	f	namespace:Scintilla	typeref:typename:void	file:	signature:(HBITMAP bitmap,int width,int height)
Flush	..\\scintilla\\lexlib\\LexAccessor.h	/^	void Flush() {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:()
Flush	..\\scite\\src\\StyleWriter.cxx	/^void StyleWriter::Flush() {$/;"	f	class:StyleWriter	typeref:typename:void	signature:()
FlushCachedState	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void FlushCachedState() {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:()
FlushCachedState	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::FlushCachedState() {}$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:()
FlushCachedState	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::FlushCachedState()$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:()
FlushCachedState	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::FlushCachedState() {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:()
FlushCachedState	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::FlushCachedState() {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:()
FlushDrawing	..\\scintilla\\win32\\PlatWin.cxx	/^HRESULT SurfaceD2D::FlushDrawing() {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:HRESULT	signature:()
Focus	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean FindStrip::Focus(GtkDirectionType direction) {$/;"	f	class:FindStrip	typeref:typename:gboolean	signature:(GtkDirectionType direction)
Focus	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean ReplaceStrip::Focus(GtkDirectionType direction) {$/;"	f	class:ReplaceStrip	typeref:typename:gboolean	signature:(GtkDirectionType direction)
Focus	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean UserStrip::Focus(GtkDirectionType direction) {$/;"	f	class:UserStrip	typeref:typename:gboolean	signature:(GtkDirectionType direction)
Focus	..\\scite\\gtk\\Widget.h	/^	virtual gboolean Focus(GtkDirectionType \/* direction*\/ ) { return false; }$/;"	f	class:Strip	typeref:typename:gboolean	access:public	signature:(GtkDirectionType)
Focus	..\\scite\\win32\\Strips.cxx	/^void BackgroundStrip::Focus() {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:()
Focus	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Focus() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Focus	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::Focus() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
Focus	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Focus() {$/;"	f	class:SearchStrip	typeref:typename:void	signature:()
Focus	..\\scite\\win32\\Strips.cxx	/^void UserStrip::Focus() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
FocusIn	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::FocusIn(GtkWidget *widget, GdkEventFocus * \/*event*\/) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventFocus *)
FocusInThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::FocusInThis(GtkWidget *) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget *)
FocusOut	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::FocusOut(GtkWidget *widget, GdkEventFocus * \/*event*\/) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventFocus *)
FocusOutThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::FocusOutThis(GtkWidget *) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget *)
FocusSignal	..\\scite\\gtk\\Widget.cxx	/^gboolean Strip::FocusSignal(GtkWidget *\/*widget*\/, GtkDirectionType direction, Strip *pStrip) /;"	f	class:Strip	typeref:typename:gboolean	signature:(GtkWidget *,GtkDirectionType direction,Strip * pStrip)
Fold	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	size_t Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed) override {$/;"	f	class:CaseFolderDBCS	typeref:typename:size_t	file:	access:public	signature:(char * folded,size_t sizeFolded,const char * mixed,size_t lenMixed)
Fold	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^void SCI_METHOD DefaultLexer::Fold(Sci_PositionU, Sci_Position, int, IDocument *) {$/;"	f	class:DefaultLexer	typeref:typename:void SCI_METHOD	signature:(Sci_PositionU,Sci_Position,int,IDocument *)
Fold	..\\scintilla\\lexlib\\LexerModule.cxx	/^void LexerModule::Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle,$/;"	f	class:LexerModule	typeref:typename:void	signature:(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,WordList * keywordlists[],Accessor & styler) const
Fold	..\\scintilla\\lexlib\\LexerNoExceptions.cxx	/^void SCI_METHOD LexerNoExceptions::Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int init/;"	f	class:LexerNoExceptions	typeref:typename:void SCI_METHOD	signature:(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,IDocument * pAccess)
Fold	..\\scintilla\\lexlib\\LexerSimple.cxx	/^void SCI_METHOD LexerSimple::Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle,/;"	f	class:LexerSimple	typeref:typename:void SCI_METHOD	signature:(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,IDocument * pAccess)
Fold	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	size_t Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed) override {$/;"	f	class:CaseFolderDBCS	typeref:typename:size_t	file:	access:public	signature:(char * folded,size_t sizeFolded,const char * mixed,size_t lenMixed)
Fold	..\\scintilla\\src\\CaseFolder.cxx	/^size_t CaseFolderTable::Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed/;"	f	class:CaseFolderTable	typeref:typename:size_t	signature:(char * folded,size_t sizeFolded,const char * mixed,size_t lenMixed)
Fold	..\\scintilla\\src\\CaseFolder.cxx	/^size_t CaseFolderUnicode::Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMix/;"	f	class:CaseFolderUnicode	typeref:typename:size_t	signature:(char * folded,size_t sizeFolded,const char * mixed,size_t lenMixed)
Fold	..\\scintilla\\win32\\ScintillaWin.cxx	/^	size_t Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed) override {$/;"	f	class:CaseFolderDBCS	typeref:typename:size_t	file:	access:public	signature:(char * folded,size_t sizeFolded,const char * mixed,size_t lenMixed)
FoldAll	..\\scintilla\\src\\Editor.cxx	/^void Editor::FoldAll(int action) {$/;"	f	class:Editor	typeref:typename:void	signature:(int action)
FoldAll	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::FoldAll() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
FoldChanged	..\\scintilla\\src\\Editor.cxx	/^void Editor::FoldChanged(Sci::Line line, int levelNow, int levelPrev) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line line,int levelNow,int levelPrev)
FoldChanged	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::FoldChanged(int line, int levelNow, int levelPrev) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line,int levelNow,int levelPrev)
FoldExpand	..\\scintilla\\src\\Editor.cxx	/^void Editor::FoldExpand(Sci::Line line, int action, int level) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line line,int action,int level)
FoldLine	..\\scintilla\\src\\Editor.cxx	/^void Editor::FoldLine(Sci::Line line, int action) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line line,int action)
Font	..\\scintilla\\curses\\ScintillaCurses.cxx	/^Font::Font() : fid(0) {}$/;"	f	class:Font	signature:()
Font	..\\scintilla\\gtk\\PlatGTK.cxx	/^Font::Font() : fid(0) {}$/;"	f	class:Font	signature:()
Font	..\\scintilla\\include\\Platform.h	/^class Font {$/;"	c	namespace:Scintilla
Font	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^Font::Font() : fid(0) {}$/;"	f	class:Scintilla::Font	signature:()
Font	..\\scintilla\\win32\\PlatWin.cxx	/^Font::Font() {$/;"	f	class:Scintilla::Font	signature:()
FontAlias	..\\scintilla\\src\\Style.cxx	/^FontAlias::FontAlias() {$/;"	f	class:FontAlias	signature:()
FontAlias	..\\scintilla\\src\\Style.cxx	/^FontAlias::FontAlias(const FontAlias &other) : Font() {$/;"	f	class:FontAlias	signature:(const FontAlias & other)
FontAlias	..\\scintilla\\src\\Style.h	/^class FontAlias : public Font {$/;"	c	namespace:Scintilla	inherits:Font
FontAndCharacterSet	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	FontAndCharacterSet(int characterSet_, QFont *pfont):$/;"	f	class:Scintilla::FontAndCharacterSet	file:	access:public	signature:(int characterSet_,QFont * pfont)
FontAndCharacterSet	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^class FontAndCharacterSet {$/;"	c	namespace:Scintilla	file:
FontCached	..\\scintilla\\win32\\PlatWin.cxx	/^FontCached::FontCached(const FontParameters &fp) :$/;"	f	class:Scintilla::FontCached	signature:(const FontParameters & fp)
FontCached	..\\scintilla\\win32\\PlatWin.cxx	/^class FontCached : Font {$/;"	c	namespace:Scintilla	file:	inherits:Font
FontCharacterSet	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^static int FontCharacterSet(Font &f)$/;"	f	namespace:Scintilla	typeref:typename:int	file:	signature:(Font & f)
FontHandle	..\\scintilla\\gtk\\PlatGTK.cxx	/^	FontHandle() : pfd(0), characterSet(-1) {$/;"	f	class:FontHandle	file:	access:public	signature:()
FontHandle	..\\scintilla\\gtk\\PlatGTK.cxx	/^	FontHandle(PangoFontDescription *pfd_, int characterSet_) {$/;"	f	class:FontHandle	file:	access:public	signature:(PangoFontDescription * pfd_,int characterSet_)
FontHandle	..\\scintilla\\gtk\\PlatGTK.cxx	/^class FontHandle {$/;"	c	file:
FontID	..\\scintilla\\include\\Platform.h	/^typedef void *FontID;$/;"	t	namespace:Scintilla	typeref:typename:void *
FontMap	..\\scintilla\\src\\ViewStyle.h	/^typedef std::map<FontSpecification, std::unique_ptr<FontRealised>> FontMap;$/;"	t	namespace:Scintilla	typeref:typename:std::map<FontSpecification,std::unique_ptr<FontRealised>>
FontMeasurements	..\\scintilla\\src\\Style.cxx	/^FontMeasurements::FontMeasurements() {$/;"	f	class:FontMeasurements	signature:()
FontMeasurements	..\\scintilla\\src\\Style.h	/^struct FontMeasurements {$/;"	s	namespace:Scintilla
FontNames	..\\scintilla\\src\\ViewStyle.cxx	/^FontNames::FontNames() {$/;"	f	class:FontNames	signature:()
FontNames	..\\scintilla\\src\\ViewStyle.h	/^class FontNames {$/;"	c	namespace:Scintilla
FontParameters	..\\scintilla\\include\\Platform.h	/^	FontParameters($/;"	f	struct:Scintilla::FontParameters	access:public	signature:(const char * faceName_,float size_=10,int weight_=400,bool italic_=false,int extraFontFlag_=0,int technology_=0,int characterSet_=0)
FontParameters	..\\scintilla\\include\\Platform.h	/^struct FontParameters {$/;"	s	namespace:Scintilla
FontPointer	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^static QFont *FontPointer(Font &f)$/;"	f	namespace:Scintilla	typeref:typename:QFont *	file:	signature:(Font & f)
FontRealised	..\\scintilla\\src\\ViewStyle.cxx	/^FontRealised::FontRealised() {$/;"	f	class:FontRealised	signature:()
FontRealised	..\\scintilla\\src\\ViewStyle.h	/^class FontRealised : public FontMeasurements {$/;"	c	namespace:Scintilla	inherits:FontMeasurements
FontSpecification	..\\scintilla\\src\\Style.h	/^	FontSpecification() :$/;"	f	struct:Scintilla::FontSpecification	access:public	signature:()
FontSpecification	..\\scintilla\\src\\Style.h	/^struct FontSpecification {$/;"	s	namespace:Scintilla
ForAll	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ForAll(GtkCallback callback, gpointer callback_data) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkCallback callback,gpointer callback_data)
ForeAsLong	..\\scite\\src\\StyleDefinition.cxx	/^long StyleDefinition::ForeAsLong() const {$/;"	f	class:StyleDefinition	typeref:typename:long	signature:() const
ForeBackColours	..\\scintilla\\src\\ViewStyle.h	/^struct ForeBackColours {$/;"	s	namespace:Scintilla
Form	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^class Form(QDialog):$/;"	c	inherits:QDialog	access:public
FormatAndMetrics	..\\scintilla\\win32\\PlatWin.cxx	/^	FormatAndMetrics(HFONT hfont_, int extraFontFlag_, int characterSet_) :$/;"	f	struct:Scintilla::FormatAndMetrics	file:	access:public	signature:(HFONT hfont_,int extraFontFlag_,int characterSet_)
FormatAndMetrics	..\\scintilla\\win32\\PlatWin.cxx	/^	FormatAndMetrics(IDWriteTextFormat *pTextFormat_,$/;"	f	struct:Scintilla::FormatAndMetrics	file:	access:public	signature:(IDWriteTextFormat * pTextFormat_,int extraFontFlag_,int characterSet_,FLOAT yAscent_,FLOAT yDescent_,FLOAT yInternalLeading_)
FormatAndMetrics	..\\scintilla\\win32\\PlatWin.cxx	/^struct FormatAndMetrics {$/;"	s	namespace:Scintilla	file:
FormatEnumerator	..\\scintilla\\win32\\ScintillaWin.cxx	/^FormatEnumerator::FormatEnumerator(int pos_, CLIPFORMAT formats_[], size_t formatsLen_) {$/;"	f	class:FormatEnumerator	signature:(int pos_,CLIPFORMAT formats_[],size_t formatsLen_)
FormatEnumerator	..\\scintilla\\win32\\ScintillaWin.cxx	/^class FormatEnumerator {$/;"	c	file:
FormatEnumerator_AddRef	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)FormatEnumerator_AddRef(FormatEnumerator *fe) {$/;"	f	typeref:typename:ULONG	signature:(FormatEnumerator * fe)
FormatEnumerator_Clone	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP FormatEnumerator_Clone(FormatEnumerator *fe, IEnumFORMATETC **ppenum) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(FormatEnumerator * fe,IEnumFORMATETC ** ppenum)
FormatEnumerator_Next	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP FormatEnumerator_Next(FormatEnumerator *fe, ULONG celt, FORMATETC *rgelt, ULONG *pc/;"	f	typeref:typename:STDMETHODIMP	signature:(FormatEnumerator * fe,ULONG celt,FORMATETC * rgelt,ULONG * pceltFetched)
FormatEnumerator_QueryInterface	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP FormatEnumerator_QueryInterface(FormatEnumerator *fe, REFIID riid, PVOID *ppv) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(FormatEnumerator * fe,REFIID riid,PVOID * ppv)
FormatEnumerator_Release	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG)FormatEnumerator_Release(FormatEnumerator *fe) {$/;"	f	typeref:typename:ULONG	signature:(FormatEnumerator * fe)
FormatEnumerator_Reset	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP FormatEnumerator_Reset(FormatEnumerator *fe) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(FormatEnumerator * fe)
FormatEnumerator_Skip	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP FormatEnumerator_Skip(FormatEnumerator *fe, ULONG celt) {$/;"	f	typeref:typename:STDMETHODIMP	signature:(FormatEnumerator * fe,ULONG celt)
FormatRange	..\\scintilla\\src\\EditView.cxx	/^Sci::Position EditView::FormatRange(bool draw, Sci_RangeToFormat *pfr, Surface *surface, Surface/;"	f	class:EditView	typeref:typename:Sci::Position	signature:(bool draw,Sci_RangeToFormat * pfr,Surface * surface,Surface * surfaceMeasure,const EditModel & model,const ViewStyle & vs)
FormatRange	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::FormatRange(bool draw, Sci_RangeToFormat *pfr) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(bool draw,Sci_RangeToFormat * pfr)
Forward	..\\scintilla\\lexlib\\StyleContext.h	/^	void Forward() {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:()
Forward	..\\scintilla\\lexlib\\StyleContext.h	/^	void Forward(Sci_Position nb) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:(Sci_Position nb)
Forward	..\\scite\\src\\LuaExtension.cxx	/^	static int Forward(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
Forward	..\\scite\\src\\LuaExtension.cxx	/^	void Forward() {$/;"	f	struct:StylingContext	typeref:typename:void	file:	access:public	signature:()
ForwardBytes	..\\scintilla\\lexlib\\StyleContext.h	/^	void ForwardBytes(Sci_Position nb) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:(Sci_Position nb)
ForwardPropertyToEditor	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ForwardPropertyToEditor(const char *key) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * key)
ForwardSetState	..\\scintilla\\lexlib\\StyleContext.h	/^	void ForwardSetState(int state_) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:(int state_)
ForwardSetState	..\\scite\\src\\LuaExtension.cxx	/^	static int ForwardSetState(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
FractionalSize	..\\scite\\src\\StyleDefinition.cxx	/^int StyleDefinition::FractionalSize() const {$/;"	f	class:StyleDefinition	typeref:typename:int	signature:() const
Free	..\\scintilla\\lexlib\\SubStyles.h	/^	void Free() {$/;"	f	class:Scintilla::SubStyles	typeref:typename:void	access:public	signature:()
Free	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayout::Free() {$/;"	f	class:LineLayout	typeref:typename:void	signature:()
FreeAssoc	..\\scite\\src\\Containers.h	/^	void FreeAssoc(Association* pAssoc) {$/;"	f	class:TMap	typeref:typename:void	access:protected	signature:(Association * pAssoc)
FreeNode	..\\scite\\src\\Containers.h	/^	void FreeNode(Node*pNode) {$/;"	f	class:TList	typeref:typename:void	access:protected	signature:(Node * pNode)
FreeSubStyles	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^void SCI_METHOD DefaultLexer::FreeSubStyles() {$/;"	f	class:DefaultLexer	typeref:typename:void SCI_METHOD	signature:()
FreeSubStyles	..\\scintilla\\lexlib\\LexerBase.cxx	/^void SCI_METHOD LexerBase::FreeSubStyles() {$/;"	f	class:LexerBase	typeref:typename:void SCI_METHOD	signature:()
FreeSubStyles	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::FreeSubStyles() {$/;"	f	class:LexState	typeref:typename:void	signature:()
FromAccessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^ScintillaGTKAccessible *ScintillaGTKAccessible::FromAccessible(GtkAccessible *accessible) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:ScintillaGTKAccessible *	signature:(GtkAccessible * accessible)
FromAccessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	static ScintillaGTKAccessible *FromAccessible(AtkObject *accessible) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:ScintillaGTKAccessible *	access:public	signature:(AtkObject * accessible)
FromInts	..\\scintilla\\include\\Platform.h	/^	static PRectangle FromInts(int left_, int top_, int right_, int bottom_) {$/;"	f	class:Scintilla::PRectangle	typeref:typename:PRectangle	access:public	signature:(int left_,int top_,int right_,int bottom_)
FromInts	..\\scintilla\\include\\Platform.h	/^	static Point FromInts(int x_, int y_) {$/;"	f	class:Scintilla::Point	typeref:typename:Point	access:public	signature:(int x_,int y_)
FromWidget	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^ScintillaGTK *ScintillaGTK::FromWidget(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:ScintillaGTK *	signature:(GtkWidget * widget)
FullPaint	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::FullPaint() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
FullPaint	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::FullPaint() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
FullPaintDC	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::FullPaintDC(HDC hdc) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(HDC hdc)
FullScreenToggle	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::FullScreenToggle() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
FuncState	..\\scintilla\\lua\\src\\lparser.h	/^typedef struct FuncState {$/;"	s
FuncState	..\\scintilla\\lua\\src\\lparser.h	/^} FuncState;$/;"	t	typeref:struct:FuncState
Function	..\\scintilla\\include\\Platform.h	/^typedef void *Function;$/;"	t	namespace:Scintilla	typeref:typename:void *
Function	..\\scite\\gtk\\SciTEGTK.cxx	/^	static void Function(GtkDialog *\/*w*\/, gint responseID, SciTEGTK *app) {$/;"	f	class:ResponseSignal	typeref:typename:void	file:	access:public	signature:(GtkDialog *,gint responseID,SciTEGTK * app)
Function	..\\scite\\gtk\\SciTEGTK.cxx	/^	static void Function(GtkWidget *\/*w*\/, SciTEGTK *app) {$/;"	f	class:Signal	typeref:typename:void	file:	access:public	signature:(GtkWidget *,SciTEGTK * app)
Function	..\\scite\\gtk\\Widget.h	/^	static void Function(GtkWidget *\/*w*\/, T *object) {$/;"	f	class:ObjectSignal	typeref:typename:void	access:public	signature:(GtkWidget *,T * object)
FutureDo	..\\scite\\src\\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	g	class:Buffer	access:public
G	..\\scintilla\\lua\\src\\lstate.h	/^#define G(/;"	d	signature:(L)
GCFINALIZECOST	..\\scintilla\\lua\\src\\lgc.c	/^#define GCFINALIZECOST	/;"	d	file:
GCObject	..\\scintilla\\lua\\src\\lobject.h	/^typedef union GCObject GCObject;$/;"	t	typeref:union:GCObject
GCObject	..\\scintilla\\lua\\src\\lstate.h	/^union GCObject {$/;"	u
GCSTEPSIZE	..\\scintilla\\lua\\src\\lgc.c	/^#define GCSTEPSIZE	/;"	d	file:
GCSWEEPCOST	..\\scintilla\\lua\\src\\lgc.c	/^#define GCSWEEPCOST	/;"	d	file:
GCSWEEPMAX	..\\scintilla\\lua\\src\\lgc.c	/^#define GCSWEEPMAX	/;"	d	file:
GCSfinalize	..\\scintilla\\lua\\src\\lgc.h	/^#define GCSfinalize	/;"	d
GCSpause	..\\scintilla\\lua\\src\\lgc.h	/^#define GCSpause	/;"	d
GCSpropagate	..\\scintilla\\lua\\src\\lgc.h	/^#define GCSpropagate	/;"	d
GCSsweep	..\\scintilla\\lua\\src\\lgc.h	/^#define GCSsweep	/;"	d
GCSsweepstring	..\\scintilla\\lua\\src\\lgc.h	/^#define GCSsweepstring	/;"	d
GCTM	..\\scintilla\\lua\\src\\lgc.c	/^static void GCTM (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
GCheader	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct GCheader {$/;"	s
GCheader	..\\scintilla\\lua\\src\\lobject.h	/^} GCheader;$/;"	t	typeref:struct:GCheader
GCthreshold	..\\scintilla\\lua\\src\\lstate.h	/^  lu_mem GCthreshold;$/;"	m	struct:global_State	typeref:typename:lu_mem	access:public
GETARG_A	..\\scintilla\\lua\\src\\lopcodes.h	/^#define GETARG_A(/;"	d	signature:(i)
GETARG_B	..\\scintilla\\lua\\src\\lopcodes.h	/^#define GETARG_B(/;"	d	signature:(i)
GETARG_Bx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define GETARG_Bx(/;"	d	signature:(i)
GETARG_C	..\\scintilla\\lua\\src\\lopcodes.h	/^#define GETARG_C(/;"	d	signature:(i)
GETARG_sBx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define GETARG_sBx(/;"	d	signature:(i)
GET_OPCODE	..\\scintilla\\lua\\src\\lopcodes.h	/^#define GET_OPCODE(/;"	d	signature:(i)
GKEY_Control_L	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_Control_L /;"	d	file:
GKEY_Control_R	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_Control_R /;"	d	file:
GKEY_Escape	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_Escape /;"	d	file:
GKEY_Escape	..\\scite\\gtk\\Widget.cxx	/^#define GKEY_Escape /;"	d	file:
GKEY_F1	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_F1 /;"	d	file:
GKEY_F2	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_F2 /;"	d	file:
GKEY_F3	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_F3 /;"	d	file:
GKEY_F4	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_F4 /;"	d	file:
GKEY_ISO_Left_Tab	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_ISO_Left_Tab /;"	d	file:
GKEY_KP_Enter	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_KP_Enter /;"	d	file:
GKEY_KP_Multiply	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_KP_Multiply /;"	d	file:
GKEY_Tab	..\\scite\\gtk\\SciTEGTK.cxx	/^#define GKEY_Tab /;"	d	file:
GKEY_Void	..\\scite\\gtk\\Widget.cxx	/^#define GKEY_Void /;"	d	file:
GMarshalFunc_VOID__INT_BOXED	..\\scintilla\\gtk\\scintilla-marshal.c	/^  typedef void (*GMarshalFunc_VOID__INT_BOXED) (gpointer data1,$/;"	t	function:scintilla_marshal_VOID__INT_BOXED	typeref:typename:void (*)(gpointer data1,gint arg1,gpointer arg2,gpointer data2)	file:
GMarshalFunc_VOID__INT_OBJECT	..\\scintilla\\gtk\\scintilla-marshal.c	/^  typedef void (*GMarshalFunc_VOID__INT_OBJECT) (gpointer data1,$/;"	t	function:scintilla_marshal_VOID__INT_OBJECT	typeref:typename:void (*)(gpointer data1,gint arg1,gpointer arg2,gpointer data2)	file:
GObjectWatcher	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GObjectWatcher(GObject *obj) :$/;"	f	class:Scintilla::GObjectWatcher	access:public	signature:(GObject * obj)
GObjectWatcher	..\\scintilla\\gtk\\ScintillaGTK.h	/^class GObjectWatcher {$/;"	c	namespace:Scintilla
GREEN	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired GREEN(0, 0x80, 0);$/;"	v	typeref:typename:ColourDesired	file:
GTKMutex	..\\scite\\gtk\\GTKMutex.cxx	/^	GTKMutex() {$/;"	f	class:GTKMutex	file:	access:private	signature:()
GTKMutex	..\\scite\\gtk\\GTKMutex.cxx	/^class GTKMutex : public Mutex {$/;"	c	file:	inherits:Mutex
GUI	..\\scite\\gtk\\GUIGTK.cxx	/^namespace GUI {$/;"	n	file:
GUI	..\\scite\\src\\GUI.h	/^namespace GUI {$/;"	n
GUI	..\\scite\\win32\\GUIWin.cxx	/^namespace GUI {$/;"	n	file:
GUI_H	..\\scite\\src\\GUI.h	/^#define GUI_H$/;"	d
GUI_TEXT	..\\scite\\src\\GUI.h	/^#define GUI_TEXT(/;"	d	signature:(q)
G_DEFINE_TYPE	..\\scintilla\\gtk\\PlatGTK.cxx	/^G_DEFINE_TYPE(SmallScroller, small_scroller, GTK_TYPE_SCROLLED_WINDOW)$/;"	f	file:	signature:(SmallScroller,small_scroller,GTK_TYPE_SCROLLED_WINDOW)
G_DEFINE_TYPE	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^G_DEFINE_TYPE(ScintillaObjectAccessibleFactory, scintilla_object_accessible_factory, ATK_TYPE_OB/;"	f	file:	signature:(ScintillaObjectAccessibleFactory,scintilla_object_accessible_factory,ATK_TYPE_OBJECT_FACTORY)
GapPosition	..\\scintilla\\src\\CellBuffer.cxx	/^Sci::Position CellBuffer::GapPosition() const {$/;"	f	class:CellBuffer	typeref:typename:Sci::Position	signature:() const
GapPosition	..\\scintilla\\src\\Document.h	/^	Sci::Position GapPosition() const { return cb.GapPosition(); }$/;"	f	class:Scintilla::Document	typeref:typename:Sci::Position	access:public	signature:() const
GapPosition	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t GapPosition() const {$/;"	f	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:public	signature:() const
GapTo	..\\scintilla\\src\\SplitVector.h	/^	void GapTo(ptrdiff_t position) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:protected	signature:(ptrdiff_t position)
Generate	..\\scintilla\\scripts\\FileGenerator.py	/^def Generate(inpath, outpath, commentPrefix, *lists):$/;"	f	access:public	signature:(inpath, outpath, commentPrefix, *lists)
GenerateFile	..\\scintilla\\scripts\\FileGenerator.py	/^def GenerateFile(inpath, outpath, commentPrefix, retainDefs, *lists):$/;"	f	access:public	signature:(inpath, outpath, commentPrefix, retainDefs, *lists)
GenericPropertiesFile	..\\scite\\src\\PropSetFile.cxx	/^static bool GenericPropertiesFile(const FilePath &filename) {$/;"	f	typeref:typename:bool	file:	signature:(const FilePath & filename)
Get	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^const char *PropSetSimple::Get(const char *key) const {$/;"	f	class:PropSetSimple	typeref:typename:const char *	signature:(const char * key) const
Get	..\\scintilla\\src\\XPM.cxx	/^RGBAImage *RGBAImageSet::Get(int ident) {$/;"	f	class:RGBAImageSet	typeref:typename:RGBAImage *	signature:(int ident)
Get	..\\scintilla\\win32\\PlatWin.cxx	/^	ListItemData Get(int index) const {$/;"	f	class:Scintilla::LineToItem	typeref:typename:ListItemData	file:	access:public	signature:(int index) const
GetAbbrevPropertiesFileName	..\\scite\\src\\SciTEProps.cxx	/^FilePath SciTEBase::GetAbbrevPropertiesFileName() {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:()
GetAcceleratorTable	..\\scite\\win32\\SciTEWin.h	/^	HACCEL GetAcceleratorTable() {$/;"	f	class:SciTEWin	typeref:typename:HACCEL	access:public	signature:()
GetAccessible	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^AtkObject* ScintillaGTK::GetAccessible(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:AtkObject *	signature:(GtkWidget * widget)
GetAccessibleThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^AtkObject* ScintillaGTK::GetAccessibleThis(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:AtkObject *	signature:(GtkWidget * widget)
GetAssocAt	..\\scite\\src\\Containers.h	/^	Association* GetAssocAt(ARG_KEY key, unsigned int& nHash) {$/;"	f	class:TMap	typeref:typename:Association *	access:protected	signature:(ARG_KEY key,unsigned int & nHash)
GetAt	..\\scite\\src\\Containers.h	/^	TYPE GetAt(T_POSITION position) const {$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:(T_POSITION position) const
GetAt	..\\scite\\src\\Containers.h	/^	TYPE GetAt(int nIndex) const {$/;"	f	class:TArray	typeref:typename:TYPE	access:public	signature:(int nIndex) const
GetAt	..\\scite\\src\\Containers.h	/^	TYPE& GetAt(T_POSITION position) {$/;"	f	class:TList	typeref:typename:TYPE &	access:public	signature:(T_POSITION position)
GetAttributesForStyle	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^AtkAttributeSet *ScintillaGTKAccessible::GetAttributesForStyle(unsigned int styleNum) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:AtkAttributeSet *	signature:(unsigned int styleNum)
GetBackslashExpression	..\\scintilla\\src\\RESearch.cxx	/^int RESearch::GetBackslashExpression($/;"	f	class:RESearch	typeref:typename:int	signature:(const char * pattern,int & incr)
GetBlue	..\\scintilla\\include\\Platform.h	/^	unsigned int GetBlue() const {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:unsigned int	access:public	signature:() const
GetCTag	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetCTag() {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:()
GetCaretInLine	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::GetCaretInLine() {$/;"	f	class:SciTEBase	typeref:typename:int	signature:()
GetCaretOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::AtkTextIface::GetCaretOffset(AtkText *text) {$/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gint	signature:(AtkText * text)
GetCaretOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::GetCaretOffset() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gint	signature:()
GetCharRange	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::GetCharRange(char *buffer, Sci::Position position, Sci::Position lengthRetrieve/;"	f	class:CellBuffer	typeref:typename:void	signature:(char * buffer,Sci::Position position,Sci::Position lengthRetrieve) const
GetCharRange	..\\scintilla\\src\\Document.h	/^	void SCI_METHOD GetCharRange(char *buffer, Sci_Position position, Sci_Position lengthRetrieve) /;"	f	class:Scintilla::Document	typeref:typename:void SCI_METHOD	access:public	signature:(char * buffer,Sci_Position position,Sci_Position lengthRetrieve) const
GetCharacterAndWidth	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::GetCharacterAndWidth(Sci_Position position, Sci_Position *pWidth) const/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(Sci_Position position,Sci_Position * pWidth) const
GetCharacterAtOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gunichar ScintillaGTKAccessible::AtkTextIface::GetCharacterAtOffset(AtkText *text, gint offset) /;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gunichar	signature:(AtkText * text,gint offset)
GetCharacterAtOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gunichar ScintillaGTKAccessible::GetCharacterAtOffset(int charOffset) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gunichar	signature:(int charOffset)
GetCharacterCount	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::AtkTextIface::GetCharacterCount(AtkText *text) {$/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gint	signature:(AtkText * text)
GetCharacterCount	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::GetCharacterCount() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gint	signature:()
GetCharacterExtents	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkTextIface::GetCharacterExtents(AtkText *text, gint offset, gint /;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:void	signature:(AtkText * text,gint offset,gint * x,gint * y,gint * width,gint * height,AtkCoordType coords)
GetCharacterExtents	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::GetCharacterExtents(int charOffset,$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(int charOffset,gint * x,gint * y,gint * width,gint * height,AtkCoordType coords)
GetCharsOfClass	..\\scintilla\\src\\CharClassify.cxx	/^int CharClassify::GetCharsOfClass(cc characterClass, unsigned char *buffer) const {$/;"	f	class:CharClassify	typeref:typename:int	signature:(cc characterClass,unsigned char * buffer) const
GetCharsOfClass	..\\scintilla\\src\\Document.cxx	/^int Document::GetCharsOfClass(CharClassify::cc characterClass, unsigned char *buffer) const {$/;"	f	class:Document	typeref:typename:int	signature:(CharClassify::cc characterClass,unsigned char * buffer) const
GetClass	..\\scintilla\\src\\CharClassify.h	/^	cc GetClass(unsigned char ch) const { return static_cast<cc>(charClass[ch]);}$/;"	f	class:Scintilla::CharClassify	typeref:typename:cc	access:public	signature:(unsigned char ch) const
GetClientDrawingRectangle	..\\scintilla\\src\\Editor.cxx	/^PRectangle Editor::GetClientDrawingRectangle() {$/;"	f	class:Editor	typeref:typename:PRectangle	signature:()
GetClientExtent	..\\scintilla\\win32\\PlatWin.cxx	/^POINT ListBoxX::GetClientExtent() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:POINT	signature:() const
GetClientPosition	..\\scintilla\\curses\\ScintillaCurses.cxx	/^PRectangle Window::GetClientPosition() { return GetPosition(); }$/;"	f	class:Window	typeref:typename:PRectangle	signature:()
GetClientPosition	..\\scintilla\\gtk\\PlatGTK.cxx	/^PRectangle Window::GetClientPosition() {$/;"	f	class:Window	typeref:typename:PRectangle	signature:()
GetClientPosition	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^PRectangle Window::GetClientPosition()$/;"	f	class:Scintilla::Window	typeref:typename:PRectangle	signature:()
GetClientPosition	..\\scintilla\\win32\\PlatWin.cxx	/^PRectangle Window::GetClientPosition() {$/;"	f	class:Scintilla::Window	typeref:typename:PRectangle	signature:()
GetClientPosition	..\\scite\\gtk\\GUIGTK.cxx	/^Rectangle Window::GetClientPosition() {$/;"	f	class:GUI::Window	typeref:typename:Rectangle	signature:()
GetClientPosition	..\\scite\\win32\\GUIWin.cxx	/^Rectangle Window::GetClientPosition() {$/;"	f	class:GUI::Window	typeref:typename:Rectangle	signature:()
GetClientRectangle	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^PRectangle ScintillaGTK::GetClientRectangle() const {$/;"	f	class:ScintillaGTK	typeref:typename:PRectangle	signature:() const
GetClientRectangle	..\\scintilla\\src\\Editor.cxx	/^PRectangle Editor::GetClientRectangle() const {$/;"	f	class:Editor	typeref:typename:PRectangle	signature:() const
GetClientRectangle	..\\scite\\src\\SciTEBase.cxx	/^GUI::Rectangle SciTEBase::GetClientRectangle() {$/;"	f	class:SciTEBase	typeref:typename:GUI::Rectangle	signature:()
GetClipboard	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int GetClipboard(char *buffer) {$/;"	f	class:ScintillaCurses	typeref:typename:int	file:	access:public	signature:(char * buffer)
GetColumn	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::GetColumn(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos)
GetCompositionString	..\\scintilla\\win32\\ScintillaWin.cxx	/^	std::wstring GetCompositionString(DWORD dwIndex) {$/;"	f	class:__anon5333cfc50111::IMContext	typeref:typename:std::wstring	file:	access:public	signature:(DWORD dwIndex)
GetConstantName	..\\scite\\src\\IFaceTable.cxx	/^int IFaceTable::GetConstantName(int value, char *nameOut, unsigned nameBufferLen, const char *pr/;"	f	class:IFaceTable	typeref:typename:int	signature:(int value,char * nameOut,unsigned nameBufferLen,const char * prefix)
GetContext	..\\scintilla\\cocoa\\PlatCocoa.h	/^  CGContextRef GetContext() { return gc; }$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:CGContextRef	access:public	signature:()
GetCount	..\\scite\\src\\Containers.h	/^	int GetCount() const {$/;"	f	class:TList	typeref:typename:int	access:public	signature:() const
GetCount	..\\scite\\src\\Containers.h	/^	int GetCount() const {$/;"	f	class:TMap	typeref:typename:int	access:public	signature:() const
GetCtrlID	..\\scintilla\\src\\Editor.h	/^	virtual int GetCtrlID() { return ctrlID; }$/;"	f	class:Scintilla::Editor	typeref:typename:int	access:protected	signature:()
GetCtrlID	..\\scintilla\\win32\\ScintillaWin.cxx	/^int ScintillaWin::GetCtrlID() {$/;"	f	class:ScintillaWin	typeref:typename:int	signature:()
GetCurrent	..\\scintilla\\lexlib\\StyleContext.cxx	/^void StyleContext::GetCurrent(char *s, Sci_PositionU len) {$/;"	f	class:StyleContext	typeref:typename:void	signature:(char * s,Sci_PositionU len)
GetCurrentIndicator	..\\scintilla\\src\\Decoration.h	/^	int GetCurrentIndicator() const { return currentIndicator; }$/;"	f	class:Scintilla::DecorationList	typeref:typename:int	access:public	signature:() const
GetCurrentLine	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetCurrentLine() {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:()
GetCurrentLineNumber	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::GetCurrentLineNumber() {$/;"	f	class:SciTEBase	typeref:typename:int	signature:()
GetCurrentLowered	..\\scintilla\\lexlib\\StyleContext.cxx	/^void StyleContext::GetCurrentLowered(char *s, Sci_PositionU len) {$/;"	f	class:StyleContext	typeref:typename:void	signature:(char * s,Sci_PositionU len)
GetCurrentScrollPosition	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::GetCurrentScrollPosition() {$/;"	f	class:SciTEBase	typeref:typename:int	signature:()
GetCurrentValue	..\\scintilla\\src\\Decoration.h	/^	int GetCurrentValue() const { return currentValue; }$/;"	f	class:Scintilla::DecorationList	typeref:typename:int	access:public	signature:() const
GetData	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP ScintillaWin::GetData(FORMATETC *pFEIn, STGMEDIUM *pSTM) {$/;"	f	class:ScintillaWin	typeref:typename:STDMETHODIMP	signature:(FORMATETC * pFEIn,STGMEDIUM * pSTM)
GetDefaultAttributes	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^AtkAttributeSet *ScintillaGTKAccessible::AtkTextIface::GetDefaultAttributes(AtkText *text) {$/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:AtkAttributeSet *	signature:(AtkText * text)
GetDefaultAttributes	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^AtkAttributeSet *ScintillaGTKAccessible::GetDefaultAttributes() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:AtkAttributeSet *	signature:()
GetDefaultDirectory	..\\scite\\gtk\\SciTEGTK.cxx	/^FilePath SciTEGTK::GetDefaultDirectory() {$/;"	f	class:SciTEGTK	typeref:typename:FilePath	signature:()
GetDefaultDirectory	..\\scite\\win32\\SciTEWin.cxx	/^FilePath SciTEWin::GetDefaultDirectory() {$/;"	f	class:SciTEWin	typeref:typename:FilePath	signature:()
GetDefaultPropertiesFileName	..\\scite\\src\\SciTEProps.cxx	/^FilePath SciTEBase::GetDefaultPropertiesFileName() {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:()
GetDesiredRect	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  PRectangle GetDesiredRect() {$/;"	f	class:ListBoxImpl	typeref:typename:PRectangle	file:	access:public	signature:()
GetDesiredRect	..\\scintilla\\gtk\\PlatGTK.cxx	/^PRectangle ListBoxX::GetDesiredRect() {$/;"	f	class:ListBoxX	typeref:typename:PRectangle	signature:()
GetDesiredRect	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^PRectangle ListBoxImpl::GetDesiredRect()$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:PRectangle	signature:()
GetDesiredRect	..\\scintilla\\win32\\PlatWin.cxx	/^PRectangle ListBoxX::GetDesiredRect() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:PRectangle	signature:()
GetDirectoryPropertiesFileName	..\\scite\\src\\SciTEProps.cxx	/^FilePath SciTEBase::GetDirectoryPropertiesFileName() {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:()
GetDocumentAt	..\\scite\\src\\SciTEBuffers.cxx	/^sptr_t SciTEBase::GetDocumentAt(int index) {$/;"	f	class:SciTEBase	typeref:typename:sptr_t	signature:(int index)
GetDocumentByName	..\\scite\\src\\SciTEBuffers.cxx	/^int BufferList::GetDocumentByName(FilePath filename, bool excludeCurrent) {$/;"	f	class:BufferList	typeref:typename:int	signature:(FilePath filename,bool excludeCurrent)
GetDocumentByWorker	..\\scite\\src\\SciTEBuffers.cxx	/^int BufferList::GetDocumentByWorker(FileWorker *pFileWorker) const {$/;"	f	class:BufferList	typeref:typename:int	signature:(FileWorker * pFileWorker) const
GetEndStyled	..\\scintilla\\src\\Document.h	/^	Sci::Position GetEndStyled() const { return endStyled; }$/;"	f	class:Scintilla::Document	typeref:typename:Sci::Position	access:public	signature:() const
GetErrorMessage	..\\scite\\win32\\SciTEWin.cxx	/^static GUI::gui_string GetErrorMessage(DWORD nRet) {$/;"	f	typeref:typename:GUI::gui_string	file:	signature:(DWORD nRet)
GetExpanded	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^int PropSetSimple::GetExpanded(const char *key, char *result) const {$/;"	f	class:PropSetSimple	typeref:typename:int	signature:(const char * key,char * result) const
GetExpanded	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::GetExpanded(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDoc) const
GetExpandedString	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::GetExpandedString(const char *key) const {$/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const char * key) const
GetFileLength	..\\scite\\src\\FilePath.cxx	/^long FilePath::GetFileLength() const {$/;"	f	class:FilePath	typeref:typename:long	signature:() const
GetFileNameProperty	..\\scite\\src\\SciTEProps.cxx	/^std::string SciTEBase::GetFileNameProperty(const char *name) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char * name)
GetFilePosition	..\\scite\\src\\SciTEBuffers.cxx	/^RecentFile SciTEBase::GetFilePosition() {$/;"	f	class:SciTEBase	typeref:typename:RecentFile	signature:()
GetFirst	..\\scite\\src\\PropSetFile.cxx	/^bool PropSetFile::GetFirst(const char *&key, const char *&val) {$/;"	f	class:PropSetFile	typeref:typename:bool	signature:(const char * & key,const char * & val)
GetFoldDisplayText	..\\scintilla\\src\\ContractionState.cxx	/^const char *ContractionState::GetFoldDisplayText(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:const char *	signature:(Sci::Line lineDoc) const
GetFoldDisplayTextShown	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::GetFoldDisplayTextShown(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDoc) const
GetFoldParent	..\\scintilla\\src\\Document.cxx	/^Sci::Line Document::GetFoldParent(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:Sci::Line	signature:(Sci::Line line) const
GetFrameWidth	..\\scintilla\\src\\ViewStyle.cxx	/^int ViewStyle::GetFrameWidth() const {$/;"	f	class:ViewStyle	typeref:typename:int	signature:() const
GetFullLine	..\\scite\\src\\PropSetFile.cxx	/^static bool GetFullLine(const char *&fpc, size_t &lenData, char *s, size_t len) {$/;"	f	typeref:typename:bool	file:	signature:(const char * & fpc,size_t & lenData,char * s,size_t len)
GetGreen	..\\scintilla\\include\\Platform.h	/^	unsigned int GetGreen() const {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:unsigned int	access:public	signature:() const
GetGrowSize	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t GetGrowSize() const {$/;"	f	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:public	signature:() const
GetGtkSelectionText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::GetGtkSelectionText(GtkSelectionData *selectionData, SelectionText &selText) /;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkSelectionData * selectionData,SelectionText & selText)
GetHWND	..\\scintilla\\win32\\PlatWin.cxx	/^HWND ListBoxX::GetHWND() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:HWND	signature:() const
GetHangulOfHanja	..\\scintilla\\win32\\HanjaDic.cxx	/^int GetHangulOfHanja(wchar_t *inout) {$/;"	f	namespace:Scintilla::HanjaDict	typeref:typename:int	signature:(wchar_t * inout)
GetHashTableSize	..\\scite\\src\\Containers.h	/^	unsigned int GetHashTableSize() const { $/;"	f	class:TMap	typeref:typename:unsigned int	access:public	signature:() const
GetHead	..\\scite\\src\\Containers.h	/^	TYPE GetHead() const {$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:() const
GetHead	..\\scite\\src\\Containers.h	/^	TYPE& GetHead() {$/;"	f	class:TList	typeref:typename:TYPE &	access:public	signature:()
GetHeadPosition	..\\scite\\src\\Containers.h	/^	T_POSITION GetHeadPosition() const { $/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:() const
GetHeight	..\\scintilla\\src\\ContractionState.cxx	/^int ContractionState::GetHeight(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:int	signature:(Sci::Line lineDoc) const
GetHeight	..\\scintilla\\src\\XPM.cxx	/^int RGBAImageSet::GetHeight() const {$/;"	f	class:RGBAImageSet	typeref:typename:int	signature:() const
GetHeight	..\\scintilla\\src\\XPM.h	/^	int GetHeight() const { return height; }$/;"	f	class:Scintilla::RGBAImage	typeref:typename:int	access:public	signature:() const
GetHeight	..\\scintilla\\src\\XPM.h	/^	int GetHeight() const { return height; }$/;"	f	class:Scintilla::XPM	typeref:typename:int	access:public	signature:() const
GetHexaChar	..\\scintilla\\src\\RESearch.cxx	/^static int GetHexaChar(unsigned char hd1, unsigned char hd2) {$/;"	f	typeref:typename:int	file:	signature:(unsigned char hd1,unsigned char hd2)
GetHexaDigit	..\\scite\\src\\StringHelpers.cxx	/^static int GetHexaDigit(char ch) {$/;"	f	typeref:typename:int	file:	signature:(char ch)
GetHighlightDelimiters	..\\scintilla\\src\\Document.cxx	/^void Document::GetHighlightDelimiters(HighlightDelimiter &highlightDelimiter, Sci::Line line, Sc/;"	f	class:Document	typeref:typename:void	signature:(HighlightDelimiter & highlightDelimiter,Sci::Line line,Sci::Line lastLine)
GetHotSpotRange	..\\scintilla\\src\\Editor.cxx	/^Range Editor::GetHotSpotRange() const {$/;"	f	class:Editor	typeref:typename:Range	signature:() const
GetID	..\\scintilla\\include\\Platform.h	/^	FontID GetID() { return fid; }$/;"	f	class:Scintilla::Font	typeref:typename:FontID	access:public	signature:()
GetID	..\\scintilla\\include\\Platform.h	/^	MenuID GetID() { return mid; }$/;"	f	class:Scintilla::Menu	typeref:typename:MenuID	access:public	signature:()
GetID	..\\scintilla\\include\\Platform.h	/^	WindowID GetID() const { return wid; }$/;"	f	class:Scintilla::Window	typeref:typename:WindowID	access:public	signature:() const
GetID	..\\scite\\src\\GUI.h	/^	MenuID GetID() const {$/;"	f	class:GUI::Menu	typeref:typename:MenuID	access:public	signature:() const
GetID	..\\scite\\src\\GUI.h	/^	WindowID GetID() const {$/;"	f	class:GUI::Window	typeref:typename:WindowID	access:public	signature:() const
GetID	..\\scite\\src\\SciTEBase.h	/^	GUI::WindowID GetID() { return wSciTE.GetID(); }$/;"	f	class:SciTEBase	typeref:typename:GUI::WindowID	access:public	signature:()
GetImeAttributes	..\\scintilla\\win32\\ScintillaWin.cxx	/^	std::vector<BYTE> GetImeAttributes() {$/;"	f	class:__anon5333cfc50111::IMContext	typeref:typename:std::vector<BYTE>	file:	access:public	signature:()
GetImeCaretPos	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^static int GetImeCaretPos(QInputMethodEvent *event)$/;"	f	typeref:typename:int	file:	signature:(QInputMethodEvent * event)
GetImeCaretPos	..\\scintilla\\win32\\ScintillaWin.cxx	/^	unsigned int GetImeCaretPos() {$/;"	f	class:__anon5333cfc50111::IMContext	typeref:typename:unsigned int	file:	access:public	signature:()
GetIndentState	..\\scite\\src\\SciTEBase.cxx	/^IndentationStatus SciTEBase::GetIndentState(int line) {$/;"	f	class:SciTEBase	typeref:typename:IndentationStatus	signature:(int line)
GetInstance	..\\scintilla\\src\\ExternalLexer.cxx	/^LexerManager *LexerManager::GetInstance() {$/;"	f	class:LexerManager	typeref:typename:LexerManager *	signature:()
GetInstance	..\\scite\\src\\SciTEBase.cxx	/^uptr_t SciTEBase::GetInstance() {$/;"	f	class:SciTEBase	typeref:typename:uptr_t	signature:()
GetInstance	..\\scite\\win32\\SciTEWin.cxx	/^uptr_t SciTEWin::GetInstance() {$/;"	f	class:SciTEWin	typeref:typename:uptr_t	signature:()
GetInt	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^int PropSetSimple::GetInt(const char *key, int defaultValue) const {$/;"	f	class:PropSetSimple	typeref:typename:int	signature:(const char * key,int defaultValue) const
GetInt	..\\scite\\src\\PropSetFile.cxx	/^int PropSetFile::GetInt(const char *key, int defaultValue) const {$/;"	f	class:PropSetFile	typeref:typename:int	signature:(const char * key,int defaultValue) const
GetIntelliMouseParameters	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::GetIntelliMouseParameters() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
GetLanguage	..\\scintilla\\lexlib\\LexerModule.h	/^	int GetLanguage() const { return language; }$/;"	f	class:Scintilla::LexerModule	typeref:typename:int	access:public	signature:() const
GetLastChild	..\\scintilla\\src\\Document.cxx	/^Sci::Line Document::GetLastChild(Sci::Line lineParent, int level, Sci::Line lastLine) {$/;"	f	class:Document	typeref:typename:Sci::Line	signature:(Sci::Line lineParent,int level,Sci::Line lastLine)
GetLevel	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::GetLevel(Sci_Position line) const {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(Sci_Position line) const
GetLevel	..\\scintilla\\src\\PerLine.cxx	/^int LineLevels::GetLevel(Sci::Line line) const {$/;"	f	class:LineLevels	typeref:typename:int	signature:(Sci::Line line) const
GetLevel	..\\scintilla\\src\\PositionCache.h	/^	int GetLevel() const { return level; }$/;"	f	class:Scintilla::LineLayoutCache	typeref:typename:int	access:public	signature:() const
GetLexInterface	..\\scintilla\\src\\Document.cxx	/^LexInterface *Document::GetLexInterface() const {$/;"	f	class:Document	typeref:typename:LexInterface *	signature:() const
GetLexerCountFn	..\\scintilla\\src\\ExternalLexer.h	/^typedef int (EXT_LEXER_DECL *GetLexerCountFn)();$/;"	t	namespace:Scintilla	typeref:typename:int (EXT_LEXER_DECL *)()
GetLexerFactoryFunction	..\\scintilla\\src\\ExternalLexer.h	/^typedef LexerFactoryFunction(EXT_LEXER_DECL *GetLexerFactoryFunction)(unsigned int Index);$/;"	t	namespace:Scintilla	typeref:typename:LexerFactoryFunction (EXT_LEXER_DECL *)(unsigned int Index)
GetLexerFunction	..\\scintilla\\src\\ExternalLexer.h	/^typedef void*(EXT_LEXER_DECL *GetLexerFunction)(unsigned int Index);$/;"	t	namespace:Scintilla	typeref:typename:void * (EXT_LEXER_DECL *)(unsigned int Index)
GetLexerNameFn	..\\scintilla\\src\\ExternalLexer.h	/^typedef void (EXT_LEXER_DECL *GetLexerNameFn)(unsigned int Index, char *name, int buflength);$/;"	t	namespace:Scintilla	typeref:typename:void (EXT_LEXER_DECL *)(unsigned int Index,char * name,int buflength)
GetLine	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position GetLine(Sci_Position position) const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:public	signature:(Sci_Position position) const
GetLine	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetLine(GUI::ScintillaWindow &win, int line) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(GUI::ScintillaWindow & win,int line)
GetLine	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::GetLine(char *text, int sizeText, int line) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(char * text,int sizeText,int line)
GetLine	..\\scite\\src\\StyleWriter.cxx	/^int TextReader::GetLine(int position) {$/;"	f	class:TextReader	typeref:typename:int	signature:(int position)
GetLineEndTypes	..\\scintilla\\src\\CellBuffer.h	/^	int GetLineEndTypes() const { return utf8LineEnds; }$/;"	f	class:Scintilla::CellBuffer	typeref:typename:int	access:public	signature:() const
GetLineEndTypesActive	..\\scintilla\\src\\Document.h	/^	int GetLineEndTypesActive() const { return cb.GetLineEndTypes(); }$/;"	f	class:Scintilla::Document	typeref:typename:int	access:public	signature:() const
GetLineEndTypesAllowed	..\\scintilla\\src\\Document.h	/^	int GetLineEndTypesAllowed() const { return cb.GetLineEndTypes(); }$/;"	f	class:Scintilla::Document	typeref:typename:int	access:public	signature:() const
GetLineIndentPosition	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::GetLineIndentPosition(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Line line) const
GetLineIndentPosition	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::GetLineIndentPosition(int line) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(int line)
GetLineIndentation	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::GetLineIndentation(Sci_Position line) {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(Sci_Position line)
GetLineIndentation	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::GetLineIndentation(int line) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(int line)
GetLineLength	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::GetLineLength(int line) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(int line)
GetLinePartsInStyle	..\\scite\\src\\SciTEBase.cxx	/^std::vector<std::string> SciTEBase::GetLinePartsInStyle(int line, const StyleAndWords &saw) {$/;"	f	class:SciTEBase	typeref:typename:std::vector<std::string>	signature:(int line,const StyleAndWords & saw)
GetLineState	..\\scintilla\\lexlib\\LexAccessor.h	/^	int GetLineState(Sci_Position line) const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:int	access:public	signature:(Sci_Position line) const
GetLineState	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::GetLineState(Sci_Position line) const {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(Sci_Position line) const
GetLineState	..\\scintilla\\src\\PerLine.cxx	/^int LineState::GetLineState(Sci::Line line) {$/;"	f	class:LineState	typeref:typename:int	signature:(Sci::Line line)
GetLineState	..\\scite\\src\\StyleWriter.cxx	/^int TextReader::GetLineState(int line) {$/;"	f	class:TextReader	typeref:typename:int	signature:(int line)
GetLocalPropertiesFileName	..\\scite\\src\\SciTEProps.cxx	/^FilePath SciTEBase::GetLocalPropertiesFileName() {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:()
GetLongSig	..\\scite\\src\\FilePath.cxx	/^	typedef DWORD (STDAPICALLTYPE* GetLongSig)(const GUI::gui_char* lpszShortPath, GUI::gui_char* l/;"	t	function:MakeLongPath	typeref:typename:DWORD (STDAPICALLTYPE *)(const GUI::gui_char * lpszShortPath,GUI::gui_char * lpszLongPath,DWORD cchBuffer)	file:
GetMarginCursor	..\\scintilla\\src\\Editor.cxx	/^Window::Cursor Editor::GetMarginCursor(Point pt) const {$/;"	f	class:Editor	typeref:typename:Window::Cursor	signature:(Point pt) const
GetMark	..\\scintilla\\src\\Document.cxx	/^int Document::GetMark(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:int	signature:(Sci::Line line) const
GetMatch	..\\scite\\src\\StringList.cxx	/^	std::string GetMatch(std::vector<char *>::iterator start, std::vector<char *>::iterator end, co/;"	f	namespace:__anon6836dfd10111	typeref:typename:std::string	signature:(std::vector<char * >::iterator start,std::vector<char * >::iterator end,const char * wordStart,const std::string & wordCharacters,int wordIndex,Compare comp)
GetMatches	..\\scite\\src\\StringList.cxx	/^static std::string GetMatches(std::vector<char *>::iterator start, std::vector<char *>::iterator/;"	f	typeref:typename:std::string	file:	signature:(std::vector<char * >::iterator start,std::vector<char * >::iterator end,const char * wordStart,char otherSeparator,bool exactLen,Compare comp)
GetMaxLineState	..\\scintilla\\src\\Document.cxx	/^Sci::Line Document::GetMaxLineState() const {$/;"	f	class:Document	typeref:typename:Sci::Line	signature:() const
GetMaxLineState	..\\scintilla\\src\\PerLine.cxx	/^Sci::Line LineState::GetMaxLineState() const {$/;"	f	class:LineState	typeref:typename:Sci::Line	signature:() const
GetMenuCommandAsInt	..\\scite\\src\\SciTEProps.cxx	/^int SciTEBase::GetMenuCommandAsInt(std::string commandName) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(std::string commandName)
GetMonitorRect	..\\scintilla\\curses\\ScintillaCurses.cxx	/^PRectangle Window::GetMonitorRect(Point pt) { return GetPosition(); }$/;"	f	class:Window	typeref:typename:PRectangle	signature:(Point pt)
GetMonitorRect	..\\scintilla\\gtk\\PlatGTK.cxx	/^PRectangle Window::GetMonitorRect(Point pt) {$/;"	f	class:Window	typeref:typename:PRectangle	signature:(Point pt)
GetMonitorRect	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^PRectangle Window::GetMonitorRect(Point pt)$/;"	f	class:Scintilla::Window	typeref:typename:PRectangle	signature:(Point pt)
GetMonitorRect	..\\scintilla\\win32\\PlatWin.cxx	/^PRectangle Window::GetMonitorRect(Point pt) {$/;"	f	class:Scintilla::Window	typeref:typename:PRectangle	signature:(Point pt)
GetNSelections	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::AtkTextIface::GetNSelections(AtkText *text) {$/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gint	signature:(AtkText * text)
GetNSelections	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::GetNSelections() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gint	signature:()
GetName	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::GetName() const {$/;"	f	class:LexState	typeref:typename:const char *	signature:() const
GetNearestWord	..\\scite\\src\\StringList.cxx	/^std::string StringList::GetNearestWord(const char *wordStart, size_t searchLen, bool ignoreCase,/;"	f	class:StringList	typeref:typename:std::string	signature:(const char * wordStart,size_t searchLen,bool ignoreCase,const std::string & wordCharacters,int wordIndex)
GetNearestWords	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetNearestWords(const char *wordStart, size_t searchLen,$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char * wordStart,size_t searchLen,const char * separators,bool ignoreCase,bool exactLen)
GetNearestWords	..\\scite\\src\\StringList.cxx	/^std::string StringList::GetNearestWords($/;"	f	class:StringList	typeref:typename:std::string	signature:(const char * wordStart,size_t searchLen,bool ignoreCase,char otherSeparator,bool exactLen)
GetNewExpandString	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::GetNewExpandString(const char *keybase, const char *filename) {$/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const char * keybase,const char * filename)
GetNext	..\\scite\\src\\Containers.h	/^	TYPE GetNext(T_POSITION& rPosition) const { \/\/ return *Position++$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:(T_POSITION & rPosition) const
GetNext	..\\scite\\src\\Containers.h	/^	TYPE& GetNext(T_POSITION& rPosition) { \/\/ return *Position++$/;"	f	class:TList	typeref:typename:TYPE &	access:public	signature:(T_POSITION & rPosition)
GetNext	..\\scite\\src\\PropSetFile.cxx	/^bool PropSetFile::GetNext(const char *&key, const char *&val) {$/;"	f	class:PropSetFile	typeref:typename:bool	signature:(const char * & key,const char * & val)
GetNextAssoc	..\\scite\\src\\Containers.h	/^	void GetNextAssoc(T_POSITION& rNextPosition, KEY& rKey, VALUE& rValue) const {$/;"	f	class:TMap	typeref:typename:void	access:public	signature:(T_POSITION & rNextPosition,KEY & rKey,VALUE & rValue) const
GetNextChar	..\\scintilla\\lexlib\\StyleContext.h	/^	void GetNextChar() {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:private	signature:()
GetNextChar	..\\scite\\src\\LuaExtension.cxx	/^	void GetNextChar() {$/;"	f	struct:StylingContext	typeref:typename:void	file:	access:public	signature:()
GetNextPropItem	..\\scite\\src\\SciTEProps.cxx	/^const char *SciTEBase::GetNextPropItem($/;"	f	class:SciTEBase	typeref:typename:const char *	signature:(const char * pStart,char * pPropItem,int maxLen)
GetNextTabstop	..\\scintilla\\src\\EditView.cxx	/^int EditView::GetNextTabstop(Sci::Line line, int x) const {$/;"	f	class:EditView	typeref:typename:int	signature:(Sci::Line line,int x) const
GetNextTabstop	..\\scintilla\\src\\PerLine.cxx	/^int LineTabstops::GetNextTabstop(Sci::Line line, int x) const {$/;"	f	class:LineTabstops	typeref:typename:int	signature:(Sci::Line line,int x) const
GetNumWordLists	..\\scintilla\\lexlib\\LexerModule.cxx	/^int LexerModule::GetNumWordLists() const {$/;"	f	class:LexerModule	typeref:typename:int	signature:() const
GetOffsetAtPoint	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::AtkTextIface::GetOffsetAtPoint(AtkText *text, gint x, gint y, AtkCo/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gint	signature:(AtkText * text,gint x,gint y,AtkCoordType coords)
GetOffsetAtPoint	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gint ScintillaGTKAccessible::GetOffsetAtPoint(gint x, gint y, AtkCoordType coords) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gint	signature:(gint x,gint y,AtkCoordType coords)
GetPaintDevice	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^QPaintDevice *SurfaceImpl::GetPaintDevice()$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:QPaintDevice *	signature:()
GetPainter	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^QPainter *SurfaceImpl::GetPainter()$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:QPainter *	signature:()
GetPosition	..\\scintilla\\curses\\ScintillaCurses.cxx	/^PRectangle Window::GetPosition() {$/;"	f	class:Window	typeref:typename:PRectangle	signature:()
GetPosition	..\\scintilla\\gtk\\PlatGTK.cxx	/^PRectangle Window::GetPosition() {$/;"	f	class:Window	typeref:typename:PRectangle	signature:()
GetPosition	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^PRectangle Window::GetPosition()$/;"	f	class:Scintilla::Window	typeref:typename:PRectangle	signature:()
GetPosition	..\\scintilla\\win32\\PlatWin.cxx	/^PRectangle Window::GetPosition() {$/;"	f	class:Scintilla::Window	typeref:typename:PRectangle	signature:()
GetPosition	..\\scite\\gtk\\GUIGTK.cxx	/^Rectangle Window::GetPosition() {$/;"	f	class:GUI::Window	typeref:typename:Rectangle	signature:()
GetPosition	..\\scite\\win32\\GUIWin.cxx	/^Rectangle Window::GetPosition() {$/;"	f	class:GUI::Window	typeref:typename:Rectangle	signature:()
GetPreferredHeight	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::GetPreferredHeight(GtkWidget *widget, gint *minimalHeight, gint *naturalHeigh/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,gint * minimalHeight,gint * naturalHeight)
GetPreferredWidth	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::GetPreferredWidth(GtkWidget *widget, gint *minimalWidth, gint *naturalWidth) /;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,gint * minimalWidth,gint * naturalWidth)
GetPrev	..\\scite\\src\\Containers.h	/^	TYPE GetPrev(T_POSITION& rPosition) const { \/\/ return *Position--$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:(T_POSITION & rPosition) const
GetPrev	..\\scite\\src\\Containers.h	/^	TYPE& GetPrev(T_POSITION& rPosition) { \/\/ return *Position--$/;"	f	class:TList	typeref:typename:TYPE &	access:public	signature:(T_POSITION & rPosition)
GetPropertyInt	..\\scintilla\\lexlib\\Accessor.cxx	/^int Accessor::GetPropertyInt(const char *key, int defaultValue) const {$/;"	f	class:Accessor	typeref:typename:int	signature:(const char * key,int defaultValue) const
GetPropertyInt	..\\scite\\src\\LuaExtension.cxx	/^static int GetPropertyInt(const char *propName) {$/;"	f	typeref:typename:int	file:	signature:(const char * propName)
GetRTFNextControl	..\\scite\\src\\ExportRTF.cxx	/^static void GetRTFNextControl(const char **style, char *control) {$/;"	f	typeref:typename:void	file:	signature:(const char ** style,char * control)
GetRTFStyleChange	..\\scite\\src\\ExportRTF.cxx	/^static std::string GetRTFStyleChange(const char *last, const char *current) { \/\/ \\f0\\fs20\\c/;"	f	typeref:typename:std::string	file:	signature:(const char * last,const char * current)
GetRange	..\\scintilla\\src\\SplitVector.h	/^	void GetRange(T *buffer, ptrdiff_t position, ptrdiff_t retrieveLength) const {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(T * buffer,ptrdiff_t position,ptrdiff_t retrieveLength) const
GetRange	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::GetRange(GUI::ScintillaWindow &win, int start, int end, char *text) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & win,int start,int end,char * text)
GetRangeInUIEncoding	..\\scite\\gtk\\SciTEGTK.cxx	/^std::string SciTEGTK::GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd) /;"	f	class:SciTEGTK	typeref:typename:std::string	signature:(GUI::ScintillaWindow & win,int selStart,int selEnd)
GetRangeInUIEncoding	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(GUI::ScintillaWindow & win,int selStart,int selEnd)
GetRangeInUIEncoding	..\\scite\\win32\\SciTEWin.cxx	/^std::string SciTEWin::GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd) /;"	f	class:SciTEWin	typeref:typename:std::string	signature:(GUI::ScintillaWindow & win,int selStart,int selEnd)
GetRangeString	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetRangeString(GUI::ScintillaWindow &win, int selStart, int selEnd) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(GUI::ScintillaWindow & win,int selStart,int selEnd)
GetRed	..\\scintilla\\include\\Platform.h	/^	unsigned int GetRed() const {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:unsigned int	access:public	signature:() const
GetRedoStep	..\\scintilla\\src\\CellBuffer.cxx	/^const Action &CellBuffer::GetRedoStep() const {$/;"	f	class:CellBuffer	typeref:typename:const Action &	signature:() const
GetRedoStep	..\\scintilla\\src\\CellBuffer.cxx	/^const Action &UndoHistory::GetRedoStep() const {$/;"	f	class:UndoHistory	typeref:typename:const Action &	signature:() const
GetRelative	..\\scintilla\\lexlib\\StyleContext.h	/^	int GetRelative(Sci_Position n) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:int	access:public	signature:(Sci_Position n)
GetRelativeCharacter	..\\scintilla\\lexlib\\StyleContext.h	/^	int GetRelativeCharacter(Sci_Position n) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:int	access:public	signature:(Sci_Position n)
GetRelativePosition	..\\scintilla\\src\\Document.cxx	/^Sci_Position SCI_METHOD Document::GetRelativePosition(Sci_Position positionStart, Sci_Position c/;"	f	class:Document	typeref:typename:Sci_Position SCI_METHOD	signature:(Sci_Position positionStart,Sci_Position characterOffset) const
GetRelativePositionUTF16	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::GetRelativePositionUTF16(Sci::Position positionStart, Sci::Position char/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position positionStart,Sci::Position characterOffset) const
GetReverseArrowCursor	..\\scintilla\\win32\\PlatWin.cxx	/^static HCURSOR GetReverseArrowCursor() {$/;"	f	namespace:Scintilla	typeref:typename:HCURSOR	file:	signature:()
GetRowHeight	..\\scintilla\\gtk\\PlatGTK.cxx	/^int ListBoxX::GetRowHeight() {$/;"	f	class:ListBoxX	typeref:typename:int	signature:()
GetRunAttributes	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^AtkAttributeSet *ScintillaGTKAccessible::AtkTextIface::GetRunAttributes(AtkText *text, gint offs/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:AtkAttributeSet *	signature:(AtkText * text,gint offset,gint * start_offset,gint * end_offset)
GetRunAttributes	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^AtkAttributeSet *ScintillaGTKAccessible::GetRunAttributes(int charOffset, int *startChar, int *e/;"	f	class:ScintillaGTKAccessible	typeref:typename:AtkAttributeSet *	signature:(int charOffset,int * startChar,int * endChar)
GetScale	..\\scintilla\\src\\XPM.h	/^	float GetScale() const { return scale; }$/;"	f	class:Scintilla::RGBAImage	typeref:typename:float	access:public	signature:() const
GetScaledHeight	..\\scintilla\\src\\XPM.h	/^	float GetScaledHeight() const { return height \/ scale; }$/;"	f	class:Scintilla::RGBAImage	typeref:typename:float	access:public	signature:() const
GetScaledWidth	..\\scintilla\\src\\XPM.h	/^	float GetScaledWidth() const { return width \/ scale; }$/;"	f	class:Scintilla::RGBAImage	typeref:typename:float	access:public	signature:() const
GetSciteDefaultHome	..\\scite\\gtk\\SciTEGTK.cxx	/^FilePath SciTEGTK::GetSciteDefaultHome() {$/;"	f	class:SciTEGTK	typeref:typename:FilePath	signature:()
GetSciteDefaultHome	..\\scite\\win32\\SciTEWin.cxx	/^FilePath SciTEWin::GetSciteDefaultHome() {$/;"	f	class:SciTEWin	typeref:typename:FilePath	signature:()
GetSciteUserHome	..\\scite\\gtk\\SciTEGTK.cxx	/^FilePath SciTEGTK::GetSciteUserHome() {$/;"	f	class:SciTEGTK	typeref:typename:FilePath	signature:()
GetSciteUserHome	..\\scite\\win32\\SciTEWin.cxx	/^FilePath SciTEWin::GetSciteUserHome() {$/;"	f	class:SciTEWin	typeref:typename:FilePath	signature:()
GetScriptableInterface	..\\scite\\scripts\\IFaceTableGen.py	/^def GetScriptableInterface(f):$/;"	f	access:public	signature:(f)
GetScrollInfo	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::GetScrollInfo(int nBar, LPSCROLLINFO lpsi) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(int nBar,LPSCROLLINFO lpsi)
GetSelectedRange	..\\scite\\src\\SciTEBase.cxx	/^SelectedRange SciTEBase::GetSelectedRange() {$/;"	f	class:SciTEBase	typeref:typename:SelectedRange	signature:()
GetSelection	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int GetSelection() { return selection; }$/;"	f	class:ListBoxImpl	typeref:typename:int	file:	access:public	signature:()
GetSelection	..\\scintilla\\gtk\\PlatGTK.cxx	/^int ListBoxX::GetSelection() {$/;"	f	class:ListBoxX	typeref:typename:int	signature:()
GetSelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::GetSelection(GtkSelectionData *selection_data, guint info, SelectionText *tex/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkSelectionData * selection_data,guint info,SelectionText * text)
GetSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::AtkTextIface::GetSelection(AtkText *text, gint selection_num, gin/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gchar *	signature:(AtkText * text,gint selection_num,gint * start_pos,gint * end_pos)
GetSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetSelection(gint selection_num, int *startChar, int *endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(gint selection_num,int * startChar,int * endChar)
GetSelection	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int ListBoxImpl::GetSelection()$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:int	signature:()
GetSelection	..\\scintilla\\src\\AutoComplete.cxx	/^int AutoComplete::GetSelection() const {$/;"	f	class:AutoComplete	typeref:typename:int	signature:() const
GetSelection	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::GetSelection() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:()
GetSelection	..\\scite\\src\\SciTEBase.cxx	/^Sci_CharacterRange SciTEBase::GetSelection() {$/;"	f	class:SciTEBase	typeref:typename:Sci_CharacterRange	signature:()
GetSeparator	..\\scintilla\\src\\AutoComplete.cxx	/^char AutoComplete::GetSeparator() const {$/;"	f	class:AutoComplete	typeref:typename:char	signature:() const
GetSize	..\\scintilla\\src\\PositionCache.h	/^	size_t GetSize() const { return pces.size(); }$/;"	f	class:Scintilla::PositionCache	typeref:typename:size_t	access:public	signature:() const
GetSize	..\\scite\\src\\Containers.h	/^	int GetSize() const {$/;"	f	class:TArray	typeref:typename:int	access:public	signature:() const
GetStartPosition	..\\scite\\src\\Containers.h	/^	T_POSITION GetStartPosition() const { $/;"	f	class:TMap	typeref:typename:T_POSITION	access:public	signature:() const
GetStartSegment	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_PositionU GetStartSegment() const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:Sci_PositionU	access:public	signature:() const
GetStartSegment	..\\scite\\src\\StyleWriter.h	/^	unsigned int GetStartSegment() const { return startSeg; }$/;"	f	class:StyleWriter	typeref:typename:unsigned int	access:public	signature:() const
GetString	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::GetString(const char *key) const {$/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const char * key) const
GetStringAtOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::AtkTextIface::GetStringAtOffset(AtkText *text, gint offset, AtkTe/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gchar *	signature:(AtkText * text,gint offset,AtkTextGranularity granularity,gint * start_offset,gint * end_offset)
GetStringAtOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetStringAtOffset(int charOffset,$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(int charOffset,AtkTextGranularity granularity,int * startChar,int * endChar)
GetStyleAndWords	..\\scite\\src\\SciTEBase.cxx	/^StyleAndWords SciTEBase::GetStyleAndWords(const char *base) {$/;"	f	class:SciTEBase	typeref:typename:StyleAndWords	signature:(const char * base)
GetStyleClock	..\\scintilla\\src\\Document.h	/^	int GetStyleClock() const { return styleClock; }$/;"	f	class:Scintilla::Document	typeref:typename:int	access:public	signature:() const
GetStyleRange	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::GetStyleRange(unsigned char *buffer, Sci::Position position, Sci::Position leng/;"	f	class:CellBuffer	typeref:typename:void	signature:(unsigned char * buffer,Sci::Position position,Sci::Position lengthRetrieve) const
GetStyleRange	..\\scintilla\\src\\Document.h	/^	void GetStyleRange(unsigned char *buffer, Sci::Position position, Sci::Position lengthRetrieve)/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:(unsigned char * buffer,Sci::Position position,Sci::Position lengthRetrieve) const
GetSubStyleBases	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::GetSubStyleBases() {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:()
GetSubStyleBases	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::GetSubStyleBases() {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:()
GetSubStyleBases	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::GetSubStyleBases() {$/;"	f	class:LexState	typeref:typename:const char *	signature:()
GetTag	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::GetTag(char *tagValue, int tagNumber) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(char * tagValue,int tagNumber)
GetTail	..\\scite\\src\\Containers.h	/^	TYPE GetTail() const {$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:() const
GetTail	..\\scite\\src\\Containers.h	/^	TYPE& GetTail() {$/;"	f	class:TList	typeref:typename:TYPE &	access:public	signature:()
GetTailPosition	..\\scite\\src\\Containers.h	/^	T_POSITION GetTailPosition() const {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:() const
GetText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::AtkTextIface::GetText(AtkText *text, int start_offset, int end_of/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gchar *	signature:(AtkText * text,int start_offset,int end_offset)
GetText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetText(int startChar, int endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(int startChar,int endChar)
GetText	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::GetText(uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(uptr_t wParam,sptr_t lParam)
GetTextAfterOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::AtkTextIface::GetTextAfterOffset(AtkText *text, int offset, AtkTe/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gchar *	signature:(AtkText * text,int offset,AtkTextBoundary boundary_type,int * start_offset,int * end_offset)
GetTextAfterOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetTextAfterOffset(int charOffset,$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(int charOffset,AtkTextBoundary boundaryType,int * startChar,int * endChar)
GetTextAtOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::AtkTextIface::GetTextAtOffset(AtkText *text, gint offset, AtkText/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gchar *	signature:(AtkText * text,gint offset,AtkTextBoundary boundary_type,gint * start_offset,gint * end_offset)
GetTextAtOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetTextAtOffset(int charOffset,$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(int charOffset,AtkTextBoundary boundaryType,int * startChar,int * endChar)
GetTextBeforeOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::AtkTextIface::GetTextBeforeOffset(AtkText *text, int offset, AtkT/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gchar *	signature:(AtkText * text,int offset,AtkTextBoundary boundary_type,int * start_offset,int * end_offset)
GetTextBeforeOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetTextBeforeOffset(int charOffset,$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(int charOffset,AtkTextBoundary boundaryType,int * startChar,int * endChar)
GetTextLength	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::GetTextLength() {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:()
GetTextRangeUTF8	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gchar *ScintillaGTKAccessible::GetTextRangeUTF8(Sci::Position startByte, Sci::Position endByte) /;"	f	class:ScintillaGTKAccessible	typeref:typename:gchar *	signature:(Sci::Position startByte,Sci::Position endByte)
GetTextRectangle	..\\scintilla\\src\\Editor.cxx	/^PRectangle Editor::GetTextRectangle() const {$/;"	f	class:Editor	typeref:typename:PRectangle	signature:() const
GetTranslationToAbout	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::GetTranslationToAbout(const char * const propname, bool retainIfNotFound)/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char * const propname,bool retainIfNotFound)
GetTypesep	..\\scintilla\\src\\AutoComplete.cxx	/^char AutoComplete::GetTypesep() const {$/;"	f	class:AutoComplete	typeref:typename:char	signature:() const
GetUndoStep	..\\scintilla\\src\\CellBuffer.cxx	/^const Action &CellBuffer::GetUndoStep() const {$/;"	f	class:CellBuffer	typeref:typename:const Action &	signature:() const
GetUndoStep	..\\scintilla\\src\\CellBuffer.cxx	/^const Action &UndoHistory::GetUndoStep() const {$/;"	f	class:UndoHistory	typeref:typename:const Action &	signature:() const
GetUserPropertiesFileName	..\\scite\\src\\SciTEProps.cxx	/^FilePath SciTEBase::GetUserPropertiesFileName() {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:()
GetValue	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void GetValue(int n, char *value, int len) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(int n,char * value,int len)
GetValue	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::GetValue(int n, char *value, int len) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(int n,char * value,int len)
GetValue	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::GetValue(int n, char *value, int len)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int n,char * value,int len)
GetValue	..\\scintilla\\src\\AutoComplete.cxx	/^std::string AutoComplete::GetValue(int item) const {$/;"	f	class:AutoComplete	typeref:typename:std::string	signature:(int item) const
GetValue	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::GetValue(int n, char *value, int len) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int n,char * value,int len)
GetValue	..\\scite\\gtk\\SciTEGTK.cxx	/^std::string UserStrip::GetValue(int control) {$/;"	f	class:UserStrip	typeref:typename:std::string	signature:(int control)
GetValue	..\\scite\\win32\\Strips.cxx	/^std::string UserStrip::GetValue(int control) {$/;"	f	class:UserStrip	typeref:typename:std::string	signature:(int control)
GetVersion	..\\scite\\win32\\Strips.cxx	/^static DWORD GetVersion(LPCTSTR lpszDllName) {$/;"	f	typeref:typename:DWORD	file:	signature:(LPCTSTR lpszDllName)
GetVisible	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::GetVisible(Sci::Line lineDoc) const {$/;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDoc) const
GetVisible	..\\scite\\src\\SciTEBuffers.cxx	/^bool BufferList::GetVisible(int index) const {$/;"	f	class:BufferList	typeref:typename:bool	signature:(int index) const
GetVisibleOriginInMain	..\\scintilla\\src\\Editor.cxx	/^Point Editor::GetVisibleOriginInMain() const {$/;"	f	class:Editor	typeref:typename:Point	signature:() const
GetVisibleRows	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int GetVisibleRows() const { return height; }$/;"	f	class:ListBoxImpl	typeref:typename:int	file:	access:public	signature:() const
GetVisibleRows	..\\scintilla\\gtk\\PlatGTK.cxx	/^int ListBoxX::GetVisibleRows() const {$/;"	f	class:ListBoxX	typeref:typename:int	signature:() const
GetVisibleRows	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int ListBoxImpl::GetVisibleRows() const$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:int	signature:() const
GetVisibleRows	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::GetVisibleRows() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:() const
GetWINDOW	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  WINDOW *GetWINDOW() {$/;"	f	class:ScintillaCurses	typeref:typename:WINDOW *	file:	access:public	signature:()
GetWidth	..\\scintilla\\src\\XPM.cxx	/^int RGBAImageSet::GetWidth() const {$/;"	f	class:RGBAImageSet	typeref:typename:int	signature:() const
GetWidth	..\\scintilla\\src\\XPM.h	/^	int GetWidth() const { return width; }$/;"	f	class:Scintilla::RGBAImage	typeref:typename:int	access:public	signature:() const
GetWidth	..\\scintilla\\src\\XPM.h	/^	int GetWidth() const { return width; }$/;"	f	class:Scintilla::XPM	typeref:typename:int	access:public	signature:() const
GetWild	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::GetWild(const char *keybase, const char *filename) {$/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const char * keybase,const char * filename)
GetWildUsingStart	..\\scite\\src\\PropSetFile.cxx	/^std::string PropSetFile::GetWildUsingStart(const PropSetFile &psStart, const char *keybase, cons/;"	f	class:PropSetFile	typeref:typename:std::string	signature:(const PropSetFile & psStart,const char * keybase,const char * filename)
GetWindowPosition	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::GetWindowPosition(int *left, int *top, int *width, int *height, int *maximize) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int * left,int * top,int * width,int * height,int * maximize)
GetWindowPosition	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::GetWindowPosition(int *left, int *top, int *width, int *height, int *maximize) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int * left,int * top,int * width,int * height,int * maximize)
GetWordListDescription	..\\scintilla\\lexlib\\LexerModule.cxx	/^const char *LexerModule::GetWordListDescription(int index) const {$/;"	f	class:LexerModule	typeref:typename:const char *	signature:(int index) const
GetWorkingDirectory	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::GetWorkingDirectory() {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:()
GetterFunction	..\\scite\\src\\IFaceTable.h	/^	IFaceFunction GetterFunction() const {$/;"	f	struct:IFaceProperty	typeref:typename:IFaceFunction	access:public	signature:() const
GlobalMemory	..\\scintilla\\win32\\ScintillaWin.cxx	/^	GlobalMemory() : hand(0), ptr(0) {$/;"	f	class:GlobalMemory	file:	access:public	signature:()
GlobalMemory	..\\scintilla\\win32\\ScintillaWin.cxx	/^	explicit GlobalMemory(HGLOBAL hand_) : hand(hand_), ptr(0) {$/;"	f	class:GlobalMemory	file:	access:public	signature:(HGLOBAL hand_)
GlobalMemory	..\\scintilla\\win32\\ScintillaWin.cxx	/^class GlobalMemory {$/;"	c	file:
GoLineDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::GoLineDialog() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
GoLineDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::GoLineDialog() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
GoLineDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::GoLineDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
GoLineMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::GoLineMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
GoMatchingBrace	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::GoMatchingBrace(bool select) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool select)
GoMatchingPreprocCond	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::GoMatchingPreprocCond(int direction, bool select) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int direction,bool select)
GoMessage	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::GoMessage(int dir) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int dir)
GoToLine	..\\scintilla\\src\\Editor.cxx	/^void Editor::GoToLine(Sci::Line lineNo) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line lineNo)
GotoCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::GotoCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
GotoLineEnsureVisible	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::GotoLineEnsureVisible(int line) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line)
GotoResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::GotoResponse(int responseID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int responseID)
GrabFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void DialogFindInFiles::GrabFields() {$/;"	f	class:DialogFindInFiles	typeref:typename:void	signature:()
GrabFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void DialogFindReplace::GrabFields() {$/;"	f	class:DialogFindReplace	typeref:typename:void	signature:()
GrabFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::GrabFields() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
GrabFields	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::GrabFields() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
GrabFields	..\\scite\\win32\\SciTEWinDlg.cxx	/^void DialogFindReplace::GrabFields() {$/;"	f	class:DialogFindReplace	typeref:typename:void	signature:()
GrabMatches	..\\scintilla\\src\\RESearch.cxx	/^void RESearch::GrabMatches(const CharacterIndexer &ci) {$/;"	f	class:RESearch	typeref:typename:void	signature:(const CharacterIndexer & ci)
GrabToggles	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::GrabToggles() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
GrabToggles	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::GrabToggles() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
GrepDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::GrepDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
GrepFlags	..\\scite\\src\\SciTEBase.h	/^	enum GrepFlags {$/;"	g	class:SciTEBase	access:protected
GrepIntoDirectory	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::GrepIntoDirectory(const FilePath &directory) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const FilePath & directory)
GrepMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::GrepMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
GrepRecursive	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::GrepRecursive(GrepFlags gf, FilePath baseDir, const char *searchString, const GU/;"	f	class:SciTEBase	typeref:typename:void	signature:(GrepFlags gf,FilePath baseDir,const char * searchString,const GUI::gui_char * fileTypes)
GreyToAlpha	..\\scite\\gtk\\Widget.cxx	/^static void GreyToAlpha(GdkPixbuf *ppb, GdkColor fore) {$/;"	f	typeref:typename:void	file:	signature:(GdkPixbuf * ppb,GdkColor fore)
GtkFromWinCaption	..\\scite\\gtk\\SciTEGTK.cxx	/^static std::string GtkFromWinCaption(const char *text) {$/;"	f	typeref:typename:std::string	file:	signature:(const char * text)
HANJADIC_H	..\\scintilla\\win32\\HanjaDic.h	/^#define HANJADIC_H$/;"	d
HANJA_K0	..\\scintilla\\win32\\HanjaDic.cxx	/^typedef enum { HANJA_UNKNOWN = 0, HANJA_K0 = 1, HANJA_K1 = 2, HANJA_OTHER = 3 } HANJA_TYPE;$/;"	e	enum:Scintilla::HanjaDict::__anon4e3bd5e60103	file:	access:public
HANJA_K1	..\\scintilla\\win32\\HanjaDic.cxx	/^typedef enum { HANJA_UNKNOWN = 0, HANJA_K0 = 1, HANJA_K1 = 2, HANJA_OTHER = 3 } HANJA_TYPE;$/;"	e	enum:Scintilla::HanjaDict::__anon4e3bd5e60103	file:	access:public
HANJA_OTHER	..\\scintilla\\win32\\HanjaDic.cxx	/^typedef enum { HANJA_UNKNOWN = 0, HANJA_K0 = 1, HANJA_K1 = 2, HANJA_OTHER = 3 } HANJA_TYPE;$/;"	e	enum:Scintilla::HanjaDict::__anon4e3bd5e60103	file:	access:public
HANJA_TYPE	..\\scintilla\\win32\\HanjaDic.cxx	/^typedef enum { HANJA_UNKNOWN = 0, HANJA_K0 = 1, HANJA_K1 = 2, HANJA_OTHER = 3 } HANJA_TYPE;$/;"	t	namespace:Scintilla::HanjaDict	typeref:enum:Scintilla::HanjaDict::__anon4e3bd5e60103	file:
HANJA_UNKNOWN	..\\scintilla\\win32\\HanjaDic.cxx	/^typedef enum { HANJA_UNKNOWN = 0, HANJA_K0 = 1, HANJA_K1 = 2, HANJA_OTHER = 3 } HANJA_TYPE;$/;"	e	enum:Scintilla::HanjaDict::__anon4e3bd5e60103	file:	access:public
HAVE_GTK_A11Y_H	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define HAVE_GTK_A11Y_H /;"	d	file:
HAVE_GTK_FACTORY	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define HAVE_GTK_FACTORY /;"	d	file:
HAVE_WIDGET_SET_UNSET	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define HAVE_WIDGET_SET_UNSET /;"	d	file:
HFont	..\\scintilla\\win32\\PlatWin.cxx	/^HFONT FormatAndMetrics::HFont() {$/;"	f	class:Scintilla::FormatAndMetrics	typeref:typename:HFONT	signature:()
HJdictAvailable	..\\scintilla\\win32\\HanjaDic.cxx	/^	bool HJdictAvailable() {$/;"	f	class:Scintilla::HanjaDict::HanjaDic	typeref:typename:bool	file:	access:public	signature:()
HJinterface	..\\scintilla\\win32\\HanjaDic.cxx	/^	IHanjaDic *HJinterface;$/;"	m	class:Scintilla::HanjaDict::HanjaDic	typeref:typename:IHanjaDic *	file:	access:public
HTHEME	..\\scite\\win32\\SciTEWin.h	/^typedef void *HTHEME;$/;"	t	typeref:typename:void *
HackColour	..\\scite\\src\\Credits.cxx	/^	void HackColour(int &n) {$/;"	f	class:__anon1b46962c0111::RandomColour	typeref:typename:void	file:	access:private	signature:(int & n)
HandleCompositionInline	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::HandleCompositionInline(uptr_t, sptr_t lParam) {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(uptr_t,sptr_t lParam)
HandleCompositionWindowed	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::HandleCompositionWindowed(uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(uptr_t wParam,sptr_t lParam)
HandleCopyData	..\\scite\\win32\\DirectorExtension.cxx	/^static LRESULT HandleCopyData(LPARAM lParam) {$/;"	f	typeref:typename:LRESULT	file:	signature:(LPARAM lParam)
HandleReplaceCommand	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::HandleReplaceCommand(int cmd, bool reverseDirection) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(int cmd,bool reverseDirection)
HandleReplaceCommand	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::HandleReplaceCommand(int cmd, bool reverseFind) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(int cmd,bool reverseFind)
HandleSaveAs	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::HandleSaveAs(const char *savePath) {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:(const char * savePath)
HandleStringMessage	..\\scite\\gtk\\DirectorExtension.cxx	/^void DirectorExtension::HandleStringMessage(const char *message) {$/;"	f	class:DirectorExtension	typeref:typename:void	signature:(const char * message)
HandleStringMessage	..\\scite\\win32\\DirectorExtension.cxx	/^void DirectorExtension::HandleStringMessage(const char *message) {$/;"	f	class:DirectorExtension	typeref:typename:void	signature:(const char * message)
HandleXml	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::HandleXml(char ch) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(char ch)
HanjaDic	..\\scintilla\\win32\\HanjaDic.cxx	/^	HanjaDic() : HJinterface(NULL) {$/;"	f	class:Scintilla::HanjaDict::HanjaDic	file:	access:public	signature:()
HanjaDic	..\\scintilla\\win32\\HanjaDic.cxx	/^class HanjaDic {$/;"	c	namespace:Scintilla::HanjaDict	file:
HanjaDict	..\\scintilla\\win32\\HanjaDic.cxx	/^namespace HanjaDict {$/;"	n	namespace:Scintilla	file:
HanjaDict	..\\scintilla\\win32\\HanjaDic.h	/^namespace HanjaDict {$/;"	n	namespace:Scintilla
HasCaretSizeChanged	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::HasCaretSizeChanged() const {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:() const
HasCaseFolder	..\\scintilla\\src\\Document.cxx	/^bool Document::HasCaseFolder() const {$/;"	f	class:Document	typeref:typename:bool	signature:() const
HasClose	..\\scite\\win32\\Strips.cxx	/^bool BackgroundStrip::HasClose() const {$/;"	f	class:BackgroundStrip	typeref:typename:bool	signature:() const
HasClose	..\\scite\\win32\\Strips.cxx	/^bool Strip::HasClose() const {$/;"	f	class:Strip	typeref:typename:bool	signature:() const
HasClose	..\\scite\\win32\\Strips.cxx	/^bool UserStrip::HasClose() const {$/;"	f	class:UserStrip	typeref:typename:bool	signature:() const
HasCommandToRun	..\\scite\\src\\JobQueue.h	/^	bool HasCommandToRun() const {$/;"	f	class:JobQueue	typeref:typename:bool	access:public	signature:() const
HasConnection	..\\scite\\win32\\DirectorExtension.cxx	/^static bool HasConnection() {$/;"	f	typeref:typename:bool	file:	signature:()
HasFocus	..\\scite\\gtk\\GUIGTK.cxx	/^bool Window::HasFocus() {$/;"	f	class:GUI::Window	typeref:typename:bool	signature:()
HasFocus	..\\scite\\win32\\GUIWin.cxx	/^bool Window::HasFocus() {$/;"	f	class:GUI::Window	typeref:typename:bool	signature:()
HasFocusOnSelfOrChild	..\\scite\\gtk\\Widget.cxx	/^bool WComboBoxEntry::HasFocusOnSelfOrChild() {$/;"	f	class:WComboBoxEntry	typeref:typename:bool	signature:()
HasMnemonic	..\\scite\\gtk\\Widget.cxx	/^bool WStatic::HasMnemonic() {$/;"	f	class:WStatic	typeref:typename:bool	signature:()
HasNamedFunction	..\\scite\\src\\LuaExtension.cxx	/^static bool HasNamedFunction(const char *name) {$/;"	f	typeref:typename:bool	file:	signature:(const char * name)
Hash	..\\scintilla\\src\\PositionCache.cxx	/^unsigned int PositionCacheEntry::Hash(unsigned int styleNumber_, const char *s, unsigned int len/;"	f	class:PositionCacheEntry	typeref:typename:unsigned int	signature:(unsigned int styleNumber_,const char * s,unsigned int len_)
HashFont	..\\scintilla\\win32\\PlatWin.cxx	/^static int HashFont(const FontParameters &fp) {$/;"	f	namespace:Scintilla	typeref:typename:int	file:	signature:(const FontParameters & fp)
HashKey	..\\scite\\src\\Containers.h	/^	unsigned int HashKey(ARG_KEY key) {$/;"	f	class:TMap	typeref:typename:unsigned int	access:protected	signature:(ARG_KEY key)
HaveMouseCapture	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool HaveMouseCapture() { return capturedMouse; }$/;"	f	class:ScintillaCurses	typeref:typename:bool	file:	access:public	signature:()
HaveMouseCapture	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::HaveMouseCapture() {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:()
HaveMouseCapture	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^bool ScintillaQt::HaveMouseCapture()$/;"	f	class:ScintillaQt	typeref:typename:bool	signature:()
HaveMouseCapture	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::HaveMouseCapture() {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:()
Height	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION Height(Font &font_) { return 1; }$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_)
Height	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::Height(Font &font_) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font_)
Height	..\\scintilla\\include\\Platform.h	/^	XYPOSITION Height() const { return bottom - top; }$/;"	f	class:Scintilla::PRectangle	typeref:typename:XYPOSITION	access:public	signature:() const
Height	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::Height(Font &font)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font)
Height	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::Height(Font &font_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_)
Height	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::Height(Font &font_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_)
Height	..\\scite\\src\\GUI.h	/^	int Height() const { return bottom - top; }$/;"	f	class:GUI::Rectangle	typeref:typename:int	access:public	signature:() const
Height	..\\scite\\win32\\Strips.h	/^	virtual int Height() {$/;"	f	class:Strip	typeref:typename:int	access:public	signature:()
HeightFromStyle	..\\scintilla\\src\\ViewStyle.cxx	/^int ViewStyle::HeightFromStyle(const FontSpecification &fs) {$/;"	f	class:ViewStyle	typeref:typename:int	signature:(const FontSpecification & fs)
HelpFn	..\\scite\\win32\\SciTEWin.cxx	/^			typedef HWND (WINAPI *HelpFn) (HWND, const wchar_t *, UINT, DWORD_PTR);$/;"	t	function:SciTEWin::ExecuteHelp	typeref:typename:HWND (WINAPI *)(HWND,const wchar_t *,UINT,DWORD_PTR)	file:
Helper	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^		Helper(ScintillaGTK *sci_) :$/;"	f	class:ScintillaGTK::Paste::Helper	file:	access:public	signature:(ScintillaGTK * sci_)
Helper	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	class Helper : GObjectWatcher {$/;"	c	function:ScintillaGTK::Paste	file:	inherits:GObjectWatcher
Helper	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^		Helper(ScintillaGTKAccessible *scia_, Sci::Position bytePos_) :$/;"	f	struct:ScintillaGTKAccessible::PasteText::Helper	file:	access:public	signature:(ScintillaGTKAccessible * scia_,Sci::Position bytePos_)
Helper	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^	struct Helper : GObjectWatcher {$/;"	s	function:ScintillaGTKAccessible::PasteText	file:	inherits:GObjectWatcher
HexStringFromInteger	..\\scite\\win32\\GUIWin.cxx	/^gui_string HexStringFromInteger(long i) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(long i)
HiWord	..\\scintilla\\win32\\ScintillaWin.cxx	/^static WORD HiWord(uptr_t l) {$/;"	f	typeref:typename:WORD	file:	signature:(uptr_t l)
HiddenLines	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::HiddenLines() const {$/;"	f	class:ContractionState	typeref:typename:bool	signature:() const
HideKeyboardCues	..\\scite\\win32\\Strips.cxx	/^static bool HideKeyboardCues() {$/;"	f	typeref:typename:bool	file:	signature:()
HideMatch	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::HideMatch() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
HighShortFromLong	..\\scintilla\\src\\Editor.cxx	/^short HighShortFromLong(long x) {$/;"	f	namespace:__anon92132c300211	typeref:typename:short	signature:(long x)
HighlightCurrentWord	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::HighlightCurrentWord(bool highlight) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool highlight)
HighlightDelimiter	..\\scintilla\\src\\Document.h	/^	HighlightDelimiter() : isEnabled(false) {$/;"	f	class:Scintilla::HighlightDelimiter	access:public	signature:()
HighlightDelimiter	..\\scintilla\\src\\Document.h	/^class HighlightDelimiter {$/;"	c	namespace:Scintilla
HmenuID	..\\scite\\win32\\SciTEWin.h	/^inline HMENU HmenuID(size_t id) {$/;"	f	typeref:typename:HMENU	signature:(size_t id)
HorizontalMove	..\\scintilla\\src\\Editor.cxx	/^int Editor::HorizontalMove(unsigned int iMessage) {$/;"	f	class:Editor	typeref:typename:int	signature:(unsigned int iMessage)
HorizontalScrollMessage	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::HorizontalScrollMessage(WPARAM wParam) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(WPARAM wParam)
HorizontalScrollTo	..\\scintilla\\src\\Editor.cxx	/^void Editor::HorizontalScrollTo(int xPos) {$/;"	f	class:Editor	typeref:typename:void	signature:(int xPos)
Hwnd	..\\scite\\win32\\Strips.h	/^	HWND Hwnd() const {$/;"	f	class:BaseWin	typeref:typename:HWND	access:public	signature:() const
HwndFromString	..\\scite\\win32\\DirectorExtension.cxx	/^static HWND HwndFromString(const char *s) {$/;"	f	typeref:typename:HWND	file:	signature:(const char * s)
HwndOf	..\\scite\\win32\\SciTEWin.h	/^inline HWND HwndOf(GUI::Window w) {$/;"	f	typeref:typename:HWND	signature:(GUI::Window w)
IAny	..\\scintilla\\lua\\src\\lpvm.h	/^  IAny, \/* if no char, fail *\/$/;"	e	enum:Opcode	access:public
IBDisplay	..\\scintilla\\cocoa\\InfoBarCommunicator.h	/^typedef NS_OPTIONS(NSUInteger, IBDisplay) {$/;"	t	typeref:typename:NS_OPTIONS (NSUInteger,){ IBShowZoom = 0x01, IBShowCaretPosition = 0x02, IBShowStatusText = 0x04, IBShowAll = 0xFF }
IBackCommit	..\\scintilla\\lua\\src\\lpvm.h	/^  IBackCommit,  \/* "fails" but jump to its own 'offset' *\/$/;"	e	enum:Opcode	access:public
IBehind	..\\scintilla\\lua\\src\\lpvm.h	/^  IBehind,  \/* walk back 'aux' characters (fail if not possible) *\/$/;"	e	enum:Opcode	access:public
ICall	..\\scintilla\\lua\\src\\lpvm.h	/^  ICall,  \/* call rule at 'offset' *\/$/;"	e	enum:Opcode	access:public
ICaseConverter	..\\scintilla\\src\\CaseConvert.h	/^class ICaseConverter {$/;"	c	namespace:Scintilla
IChar	..\\scintilla\\lua\\src\\lpvm.h	/^  IChar,  \/* if char != aux, fail *\/$/;"	e	enum:Opcode	access:public
IChoice	..\\scintilla\\lua\\src\\lpvm.h	/^  IChoice,  \/* stack a choice; next fail will jump to 'offset' *\/$/;"	e	enum:Opcode	access:public
ICloseCapture	..\\scintilla\\lua\\src\\lpvm.h	/^  ICloseCapture,$/;"	e	enum:Opcode	access:public
ICloseRunTime	..\\scintilla\\lua\\src\\lpvm.h	/^  ICloseRunTime$/;"	e	enum:Opcode	access:public
ICommit	..\\scintilla\\lua\\src\\lpvm.h	/^  ICommit,  \/* pop choice and jump to 'offset' *\/$/;"	e	enum:Opcode	access:public
IDABBREV	..\\scite\\src\\SciTE.h	/^#define IDABBREV	/;"	d
IDABOUTSCINTILLA	..\\scite\\src\\SciTE.h	/^#define IDABOUTSCINTILLA	/;"	d
IDBM_20_AROUND	..\\scite\\src\\SciTE.h	/^#define IDBM_20_AROUND /;"	d
IDBM_20_BACKSLASH	..\\scite\\src\\SciTE.h	/^#define IDBM_20_BACKSLASH /;"	d
IDBM_20_CASE	..\\scite\\src\\SciTE.h	/^#define IDBM_20_CASE /;"	d
IDBM_20_REGEX	..\\scite\\src\\SciTE.h	/^#define IDBM_20_REGEX /;"	d
IDBM_20_UP	..\\scite\\src\\SciTE.h	/^#define IDBM_20_UP /;"	d
IDBM_20_WORD	..\\scite\\src\\SciTE.h	/^#define IDBM_20_WORD /;"	d
IDBM_24_AROUND	..\\scite\\src\\SciTE.h	/^#define IDBM_24_AROUND /;"	d
IDBM_24_BACKSLASH	..\\scite\\src\\SciTE.h	/^#define IDBM_24_BACKSLASH /;"	d
IDBM_24_CASE	..\\scite\\src\\SciTE.h	/^#define IDBM_24_CASE /;"	d
IDBM_24_REGEX	..\\scite\\src\\SciTE.h	/^#define IDBM_24_REGEX /;"	d
IDBM_24_UP	..\\scite\\src\\SciTE.h	/^#define IDBM_24_UP /;"	d
IDBM_24_WORD	..\\scite\\src\\SciTE.h	/^#define IDBM_24_WORD /;"	d
IDBM_32_AROUND	..\\scite\\src\\SciTE.h	/^#define IDBM_32_AROUND /;"	d
IDBM_32_BACKSLASH	..\\scite\\src\\SciTE.h	/^#define IDBM_32_BACKSLASH /;"	d
IDBM_32_CASE	..\\scite\\src\\SciTE.h	/^#define IDBM_32_CASE /;"	d
IDBM_32_REGEX	..\\scite\\src\\SciTE.h	/^#define IDBM_32_REGEX /;"	d
IDBM_32_UP	..\\scite\\src\\SciTE.h	/^#define IDBM_32_UP /;"	d
IDBM_32_WORD	..\\scite\\src\\SciTE.h	/^#define IDBM_32_WORD /;"	d
IDBM_AROUND	..\\scite\\src\\SciTE.h	/^#define IDBM_AROUND /;"	d
IDBM_BACKSLASH	..\\scite\\src\\SciTE.h	/^#define IDBM_BACKSLASH /;"	d
IDBM_CASE	..\\scite\\src\\SciTE.h	/^#define IDBM_CASE /;"	d
IDBM_REGEX	..\\scite\\src\\SciTE.h	/^#define IDBM_REGEX /;"	d
IDBM_UP	..\\scite\\src\\SciTE.h	/^#define IDBM_UP /;"	d
IDBM_WORD	..\\scite\\src\\SciTE.h	/^#define IDBM_WORD /;"	d
IDBROWSE	..\\scite\\src\\SciTE.h	/^#define IDBROWSE /;"	d
IDCMD	..\\scite\\src\\SciTE.h	/^#define IDCMD	/;"	d
IDCONVERT	..\\scite\\src\\SciTE.h	/^#define IDCONVERT	/;"	d
IDCURRLINE	..\\scite\\src\\SciTE.h	/^#define IDCURRLINE	/;"	d
IDCURRLINECHAR	..\\scite\\src\\SciTE.h	/^#define IDCURRLINECHAR	/;"	d
IDC_DRAGDROP	..\\scite\\src\\SciTE.h	/^#define IDC_DRAGDROP /;"	d
IDC_EDIT1	..\\scite\\src\\SciTE.h	/^#define IDC_EDIT1 /;"	d
IDC_INCFINDBTNOK	..\\scite\\src\\SciTE.h	/^#define IDC_INCFINDBTNOK	/;"	d
IDC_INCFINDTEXT	..\\scite\\src\\SciTE.h	/^#define IDC_INCFINDTEXT /;"	d
IDC_SHIFTTAB	..\\scite\\src\\SciTE.h	/^#define IDC_SHIFTTAB	/;"	d
IDC_STATIC	..\\scite\\src\\SciTE.h	/^#define IDC_STATIC /;"	d
IDC_TABCLOSE	..\\scite\\src\\SciTE.h	/^#define IDC_TABCLOSE	/;"	d
IDDIRECTIONDOWN	..\\scite\\src\\SciTE.h	/^#define IDDIRECTIONDOWN	/;"	d
IDDIRECTIONUP	..\\scite\\src\\SciTE.h	/^#define IDDIRECTIONUP	/;"	d
IDDIRECTORY	..\\scite\\src\\SciTE.h	/^#define IDDIRECTORY	/;"	d
IDDOTDOT	..\\scite\\src\\SciTE.h	/^#define IDDOTDOT	/;"	d
IDD_BUFFERS	..\\scite\\src\\SciTE.h	/^#define IDD_BUFFERS	/;"	d
IDD_FIND	..\\scite\\src\\SciTE.h	/^#define IDD_FIND	/;"	d
IDD_FIND_ADV	..\\scite\\src\\SciTE.h	/^#define IDD_FIND_ADV	/;"	d
IDD_REPLACE	..\\scite\\src\\SciTE.h	/^#define IDD_REPLACE	/;"	d
IDD_REPLACE_ADV	..\\scite\\src\\SciTE.h	/^#define IDD_REPLACE_ADV	/;"	d
IDEXTEND	..\\scite\\src\\SciTE.h	/^#define IDEXTEND	/;"	d
IDFILES	..\\scite\\src\\SciTE.h	/^#define IDFILES	/;"	d
IDFINDINSTYLE	..\\scite\\src\\SciTE.h	/^#define IDFINDINSTYLE	/;"	d
IDFINDSTYLE	..\\scite\\src\\SciTE.h	/^#define IDFINDSTYLE	/;"	d
IDFINDWHAT	..\\scite\\src\\SciTE.h	/^#define IDFINDWHAT	/;"	d
IDGOLINE	..\\scite\\src\\SciTE.h	/^#define IDGOLINE	/;"	d
IDGOLINECHAR	..\\scite\\src\\SciTE.h	/^#define IDGOLINECHAR	/;"	d
IDINDENTSIZE	..\\scite\\src\\SciTE.h	/^#define IDINDENTSIZE	/;"	d
IDLASTLINE	..\\scite\\src\\SciTE.h	/^#define IDLASTLINE	/;"	d
IDMARKALL	..\\scite\\src\\SciTE.h	/^#define IDMARKALL /;"	d
IDMATCHCASE	..\\scite\\src\\SciTE.h	/^#define IDMATCHCASE	/;"	d
IDM_ABBREV	..\\scite\\src\\SciTE.h	/^#define IDM_ABBREV	/;"	d
IDM_ABOUT	..\\scite\\src\\SciTE.h	/^#define IDM_ABOUT	/;"	d
IDM_ACTIVATE	..\\scite\\src\\SciTE.h	/^#define IDM_ACTIVATE	/;"	d
IDM_ALLOWACCESS	..\\scite\\src\\SciTE.h	/^#define IDM_ALLOWACCESS	/;"	d
IDM_BLOCK_COMMENT	..\\scite\\src\\SciTE.h	/^#define IDM_BLOCK_COMMENT	/;"	d
IDM_BOOKMARK_CLEARALL	..\\scite\\src\\SciTE.h	/^#define IDM_BOOKMARK_CLEARALL	/;"	d
IDM_BOOKMARK_NEXT	..\\scite\\src\\SciTE.h	/^#define IDM_BOOKMARK_NEXT	/;"	d
IDM_BOOKMARK_NEXT_SELECT	..\\scite\\src\\SciTE.h	/^#define IDM_BOOKMARK_NEXT_SELECT	/;"	d
IDM_BOOKMARK_PREV	..\\scite\\src\\SciTE.h	/^#define IDM_BOOKMARK_PREV	/;"	d
IDM_BOOKMARK_PREV_SELECT	..\\scite\\src\\SciTE.h	/^#define IDM_BOOKMARK_PREV_SELECT	/;"	d
IDM_BOOKMARK_TOGGLE	..\\scite\\src\\SciTE.h	/^#define IDM_BOOKMARK_TOGGLE	/;"	d
IDM_BOX_COMMENT	..\\scite\\src\\SciTE.h	/^#define IDM_BOX_COMMENT	/;"	d
IDM_BUFFER	..\\scite\\src\\SciTE.h	/^#define IDM_BUFFER	/;"	d
IDM_BUFFERSEP	..\\scite\\src\\SciTE.h	/^#define IDM_BUFFERSEP	/;"	d
IDM_BUILD	..\\scite\\src\\SciTE.h	/^#define IDM_BUILD	/;"	d
IDM_CLEAN	..\\scite\\src\\SciTE.h	/^#define IDM_CLEAN	/;"	d
IDM_CLEAR	..\\scite\\src\\SciTE.h	/^#define IDM_CLEAR	/;"	d
IDM_CLEAROUTPUT	..\\scite\\src\\SciTE.h	/^#define IDM_CLEAROUTPUT	/;"	d
IDM_CLOSE	..\\scite\\src\\SciTE.h	/^#define IDM_CLOSE	/;"	d
IDM_CLOSEALL	..\\scite\\src\\SciTE.h	/^#define IDM_CLOSEALL	/;"	d
IDM_COMPILE	..\\scite\\src\\SciTE.h	/^#define IDM_COMPILE	/;"	d
IDM_COMPLETE	..\\scite\\src\\SciTE.h	/^#define IDM_COMPLETE	/;"	d
IDM_COMPLETEWORD	..\\scite\\src\\SciTE.h	/^#define IDM_COMPLETEWORD	/;"	d
IDM_COPY	..\\scite\\src\\SciTE.h	/^#define IDM_COPY	/;"	d
IDM_COPYASRTF	..\\scite\\src\\SciTE.h	/^#define IDM_COPYASRTF	/;"	d
IDM_COPYPATH	..\\scite\\src\\SciTE.h	/^#define IDM_COPYPATH	/;"	d
IDM_CUT	..\\scite\\src\\SciTE.h	/^#define IDM_CUT	/;"	d
IDM_DBG	..\\scite\\src\\SciTE.h	/^#define IDM_DBG /;"	d
IDM_DBG_BP	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_BP /;"	d
IDM_DBG_BT	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_BT /;"	d
IDM_DBG_END	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_END /;"	d
IDM_DBG_INSPECT	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_INSPECT /;"	d
IDM_DBG_LOC	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_LOC /;"	d
IDM_DBG_RUN	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_RUN /;"	d
IDM_DBG_STEPOUT	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_STEPOUT /;"	d
IDM_DBG_STEPOV	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_STEPOV /;"	d
IDM_DBG_STEPSI	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_STEPSI /;"	d
IDM_DBG_WATCH	..\\scite\\src\\SciTE.h	/^#define IDM_DBG_WATCH /;"	d
IDM_DEBUG	..\\scite\\src\\SciTE.h	/^#define IDM_DEBUG	/;"	d
IDM_DIRECTIONDOWN	..\\scite\\src\\SciTE.h	/^#define IDM_DIRECTIONDOWN	/;"	d
IDM_DIRECTIONUP	..\\scite\\src\\SciTE.h	/^#define IDM_DIRECTIONUP	/;"	d
IDM_DUPLICATE	..\\scite\\src\\SciTE.h	/^#define IDM_DUPLICATE	/;"	d
IDM_ENCODING_DEFAULT	..\\scite\\src\\SciTE.h	/^#define IDM_ENCODING_DEFAULT	/;"	d
IDM_ENCODING_UCOOKIE	..\\scite\\src\\SciTE.h	/^#define IDM_ENCODING_UCOOKIE	/;"	d
IDM_ENCODING_UCS2BE	..\\scite\\src\\SciTE.h	/^#define IDM_ENCODING_UCS2BE	/;"	d
IDM_ENCODING_UCS2LE	..\\scite\\src\\SciTE.h	/^#define IDM_ENCODING_UCS2LE	/;"	d
IDM_ENCODING_UTF8	..\\scite\\src\\SciTE.h	/^#define IDM_ENCODING_UTF8	/;"	d
IDM_ENTERSELECTION	..\\scite\\src\\SciTE.h	/^#define IDM_ENTERSELECTION /;"	d
IDM_EOL_CONVERT	..\\scite\\src\\SciTE.h	/^#define IDM_EOL_CONVERT	/;"	d
IDM_EOL_CR	..\\scite\\src\\SciTE.h	/^#define IDM_EOL_CR	/;"	d
IDM_EOL_CRLF	..\\scite\\src\\SciTE.h	/^#define IDM_EOL_CRLF	/;"	d
IDM_EOL_LF	..\\scite\\src\\SciTE.h	/^#define IDM_EOL_LF	/;"	d
IDM_EXPAND	..\\scite\\src\\SciTE.h	/^#define IDM_EXPAND	/;"	d
IDM_EXPAND_ENSURECHILDRENVISIBLE	..\\scite\\src\\SciTE.h	/^#define IDM_EXPAND_ENSURECHILDRENVISIBLE /;"	d
IDM_FILER	..\\scite\\src\\SciTE.h	/^#define IDM_FILER	/;"	d
IDM_FIND	..\\scite\\src\\SciTE.h	/^#define IDM_FIND	/;"	d
IDM_FINDINFILES	..\\scite\\src\\SciTE.h	/^#define IDM_FINDINFILES	/;"	d
IDM_FINDNEXT	..\\scite\\src\\SciTE.h	/^#define IDM_FINDNEXT	/;"	d
IDM_FINDNEXTBACK	..\\scite\\src\\SciTE.h	/^#define IDM_FINDNEXTBACK	/;"	d
IDM_FINDNEXTBACKSEL	..\\scite\\src\\SciTE.h	/^#define IDM_FINDNEXTBACKSEL	/;"	d
IDM_FINDNEXTSEL	..\\scite\\src\\SciTE.h	/^#define IDM_FINDNEXTSEL	/;"	d
IDM_FINISHEDEXECUTE	..\\scite\\src\\SciTE.h	/^#define IDM_FINISHEDEXECUTE	/;"	d
IDM_FOLDMARGIN	..\\scite\\src\\SciTE.h	/^#define IDM_FOLDMARGIN	/;"	d
IDM_FULLSCREEN	..\\scite\\src\\SciTE.h	/^#define IDM_FULLSCREEN	/;"	d
IDM_GO	..\\scite\\src\\SciTE.h	/^#define IDM_GO	/;"	d
IDM_GOTO	..\\scite\\src\\SciTE.h	/^#define IDM_GOTO	/;"	d
IDM_HELP	..\\scite\\src\\SciTE.h	/^#define IDM_HELP	/;"	d
IDM_HELP_SCITE	..\\scite\\src\\SciTE.h	/^#define IDM_HELP_SCITE	/;"	d
IDM_IMPORT	..\\scite\\src\\SciTE.h	/^#define IDM_IMPORT	/;"	d
IDM_INCSEARCH	..\\scite\\src\\SciTE.h	/^#define IDM_INCSEARCH /;"	d
IDM_INS_ABBREV	..\\scite\\src\\SciTE.h	/^#define IDM_INS_ABBREV	/;"	d
IDM_JOIN	..\\scite\\src\\SciTE.h	/^#define IDM_JOIN	/;"	d
IDM_LANGUAGE	..\\scite\\src\\SciTE.h	/^#define IDM_LANGUAGE	/;"	d
IDM_LINENUMBERMARGIN	..\\scite\\src\\SciTE.h	/^#define IDM_LINENUMBERMARGIN	/;"	d
IDM_LOADSESSION	..\\scite\\src\\SciTE.h	/^#define IDM_LOADSESSION	/;"	d
IDM_LWRCASE	..\\scite\\src\\SciTE.h	/^#define IDM_LWRCASE	/;"	d
IDM_MACROLIST	..\\scite\\src\\SciTE.h	/^#define IDM_MACROLIST	/;"	d
IDM_MACROPLAY	..\\scite\\src\\SciTE.h	/^#define IDM_MACROPLAY	/;"	d
IDM_MACRORECORD	..\\scite\\src\\SciTE.h	/^#define IDM_MACRORECORD	/;"	d
IDM_MACROSTOPRECORD	..\\scite\\src\\SciTE.h	/^#define IDM_MACROSTOPRECORD	/;"	d
IDM_MACRO_SEP	..\\scite\\src\\SciTE.h	/^#define IDM_MACRO_SEP	/;"	d
IDM_MATCHBRACE	..\\scite\\src\\SciTE.h	/^#define IDM_MATCHBRACE	/;"	d
IDM_MATCHCASE	..\\scite\\src\\SciTE.h	/^#define IDM_MATCHCASE	/;"	d
IDM_MONOFONT	..\\scite\\src\\SciTE.h	/^#define IDM_MONOFONT	/;"	d
IDM_MOVETABLEFT	..\\scite\\src\\SciTE.h	/^#define IDM_MOVETABLEFT	/;"	d
IDM_MOVETABRIGHT	..\\scite\\src\\SciTE.h	/^#define IDM_MOVETABRIGHT	/;"	d
IDM_MRUFILE	..\\scite\\src\\SciTE.h	/^#define IDM_MRUFILE	/;"	d
IDM_MRU_SEP	..\\scite\\src\\SciTE.h	/^#define IDM_MRU_SEP	/;"	d
IDM_MRU_SUB	..\\scite\\src\\SciTE.h	/^#define IDM_MRU_SUB	/;"	d
IDM_NEW	..\\scite\\src\\SciTE.h	/^#define IDM_NEW	/;"	d
IDM_NEXTFILE	..\\scite\\src\\SciTE.h	/^#define IDM_NEXTFILE	/;"	d
IDM_NEXTFILESTACK	..\\scite\\src\\SciTE.h	/^#define IDM_NEXTFILESTACK	/;"	d
IDM_NEXTMATCHPPC	..\\scite\\src\\SciTE.h	/^#define IDM_NEXTMATCHPPC	/;"	d
IDM_NEXTMSG	..\\scite\\src\\SciTE.h	/^#define IDM_NEXTMSG	/;"	d
IDM_ONTOP	..\\scite\\src\\SciTE.h	/^#define IDM_ONTOP	/;"	d
IDM_OPEN	..\\scite\\src\\SciTE.h	/^#define IDM_OPEN	/;"	d
IDM_OPENABBREVPROPERTIES	..\\scite\\src\\SciTE.h	/^#define IDM_OPENABBREVPROPERTIES	/;"	d
IDM_OPENDIRECTORYPROPERTIES	..\\scite\\src\\SciTE.h	/^#define IDM_OPENDIRECTORYPROPERTIES	/;"	d
IDM_OPENFILESHERE	..\\scite\\src\\SciTE.h	/^#define IDM_OPENFILESHERE	/;"	d
IDM_OPENGLOBALPROPERTIES	..\\scite\\src\\SciTE.h	/^#define IDM_OPENGLOBALPROPERTIES	/;"	d
IDM_OPENLOCALPROPERTIES	..\\scite\\src\\SciTE.h	/^#define IDM_OPENLOCALPROPERTIES	/;"	d
IDM_OPENLUAEXTERNALFILE	..\\scite\\src\\SciTE.h	/^#define IDM_OPENLUAEXTERNALFILE	/;"	d
IDM_OPENSELECTED	..\\scite\\src\\SciTE.h	/^#define IDM_OPENSELECTED	/;"	d
IDM_OPENUSERPROPERTIES	..\\scite\\src\\SciTE.h	/^#define IDM_OPENUSERPROPERTIES	/;"	d
IDM_PASTE	..\\scite\\src\\SciTE.h	/^#define IDM_PASTE	/;"	d
IDM_PASTEANDDOWN	..\\scite\\src\\SciTE.h	/^#define IDM_PASTEANDDOWN	/;"	d
IDM_PREVFILE	..\\scite\\src\\SciTE.h	/^#define IDM_PREVFILE	/;"	d
IDM_PREVFILESTACK	..\\scite\\src\\SciTE.h	/^#define IDM_PREVFILESTACK	/;"	d
IDM_PREVMATCHPPC	..\\scite\\src\\SciTE.h	/^#define IDM_PREVMATCHPPC	/;"	d
IDM_PREVMSG	..\\scite\\src\\SciTE.h	/^#define IDM_PREVMSG	/;"	d
IDM_PRINT	..\\scite\\src\\SciTE.h	/^#define IDM_PRINT	/;"	d
IDM_PRINTSETUP	..\\scite\\src\\SciTE.h	/^#define IDM_PRINTSETUP	/;"	d
IDM_QUIT	..\\scite\\src\\SciTE.h	/^#define IDM_QUIT	/;"	d
IDM_READONLY	..\\scite\\src\\SciTE.h	/^#define IDM_READONLY	/;"	d
IDM_REDO	..\\scite\\src\\SciTE.h	/^#define IDM_REDO	/;"	d
IDM_REGEXP	..\\scite\\src\\SciTE.h	/^#define IDM_REGEXP	/;"	d
IDM_REPLACE	..\\scite\\src\\SciTE.h	/^#define IDM_REPLACE	/;"	d
IDM_REVERT	..\\scite\\src\\SciTE.h	/^#define IDM_REVERT	/;"	d
IDM_RUNWIN	..\\scite\\src\\SciTE.h	/^#define IDM_RUNWIN	/;"	d
IDM_SAVE	..\\scite\\src\\SciTE.h	/^#define IDM_SAVE	/;"	d
IDM_SAVEACOPY	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEACOPY	/;"	d
IDM_SAVEALL	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEALL	/;"	d
IDM_SAVEAS	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEAS	/;"	d
IDM_SAVEASHTML	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEASHTML	/;"	d
IDM_SAVEASPDF	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEASPDF	/;"	d
IDM_SAVEASRTF	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEASRTF	/;"	d
IDM_SAVEASTEX	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEASTEX	/;"	d
IDM_SAVEASXML	..\\scite\\src\\SciTE.h	/^#define IDM_SAVEASXML	/;"	d
IDM_SAVESESSION	..\\scite\\src\\SciTE.h	/^#define IDM_SAVESESSION	/;"	d
IDM_SELECTALL	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTALL	/;"	d
IDM_SELECTIONADDEACH	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTIONADDEACH /;"	d
IDM_SELECTIONADDNEXT	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTIONADDNEXT /;"	d
IDM_SELECTION_FOR_FIND	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTION_FOR_FIND /;"	d
IDM_SELECTTOBRACE	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTTOBRACE	/;"	d
IDM_SELECTTONEXTMATCHPPC	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTTONEXTMATCHPPC	/;"	d
IDM_SELECTTOPREVMATCHPPC	..\\scite\\src\\SciTE.h	/^#define IDM_SELECTTOPREVMATCHPPC	/;"	d
IDM_SELMARGIN	..\\scite\\src\\SciTE.h	/^#define IDM_SELMARGIN	/;"	d
IDM_SHOWCALLTIP	..\\scite\\src\\SciTE.h	/^#define IDM_SHOWCALLTIP	/;"	d
IDM_SPLIT	..\\scite\\src\\SciTE.h	/^#define IDM_SPLIT	/;"	d
IDM_SPLITVERTICAL	..\\scite\\src\\SciTE.h	/^#define IDM_SPLITVERTICAL	/;"	d
IDM_SRCWIN	..\\scite\\src\\SciTE.h	/^#define IDM_SRCWIN	/;"	d
IDM_STATUSWIN	..\\scite\\src\\SciTE.h	/^#define IDM_STATUSWIN	/;"	d
IDM_STOPEXECUTE	..\\scite\\src\\SciTE.h	/^#define IDM_STOPEXECUTE	/;"	d
IDM_STREAM_COMMENT	..\\scite\\src\\SciTE.h	/^#define IDM_STREAM_COMMENT	/;"	d
IDM_SWITCHPANE	..\\scite\\src\\SciTE.h	/^#define IDM_SWITCHPANE	/;"	d
IDM_TABSIZE	..\\scite\\src\\SciTE.h	/^#define IDM_TABSIZE	/;"	d
IDM_TABWIN	..\\scite\\src\\SciTE.h	/^#define IDM_TABWIN	/;"	d
IDM_TOGGLEOUTPUT	..\\scite\\src\\SciTE.h	/^#define IDM_TOGGLEOUTPUT	/;"	d
IDM_TOGGLEPARAMETERS	..\\scite\\src\\SciTE.h	/^#define IDM_TOGGLEPARAMETERS	/;"	d
IDM_TOGGLE_FOLDALL	..\\scite\\src\\SciTE.h	/^#define IDM_TOGGLE_FOLDALL	/;"	d
IDM_TOGGLE_FOLDRECURSIVE	..\\scite\\src\\SciTE.h	/^#define IDM_TOGGLE_FOLDRECURSIVE /;"	d
IDM_TOOLS	..\\scite\\src\\SciTE.h	/^#define IDM_TOOLS	/;"	d
IDM_TOOLWIN	..\\scite\\src\\SciTE.h	/^#define IDM_TOOLWIN	/;"	d
IDM_UNDO	..\\scite\\src\\SciTE.h	/^#define IDM_UNDO	/;"	d
IDM_UNSLASH	..\\scite\\src\\SciTE.h	/^#define IDM_UNSLASH	/;"	d
IDM_UPRCASE	..\\scite\\src\\SciTE.h	/^#define IDM_UPRCASE	/;"	d
IDM_VIEWEOL	..\\scite\\src\\SciTE.h	/^#define IDM_VIEWEOL	/;"	d
IDM_VIEWGUIDES	..\\scite\\src\\SciTE.h	/^#define IDM_VIEWGUIDES	/;"	d
IDM_VIEWSPACE	..\\scite\\src\\SciTE.h	/^#define IDM_VIEWSPACE	/;"	d
IDM_VIEWSTATUSBAR	..\\scite\\src\\SciTE.h	/^#define IDM_VIEWSTATUSBAR	/;"	d
IDM_VIEWTABBAR	..\\scite\\src\\SciTE.h	/^#define IDM_VIEWTABBAR	/;"	d
IDM_VIEWTOOLBAR	..\\scite\\src\\SciTE.h	/^#define IDM_VIEWTOOLBAR	/;"	d
IDM_WHOLEWORD	..\\scite\\src\\SciTE.h	/^#define IDM_WHOLEWORD	/;"	d
IDM_WRAP	..\\scite\\src\\SciTE.h	/^#define IDM_WRAP	/;"	d
IDM_WRAPAROUND	..\\scite\\src\\SciTE.h	/^#define IDM_WRAPAROUND	/;"	d
IDM_WRAPOUTPUT	..\\scite\\src\\SciTE.h	/^#define IDM_WRAPOUTPUT	/;"	d
IDPARAMSTART	..\\scite\\src\\SciTE.h	/^#define IDPARAMSTART	/;"	d
IDREGEXP	..\\scite\\src\\SciTE.h	/^#define IDREGEXP	/;"	d
IDREPLACE	..\\scite\\src\\SciTE.h	/^#define IDREPLACE	/;"	d
IDREPLACEALL	..\\scite\\src\\SciTE.h	/^#define IDREPLACEALL	/;"	d
IDREPLACEINBUF	..\\scite\\src\\SciTE.h	/^#define IDREPLACEINBUF	/;"	d
IDREPLACEINSEL	..\\scite\\src\\SciTE.h	/^#define IDREPLACEINSEL	/;"	d
IDREPLACEWITH	..\\scite\\src\\SciTE.h	/^#define IDREPLACEWITH	/;"	d
IDREPLDONE	..\\scite\\src\\SciTE.h	/^#define IDREPLDONE	/;"	d
IDR_BUTTONS	..\\scite\\src\\SciTE.h	/^#define IDR_BUTTONS	/;"	d
IDR_CLOSEFILE	..\\scite\\src\\SciTE.h	/^#define IDR_CLOSEFILE /;"	d
IDR_CLOSEFILE24	..\\scite\\src\\SciTE.h	/^#define IDR_CLOSEFILE24 /;"	d
IDTABSIZE	..\\scite\\src\\SciTE.h	/^#define IDTABSIZE	/;"	d
IDUNSLASH	..\\scite\\src\\SciTE.h	/^#define IDUNSLASH	/;"	d
IDUSETABS	..\\scite\\src\\SciTE.h	/^#define IDUSETABS	/;"	d
IDWHOLEWORD	..\\scite\\src\\SciTE.h	/^#define IDWHOLEWORD	/;"	d
IDWRAP	..\\scite\\src\\SciTE.h	/^#define IDWRAP	/;"	d
IDocument	..\\scintilla\\include\\ILexer.h	/^class IDocument {$/;"	c	namespace:Scintilla
IDocumentWithLineEnd	..\\scintilla\\include\\ILexer.h	/^class IDocumentWithLineEnd : public IDocument {$/;"	c	namespace:Scintilla	inherits:IDocument
IEnd	..\\scintilla\\lua\\src\\lpvm.h	/^  IEnd,  \/* end of pattern *\/$/;"	e	enum:Opcode	access:public
IF	..\\scintilla\\lua\\src\\lundump.c	/^#define IF(/;"	d	file:	signature:(c,s)
IFACETABLE_H	..\\scite\\src\\IFaceTable.h	/^#define IFACETABLE_H$/;"	d
IF_DEBUG	..\\scite\\gtk\\DirectorExtension.cxx	/^#define IF_DEBUG(/;"	d	file:	signature:(x)
IFaceConstant	..\\scite\\src\\IFaceTable.h	/^struct IFaceConstant {$/;"	s
IFaceFunction	..\\scite\\src\\IFaceTable.h	/^struct IFaceFunction {$/;"	s
IFaceFunctionIsScriptable	..\\scite\\src\\LuaExtension.cxx	/^inline bool IFaceFunctionIsScriptable(const IFaceFunction &f) {$/;"	f	typeref:typename:bool	signature:(const IFaceFunction & f)
IFaceObject	..\\scite\\src\\IFaceTable.h	/^struct IFaceObject {$/;"	s
IFaceProperty	..\\scite\\src\\IFaceTable.h	/^struct IFaceProperty {$/;"	s
IFacePropertyBinding	..\\scite\\src\\LuaExtension.cxx	/^struct IFacePropertyBinding {$/;"	s	file:
IFacePropertyIsScriptable	..\\scite\\src\\LuaExtension.cxx	/^inline bool IFacePropertyIsScriptable(const IFaceProperty &p) {$/;"	f	typeref:typename:bool	signature:(const IFaceProperty & p)
IFaceTable	..\\scite\\src\\IFaceTable.h	/^class IFaceTable {$/;"	c
IFaceType	..\\scite\\src\\IFaceTable.h	/^enum IFaceType {$/;"	g
IFaceTypeIsNumeric	..\\scite\\src\\LuaExtension.cxx	/^inline bool IFaceTypeIsNumeric(IFaceType t) {$/;"	f	typeref:typename:bool	signature:(IFaceType t)
IFaceTypeIsScriptable	..\\scite\\src\\LuaExtension.cxx	/^inline bool IFaceTypeIsScriptable(IFaceType t, int index) {$/;"	f	typeref:typename:bool	signature:(IFaceType t,int index)
IFail	..\\scintilla\\lua\\src\\lpvm.h	/^  IFail,  \/* go back to saved state on choice and jump to saved offset *\/$/;"	e	enum:Opcode	access:public
IFailTwice	..\\scintilla\\lua\\src\\lpvm.h	/^  IFailTwice,  \/* pop one choice and then fail *\/$/;"	e	enum:Opcode	access:public
IFullCapture	..\\scintilla\\lua\\src\\lpvm.h	/^  IFullCapture,  \/* complete capture of last 'off' chars *\/$/;"	e	enum:Opcode	access:public
IGiveup	..\\scintilla\\lua\\src\\lpvm.h	/^  IGiveup,  \/* internal use *\/$/;"	e	enum:Opcode	access:public
IHanja	..\\scintilla\\win32\\HanjaDic.cxx	/^interface IHanja;$/;"	v	namespace:Scintilla::HanjaDict	typeref:typename:interface
IHanjaDic	..\\scintilla\\win32\\HanjaDic.cxx	/^interface IHanjaDic : IUnknown {$/;"	v	namespace:Scintilla::HanjaDict	typeref:typename:interface
IJmp	..\\scintilla\\lua\\src\\lpvm.h	/^  IJmp,  \/* jump to 'offset' *\/$/;"	e	enum:Opcode	access:public
ILEXER_H	..\\scintilla\\include\\ILexer.h	/^#define ILEXER_H$/;"	d
ILOADER_H	..\\scintilla\\include\\ILoader.h	/^#define ILOADER_H$/;"	d
ILexer	..\\scintilla\\include\\ILexer.h	/^class ILexer {$/;"	c	namespace:Scintilla
ILexerWithMetaData	..\\scintilla\\include\\ILexer.h	/^class ILexerWithMetaData : public ILexerWithSubStyles {$/;"	c	namespace:Scintilla	inherits:ILexerWithSubStyles
ILexerWithSubStyles	..\\scintilla\\include\\ILexer.h	/^class ILexerWithSubStyles : public ILexer {$/;"	c	namespace:Scintilla	inherits:ILexer
IListBoxDelegate	..\\scintilla\\include\\Platform.h	/^class IListBoxDelegate {$/;"	c	namespace:Scintilla
ILoader	..\\scintilla\\include\\ILoader.h	/^class ILoader {$/;"	c
ILocalize	..\\scite\\src\\StringHelpers.h	/^class ILocalize {$/;"	c
IMAGE_MAX	..\\scintilla\\curses\\ScintillaCurses.h	/^#define IMAGE_MAX /;"	d
IMContext	..\\scintilla\\win32\\ScintillaWin.cxx	/^	IMContext(HWND hwnd_) :$/;"	f	class:__anon5333cfc50111::IMContext	file:	access:public	signature:(HWND hwnd_)
IMContext	..\\scintilla\\win32\\ScintillaWin.cxx	/^class IMContext {$/;"	c	namespace:__anon5333cfc50111	file:
IMEInteraction	..\\scintilla\\src\\EditModel.h	/^	enum IMEInteraction { imeWindowed, imeInline } imeInteraction;$/;"	g	class:Scintilla::EditModel	access:public
IMPORT_START	..\\scite\\src\\SciTE.h	/^#define IMPORT_START /;"	d
INDEXK	..\\scintilla\\lua\\src\\lopcodes.h	/^#define INDEXK(/;"	d	signature:(r)
INDIC0_MASK	..\\scintilla\\include\\Scintilla.h	/^#define INDIC0_MASK /;"	d
INDIC1_MASK	..\\scintilla\\include\\Scintilla.h	/^#define INDIC1_MASK /;"	d
INDIC2_MASK	..\\scintilla\\include\\Scintilla.h	/^#define INDIC2_MASK /;"	d
INDICATOR_H	..\\scintilla\\src\\Indicator.h	/^#define INDICATOR_H$/;"	d
INDICS_MASK	..\\scintilla\\include\\Scintilla.h	/^#define INDICS_MASK /;"	d
INDIC_BOX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_BOX /;"	d
INDIC_COMPOSITIONTHICK	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_COMPOSITIONTHICK /;"	d
INDIC_COMPOSITIONTHIN	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_COMPOSITIONTHIN /;"	d
INDIC_CONTAINER	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_CONTAINER /;"	d
INDIC_DASH	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_DASH /;"	d
INDIC_DIAGONAL	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_DIAGONAL /;"	d
INDIC_DOTBOX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_DOTBOX /;"	d
INDIC_DOTS	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_DOTS /;"	d
INDIC_FULLBOX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_FULLBOX /;"	d
INDIC_HIDDEN	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_HIDDEN /;"	d
INDIC_IME	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_IME /;"	d
INDIC_IME_MAX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_IME_MAX /;"	d
INDIC_INPUTMETHOD	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define INDIC_INPUTMETHOD /;"	d	file:
INDIC_MAX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_MAX /;"	d
INDIC_PLAIN	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_PLAIN /;"	d
INDIC_POINT	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_POINT /;"	d
INDIC_POINTCHARACTER	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_POINTCHARACTER /;"	d
INDIC_ROUNDBOX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_ROUNDBOX /;"	d
INDIC_SQUIGGLE	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_SQUIGGLE /;"	d
INDIC_SQUIGGLELOW	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_SQUIGGLELOW /;"	d
INDIC_SQUIGGLEPIXMAP	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_SQUIGGLEPIXMAP /;"	d
INDIC_STRAIGHTBOX	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_STRAIGHTBOX /;"	d
INDIC_STRIKE	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_STRIKE /;"	d
INDIC_TEXTFORE	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_TEXTFORE /;"	d
INDIC_TT	..\\scintilla\\include\\Scintilla.h	/^#define INDIC_TT /;"	d
INITBACK	..\\scintilla\\lua\\src\\lpvm.c	/^#define INITBACK	/;"	d	file:
INITCAPSIZE	..\\scintilla\\lua\\src\\lptypes.h	/^#define INITCAPSIZE	/;"	d
INVALID_POSITION	..\\scintilla\\include\\Scintilla.h	/^#define INVALID_POSITION /;"	d
IOSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean SciTEGTK::IOSignal(GIOChannel *, GIOCondition, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gboolean	signature:(GIOChannel *,GIOCondition,SciTEGTK * scitew)
IO_INPUT	..\\scintilla\\lua\\src\\liolib.c	/^#define IO_INPUT	/;"	d	file:
IO_OUTPUT	..\\scintilla\\lua\\src\\liolib.c	/^#define IO_OUTPUT	/;"	d	file:
IOpenCall	..\\scintilla\\lua\\src\\lpvm.h	/^  IOpenCall,  \/* call rule number 'key' (must be closed to a ICall) *\/$/;"	e	enum:Opcode	access:public
IOpenCapture	..\\scintilla\\lua\\src\\lpvm.h	/^  IOpenCapture,  \/* start a capture *\/$/;"	e	enum:Opcode	access:public
IPartialCommit	..\\scintilla\\lua\\src\\lpvm.h	/^  IPartialCommit,  \/* update top choice to current position and jump *\/$/;"	e	enum:Opcode	access:public
IRadical	..\\scintilla\\win32\\HanjaDic.cxx	/^interface IRadical;$/;"	v	namespace:Scintilla::HanjaDict	typeref:typename:interface
IRet	..\\scintilla\\lua\\src\\lpvm.h	/^  IRet,  \/* return from a rule *\/$/;"	e	enum:Opcode	access:public
IS	..\\scintilla\\lua\\src\\luac.c	/^#define	IS(/;"	d	file:	signature:(s)
ISK	..\\scintilla\\lua\\src\\lopcodes.h	/^#define ISK(/;"	d	signature:(x)
IS_HIGH_SURROGATE	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define IS_HIGH_SURROGATE(/;"	d	file:	signature:(x)
IS_LOW_SURROGATE	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define IS_LOW_SURROGATE(/;"	d	file:	signature:(x)
IS_SCINTILLA	..\\scintilla\\include\\ScintillaWidget.h	/^#define IS_SCINTILLA(/;"	d	signature:(obj)
IS_WIDGET_MAPPED	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define IS_WIDGET_MAPPED(/;"	d	file:	signature:(w)
IS_WIDGET_REALIZED	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define IS_WIDGET_REALIZED(/;"	d	file:	signature:(w)
ISet	..\\scintilla\\lua\\src\\lpvm.h	/^  ISet,  \/* if char not in buff, fail *\/$/;"	e	enum:Opcode	access:public
ISpan	..\\scintilla\\lua\\src\\lpvm.h	/^  ISpan,  \/* read a span of chars in buff *\/$/;"	e	enum:Opcode	access:public
IStrokes	..\\scintilla\\win32\\HanjaDic.cxx	/^interface IStrokes;$/;"	v	namespace:Scintilla::HanjaDict	typeref:typename:interface
ITestAny	..\\scintilla\\lua\\src\\lpvm.h	/^  ITestAny,  \/* in no char, jump to 'offset' *\/$/;"	e	enum:Opcode	access:public
ITestChar	..\\scintilla\\lua\\src\\lpvm.h	/^  ITestChar,  \/* if char != aux, jump to 'offset' *\/$/;"	e	enum:Opcode	access:public
ITestSet	..\\scintilla\\lua\\src\\lpvm.h	/^  ITestSet,  \/* if char not in buff, jump to 'offset' *\/$/;"	e	enum:Opcode	access:public
Idle	..\\scintilla\\src\\Editor.cxx	/^bool Editor::Idle() {$/;"	f	class:Editor	typeref:typename:bool	signature:()
IdleCallback	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::IdleCallback(gpointer pSci) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(gpointer pSci)
IdleStyling	..\\scintilla\\src\\Editor.cxx	/^void Editor::IdleStyling() {$/;"	f	class:Editor	typeref:typename:void	signature:()
IdleWork	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::IdleWork() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
IdleWork	..\\scintilla\\src\\Editor.cxx	/^void Editor::IdleWork() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Idler	..\\scintilla\\src\\Editor.cxx	/^Idler::Idler() :$/;"	f	class:Idler	signature:()
Idler	..\\scintilla\\src\\Editor.h	/^class Idler {$/;"	c	namespace:Scintilla
IdlerID	..\\scintilla\\include\\Platform.h	/^typedef void *IdlerID;$/;"	t	namespace:Scintilla	typeref:typename:void *
IdlerTick	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean SciTEGTK::IdlerTick(gpointer pSciTE) {$/;"	f	class:SciTEGTK	typeref:typename:gboolean	signature:(gpointer pSciTE)
ImageByteSwapped	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^static std::vector<unsigned char> ImageByteSwapped(int width, int height, const unsigned char *p/;"	f	namespace:Scintilla	typeref:typename:std::vector<unsigned char>	file:	signature:(int width,int height,const unsigned char * pixelsImage)
ImageInset	..\\scintilla\\win32\\PlatWin.cxx	/^	static const Point ImageInset;	\/\/ Padding around image$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const Point	file:	access:private
ImageInset	..\\scintilla\\win32\\PlatWin.cxx	/^const Point ListBoxX::ImageInset(1, 1);$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const Point
ImageMap	..\\scintilla\\gtk\\PlatGTK.cxx	/^typedef std::map<int, RGBAImage*> ImageMap;$/;"	t	typeref:typename:std::map<int,RGBAImage * >	file:
ImageMap	..\\scintilla\\src\\XPM.h	/^	typedef std::map<int, std::unique_ptr<RGBAImage>> ImageMap;$/;"	t	class:Scintilla::RGBAImageSet	typeref:typename:std::map<int,std::unique_ptr<RGBAImage>>	access:private
ImeEndComposition	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ImeEndComposition() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
ImeOnReconvert	..\\scintilla\\win32\\ScintillaWin.cxx	/^LRESULT ScintillaWin::ImeOnReconvert(LPARAM lParam) {$/;"	f	class:ScintillaWin	typeref:typename:LRESULT	signature:(LPARAM lParam)
ImeStartComposition	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ImeStartComposition() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
Import	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::Import(FilePath filename, FilePath directoryForImports, const ImportFilter &fi/;"	f	class:PropSetFile	typeref:typename:void	signature:(FilePath filename,FilePath directoryForImports,const ImportFilter & filter,std::vector<FilePath> * imports,size_t depth)
ImportFilter	..\\scite\\src\\PropSetFile.h	/^class ImportFilter {$/;"	c
ImportMenu	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ImportMenu(int pos) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int pos)
InGoodUTF8	..\\scintilla\\src\\Document.cxx	/^bool Document::InGoodUTF8(Sci::Position pos, Sci::Position &start, Sci::Position &end) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position pos,Sci::Position & start,Sci::Position & end) const
InLine	..\\scintilla\\src\\PositionCache.cxx	/^bool LineLayout::InLine(int offset, int line) const {$/;"	f	class:LineLayout	typeref:typename:bool	signature:(int offset,int line) const
InList	..\\scintilla\\lexlib\\WordList.cxx	/^bool WordList::InList(const char *s) const {$/;"	f	class:WordList	typeref:typename:bool	signature:(const char * s) const
InListAbbreviated	..\\scintilla\\lexlib\\WordList.cxx	/^bool WordList::InListAbbreviated(const char *s, const char marker) const {$/;"	f	class:WordList	typeref:typename:bool	signature:(const char * s,const char marker) const
InListAbridged	..\\scintilla\\lexlib\\WordList.cxx	/^bool WordList::InListAbridged(const char *s, const char marker) const {$/;"	f	class:WordList	typeref:typename:bool	signature:(const char * s,const char marker) const
InSelectionForEOL	..\\scintilla\\src\\Selection.cxx	/^int Selection::InSelectionForEOL(Sci::Position pos) const {$/;"	f	class:Selection	typeref:typename:int	signature:(Sci::Position pos) const
IncSearchBtnNext	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *IncSearchBtnNext;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
IncSearchEntry	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *IncSearchEntry;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
IncludesStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	bool IncludesStyle(int style) const {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:bool	access:public	signature:(int style) const
IncrementProgress	..\\scite\\src\\Worker.h	/^	void IncrementProgress(int increment) {$/;"	f	struct:Worker	typeref:typename:void	access:public	signature:(int increment)
IncrementSearchMode	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::IncrementSearchMode() {$/;"	f	class:SciTEBase	typeref:typename:int	signature:()
IncrementStyleClock	..\\scintilla\\src\\Document.cxx	/^void Document::IncrementStyleClock() {$/;"	f	class:Document	typeref:typename:void	signature:()
IncrementalBehaviour	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	g	class:FindReplaceStrip	file:	access:public
IncrementalBehaviour	..\\scite\\win32\\Strips.h	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	g	class:FindReplaceStrip	access:protected
Indent	..\\scintilla\\src\\Document.cxx	/^void Document::Indent(bool forwards, Sci::Line lineBottom, Sci::Line lineTop) {$/;"	f	class:Document	typeref:typename:void	signature:(bool forwards,Sci::Line lineBottom,Sci::Line lineTop)
Indent	..\\scintilla\\src\\Editor.cxx	/^void Editor::Indent(bool forwards) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool forwards)
IndentAmount	..\\scintilla\\lexlib\\Accessor.cxx	/^int Accessor::IndentAmount(Sci_Position line, int *flags, PFNIsCommentLeader pfnIsCommentLeader)/;"	f	class:Accessor	typeref:typename:int	signature:(Sci_Position line,int * flags,PFNIsCommentLeader pfnIsCommentLeader)
IndentOfBlock	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::IndentOfBlock(int line) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(int line)
IndentSize	..\\scintilla\\src\\Document.h	/^	int IndentSize() const { return actualIndentInChars; }$/;"	f	class:Scintilla::Document	typeref:typename:int	access:public	signature:() const
IndentView	..\\scintilla\\src\\ViewStyle.h	/^enum IndentView {ivNone, ivReal, ivLookForward, ivLookBoth};$/;"	g	namespace:Scintilla
IndentationStatus	..\\scite\\src\\SciTEBase.h	/^enum IndentationStatus {$/;"	g
IndexPropKey	..\\scite\\src\\SciTEBuffers.cxx	/^static std::string IndexPropKey(const char *bufPrefix, int bufIndex, const char *bufAppendix) {$/;"	f	typeref:typename:std::string	file:	signature:(const char * bufPrefix,int bufIndex,const char * bufAppendix)
Indicator	..\\scintilla\\src\\Decoration.h	/^	int Indicator() const {$/;"	f	class:Scintilla::Decoration	typeref:typename:int	access:public	signature:() const
Indicator	..\\scintilla\\src\\Indicator.h	/^	Indicator() : under(false), fillAlpha(30), outlineAlpha(50), attributes(0) {$/;"	f	class:Scintilla::Indicator	access:public	signature:()
Indicator	..\\scintilla\\src\\Indicator.h	/^	Indicator(int style_, ColourDesired fore_=ColourDesired(0,0,0), bool under_=false, int fillAlph/;"	f	class:Scintilla::Indicator	access:public	signature:(int style_,ColourDesired fore_=ColourDesired (0,0,0),bool under_=false,int fillAlpha_=30,int outlineAlpha_=50)
Indicator	..\\scintilla\\src\\Indicator.h	/^class Indicator {$/;"	c	namespace:Scintilla
IndicatorDefinition	..\\scite\\src\\StyleDefinition.cxx	/^IndicatorDefinition::IndicatorDefinition(const char *definition) :$/;"	f	class:IndicatorDefinition	signature:(const char * definition)
IndicatorDefinition	..\\scite\\src\\StyleDefinition.h	/^struct IndicatorDefinition {$/;"	s
IndicatorFill	..\\scintilla\\lexlib\\LexAccessor.h	/^	void IndicatorFill(Sci_Position start, Sci_Position end, int indicator, int value) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:(Sci_Position start,Sci_Position end,int indicator,int value)
IndividualStyles	..\\scintilla\\src\\PerLine.cxx	/^static const int IndividualStyles = 0x100;$/;"	v	typeref:typename:const int	file:
Init	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Init(SurfaceID sid, WindowID wid) { Init(wid); }$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(SurfaceID sid,WindowID wid)
Init	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Init(WindowID wid) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(WindowID wid)
Init	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Init(SurfaceID sid, WindowID wid) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(SurfaceID sid,WindowID wid)
Init	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Init(WindowID wid) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(WindowID wid)
Init	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Init() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
Init	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::Init(SurfaceID sid, WindowID \/*wid*\/)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(SurfaceID sid,WindowID)
Init	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::Init(WindowID wid)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(WindowID wid)
Init	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::Init()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\CellBuffer.cxx	/^void LineVector::Init() {$/;"	f	class:LineVector	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\Document.cxx	/^void Document::Init() {$/;"	f	class:Document	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::Init() {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\PerLine.cxx	/^void LineLevels::Init() {$/;"	f	class:LineLevels	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\PerLine.cxx	/^void LineMarkers::Init() {$/;"	f	class:LineMarkers	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\PerLine.cxx	/^void LineState::Init() {$/;"	f	class:LineState	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\PerLine.cxx	/^void LineTabstops::Init() {$/;"	f	class:LineTabstops	typeref:typename:void	signature:()
Init	..\\scintilla\\src\\SplitVector.h	/^	void Init() {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:protected	signature:()
Init	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::Init(size_t stylesSize_) {$/;"	f	class:ViewStyle	typeref:typename:void	signature:(size_t stylesSize_)
Init	..\\scintilla\\src\\XPM.cxx	/^void XPM::Init(const char *const *linesForm) {$/;"	f	class:XPM	typeref:typename:void	signature:(const char * const * linesForm)
Init	..\\scintilla\\src\\XPM.cxx	/^void XPM::Init(const char *textForm) {$/;"	f	class:XPM	typeref:typename:void	signature:(const char * textForm)
Init	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::Init(SurfaceID sid, WindowID) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(SurfaceID sid,WindowID)
Init	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::Init(WindowID \/* wid *\/) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(WindowID)
Init	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::Init(SurfaceID sid, WindowID) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(SurfaceID sid,WindowID)
Init	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::Init(WindowID) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(WindowID)
Init	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::Init() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
Init	..\\scite\\src\\FilePath.cxx	/^void FilePath::Init() {$/;"	f	class:FilePath	typeref:typename:void	signature:()
Init	..\\scite\\src\\SciTEBase.h	/^	void Init() {$/;"	f	class:Buffer	typeref:typename:void	access:public	signature:()
Init	..\\scite\\src\\SciTEBase.h	/^	void Init() {$/;"	f	class:RecentFile	typeref:typename:void	access:public	signature:()
Init	..\\scite\\win32\\UniqueInstance.cxx	/^void UniqueInstance::Init(SciTEWin *stw_) {$/;"	f	class:UniqueInstance	typeref:typename:void	signature:(SciTEWin * stw_)
InitBuffer	..\\scite\\src\\Extender.h	/^	virtual bool InitBuffer(int) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int)
InitBuffer	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::InitBuffer(int index) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int index)
InitBuffer	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::InitBuffer(int index) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int index)
InitGlobalScope	..\\scite\\src\\LuaExtension.cxx	/^static bool InitGlobalScope(bool checkProperties, bool forceReload = false) {$/;"	f	typeref:typename:bool	file:	signature:(bool checkProperties,bool forceReload=false)
InitHashTable	..\\scite\\src\\Containers.h	/^	void InitHashTable(unsigned int hashSize, bool bAllocNow = true) {$/;"	f	class:TMap	typeref:typename:void	access:public	signature:(unsigned int hashSize,bool bAllocNow=true)
InitPixMap	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void InitPixMap(int width, int height, Surface *surface_, WindowID wid) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(int width,int height,Surface * surface_,WindowID wid)
InitPixMap	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::InitPixMap(int width, int height, Surface *surface_, WindowID wid) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(int width,int height,Surface * surface_,WindowID wid)
InitPixMap	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::InitPixMap(int width,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(int width,int height,Surface * surface,WindowID)
InitPixMap	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::InitPixMap(int width, int height, Surface *surface_, WindowID) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(int width,int height,Surface * surface_,WindowID)
InitPixMap	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::InitPixMap(int width, int height, Surface *surface_, WindowID) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(int width,int height,Surface * surface_,WindowID)
Initialise	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Initialise() {}$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
Initialise	..\\scintilla\\src\\ScintillaBase.h	/^	void Initialise() override {}$/;"	f	class:Scintilla::ScintillaBase	typeref:typename:void	access:protected	signature:()
Initialise	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::Initialise(ExtensionAPI *host_) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(ExtensionAPI * host_)
Initialise	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::Initialise(ExtensionAPI *host_) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(ExtensionAPI * host_)
Initialise	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::Initialise(ExtensionAPI *host_) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(ExtensionAPI * host_)
Initialise	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::Initialise(ExtensionAPI *host_) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(ExtensionAPI * host_)
Initialise	..\\scite\\win32\\SciTEWin.cxx	/^void CommandWorker::Initialise(bool resetToStart) {$/;"	f	class:CommandWorker	typeref:typename:void	signature:(bool resetToStart)
InitialiseBuffers	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::InitialiseBuffers() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Initialised	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool Initialised() { return true; }$/;"	f	class:SurfaceImpl	typeref:typename:bool	file:	access:public	signature:()
Initialised	..\\scintilla\\gtk\\PlatGTK.cxx	/^bool SurfaceImpl::Initialised() {$/;"	f	class:SurfaceImpl	typeref:typename:bool	signature:()
Initialised	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^bool SurfaceImpl::Initialised()$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:bool	signature:()
Initialised	..\\scintilla\\src\\CaseConvert.cxx	/^	bool Initialised() const {$/;"	f	class:__anon1fb76d660111::CaseConverter	typeref:typename:bool	file:	access:public	signature:() const
Initialised	..\\scintilla\\win32\\PlatWin.cxx	/^bool SurfaceD2D::Initialised() {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:bool	signature:()
Initialised	..\\scintilla\\win32\\PlatWin.cxx	/^bool SurfaceGDI::Initialised() {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:bool	signature:()
InputCodePage	..\\scintilla\\win32\\ScintillaWin.cxx	/^static int InputCodePage() {$/;"	f	typeref:typename:int	file:	signature:()
Insert	..\\scintilla\\src\\PositionCache.cxx	/^void BreakFinder::Insert(int val) {$/;"	f	class:BreakFinder	typeref:typename:void	signature:(int val)
Insert	..\\scintilla\\src\\SplitVector.h	/^	void Insert(ptrdiff_t position, T v) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t position,T v)
Insert	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Insert(Pane p, int pos, const char *s) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(Pane p,int pos,const char * s)
Insert	..\\scite\\src\\StringHelpers.h	/^	void Insert(const std::string &s) {$/;"	f	class:EntryMemory	typeref:typename:void	access:public	signature:(const std::string & s)
InsertAfter	..\\scite\\src\\Containers.h	/^	T_POSITION InsertAfter(T_POSITION position, ARG_TYPE newElement) {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:(T_POSITION position,ARG_TYPE newElement)
InsertAt	..\\scite\\src\\Containers.h	/^	void InsertAt(int nIndex, ARG_TYPE newElement, int nCount = 1) {$/;"	f	class:TArray	typeref:typename:void	access:public	signature:(int nIndex,ARG_TYPE newElement,int nCount=1)
InsertBefore	..\\scite\\src\\Containers.h	/^	T_POSITION InsertBefore(T_POSITION position, ARG_TYPE newElement) {$/;"	f	class:TList	typeref:typename:T_POSITION	access:public	signature:(T_POSITION position,ARG_TYPE newElement)
InsertEmpty	..\\scintilla\\src\\SplitVector.h	/^	void InsertEmpty(ptrdiff_t position, ptrdiff_t insertLength) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t position,ptrdiff_t insertLength)
InsertFindInMemory	..\\scite\\src\\SciTEBase.cxx	/^void Searcher::InsertFindInMemory() {$/;"	f	class:Searcher	typeref:typename:void	signature:()
InsertFromArray	..\\scintilla\\src\\SplitVector.h	/^	void InsertFromArray(ptrdiff_t positionToInsert, const T s[], ptrdiff_t positionFrom, ptrdiff_t/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t positionToInsert,const T s[],ptrdiff_t positionFrom,ptrdiff_t insertLength)
InsertHandle	..\\scintilla\\src\\PerLine.cxx	/^bool MarkerHandleSet::InsertHandle(int handle, int markerNum) {$/;"	f	class:MarkerHandleSet	typeref:typename:bool	signature:(int handle,int markerNum)
InsertLine	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::InsertLine(Sci::Line line, Sci::Position position, bool lineStart) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(Sci::Line line,Sci::Position position,bool lineStart)
InsertLine	..\\scintilla\\src\\CellBuffer.cxx	/^void LineVector::InsertLine(Sci::Line line, Sci::Position position, bool lineStart) {$/;"	f	class:LineVector	typeref:typename:void	signature:(Sci::Line line,Sci::Position position,bool lineStart)
InsertLine	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::InsertLine(Sci::Line lineDoc) {$/;"	f	class:ContractionState	typeref:typename:void	signature:(Sci::Line lineDoc)
InsertLine	..\\scintilla\\src\\Document.cxx	/^void Document::InsertLine(Sci::Line line) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line)
InsertLine	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::InsertLine(Sci::Line line) {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:(Sci::Line line)
InsertLine	..\\scintilla\\src\\PerLine.cxx	/^void LineLevels::InsertLine(Sci::Line line) {$/;"	f	class:LineLevels	typeref:typename:void	signature:(Sci::Line line)
InsertLine	..\\scintilla\\src\\PerLine.cxx	/^void LineMarkers::InsertLine(Sci::Line line) {$/;"	f	class:LineMarkers	typeref:typename:void	signature:(Sci::Line line)
InsertLine	..\\scintilla\\src\\PerLine.cxx	/^void LineState::InsertLine(Sci::Line line) {$/;"	f	class:LineState	typeref:typename:void	signature:(Sci::Line line)
InsertLine	..\\scintilla\\src\\PerLine.cxx	/^void LineTabstops::InsertLine(Sci::Line line) {$/;"	f	class:LineTabstops	typeref:typename:void	signature:(Sci::Line line)
InsertLines	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::InsertLines(Sci::Line lineDoc, Sci::Line lineCount) {$/;"	f	class:ContractionState	typeref:typename:void	signature:(Sci::Line lineDoc,Sci::Line lineCount)
InsertPartition	..\\scintilla\\src\\Partitioning.h	/^	void InsertPartition(T partition, T pos) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:public	signature:(T partition,T pos)
InsertPaste	..\\scintilla\\src\\Editor.cxx	/^void Editor::InsertPaste(const char *text, int len) {$/;"	f	class:Editor	typeref:typename:void	signature:(const char * text,int len)
InsertPasteShape	..\\scintilla\\src\\Editor.cxx	/^void Editor::InsertPasteShape(const char *text, int len, PasteShape shape) {$/;"	f	class:Editor	typeref:typename:void	signature:(const char * text,int len,PasteShape shape)
InsertSpace	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::InsertSpace(Sci::Position position, Sci::Position insertLength) {$/;"	f	class:DecorationList	typeref:typename:void	signature:(Sci::Position position,Sci::Position insertLength)
InsertSpace	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::InsertSpace(DISTANCE position, DISTANCE insertLength) {$/;"	f	class:RunStyles	typeref:typename:void	signature:(DISTANCE position,DISTANCE insertLength)
InsertSpace	..\\scintilla\\src\\SparseVector.h	/^	void InsertSpace(Sci::Position position, Sci::Position insertLength) {$/;"	f	class:Scintilla::SparseVector	typeref:typename:void	access:public	signature:(Sci::Position position,Sci::Position insertLength)
InsertString	..\\scintilla\\src\\CellBuffer.cxx	/^const char *CellBuffer::InsertString(Sci::Position position, const char *s, Sci::Position insert/;"	f	class:CellBuffer	typeref:typename:const char *	signature:(Sci::Position position,const char * s,Sci::Position insertLength,bool & startSequence)
InsertString	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::InsertString(Sci::Position position, const char *s, Sci::Position insert/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position position,const char * s,Sci::Position insertLength)
InsertStringUTF8	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^bool ScintillaGTKAccessible::InsertStringUTF8(Sci::Position bytePos, const gchar *utf8, Sci::Pos/;"	f	class:ScintillaGTKAccessible	typeref:typename:bool	signature:(Sci::Position bytePos,const gchar * utf8,Sci::Position lengthBytes)
InsertText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::InsertText(AtkEditableText *text, const gchar/;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(AtkEditableText * text,const gchar * contents,gint length,gint * position)
InsertText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::InsertText(const gchar *text, int lengthBytes, int *charPosition) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(const gchar * text,int lengthBytes,int * charPosition)
InsertText	..\\scintilla\\src\\CellBuffer.cxx	/^void LineVector::InsertText(Sci::Line line, Sci::Position delta) {$/;"	f	class:LineVector	typeref:typename:void	signature:(Sci::Line line,Sci::Position delta)
InsertText	..\\scintilla\\src\\Partitioning.h	/^	void InsertText(T partitionInsert, T delta) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:public	signature:(T partitionInsert,T delta)
InsertValue	..\\scintilla\\src\\SplitVector.h	/^	void InsertValue(ptrdiff_t position, ptrdiff_t insertLength, T v) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t position,ptrdiff_t insertLength,T v)
Inst	..\\scintilla\\lua\\src\\lpvm.h	/^  struct Inst {$/;"	s	union:Instruction	access:public
Instance	..\\scite\\gtk\\DirectorExtension.cxx	/^DirectorExtension &DirectorExtension::Instance() {$/;"	f	class:DirectorExtension	typeref:typename:DirectorExtension &	signature:()
Instance	..\\scite\\src\\LuaExtension.cxx	/^LuaExtension &LuaExtension::Instance() {$/;"	f	class:LuaExtension	typeref:typename:LuaExtension &	signature:()
Instance	..\\scite\\win32\\DirectorExtension.cxx	/^DirectorExtension &DirectorExtension::Instance() {$/;"	f	class:DirectorExtension	typeref:typename:DirectorExtension &	signature:()
Instruction	..\\scintilla\\lua\\src\\llimits.h	/^typedef lu_int32 Instruction;$/;"	t	typeref:typename:lu_int32
Instruction	..\\scintilla\\lua\\src\\lpvm.h	/^typedef union Instruction {$/;"	u
Instruction	..\\scintilla\\lua\\src\\lpvm.h	/^} Instruction;$/;"	t	typeref:union:Instruction
IntFromHexByte	..\\scite\\src\\StyleDefinition.cxx	/^int IntFromHexByte(const char *hexByte) {$/;"	f	typeref:typename:int	signature:(const char * hexByte)
IntFromHexDigit	..\\scite\\src\\StyleDefinition.cxx	/^int IntFromHexDigit(int ch) {$/;"	f	typeref:typename:int	signature:(int ch)
IntPoint	..\\scintilla\\lua\\src\\llimits.h	/^#define IntPoint(/;"	d	signature:(p)
InternalGrep	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::InternalGrep(GrepFlags gf, const GUI::gui_char *directory, const GUI::gui_char */;"	f	class:SciTEBase	typeref:typename:void	signature:(GrepFlags gf,const GUI::gui_char * directory,const GUI::gui_char * fileTypes,const char * search,sptr_t & originalEnd)
InternalIsLeadByte	..\\scite\\src\\StyleWriter.cxx	/^bool TextReader::InternalIsLeadByte(char ch) const {$/;"	f	class:TextReader	typeref:typename:bool	signature:(char ch) const
InternalLeading	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION InternalLeading(Font &font_) { return 0; }$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_)
InternalLeading	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::InternalLeading(Font &) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font &)
InternalLeading	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::InternalLeading(Font & \/* font *\/)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font &)
InternalLeading	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::InternalLeading(Font &font_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_)
InternalLeading	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::InternalLeading(Font &font_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_)
Intersect	..\\scintilla\\src\\Selection.cxx	/^SelectionSegment SelectionRange::Intersect(SelectionSegment check) const {$/;"	f	class:SelectionRange	typeref:typename:SelectionSegment	signature:(SelectionSegment check) const
Intersects	..\\scintilla\\include\\Platform.h	/^	bool Intersects(PRectangle other) const {$/;"	f	class:Scintilla::PRectangle	typeref:typename:bool	access:public	signature:(PRectangle other) const
Invalidate	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayout::Invalidate(validLevel validity_) {$/;"	f	class:LineLayout	typeref:typename:void	signature:(validLevel validity_)
Invalidate	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayoutCache::Invalidate(LineLayout::validLevel validity_) {$/;"	f	class:LineLayoutCache	typeref:typename:void	signature:(LineLayout::validLevel validity_)
InvalidateAll	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::InvalidateAll() { \/* notify repaint *\/ }$/;"	f	class:Window	typeref:typename:void	signature:()
InvalidateAll	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::InvalidateAll() {$/;"	f	class:Window	typeref:typename:void	signature:()
InvalidateAll	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::InvalidateAll()$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:()
InvalidateAll	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::InvalidateAll() {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:()
InvalidateAll	..\\scite\\gtk\\GUIGTK.cxx	/^void Window::InvalidateAll() {$/;"	f	class:GUI::Window	typeref:typename:void	signature:()
InvalidateAll	..\\scite\\win32\\GUIWin.cxx	/^void Window::InvalidateAll() {$/;"	f	class:GUI::Window	typeref:typename:void	signature:()
InvalidateCaret	..\\scintilla\\src\\Editor.cxx	/^void Editor::InvalidateCaret() {$/;"	f	class:Editor	typeref:typename:void	signature:()
InvalidateClose	..\\scite\\win32\\Strips.cxx	/^void Strip::InvalidateClose() {$/;"	f	class:Strip	typeref:typename:void	signature:()
InvalidateRange	..\\scintilla\\src\\Editor.cxx	/^void Editor::InvalidateRange(Sci::Position start, Sci::Position end) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position start,Sci::Position end)
InvalidateRectangle	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::InvalidateRectangle(PRectangle rc) { \/* notify repaint*\/ }$/;"	f	class:Window	typeref:typename:void	signature:(PRectangle rc)
InvalidateRectangle	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::InvalidateRectangle(PRectangle rc) {$/;"	f	class:Window	typeref:typename:void	signature:(PRectangle rc)
InvalidateRectangle	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::InvalidateRectangle(PRectangle rc)$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(PRectangle rc)
InvalidateRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::InvalidateRectangle(PRectangle rc) {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(PRectangle rc)
InvalidateSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::InvalidateSelection(SelectionRange newMain, bool invalidateWholeSelection) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionRange newMain,bool invalidateWholeSelection)
InvalidateStyleData	..\\scintilla\\src\\Editor.cxx	/^void Editor::InvalidateStyleData() {$/;"	f	class:Editor	typeref:typename:void	signature:()
InvalidateStyleRedraw	..\\scintilla\\src\\Editor.cxx	/^void Editor::InvalidateStyleRedraw() {$/;"	f	class:Editor	typeref:typename:void	signature:()
InvalidateWholeSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::InvalidateWholeSelection() {$/;"	f	class:Editor	typeref:typename:void	signature:()
InvertedLight	..\\scintilla\\src\\EditView.cxx	/^static ColourDesired InvertedLight(ColourDesired orig) {$/;"	f	typeref:typename:ColourDesired	file:	signature:(ColourDesired orig)
IsADigit	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsADigit(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsADigit	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsADigit(int ch, int base) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch,int base)
IsASCII	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsASCII(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsASCII	..\\scite\\src\\StringHelpers.h	/^inline bool IsASCII(int ch) {$/;"	f	typeref:typename:bool	signature:(int ch)
IsASCIIPunctuationCharacter	..\\scintilla\\src\\Document.cxx	/^static bool IsASCIIPunctuationCharacter(unsigned int ch) {$/;"	f	typeref:typename:bool	file:	signature:(unsigned int ch)
IsASCIIWordByte	..\\scintilla\\src\\Document.cxx	/^bool Document::IsASCIIWordByte(unsigned char ch) const {$/;"	f	class:Document	typeref:typename:bool	signature:(unsigned char ch) const
IsASpace	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsASpace(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsASpace	..\\scite\\src\\PropSetFile.cxx	/^inline bool IsASpace(unsigned int ch) {$/;"	f	typeref:typename:bool	signature:(unsigned int ch)
IsASpace	..\\scite\\src\\StringList.cxx	/^static inline bool IsASpace(unsigned int ch) {$/;"	f	typeref:typename:bool	file:	signature:(unsigned int ch)
IsASpace	..\\scite\\win32\\SciTEWin.cxx	/^static bool IsASpace(int ch) {$/;"	f	typeref:typename:bool	file:	signature:(int ch)
IsASpaceCharacter	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^static bool IsASpaceCharacter(unsigned int ch) {$/;"	f	typeref:typename:bool	file:	signature:(unsigned int ch)
IsASpaceOrTab	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsASpaceOrTab(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsAbsolute	..\\scite\\src\\FilePath.cxx	/^bool FilePath::IsAbsolute() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
IsAllSpacesOrTabs	..\\scintilla\\src\\Editor.cxx	/^static inline bool IsAllSpacesOrTabs(const char *s, unsigned int len) {$/;"	f	typeref:typename:bool	file:	signature:(const char * s,unsigned int len)
IsAlphaNumeric	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsAlphaNumeric(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsAlphabetic	..\\scite\\src\\SciTEBase.cxx	/^inline bool IsAlphabetic(unsigned int ch) {$/;"	f	typeref:typename:bool	signature:(unsigned int ch)
IsArrowCharacter	..\\scintilla\\src\\CallTip.cxx	/^static bool IsArrowCharacter(char ch) {$/;"	f	typeref:typename:bool	file:	signature:(char ch)
IsBodyOfFoldBlock	..\\scintilla\\src\\Document.h	/^	bool IsBodyOfFoldBlock(Sci::Line line) const {$/;"	f	class:Scintilla::HighlightDelimiter	typeref:typename:bool	access:public	signature:(Sci::Line line) const
IsBold	..\\scite\\src\\StyleDefinition.cxx	/^bool StyleDefinition::IsBold() const {$/;"	f	class:StyleDefinition	typeref:typename:bool	signature:() const
IsBrace	..\\scite\\src\\SciTEBase.cxx	/^static bool IsBrace(char ch) {$/;"	f	typeref:typename:bool	file:	signature:(char ch)
IsBufferAvailable	..\\scite\\src\\SciTEBuffers.cxx	/^bool SciTEBase::IsBufferAvailable() const {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:() const
IsCollectingUndo	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::IsCollectingUndo() const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:() const
IsCollectingUndo	..\\scintilla\\src\\Document.h	/^	bool IsCollectingUndo() const { return cb.IsCollectingUndo(); }$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:() const
IsCommentLine	..\\scite\\src\\PropSetFile.cxx	/^static bool IsCommentLine(const char *line) {$/;"	f	typeref:typename:bool	file:	signature:(const char * line)
IsCompatibleDC	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::IsCompatibleDC(HDC hOtherDC) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(HDC hOtherDC)
IsControlCharacter	..\\scintilla\\src\\EditView.cxx	/^static inline bool IsControlCharacter(int ch) {$/;"	f	typeref:typename:bool	file:	signature:(int ch)
IsCrLf	..\\scintilla\\src\\Document.cxx	/^bool Document::IsCrLf(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position pos) const
IsDBCSLeadByte	..\\scintilla\\src\\Document.cxx	/^bool SCI_METHOD Document::IsDBCSLeadByte(char ch) const {$/;"	f	class:Document	typeref:typename:bool SCI_METHOD	signature:(char ch) const
IsDBCSLeadByte	..\\scite\\gtk\\GUIGTK.cxx	/^bool IsDBCSLeadByte(int codePage, char ch) {$/;"	f	namespace:GUI	typeref:typename:bool	signature:(int codePage,char ch)
IsDBCSLeadByte	..\\scite\\win32\\GUIWin.cxx	/^bool IsDBCSLeadByte(int codePage, char ch) {$/;"	f	namespace:GUI	typeref:typename:bool	signature:(int codePage,char ch)
IsDestroyed	..\\scintilla\\gtk\\ScintillaGTK.h	/^	bool IsDestroyed() const {$/;"	f	class:Scintilla::GObjectWatcher	typeref:typename:bool	access:public	signature:() const
IsDirectory	..\\scite\\src\\FilePath.cxx	/^bool FilePath::IsDirectory() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
IsDynamic	..\\scintilla\\src\\Indicator.h	/^	bool IsDynamic() const {$/;"	f	class:Scintilla::Indicator	typeref:typename:bool	access:public	signature:() const
IsEOLChar	..\\scintilla\\src\\PositionCache.h	/^static inline bool IsEOLChar(char ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(char ch)
IsEmpty	..\\scite\\src\\Containers.h	/^	bool IsEmpty() const {$/;"	f	class:TList	typeref:typename:bool	access:public	signature:() const
IsEmpty	..\\scite\\src\\Containers.h	/^	bool IsEmpty() const {$/;"	f	class:TMap	typeref:typename:bool	access:public	signature:() const
IsEmpty	..\\scite\\src\\SciTEBase.h	/^	bool IsEmpty() const { return words.length() == 0; }$/;"	f	struct:StyleAndWords	typeref:typename:bool	access:public	signature:() const
IsExecuting	..\\scite\\src\\JobQueue.h	/^	bool IsExecuting() const {$/;"	f	class:JobQueue	typeref:typename:bool	access:public	signature:() const
IsFileNewer	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def IsFileNewer(name1, name2):$/;"	f	access:public	signature:(name1, name2)
IsFillUpChar	..\\scintilla\\src\\AutoComplete.cxx	/^bool AutoComplete::IsFillUpChar(char ch) {$/;"	f	class:AutoComplete	typeref:typename:bool	signature:(char ch)
IsFoldBlockHighlighted	..\\scintilla\\src\\Document.h	/^	bool IsFoldBlockHighlighted(Sci::Line line) const {$/;"	f	class:Scintilla::HighlightDelimiter	typeref:typename:bool	access:public	signature:(Sci::Line line) const
IsHangul	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^bool ScintillaEditBase::IsHangul(const QChar qchar)$/;"	f	class:ScintillaEditBase	typeref:typename:bool	signature:(const QChar qchar)
IsHanja	..\\scintilla\\win32\\HanjaDic.cxx	/^	bool IsHanja(int hanja) {$/;"	f	class:Scintilla::HanjaDict::HanjaDic	typeref:typename:bool	file:	access:public	signature:(int hanja)
IsHeadOfFoldBlock	..\\scintilla\\src\\Document.h	/^	bool IsHeadOfFoldBlock(Sci::Line line) const {$/;"	f	class:Scintilla::HighlightDelimiter	typeref:typename:bool	access:public	signature:(Sci::Line line) const
IsHeader	..\\scintilla\\scripts\\HeaderCheck.py	/^def IsHeader(x):$/;"	f	access:public	signature:(x)
IsIdContinue	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool IsIdContinue(int character) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int character)
IsIdPattern	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool IsIdPattern(int character) {$/;"	f	namespace:Scintilla::__anonf0c5a84c0211	typeref:typename:bool	signature:(int character)
IsIdStart	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool IsIdStart(int character) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int character)
IsKeyDown	..\\scite\\win32\\SciTEWin.h	/^inline bool IsKeyDown(int key) {$/;"	f	typeref:typename:bool	signature:(int key)
IsLastStep	..\\scintilla\\src\\Editor.cxx	/^static bool IsLastStep(const DocModification &mh) {$/;"	f	typeref:typename:bool	file:	signature:(const DocModification & mh)
IsLeadByte	..\\scintilla\\lexlib\\LexAccessor.h	/^	bool IsLeadByte(char ch) const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:bool	access:public	signature:(char ch) const
IsLeadByte	..\\scite\\src\\StyleWriter.h	/^	bool IsLeadByte(char ch) const {$/;"	f	class:TextReader	typeref:typename:bool	access:public	signature:(char ch) const
IsLineEndChar	..\\scintilla\\src\\Document.cxx	/^static bool IsLineEndChar(char c) {$/;"	f	typeref:typename:bool	file:	signature:(char c)
IsLineEndPosition	..\\scintilla\\src\\Document.cxx	/^bool Document::IsLineEndPosition(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position position) const
IsLineFrameOpaque	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::IsLineFrameOpaque(bool caretActive, bool lineContainsCaret) const {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(bool caretActive,bool lineContainsCaret) const
IsLinePreprocessorCondition	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::IsLinePreprocessorCondition(char *line) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(char * line)
IsLineStartPosition	..\\scintilla\\src\\Document.cxx	/^bool Document::IsLineStartPosition(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position position) const
IsLoading	..\\scite\\src\\FileWorker.h	/^	virtual bool IsLoading() const {$/;"	f	class:FileLoader	typeref:typename:bool	access:public	signature:() const
IsLoading	..\\scite\\src\\FileWorker.h	/^	virtual bool IsLoading() const {$/;"	f	class:FileStorer	typeref:typename:bool	access:public	signature:() const
IsLowerCase	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsLowerCase(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsOctalDigit	..\\scite\\src\\StringHelpers.cxx	/^static bool IsOctalDigit(char ch) {$/;"	f	typeref:typename:bool	file:	signature:(char ch)
IsPositionInLineEnd	..\\scintilla\\src\\Document.cxx	/^bool Document::IsPositionInLineEnd(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position position) const
IsPropertiesFile	..\\scite\\src\\PropSetFile.cxx	/^bool IsPropertiesFile(const FilePath &filename) {$/;"	f	typeref:typename:bool	signature:(const FilePath & filename)
IsProtected	..\\scintilla\\src\\Style.h	/^	bool IsProtected() const { return !(changeable && visible);}$/;"	f	class:Scintilla::Style	typeref:typename:bool	access:public	signature:() const
IsReadOnly	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::IsReadOnly() const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:() const
IsReadOnly	..\\scintilla\\src\\Document.h	/^	bool IsReadOnly() const { return cb.IsReadOnly(); }$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:() const
IsRectExtend	..\\scintilla\\src\\Editor.cxx	/^bool IsRectExtend(unsigned int iMessage, bool isRectMoveExtends) {$/;"	f	namespace:__anon92132c300211	typeref:typename:bool	signature:(unsigned int iMessage,bool isRectMoveExtends)
IsRectangular	..\\scintilla\\src\\Selection.cxx	/^bool Selection::IsRectangular() const {$/;"	f	class:Selection	typeref:typename:bool	signature:() const
IsRectangularInMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static bool IsRectangularInMime(const QMimeData *mimeData)$/;"	f	typeref:typename:bool	file:	signature:(const QMimeData * mimeData)
IsRoot	..\\scite\\src\\FilePath.cxx	/^bool FilePath::IsRoot() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
IsSameOrChild	..\\scite\\win32\\Strips.cxx	/^static bool IsSameOrChild(const GUI::Window &wParent, HWND wChild) {$/;"	f	typeref:typename:bool	file:	signature:(const GUI::Window & wParent,HWND wChild)
IsSavePoint	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::IsSavePoint() const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:() const
IsSavePoint	..\\scintilla\\src\\CellBuffer.cxx	/^bool UndoHistory::IsSavePoint() const {$/;"	f	class:UndoHistory	typeref:typename:bool	signature:() const
IsSavePoint	..\\scintilla\\src\\Document.h	/^	bool IsSavePoint() const { return cb.IsSavePoint(); }$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:() const
IsSet	..\\scite\\src\\FilePath.cxx	/^bool FilePath::IsSet() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
IsSingleChar	..\\scite\\src\\SciTEBase.h	/^	bool IsSingleChar() const { return words.length() == 1; }$/;"	f	struct:StyleAndWords	typeref:typename:bool	access:public	signature:() const
IsSpaceOrTab	..\\scintilla\\src\\Document.cxx	/^static inline bool IsSpaceOrTab(int ch) {$/;"	f	typeref:typename:bool	file:	signature:(int ch)
IsSpaceOrTab	..\\scintilla\\src\\PositionCache.h	/^inline bool IsSpaceOrTab(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsSpaceOrTab	..\\scite\\src\\PropSetFile.cxx	/^static bool IsSpaceOrTab(char ch) {$/;"	f	typeref:typename:bool	file:	signature:(char ch)
IsStdinBlocked	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::IsStdinBlocked() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
IsStdinBlocked	..\\scite\\win32\\SciTEWin.cxx	/^bool SciTEWin::IsStdinBlocked() {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:()
IsStopChar	..\\scintilla\\src\\AutoComplete.cxx	/^bool AutoComplete::IsStopChar(char ch) {$/;"	f	class:AutoComplete	typeref:typename:bool	signature:(char ch)
IsSubordinate	..\\scintilla\\src\\Document.cxx	/^static bool IsSubordinate(int levelStart, int levelTry) {$/;"	f	typeref:typename:bool	file:	signature:(int levelStart,int levelTry)
IsSwitchCharacter	..\\scite\\src\\SciTEBase.cxx	/^static bool IsSwitchCharacter(GUI::gui_char ch) {$/;"	f	typeref:typename:bool	file:	signature:(GUI::gui_char ch)
IsTabCharacter	..\\scintilla\\src\\CallTip.cxx	/^bool CallTip::IsTabCharacter(char ch) const {$/;"	f	class:CallTip	typeref:typename:bool	signature:(char ch) const
IsTailOfFoldBlock	..\\scintilla\\src\\Document.h	/^	bool IsTailOfFoldBlock(Sci::Line line) const {$/;"	f	class:Scintilla::HighlightDelimiter	typeref:typename:bool	access:public	signature:(Sci::Line line) const
IsUTF8TrailByte	..\\scite\\src\\FileWorker.cxx	/^static bool IsUTF8TrailByte(int ch) {$/;"	f	typeref:typename:bool	file:	signature:(int ch)
IsUnicodeMode	..\\scintilla\\src\\Editor.cxx	/^bool Editor::IsUnicodeMode() const {$/;"	f	class:Editor	typeref:typename:bool	signature:() const
IsUntitled	..\\scite\\src\\FilePath.cxx	/^bool FilePath::IsUntitled() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
IsUpperCase	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool IsUpperCase(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
IsValid	..\\scintilla\\gtk\\PlatGTK.cxx	/^	bool IsValid() override {$/;"	f	class:DynamicLibraryImpl	typeref:typename:bool	file:	access:public	signature:()
IsValid	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	bool IsValid() override {$/;"	f	class:Scintilla::DynamicLibraryImpl	typeref:typename:bool	file:	access:public	signature:()
IsValid	..\\scintilla\\src\\Selection.h	/^	bool IsValid() const {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:bool	access:public	signature:() const
IsValid	..\\scintilla\\win32\\PlatWin.cxx	/^	bool IsValid() override {$/;"	f	class:Scintilla::DynamicLibraryImpl	typeref:typename:bool	file:	access:public	signature:()
IsValid	..\\scite\\src\\PropSetFile.cxx	/^bool ImportFilter::IsValid(std::string name) const {$/;"	f	class:ImportFilter	typeref:typename:bool	signature:(std::string name) const
IsWhiteLine	..\\scintilla\\src\\Document.cxx	/^bool Document::IsWhiteLine(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Line line) const
IsWord	..\\scintilla\\src\\CharClassify.h	/^	bool IsWord(unsigned char ch) const { return static_cast<cc>(charClass[ch]) == ccWord;}$/;"	f	class:Scintilla::CharClassify	typeref:typename:bool	access:public	signature:(unsigned char ch) const
IsWordAt	..\\scintilla\\src\\Document.cxx	/^bool Document::IsWordAt(Sci::Position start, Sci::Position end) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position start,Sci::Position end) const
IsWordCharacter	..\\scite\\src\\SciTEIO.cxx	/^static bool IsWordCharacter(int ch) {$/;"	f	typeref:typename:bool	file:	signature:(int ch)
IsWordEndAt	..\\scintilla\\src\\Document.cxx	/^bool Document::IsWordEndAt(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position pos) const
IsWordPartSeparator	..\\scintilla\\src\\Document.cxx	/^bool Document::IsWordPartSeparator(unsigned int ch) const {$/;"	f	class:Document	typeref:typename:bool	signature:(unsigned int ch) const
IsWordStartAt	..\\scintilla\\src\\Document.cxx	/^bool Document::IsWordStartAt(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position pos) const
IsXidContinue	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool IsXidContinue(int character) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int character)
IsXidStart	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool IsXidStart(int character) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int character)
Item	..\\scite\\win32\\SciTEWinDlg.cxx	/^	HWND Item(int id) {$/;"	f	class:Dialog	typeref:typename:HWND	file:	access:public	signature:(int id)
ItemHeight	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::ItemHeight() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:() const
ItemInset	..\\scintilla\\win32\\PlatWin.cxx	/^	static const Point ItemInset;	\/\/ Padding around whole item$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const Point	file:	access:private
ItemInset	..\\scintilla\\win32\\PlatWin.cxx	/^const Point ListBoxX::ItemInset(0, 0);$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const Point
ItemTextG	..\\scite\\win32\\SciTEWinDlg.cxx	/^	GUI::gui_string ItemTextG(int id) {$/;"	f	class:Dialog	typeref:typename:GUI::gui_string	file:	access:public	signature:(int id)
ItemTextU	..\\scite\\win32\\SciTEWinDlg.cxx	/^	std::string ItemTextU(int id) {$/;"	f	class:Dialog	typeref:typename:std::string	file:	access:public	signature:(int id)
JOBQUEUE_H	..\\scite\\src\\JobQueue.h	/^#define JOBQUEUE_H$/;"	d
Job	..\\scite\\src\\JobQueue.h	/^	Job() {$/;"	f	class:Job	access:public	signature:()
Job	..\\scite\\src\\JobQueue.h	/^	Job(const std::string &command_, const FilePath &directory_, JobSubsystem jobType_, const std::/;"	f	class:Job	access:public	signature:(const std::string & command_,const FilePath & directory_,JobSubsystem jobType_,const std::string & input_,int flags_)
Job	..\\scite\\src\\JobQueue.h	/^class Job {$/;"	c
JobFlags	..\\scite\\src\\JobQueue.h	/^enum JobFlags {$/;"	g
JobMode	..\\scite\\src\\JobQueue.cxx	/^JobMode::JobMode(PropSetFile &props, int item, const char *fileNameExt) : jobType(jobCLI), saveB/;"	f	class:JobMode	signature:(PropSetFile & props,int item,const char * fileNameExt)
JobMode	..\\scite\\src\\JobQueue.h	/^struct JobMode {$/;"	s
JobQueue	..\\scite\\src\\JobQueue.h	/^	JobQueue() {$/;"	f	class:JobQueue	access:public	signature:()
JobQueue	..\\scite\\src\\JobQueue.h	/^class JobQueue {$/;"	c
JobSubsystem	..\\scite\\src\\JobQueue.h	/^enum JobSubsystem {$/;"	g
KBx	..\\scintilla\\lua\\src\\lvm.c	/^#define KBx(/;"	d	file:	signature:(i)
KEYMAP_H	..\\scintilla\\src\\KeyMap.h	/^#define KEYMAP_H$/;"	d
KEYWEAK	..\\scintilla\\lua\\src\\lgc.c	/^#define KEYWEAK /;"	d	file:
KEYWEAKBIT	..\\scintilla\\lua\\src\\lgc.h	/^#define KEYWEAKBIT	/;"	d
KEYWORDSET_MAX	..\\scintilla\\include\\Scintilla.h	/^#define KEYWORDSET_MAX /;"	d
KEY_HOOK	..\\scintilla\\lua\\src\\ldblib.c	/^static const char KEY_HOOK = 'h';$/;"	v	typeref:typename:const char	file:
Key	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::Key(GdkEventKey *event) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GdkEventKey * event)
KeyCommand	..\\scintilla\\src\\Editor.cxx	/^int Editor::KeyCommand(unsigned int iMessage) {$/;"	f	class:Editor	typeref:typename:int	signature:(unsigned int iMessage)
KeyCommand	..\\scintilla\\src\\ScintillaBase.cxx	/^int ScintillaBase::KeyCommand(unsigned int iMessage) {$/;"	f	class:ScintillaBase	typeref:typename:int	signature:(unsigned int iMessage)
KeyDefault	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int KeyDefault(int key, int modifiers) {$/;"	f	class:ScintillaCurses	typeref:typename:int	file:	access:public	signature:(int key,int modifiers)
KeyDefault	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^int ScintillaGTK::KeyDefault(int key, int modifiers) {$/;"	f	class:ScintillaGTK	typeref:typename:int	signature:(int key,int modifiers)
KeyDefault	..\\scintilla\\src\\Editor.cxx	/^int Editor::KeyDefault(int, int) {$/;"	f	class:Editor	typeref:typename:int	signature:(int,int)
KeyDown	..\\scite\\gtk\\SciTEGTK.cxx	/^bool FindStrip::KeyDown(GdkEventKey *event) {$/;"	f	class:FindStrip	typeref:typename:bool	signature:(GdkEventKey * event)
KeyDown	..\\scite\\gtk\\SciTEGTK.cxx	/^bool ReplaceStrip::KeyDown(GdkEventKey *event) {$/;"	f	class:ReplaceStrip	typeref:typename:bool	signature:(GdkEventKey * event)
KeyDown	..\\scite\\gtk\\SciTEGTK.cxx	/^bool UserStrip::KeyDown(GdkEventKey *event) {$/;"	f	class:UserStrip	typeref:typename:bool	signature:(GdkEventKey * event)
KeyDown	..\\scite\\gtk\\Widget.cxx	/^bool Strip::KeyDown(GdkEventKey *event) {$/;"	f	class:Strip	typeref:typename:bool	signature:(GdkEventKey * event)
KeyDown	..\\scite\\win32\\SciTEWin.cxx	/^LRESULT SciTEWin::KeyDown(WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:LRESULT	signature:(WPARAM wParam)
KeyDown	..\\scite\\win32\\Strips.cxx	/^bool BackgroundStrip::KeyDown(WPARAM key) {$/;"	f	class:BackgroundStrip	typeref:typename:bool	signature:(WPARAM key)
KeyDown	..\\scite\\win32\\Strips.cxx	/^bool FindStrip::KeyDown(WPARAM key) {$/;"	f	class:FindStrip	typeref:typename:bool	signature:(WPARAM key)
KeyDown	..\\scite\\win32\\Strips.cxx	/^bool ReplaceStrip::KeyDown(WPARAM key) {$/;"	f	class:ReplaceStrip	typeref:typename:bool	signature:(WPARAM key)
KeyDown	..\\scite\\win32\\Strips.cxx	/^bool SearchStrip::KeyDown(WPARAM key) {$/;"	f	class:SearchStrip	typeref:typename:bool	signature:(WPARAM key)
KeyDown	..\\scite\\win32\\Strips.cxx	/^bool Strip::KeyDown(WPARAM key) {$/;"	f	class:Strip	typeref:typename:bool	signature:(WPARAM key)
KeyDown	..\\scite\\win32\\Strips.cxx	/^bool UserStrip::KeyDown(WPARAM key) {$/;"	f	class:UserStrip	typeref:typename:bool	signature:(WPARAM key)
KeyDownWithModifiers	..\\scintilla\\src\\Editor.cxx	/^int Editor::KeyDownWithModifiers(int key, int modifiers, bool *consumed) {$/;"	f	class:Editor	typeref:typename:int	signature:(int key,int modifiers,bool * consumed)
KeyFromLabel	..\\scite\\gtk\\Widget.cxx	/^GUI::gui_char KeyFromLabel(GUI::gui_string label) {$/;"	f	typeref:typename:GUI::gui_char	signature:(GUI::gui_string label)
KeyFromString	..\\scintilla\\src\\PositionCache.cxx	/^static inline int KeyFromString(const char *charBytes, size_t len) {$/;"	f	typeref:typename:int	file:	signature:(const char * charBytes,size_t len)
KeyMap	..\\scintilla\\src\\KeyMap.cxx	/^KeyMap::KeyMap() {$/;"	f	class:KeyMap	signature:()
KeyMap	..\\scintilla\\src\\KeyMap.h	/^class KeyMap {$/;"	c	namespace:Scintilla
KeyMatch	..\\scite\\gtk\\SciTEGTK.cxx	/^inline bool KeyMatch(const char *menuKey, int keyval, int modifiers) {$/;"	f	typeref:typename:bool	signature:(const char * menuKey,int keyval,int modifiers)
KeyMatch	..\\scite\\win32\\SciTEWin.cxx	/^inline bool KeyMatch(const std::string &sKey, int keyval, int modifiers) {$/;"	f	typeref:typename:bool	signature:(const std::string & sKey,int keyval,int modifiers)
KeyModifiers	..\\scintilla\\src\\KeyMap.h	/^	KeyModifiers(int key_, int modifiers_) : key(key_), modifiers(modifiers_) {$/;"	f	class:Scintilla::KeyModifiers	access:public	signature:(int key_,int modifiers_)
KeyModifiers	..\\scintilla\\src\\KeyMap.h	/^class KeyModifiers {$/;"	c	namespace:Scintilla
KeyPress	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void KeyPress(int key, bool shift, bool ctrl, bool alt) {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(int key,bool shift,bool ctrl,bool alt)
KeyPress	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::KeyPress(GtkWidget *widget, GdkEventKey *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventKey * event)
KeyPress	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::KeyPress(GtkWidget * \/*widget*\/, GdkEventKey *event, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GtkWidget *,GdkEventKey * event,SciTEGTK * scitew)
KeyRelease	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::KeyRelease(GtkWidget *widget, GdkEventKey *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventKey * event)
KeyRelease	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::KeyRelease(GtkWidget * \/*widget*\/, GdkEventKey *event, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GtkWidget *,GdkEventKey * event,SciTEGTK * scitew)
KeyThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::KeyThis(GdkEventKey *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GdkEventKey * event)
KeyToCommand	..\\scintilla\\src\\KeyMap.h	/^class KeyToCommand {$/;"	c	namespace:Scintilla
KeyToCommand	..\\scite\\gtk\\SciTEGTK.cxx	/^class KeyToCommand {$/;"	c	file:
KeyTranslate	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static int KeyTranslate(int keyIn) {$/;"	f	typeref:typename:int	file:	signature:(int keyIn)
KeyTranslate	..\\scintilla\\win32\\ScintillaWin.cxx	/^static int KeyTranslate(int keyIn) {$/;"	f	typeref:typename:int	file:	signature:(int keyIn)
KeyUp	..\\scite\\win32\\SciTEWin.cxx	/^LRESULT SciTEWin::KeyUp(WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:LRESULT	signature:(WPARAM wParam)
KeyboardIsKeyDown	..\\scintilla\\win32\\ScintillaWin.cxx	/^static bool KeyboardIsKeyDown(int key) {$/;"	f	typeref:typename:bool	file:	signature:(int key)
KoreanIME	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::KoreanIME() {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:()
KoreanIME	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::KoreanIME() {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:()
L	..\\scintilla\\lua\\src\\lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	typeref:typename:lua_State *	access:public
L	..\\scintilla\\lua\\src\\ldump.c	/^ lua_State* L;$/;"	m	struct:__anonbc205f790108	typeref:typename:lua_State *	file:	access:public
L	..\\scintilla\\lua\\src\\llex.h	/^  struct lua_State *L;$/;"	m	struct:LexState	typeref:struct:lua_State *	access:public
L	..\\scintilla\\lua\\src\\lparser.h	/^  struct lua_State *L;  \/* copy of the Lua state *\/$/;"	m	struct:FuncState	typeref:struct:lua_State *	access:public
L	..\\scintilla\\lua\\src\\lpcap.h	/^  lua_State *L;$/;"	m	struct:CapState	typeref:typename:lua_State *	access:public
L	..\\scintilla\\lua\\src\\lpcode.c	/^  lua_State *L;$/;"	m	struct:CompileState	typeref:typename:lua_State *	file:	access:public
L	..\\scintilla\\lua\\src\\lstrlib.c	/^  lua_State *L;$/;"	m	struct:MatchState	typeref:typename:lua_State *	file:	access:public
L	..\\scintilla\\lua\\src\\lundump.c	/^ lua_State* L;$/;"	m	struct:__anonc6bc71bc0108	typeref:typename:lua_State *	file:	access:public
L	..\\scintilla\\lua\\src\\lzio.h	/^  lua_State *L;			\/* Lua state (for reader) *\/$/;"	m	struct:Zio	typeref:typename:lua_State *	access:public
L	..\\scite\\lua\\include\\lauxlib.h	/^  lua_State *L;$/;"	m	struct:luaL_Buffer	typeref:typename:lua_State *	access:public
LAST_SIGNAL	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    LAST_SIGNAL$/;"	e	enum:__anon9c9cef500103	file:	access:public
LAST_TAG	..\\scintilla\\lua\\src\\lobject.h	/^#define LAST_TAG	/;"	d
LBLACK	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LBLACK(0x40, 0x40, 0x40);$/;"	v	typeref:typename:ColourDesired	file:
LBLUE	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LBLUE(0, 0, 0xFF);$/;"	v	typeref:typename:ColourDesired	file:
LCLO	..\\scintilla\\src\\RESearch.cxx	/^#define LCLO /;"	d	file:
LCYAN	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LCYAN(0, 0xFF, 0xFF);$/;"	v	typeref:typename:ColourDesired	file:
LClosure	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct LClosure {$/;"	s
LClosure	..\\scintilla\\lua\\src\\lobject.h	/^} LClosure;$/;"	t	typeref:struct:LClosure
LEVELS1	..\\scintilla\\lua\\src\\ldblib.c	/^#define LEVELS1	/;"	d	file:
LEVELS2	..\\scintilla\\lua\\src\\ldblib.c	/^#define LEVELS2	/;"	d	file:
LEXACCESSOR_H	..\\scintilla\\lexlib\\LexAccessor.h	/^#define LEXACCESSOR_H$/;"	d
LEXERBASE_H	..\\scintilla\\lexlib\\LexerBase.h	/^#define LEXERBASE_H$/;"	d
LEXERMODULE_H	..\\scintilla\\lexlib\\LexerModule.h	/^#define LEXERMODULE_H$/;"	d
LEXERNOEXCEPTIONS_H	..\\scintilla\\lexlib\\LexerNoExceptions.h	/^#define LEXERNOEXCEPTIONS_H$/;"	d
LEXERSIMPLE_H	..\\scintilla\\lexlib\\LexerSimple.h	/^#define LEXERSIMPLE_H$/;"	d
LFIELDS_PER_FLUSH	..\\scintilla\\lua\\src\\lopcodes.h	/^#define LFIELDS_PER_FLUSH	/;"	d
LG	..\\scintilla\\lua\\src\\lstate.c	/^typedef struct LG {$/;"	s	file:
LG	..\\scintilla\\lua\\src\\lstate.c	/^} LG;$/;"	t	typeref:struct:LG	file:
LGREEN	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LGREEN(0, 0xFF, 0);$/;"	v	typeref:typename:ColourDesired	file:
LHS_assign	..\\scintilla\\lua\\src\\lparser.c	/^struct LHS_assign {$/;"	s	file:
LIBPREFIX	..\\scintilla\\lua\\src\\loadlib.c	/^#define LIBPREFIX	/;"	d	file:
LIB_FAIL	..\\scintilla\\lua\\src\\loadlib.c	/^#define LIB_FAIL	/;"	d	file:
LIMIT	..\\scintilla\\lua\\src\\lauxlib.c	/^#define LIMIT	/;"	d	file:
LINEMARKER_H	..\\scintilla\\src\\LineMarker.h	/^#define LINEMARKER_H$/;"	d
LINK_LEXER	..\\scintilla\\src\\Catalogue.cxx	/^#define LINK_LEXER(/;"	d	file:	signature:(lexer)
LMAGENTA	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LMAGENTA(0xFF, 0, 0xFF);$/;"	v	typeref:typename:ColourDesired	file:
LMMinder	..\\scintilla\\src\\ExternalLexer.h	/^class LMMinder {$/;"	c	namespace:Scintilla
LOAD_LIBRARY_SEARCH_SYSTEM32	..\\scintilla\\win32\\PlatWin.cxx	/^#define LOAD_LIBRARY_SEARCH_SYSTEM32 /;"	d	file:
LRED	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LRED(0xFF, 0, 0);$/;"	v	typeref:typename:ColourDesired	file:
LUAC_FORMAT	..\\scintilla\\lua\\src\\lundump.h	/^#define LUAC_FORMAT	/;"	d
LUAC_HEADERSIZE	..\\scintilla\\lua\\src\\lundump.h	/^#define LUAC_HEADERSIZE	/;"	d
LUAC_VERSION	..\\scintilla\\lua\\src\\lundump.h	/^#define LUAC_VERSION	/;"	d
LUAI_BITSINT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_BITSINT	/;"	d
LUAI_BITSINT	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_BITSINT	/;"	d
LUAI_DATA	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_DATA	/;"	d
LUAI_DATA	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_DATA	/;"	d
LUAI_EXTRASPACE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_EXTRASPACE	/;"	d
LUAI_EXTRASPACE	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_EXTRASPACE	/;"	d
LUAI_FUNC	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_FUNC	/;"	d
LUAI_FUNC	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_FUNC	/;"	d
LUAI_GCMUL	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_GCMUL	/;"	d
LUAI_GCMUL	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_GCMUL	/;"	d
LUAI_GCPAUSE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_GCPAUSE	/;"	d
LUAI_GCPAUSE	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_GCPAUSE	/;"	d
LUAI_INT32	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_INT32	/;"	d
LUAI_INT32	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_INT32	/;"	d
LUAI_MAXCALLS	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXCALLS	/;"	d
LUAI_MAXCALLS	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXCALLS	/;"	d
LUAI_MAXCCALLS	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXCCALLS	/;"	d
LUAI_MAXCCALLS	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXCCALLS	/;"	d
LUAI_MAXCSTACK	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXCSTACK	/;"	d
LUAI_MAXCSTACK	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXCSTACK	/;"	d
LUAI_MAXINT32	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXINT32	/;"	d
LUAI_MAXINT32	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXINT32	/;"	d
LUAI_MAXNUMBER2STR	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXNUMBER2STR	/;"	d
LUAI_MAXNUMBER2STR	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXNUMBER2STR	/;"	d
LUAI_MAXUPVALUES	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXUPVALUES	/;"	d
LUAI_MAXUPVALUES	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXUPVALUES	/;"	d
LUAI_MAXVARS	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MAXVARS	/;"	d
LUAI_MAXVARS	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MAXVARS	/;"	d
LUAI_MEM	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_MEM	/;"	d
LUAI_MEM	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_MEM	/;"	d
LUAI_THROW	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_THROW(/;"	d	signature:(L,c)
LUAI_THROW	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_THROW(/;"	d	signature:(L,c)
LUAI_TRY	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_TRY(/;"	d	signature:(L,c,a)
LUAI_TRY	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_TRY(/;"	d	signature:(L,c,a)
LUAI_UACNUMBER	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_UACNUMBER	/;"	d
LUAI_UACNUMBER	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_UACNUMBER	/;"	d
LUAI_UINT32	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_UINT32	/;"	d
LUAI_UINT32	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_UINT32	/;"	d
LUAI_UMEM	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_UMEM	/;"	d
LUAI_UMEM	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_UMEM	/;"	d
LUAI_USER_ALIGNMENT_T	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAI_USER_ALIGNMENT_T	/;"	d
LUAI_USER_ALIGNMENT_T	..\\scite\\lua\\include\\luaconf.h	/^#define LUAI_USER_ALIGNMENT_T	/;"	d
LUALIB_API	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUALIB_API	/;"	d
LUALIB_API	..\\scite\\lua\\include\\luaconf.h	/^#define LUALIB_API	/;"	d
LUAL_BUFFERSIZE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAL_BUFFERSIZE	/;"	d
LUAL_BUFFERSIZE	..\\scite\\lua\\include\\luaconf.h	/^#define LUAL_BUFFERSIZE	/;"	d
LUAMOD_API	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUAMOD_API	/;"	d
LUA_ANSI	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_ANSI$/;"	d
LUA_ANSI	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_ANSI$/;"	d
LUA_API	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_API /;"	d
LUA_API	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_API /;"	d
LUA_AUTHORS	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_AUTHORS /;"	d
LUA_AUTHORS	..\\scite\\lua\\include\\lua.h	/^#define LUA_AUTHORS /;"	d
LUA_CDIR	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_CDIR	/;"	d
LUA_CDIR	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_CDIR	/;"	d
LUA_COLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_COLIBNAME	/;"	d
LUA_COLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_COLIBNAME	/;"	d
LUA_COMPAT_GFIND	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_COMPAT_GFIND$/;"	d
LUA_COMPAT_GFIND	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_COMPAT_GFIND$/;"	d
LUA_COMPAT_LSTR	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_COMPAT_LSTR	/;"	d
LUA_COMPAT_LSTR	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_COMPAT_LSTR	/;"	d
LUA_COMPAT_MOD	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_COMPAT_MOD$/;"	d
LUA_COMPAT_MOD	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_COMPAT_MOD$/;"	d
LUA_COMPAT_OPENLIB	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_COMPAT_OPENLIB$/;"	d
LUA_COMPAT_OPENLIB	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_COMPAT_OPENLIB$/;"	d
LUA_COMPAT_VARARG	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_COMPAT_VARARG$/;"	d
LUA_COMPAT_VARARG	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_COMPAT_VARARG$/;"	d
LUA_COPYRIGHT	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_COPYRIGHT	/;"	d
LUA_COPYRIGHT	..\\scite\\lua\\include\\lua.h	/^#define LUA_COPYRIGHT	/;"	d
LUA_CORE	..\\scintilla\\lua\\src\\lapi.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lcode.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\ldebug.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\ldo.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\ldump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lfunc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lgc.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\llex.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lmem.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lobject.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lopcodes.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lparser.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lstate.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lstring.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\ltable.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\ltm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\luac.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lundump.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lvm.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\lzio.c	/^#define LUA_CORE$/;"	d	file:
LUA_CORE	..\\scintilla\\lua\\src\\print.c	/^#define LUA_CORE$/;"	d	file:
LUA_CPATH	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_CPATH /;"	d
LUA_CPATH	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_CPATH /;"	d
LUA_CPATH_DEFAULT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_CPATH_DEFAULT /;"	d
LUA_CPATH_DEFAULT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_CPATH_DEFAULT /;"	d
LUA_DBLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_DBLIBNAME	/;"	d
LUA_DBLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_DBLIBNAME	/;"	d
LUA_DIRSEP	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_DIRSEP	/;"	d
LUA_DIRSEP	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_DIRSEP	/;"	d
LUA_DL_DLL	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_DL_DLL$/;"	d
LUA_DL_DLL	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_DL_DLL$/;"	d
LUA_DL_DLOPEN	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_DL_DLOPEN$/;"	d
LUA_DL_DLOPEN	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_DL_DLOPEN$/;"	d
LUA_DL_DYLD	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_DL_DYLD	/;"	d
LUA_DL_DYLD	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_DL_DYLD	/;"	d
LUA_ENVIRONINDEX	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_ENVIRONINDEX	/;"	d
LUA_ENVIRONINDEX	..\\scite\\lua\\include\\lua.h	/^#define LUA_ENVIRONINDEX	/;"	d
LUA_ERRERR	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_ERRERR	/;"	d
LUA_ERRERR	..\\scite\\lua\\include\\lua.h	/^#define LUA_ERRERR	/;"	d
LUA_ERRFILE	..\\scintilla\\lua\\src\\lauxlib.h	/^#define LUA_ERRFILE /;"	d
LUA_ERRFILE	..\\scite\\lua\\include\\lauxlib.h	/^#define LUA_ERRFILE /;"	d
LUA_ERRMEM	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_ERRMEM	/;"	d
LUA_ERRMEM	..\\scite\\lua\\include\\lua.h	/^#define LUA_ERRMEM	/;"	d
LUA_ERRRUN	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_ERRRUN	/;"	d
LUA_ERRRUN	..\\scite\\lua\\include\\lua.h	/^#define LUA_ERRRUN	/;"	d
LUA_ERRSYNTAX	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_ERRSYNTAX	/;"	d
LUA_ERRSYNTAX	..\\scite\\lua\\include\\lua.h	/^#define LUA_ERRSYNTAX	/;"	d
LUA_EXECDIR	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_EXECDIR	/;"	d
LUA_EXECDIR	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_EXECDIR	/;"	d
LUA_FILEHANDLE	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_FILEHANDLE	/;"	d
LUA_FILEHANDLE	..\\scite\\lua\\include\\lualib.h	/^#define LUA_FILEHANDLE	/;"	d
LUA_GCCOLLECT	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCCOLLECT	/;"	d
LUA_GCCOLLECT	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCCOLLECT	/;"	d
LUA_GCCOUNT	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCCOUNT	/;"	d
LUA_GCCOUNT	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCCOUNT	/;"	d
LUA_GCCOUNTB	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCCOUNTB	/;"	d
LUA_GCCOUNTB	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCCOUNTB	/;"	d
LUA_GCRESTART	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCRESTART	/;"	d
LUA_GCRESTART	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCRESTART	/;"	d
LUA_GCSETPAUSE	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCSETPAUSE	/;"	d
LUA_GCSETPAUSE	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCSETPAUSE	/;"	d
LUA_GCSETSTEPMUL	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCSETSTEPMUL	/;"	d
LUA_GCSETSTEPMUL	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCSETSTEPMUL	/;"	d
LUA_GCSTEP	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCSTEP	/;"	d
LUA_GCSTEP	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCSTEP	/;"	d
LUA_GCSTOP	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GCSTOP	/;"	d
LUA_GCSTOP	..\\scite\\lua\\include\\lua.h	/^#define LUA_GCSTOP	/;"	d
LUA_GLOBALSINDEX	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_GLOBALSINDEX	/;"	d
LUA_GLOBALSINDEX	..\\scite\\lua\\include\\lua.h	/^#define LUA_GLOBALSINDEX	/;"	d
LUA_HOOKCALL	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_HOOKCALL	/;"	d
LUA_HOOKCALL	..\\scite\\lua\\include\\lua.h	/^#define LUA_HOOKCALL	/;"	d
LUA_HOOKCOUNT	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_HOOKCOUNT	/;"	d
LUA_HOOKCOUNT	..\\scite\\lua\\include\\lua.h	/^#define LUA_HOOKCOUNT	/;"	d
LUA_HOOKLINE	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_HOOKLINE	/;"	d
LUA_HOOKLINE	..\\scite\\lua\\include\\lua.h	/^#define LUA_HOOKLINE	/;"	d
LUA_HOOKRET	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_HOOKRET	/;"	d
LUA_HOOKRET	..\\scite\\lua\\include\\lua.h	/^#define LUA_HOOKRET	/;"	d
LUA_HOOKTAILRET	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_HOOKTAILRET /;"	d
LUA_HOOKTAILRET	..\\scite\\lua\\include\\lua.h	/^#define LUA_HOOKTAILRET /;"	d
LUA_IDSIZE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_IDSIZE	/;"	d
LUA_IDSIZE	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_IDSIZE	/;"	d
LUA_IGMARK	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_IGMARK	/;"	d
LUA_IGMARK	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_IGMARK	/;"	d
LUA_INIT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_INIT	/;"	d
LUA_INIT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_INIT	/;"	d
LUA_INTEGER	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_INTEGER	/;"	d
LUA_INTEGER	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_INTEGER	/;"	d
LUA_INTFRMLEN	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_INTFRMLEN	/;"	d
LUA_INTFRMLEN	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_INTFRMLEN	/;"	d
LUA_INTFRM_T	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_INTFRM_T	/;"	d
LUA_INTFRM_T	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_INTFRM_T	/;"	d
LUA_IOLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_IOLIBNAME	/;"	d
LUA_IOLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_IOLIBNAME	/;"	d
LUA_LDIR	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_LDIR	/;"	d
LUA_LDIR	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_LDIR	/;"	d
LUA_LIB	..\\scintilla\\lua\\src\\lauxlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\lbaselib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\ldblib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\linit.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\liolib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\lmathlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\loadlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\loslib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\lstrlib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LIB	..\\scintilla\\lua\\src\\ltablib.c	/^#define LUA_LIB$/;"	d	file:
LUA_LOADLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_LOADLIBNAME	/;"	d
LUA_LOADLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_LOADLIBNAME	/;"	d
LUA_MASKCALL	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_MASKCALL	/;"	d
LUA_MASKCALL	..\\scite\\lua\\include\\lua.h	/^#define LUA_MASKCALL	/;"	d
LUA_MASKCOUNT	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_MASKCOUNT	/;"	d
LUA_MASKCOUNT	..\\scite\\lua\\include\\lua.h	/^#define LUA_MASKCOUNT	/;"	d
LUA_MASKLINE	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_MASKLINE	/;"	d
LUA_MASKLINE	..\\scite\\lua\\include\\lua.h	/^#define LUA_MASKLINE	/;"	d
LUA_MASKRET	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_MASKRET	/;"	d
LUA_MASKRET	..\\scite\\lua\\include\\lua.h	/^#define LUA_MASKRET	/;"	d
LUA_MATHLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_MATHLIBNAME	/;"	d
LUA_MATHLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_MATHLIBNAME	/;"	d
LUA_MAXCAPTURES	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_MAXCAPTURES	/;"	d
LUA_MAXCAPTURES	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_MAXCAPTURES	/;"	d
LUA_MAXINPUT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_MAXINPUT	/;"	d
LUA_MAXINPUT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_MAXINPUT	/;"	d
LUA_MINBUFFER	..\\scintilla\\lua\\src\\llimits.h	/^#define LUA_MINBUFFER	/;"	d
LUA_MINSTACK	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_MINSTACK	/;"	d
LUA_MINSTACK	..\\scite\\lua\\include\\lua.h	/^#define LUA_MINSTACK	/;"	d
LUA_MULTRET	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_MULTRET	/;"	d
LUA_MULTRET	..\\scite\\lua\\include\\lua.h	/^#define LUA_MULTRET	/;"	d
LUA_NOREF	..\\scintilla\\lua\\src\\lauxlib.h	/^#define LUA_NOREF /;"	d
LUA_NOREF	..\\scite\\lua\\include\\lauxlib.h	/^#define LUA_NOREF /;"	d
LUA_NUMBER	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_NUMBER	/;"	d
LUA_NUMBER	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_NUMBER	/;"	d
LUA_NUMBER_DOUBLE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_NUMBER_DOUBLE$/;"	d
LUA_NUMBER_DOUBLE	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_NUMBER_DOUBLE$/;"	d
LUA_NUMBER_FMT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_NUMBER_FMT	/;"	d
LUA_NUMBER_FMT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_NUMBER_FMT	/;"	d
LUA_NUMBER_SCAN	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_NUMBER_SCAN	/;"	d
LUA_NUMBER_SCAN	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_NUMBER_SCAN	/;"	d
LUA_OFSEP	..\\scintilla\\lua\\src\\loadlib.c	/^#define LUA_OFSEP	/;"	d	file:
LUA_OSLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_OSLIBNAME	/;"	d
LUA_OSLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_OSLIBNAME	/;"	d
LUA_PATH	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PATH /;"	d
LUA_PATH	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PATH /;"	d
LUA_PATHSEP	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PATHSEP	/;"	d
LUA_PATHSEP	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PATHSEP	/;"	d
LUA_PATH_DEFAULT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PATH_DEFAULT /;"	d
LUA_PATH_DEFAULT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PATH_DEFAULT /;"	d
LUA_PATH_MARK	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PATH_MARK	/;"	d
LUA_PATH_MARK	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PATH_MARK	/;"	d
LUA_POF	..\\scintilla\\lua\\src\\loadlib.c	/^#define LUA_POF	/;"	d	file:
LUA_PROGNAME	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PROGNAME	/;"	d
LUA_PROGNAME	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PROGNAME	/;"	d
LUA_PROMPT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PROMPT	/;"	d
LUA_PROMPT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PROMPT	/;"	d
LUA_PROMPT2	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_PROMPT2	/;"	d
LUA_PROMPT2	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_PROMPT2	/;"	d
LUA_QL	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_QL(/;"	d	signature:(x)
LUA_QL	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_QL(/;"	d	signature:(x)
LUA_QS	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_QS	/;"	d
LUA_QS	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_QS	/;"	d
LUA_REFNIL	..\\scintilla\\lua\\src\\lauxlib.h	/^#define LUA_REFNIL /;"	d
LUA_REFNIL	..\\scite\\lua\\include\\lauxlib.h	/^#define LUA_REFNIL /;"	d
LUA_REGISTRYINDEX	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_REGISTRYINDEX	/;"	d
LUA_REGISTRYINDEX	..\\scite\\lua\\include\\lua.h	/^#define LUA_REGISTRYINDEX	/;"	d
LUA_RELEASE	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_RELEASE	/;"	d
LUA_RELEASE	..\\scite\\lua\\include\\lua.h	/^#define LUA_RELEASE	/;"	d
LUA_ROOT	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_ROOT	/;"	d
LUA_ROOT	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_ROOT	/;"	d
LUA_SIGNATURE	..\\scintilla\\lua\\src\\lua.h	/^#define	LUA_SIGNATURE	/;"	d
LUA_SIGNATURE	..\\scite\\lua\\include\\lua.h	/^#define	LUA_SIGNATURE	/;"	d
LUA_STRLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_STRLIBNAME	/;"	d
LUA_STRLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_STRLIBNAME	/;"	d
LUA_TABLIBNAME	..\\scintilla\\lua\\src\\lualib.h	/^#define LUA_TABLIBNAME	/;"	d
LUA_TABLIBNAME	..\\scite\\lua\\include\\lualib.h	/^#define LUA_TABLIBNAME	/;"	d
LUA_TBOOLEAN	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TBOOLEAN	/;"	d
LUA_TBOOLEAN	..\\scite\\lua\\include\\lua.h	/^#define LUA_TBOOLEAN	/;"	d
LUA_TDEADKEY	..\\scintilla\\lua\\src\\lobject.h	/^#define LUA_TDEADKEY	/;"	d
LUA_TFUNCTION	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TFUNCTION	/;"	d
LUA_TFUNCTION	..\\scite\\lua\\include\\lua.h	/^#define LUA_TFUNCTION	/;"	d
LUA_TLIGHTUSERDATA	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TLIGHTUSERDATA	/;"	d
LUA_TLIGHTUSERDATA	..\\scite\\lua\\include\\lua.h	/^#define LUA_TLIGHTUSERDATA	/;"	d
LUA_TMPNAMBUFSIZE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_TMPNAMBUFSIZE	/;"	d
LUA_TMPNAMBUFSIZE	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_TMPNAMBUFSIZE	/;"	d
LUA_TNIL	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TNIL	/;"	d
LUA_TNIL	..\\scite\\lua\\include\\lua.h	/^#define LUA_TNIL	/;"	d
LUA_TNONE	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TNONE	/;"	d
LUA_TNONE	..\\scite\\lua\\include\\lua.h	/^#define LUA_TNONE	/;"	d
LUA_TNUMBER	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TNUMBER	/;"	d
LUA_TNUMBER	..\\scite\\lua\\include\\lua.h	/^#define LUA_TNUMBER	/;"	d
LUA_TPROTO	..\\scintilla\\lua\\src\\lobject.h	/^#define LUA_TPROTO	/;"	d
LUA_TSTRING	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TSTRING	/;"	d
LUA_TSTRING	..\\scite\\lua\\include\\lua.h	/^#define LUA_TSTRING	/;"	d
LUA_TTABLE	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TTABLE	/;"	d
LUA_TTABLE	..\\scite\\lua\\include\\lua.h	/^#define LUA_TTABLE	/;"	d
LUA_TTHREAD	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TTHREAD	/;"	d
LUA_TTHREAD	..\\scite\\lua\\include\\lua.h	/^#define LUA_TTHREAD	/;"	d
LUA_TUPVAL	..\\scintilla\\lua\\src\\lobject.h	/^#define LUA_TUPVAL	/;"	d
LUA_TUSERDATA	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_TUSERDATA	/;"	d
LUA_TUSERDATA	..\\scite\\lua\\include\\lua.h	/^#define LUA_TUSERDATA	/;"	d
LUA_USE_DLOPEN	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_DLOPEN	/;"	d
LUA_USE_DLOPEN	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_DLOPEN	/;"	d
LUA_USE_ISATTY	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_ISATTY$/;"	d
LUA_USE_ISATTY	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_ISATTY$/;"	d
LUA_USE_MKSTEMP	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_MKSTEMP$/;"	d
LUA_USE_MKSTEMP	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_MKSTEMP$/;"	d
LUA_USE_POPEN	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_POPEN$/;"	d
LUA_USE_POPEN	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_POPEN$/;"	d
LUA_USE_POSIX	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_POSIX$/;"	d
LUA_USE_POSIX	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_POSIX$/;"	d
LUA_USE_READLINE	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_READLINE	/;"	d
LUA_USE_READLINE	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_READLINE	/;"	d
LUA_USE_ULONGJMP	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_USE_ULONGJMP$/;"	d
LUA_USE_ULONGJMP	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_USE_ULONGJMP$/;"	d
LUA_VERSION	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_VERSION	/;"	d
LUA_VERSION	..\\scite\\lua\\include\\lua.h	/^#define LUA_VERSION	/;"	d
LUA_VERSION_NUM	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_VERSION_NUM	/;"	d
LUA_VERSION_NUM	..\\scite\\lua\\include\\lua.h	/^#define LUA_VERSION_NUM	/;"	d
LUA_WIN	..\\scintilla\\lua\\src\\luaconf.h	/^#define LUA_WIN$/;"	d
LUA_WIN	..\\scite\\lua\\include\\luaconf.h	/^#define LUA_WIN$/;"	d
LUA_YIELD	..\\scintilla\\lua\\src\\lua.h	/^#define LUA_YIELD	/;"	d
LUA_YIELD	..\\scite\\lua\\include\\lua.h	/^#define LUA_YIELD	/;"	d
LWHITE	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LWHITE(0xFF, 0xFF, 0xFF);$/;"	v	typeref:typename:ColourDesired	file:
LYELLOW	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired LYELLOW(0xFF, 0xFF, 0);$/;"	v	typeref:typename:ColourDesired	file:
L_ESC	..\\scintilla\\lua\\src\\lstrlib.c	/^#define L_ESC	/;"	d	file:
L_Umaxalign	..\\scintilla\\lua\\src\\llimits.h	/^typedef LUAI_USER_ALIGNMENT_T L_Umaxalign;$/;"	t	typeref:typename:LUAI_USER_ALIGNMENT_T
Label	..\\scite\\gtk\\Widget.cxx	/^void WTable::Label(GtkWidget *child) {$/;"	f	class:WTable	typeref:typename:void	signature:(GtkWidget * child)
LanguageMenuItem	..\\scite\\src\\SciTEBase.h	/^class LanguageMenuItem {$/;"	c
Last	..\\scintilla\\lexlib\\SubStyles.h	/^	int Last() const {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:int	access:public	signature:() const
Last	..\\scintilla\\src\\Document.h	/^	Sci::Position Last() const {$/;"	f	class:Scintilla::Range	typeref:typename:Sci::Position	access:public	signature:() const
Last	..\\scintilla\\src\\Selection.cxx	/^SelectionPosition Selection::Last() const {$/;"	f	class:Selection	typeref:typename:SelectionPosition	signature:() const
LastAllocated	..\\scintilla\\lexlib\\SubStyles.h	/^	int LastAllocated() const {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:() const
LayoutLine	..\\scintilla\\src\\EditView.cxx	/^void EditView::LayoutLine(const EditModel &model, Sci::Line line, Surface *surface, const ViewSt/;"	f	class:EditView	typeref:typename:void	signature:(const EditModel & model,Sci::Line line,Surface * surface,const ViewStyle & vstyle,LineLayout * ll,int width)
LayoutUI	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::LayoutUI() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
LenChar	..\\scintilla\\src\\Document.cxx	/^int Document::LenChar(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:int	signature:(Sci::Position pos)
Length	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int Length() { return list.size(); }$/;"	f	class:ListBoxImpl	typeref:typename:int	file:	access:public	signature:()
Length	..\\scintilla\\gtk\\PlatGTK.cxx	/^int ListBoxX::Length() {$/;"	f	class:ListBoxX	typeref:typename:int	signature:()
Length	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position Length() const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:public	signature:() const
Length	..\\scintilla\\lexlib\\SubStyles.h	/^	int Length() const {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:int	access:public	signature:() const
Length	..\\scintilla\\lexlib\\SubStyles.h	/^	int Length(int styleBase) {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:(int styleBase)
Length	..\\scintilla\\lexlib\\WordList.cxx	/^int WordList::Length() const {$/;"	f	class:WordList	typeref:typename:int	signature:() const
Length	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int ListBoxImpl::Length()$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:int	signature:()
Length	..\\scintilla\\src\\CellBuffer.cxx	/^Sci::Position CellBuffer::Length() const {$/;"	f	class:CellBuffer	typeref:typename:Sci::Position	signature:() const
Length	..\\scintilla\\src\\Document.h	/^	Sci_Position SCI_METHOD Length() const { return cb.Length(); }$/;"	f	class:Scintilla::Document	typeref:typename:Sci_Position SCI_METHOD	access:public	signature:() const
Length	..\\scintilla\\src\\Editor.h	/^	size_t Length() const {$/;"	f	class:Scintilla::SelectionText	typeref:typename:size_t	access:public	signature:() const
Length	..\\scintilla\\src\\PerLine.cxx	/^int LineAnnotation::Length(Sci::Line line) const {$/;"	f	class:LineAnnotation	typeref:typename:int	signature:(Sci::Line line) const
Length	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::Length() const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:() const
Length	..\\scintilla\\src\\Selection.cxx	/^Sci::Position Selection::Length() const {$/;"	f	class:Selection	typeref:typename:Sci::Position	signature:() const
Length	..\\scintilla\\src\\Selection.cxx	/^Sci::Position SelectionRange::Length() const {$/;"	f	class:SelectionRange	typeref:typename:Sci::Position	signature:() const
Length	..\\scintilla\\src\\SparseVector.h	/^	Sci::Position Length() const {$/;"	f	class:Scintilla::SparseVector	typeref:typename:Sci::Position	access:public	signature:() const
Length	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t Length() const {$/;"	f	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:public	signature:() const
Length	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::Length() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:()
Length	..\\scite\\src\\StringHelpers.h	/^	int Length() const {$/;"	f	class:EntryMemory	typeref:typename:int	access:public	signature:() const
Length	..\\scite\\src\\StringList.h	/^	size_t Length() const { return words.size(); }$/;"	f	class:StringList	typeref:typename:size_t	access:public	signature:() const
Length	..\\scite\\src\\StyleWriter.cxx	/^int TextReader::Length() {$/;"	f	class:TextReader	typeref:typename:int	signature:()
LengthCurrent	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position LengthCurrent() const {$/;"	f	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:public	signature:() const
LengthDocument	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::LengthDocument() {$/;"	f	class:SciTEBase	typeref:typename:int	signature:()
LengthOfGSD	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static gint LengthOfGSD(GtkSelectionData *sd) { return gtk_selection_data_get_length(sd); }$/;"	f	typeref:typename:gint	file:	signature:(GtkSelectionData * sd)
LengthWithTerminator	..\\scintilla\\src\\Editor.h	/^	size_t LengthWithTerminator() const {$/;"	f	class:Scintilla::SelectionText	typeref:typename:size_t	access:public	signature:() const
LengthWord	..\\scite\\src\\StringList.cxx	/^static size_t LengthWord(const char *word, char otherSeparator) {$/;"	f	typeref:typename:size_t	file:	signature:(const char * word,char otherSeparator)
LevelAt	..\\scintilla\\lexlib\\LexAccessor.h	/^	int LevelAt(Sci_Position line) const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:int	access:public	signature:(Sci_Position line) const
LevelAt	..\\scite\\src\\LuaExtension.cxx	/^	static int LevelAt(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
LevelAt	..\\scite\\src\\StyleWriter.cxx	/^int TextReader::LevelAt(int line) {$/;"	f	class:TextReader	typeref:typename:int	signature:(int line)
LevelNumber	..\\scintilla\\src\\Document.h	/^inline int LevelNumber(int level) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(int level)
LevelNumber	..\\scite\\src\\SciTEBase.cxx	/^static int LevelNumber(int level) {$/;"	f	typeref:typename:int	file:	signature:(int level)
Levels	..\\scintilla\\src\\Document.cxx	/^LineLevels *Document::Levels() const {$/;"	f	class:Document	typeref:typename:LineLevels *	signature:() const
Lex	..\\scintilla\\lexlib\\LexerModule.cxx	/^void LexerModule::Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle,$/;"	f	class:LexerModule	typeref:typename:void	signature:(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,WordList * keywordlists[],Accessor & styler) const
Lex	..\\scintilla\\lexlib\\LexerNoExceptions.cxx	/^void SCI_METHOD LexerNoExceptions::Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initS/;"	f	class:LexerNoExceptions	typeref:typename:void SCI_METHOD	signature:(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,IDocument * pAccess)
Lex	..\\scintilla\\lexlib\\LexerSimple.cxx	/^void SCI_METHOD LexerSimple::Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, /;"	f	class:LexerSimple	typeref:typename:void SCI_METHOD	signature:(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,IDocument * pAccess)
LexAccessor	..\\scintilla\\lexlib\\LexAccessor.h	/^	explicit LexAccessor(IDocument *pAccess_) :$/;"	f	class:Scintilla::LexAccessor	access:public	signature:(IDocument * pAccess_)
LexAccessor	..\\scintilla\\lexlib\\LexAccessor.h	/^class LexAccessor {$/;"	c	namespace:Scintilla
LexClasses	..\\scintilla\\lexlib\\LexerModule.cxx	/^const LexicalClass *LexerModule::LexClasses() const {$/;"	f	class:LexerModule	typeref:typename:const LexicalClass *	signature:() const
LexInterface	..\\scintilla\\src\\Document.h	/^	explicit LexInterface(Document *pdoc_) : pdoc(pdoc_), instance(0), performingStyle(false) {$/;"	f	class:Scintilla::LexInterface	access:public	signature:(Document * pdoc_)
LexInterface	..\\scintilla\\src\\Document.h	/^class LexInterface {$/;"	c	namespace:Scintilla
LexState	..\\scintilla\\lua\\src\\llex.h	/^typedef struct LexState {$/;"	s
LexState	..\\scintilla\\lua\\src\\llex.h	/^} LexState;$/;"	t	typeref:struct:LexState
LexState	..\\scintilla\\src\\ScintillaBase.cxx	/^LexState::LexState(Document *pdoc_) : LexInterface(pdoc_) {$/;"	f	class:LexState	signature:(Document * pdoc_)
LexState	..\\scintilla\\src\\ScintillaBase.cxx	/^class LexState : public LexInterface {$/;"	c	namespace:Scintilla	file:	inherits:LexInterface
LexerBase	..\\scintilla\\lexlib\\LexerBase.cxx	/^LexerBase::LexerBase(const LexicalClass *lexClasses_, size_t nClasses_) :$/;"	f	class:LexerBase	signature:(const LexicalClass * lexClasses_,size_t nClasses_)
LexerBase	..\\scintilla\\lexlib\\LexerBase.h	/^class LexerBase : public ILexerWithMetaData {$/;"	c	namespace:Scintilla	inherits:ILexerWithMetaData
LexerChanged	..\\scintilla\\src\\Document.cxx	/^void Document::LexerChanged() {$/;"	f	class:Document	typeref:typename:void	signature:()
LexerFactoryFunction	..\\scintilla\\lexlib\\LexerModule.h	/^typedef ILexer *(*LexerFactoryFunction)();$/;"	t	namespace:Scintilla	typeref:typename:ILexer * (*)()
LexerFunction	..\\scintilla\\lexlib\\LexerModule.h	/^typedef void (*LexerFunction)(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle,$/;"	t	namespace:Scintilla	typeref:typename:void (*)(Sci_PositionU startPos,Sci_Position lengthDoc,int initStyle,WordList * keywordlists[],Accessor & styler)
LexerLibrary	..\\scintilla\\src\\ExternalLexer.cxx	/^LexerLibrary::LexerLibrary(const char *moduleName_) {$/;"	f	class:LexerLibrary	signature:(const char * moduleName_)
LexerLibrary	..\\scintilla\\src\\ExternalLexer.h	/^class LexerLibrary {$/;"	c	namespace:Scintilla
LexerManager	..\\scintilla\\src\\ExternalLexer.cxx	/^LexerManager::LexerManager() {$/;"	f	class:LexerManager	signature:()
LexerManager	..\\scintilla\\src\\ExternalLexer.h	/^class LexerManager {$/;"	c	namespace:Scintilla
LexerModule	..\\scintilla\\lexlib\\LexerModule.cxx	/^LexerModule::LexerModule(int language_,$/;"	f	class:LexerModule	signature:(int language_,LexerFactoryFunction fnFactory_,const char * languageName_,const char * const wordListDescriptions_[])
LexerModule	..\\scintilla\\lexlib\\LexerModule.cxx	/^LexerModule::LexerModule(int language_,$/;"	f	class:LexerModule	signature:(int language_,LexerFunction fnLexer_,const char * languageName_,LexerFunction fnFolder_,const char * const wordListDescriptions_[],const LexicalClass * lexClasses_,size_t nClasses_)
LexerModule	..\\scintilla\\lexlib\\LexerModule.h	/^class LexerModule {$/;"	c	namespace:Scintilla
LexerNoExceptions	..\\scintilla\\lexlib\\LexerNoExceptions.h	/^class LexerNoExceptions : public LexerBase {$/;"	c	namespace:Scintilla	inherits:LexerBase
LexerSimple	..\\scintilla\\lexlib\\LexerSimple.cxx	/^LexerSimple::LexerSimple(const LexerModule *module_) :$/;"	f	class:LexerSimple	signature:(const LexerModule * module_)
LexerSimple	..\\scintilla\\lexlib\\LexerSimple.h	/^class LexerSimple : public LexerBase {$/;"	c	namespace:Scintilla	inherits:LexerBase
LexicalClass	..\\scintilla\\lexlib\\LexAccessor.h	/^struct LexicalClass {$/;"	s	namespace:Scintilla
Limits	..\\scintilla\\src\\Selection.cxx	/^SelectionSegment Selection::Limits() const {$/;"	f	class:Selection	typeref:typename:SelectionSegment	signature:() const
LimitsForRectangularElseMain	..\\scintilla\\src\\Selection.cxx	/^SelectionSegment Selection::LimitsForRectangularElseMain() const {$/;"	f	class:Selection	typeref:typename:SelectionSegment	signature:() const
Line	..\\scintilla\\src\\Position.h	/^typedef int Line;$/;"	t	namespace:Sci	typeref:typename:int
Line	..\\scite\\src\\LuaExtension.cxx	/^	static int Line(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
LineAnnotation	..\\scintilla\\src\\PerLine.h	/^	LineAnnotation() {$/;"	f	class:Scintilla::LineAnnotation	access:public	signature:()
LineAnnotation	..\\scintilla\\src\\PerLine.h	/^class LineAnnotation : public PerLine {$/;"	c	namespace:Scintilla	inherits:PerLine
LineArea	..\\scite\\win32\\Strips.cxx	/^GUI::Rectangle Strip::LineArea(int line) {$/;"	f	class:Strip	typeref:typename:GUI::Rectangle	signature:(int line)
LineEnd	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position LineEnd(Sci_Position line) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:public	signature:(Sci_Position line)
LineEnd	..\\scintilla\\src\\Document.cxx	/^Sci_Position SCI_METHOD Document::LineEnd(Sci_Position line) const {$/;"	f	class:Document	typeref:typename:Sci_Position SCI_METHOD	signature:(Sci_Position line) const
LineEndPosition	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::LineEndPosition(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position position) const
LineEndString	..\\scite\\src\\SciTEBase.cxx	/^static const char *LineEndString(int eolMode) {$/;"	f	typeref:typename:const char *	file:	signature:(int eolMode)
LineEndTypesSupported	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::LineEndTypesSupported() {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:()
LineEndTypesSupported	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::LineEndTypesSupported() {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:()
LineEndTypesSupported	..\\scintilla\\src\\Document.cxx	/^int Document::LineEndTypesSupported() const {$/;"	f	class:Document	typeref:typename:int	signature:() const
LineEndTypesSupported	..\\scintilla\\src\\Document.cxx	/^int LexInterface::LineEndTypesSupported() {$/;"	f	class:LexInterface	typeref:typename:int	signature:()
LineEndTypesSupported	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::LineEndTypesSupported() {$/;"	f	class:LexState	typeref:typename:int	signature:()
LineEndWrapPosition	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::LineEndWrapPosition(Sci::Position position) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position position)
LineFromHandle	..\\scintilla\\src\\Document.cxx	/^Sci::Line Document::LineFromHandle(int markerHandle) const {$/;"	f	class:Document	typeref:typename:Sci::Line	signature:(int markerHandle) const
LineFromHandle	..\\scintilla\\src\\PerLine.cxx	/^Sci::Line LineMarkers::LineFromHandle(int markerHandle) {$/;"	f	class:LineMarkers	typeref:typename:Sci::Line	signature:(int markerHandle)
LineFromLocation	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::LineFromLocation(Point pt) const {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:(Point pt) const
LineFromPosition	..\\scintilla\\src\\CellBuffer.cxx	/^Sci::Line LineVector::LineFromPosition(Sci::Position pos) const {$/;"	f	class:LineVector	typeref:typename:Sci::Line	signature:(Sci::Position pos) const
LineFromPosition	..\\scintilla\\src\\CellBuffer.h	/^	Sci::Line LineFromPosition(Sci::Position pos) const { return lv.LineFromPosition(pos); }$/;"	f	class:Scintilla::CellBuffer	typeref:typename:Sci::Line	access:public	signature:(Sci::Position pos) const
LineFromPosition	..\\scintilla\\src\\Document.cxx	/^Sci_Position SCI_METHOD Document::LineFromPosition(Sci_Position pos) const {$/;"	f	class:Document	typeref:typename:Sci_Position SCI_METHOD	signature:(Sci_Position pos) const
LineLastVisible	..\\scintilla\\src\\PositionCache.cxx	/^int LineLayout::LineLastVisible(int line) const {$/;"	f	class:LineLayout	typeref:typename:int	signature:(int line) const
LineLayout	..\\scintilla\\src\\PositionCache.cxx	/^LineLayout::LineLayout(int maxLineLength_) :$/;"	f	class:LineLayout	signature:(int maxLineLength_)
LineLayout	..\\scintilla\\src\\PositionCache.h	/^class LineLayout {$/;"	c	namespace:Scintilla
LineLayoutCache	..\\scintilla\\src\\PositionCache.cxx	/^LineLayoutCache::LineLayoutCache() :$/;"	f	class:LineLayoutCache	signature:()
LineLayoutCache	..\\scintilla\\src\\PositionCache.h	/^class LineLayoutCache {$/;"	c	namespace:Scintilla
LineLength	..\\scintilla\\src\\Document.h	/^	size_t LineLength(size_t start) const {$/;"	f	struct:Scintilla::StyledText	typeref:typename:size_t	access:public	signature:(size_t start) const
LineLevels	..\\scintilla\\src\\PerLine.h	/^	LineLevels() {$/;"	f	class:Scintilla::LineLevels	access:public	signature:()
LineLevels	..\\scintilla\\src\\PerLine.h	/^class LineLevels : public PerLine {$/;"	c	namespace:Scintilla	inherits:PerLine
LineMarker	..\\scintilla\\src\\LineMarker.cxx	/^LineMarker::LineMarker() {$/;"	f	class:LineMarker	signature:()
LineMarker	..\\scintilla\\src\\LineMarker.cxx	/^LineMarker::LineMarker(const LineMarker &) {$/;"	f	class:LineMarker	signature:(const LineMarker &)
LineMarker	..\\scintilla\\src\\LineMarker.h	/^class LineMarker {$/;"	c	namespace:Scintilla
LineMarkers	..\\scintilla\\src\\PerLine.h	/^	LineMarkers() : handleCurrent(0) {$/;"	f	class:Scintilla::LineMarkers	access:public	signature:()
LineMarkers	..\\scintilla\\src\\PerLine.h	/^class LineMarkers : public PerLine {$/;"	c	namespace:Scintilla	inherits:PerLine
LineNumber	..\\scite\\src\\SciTEIO.cxx	/^	int LineNumber() const {$/;"	f	class:FileReader	typeref:typename:int	file:	access:public	signature:() const
LineRange	..\\scintilla\\src\\Document.cxx	/^	Range LineRange(Sci::Line line) const {$/;"	f	class:__anon1ef09aa80111::RESearchRange	typeref:typename:Range	file:	access:public	signature:(Sci::Line line) const
LineRange	..\\scite\\src\\MatchMarker.h	/^	LineRange(int lineStart_, int lineEnd_) : lineStart(lineStart_), lineEnd(lineEnd_) {}$/;"	f	struct:LineRange	access:public	signature:(int lineStart_,int lineEnd_)
LineRange	..\\scite\\src\\MatchMarker.h	/^struct LineRange {$/;"	s
LineReverse	..\\scintilla\\src\\Editor.cxx	/^void Editor::LineReverse() {$/;"	f	class:Editor	typeref:typename:void	signature:()
LineSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::LineSelection(Sci::Position lineCurrentPos_, Sci::Position lineAnchorPos_, bool who/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position lineCurrentPos_,Sci::Position lineAnchorPos_,bool wholeLine)
LineSelectionRange	..\\scintilla\\src\\Editor.cxx	/^SelectionRange Editor::LineSelectionRange(SelectionPosition currentPos_, SelectionPosition ancho/;"	f	class:Editor	typeref:typename:SelectionRange	signature:(SelectionPosition currentPos_,SelectionPosition anchor_) const
LineStart	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position LineStart(Sci_Position line) const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:public	signature:(Sci_Position line) const
LineStart	..\\scintilla\\src\\CellBuffer.cxx	/^Sci::Position CellBuffer::LineStart(Sci::Line line) const {$/;"	f	class:CellBuffer	typeref:typename:Sci::Position	signature:(Sci::Line line) const
LineStart	..\\scintilla\\src\\CellBuffer.h	/^	Sci::Position LineStart(Sci::Line line) const {$/;"	f	class:Scintilla::LineVector	typeref:typename:Sci::Position	access:public	signature:(Sci::Line line) const
LineStart	..\\scintilla\\src\\Document.cxx	/^Sci_Position SCI_METHOD Document::LineStart(Sci_Position line) const {$/;"	f	class:Document	typeref:typename:Sci_Position SCI_METHOD	signature:(Sci_Position line) const
LineStart	..\\scintilla\\src\\PositionCache.cxx	/^int LineLayout::LineStart(int line) const {$/;"	f	class:LineLayout	typeref:typename:int	signature:(int line) const
LineStart	..\\scite\\src\\StyleWriter.cxx	/^int TextReader::LineStart(int line) {$/;"	f	class:TextReader	typeref:typename:int	signature:(int line)
LineState	..\\scintilla\\src\\PerLine.h	/^	LineState() {$/;"	f	class:Scintilla::LineState	access:public	signature:()
LineState	..\\scintilla\\src\\PerLine.h	/^class LineState : public PerLine {$/;"	c	namespace:Scintilla	inherits:PerLine
LineState	..\\scite\\src\\LuaExtension.cxx	/^	static int LineState(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
LineTabstops	..\\scintilla\\src\\PerLine.h	/^	LineTabstops() {$/;"	f	class:Scintilla::LineTabstops	access:public	signature:()
LineTabstops	..\\scintilla\\src\\PerLine.h	/^class LineTabstops : public PerLine {$/;"	c	namespace:Scintilla	inherits:PerLine
LineTo	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void LineTo(int x_, int y_) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(int x_,int y_)
LineTo	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::LineTo(int x_, int y_) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(int x_,int y_)
LineTo	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::LineTo(int x_, int y_)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(int x_,int y_)
LineTo	..\\scintilla\\src\\MarginView.cxx	/^		void LineTo(int xRelative, int yRelative) {$/;"	f	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:void	file:	access:public	signature:(int xRelative,int yRelative)
LineTo	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::LineTo(int x_, int y_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(int x_,int y_)
LineTo	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::LineTo(int x_, int y_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(int x_,int y_)
LineToItem	..\\scintilla\\win32\\PlatWin.cxx	/^	LineToItem() {$/;"	f	class:Scintilla::LineToItem	file:	access:public	signature:()
LineToItem	..\\scintilla\\win32\\PlatWin.cxx	/^class LineToItem {$/;"	c	namespace:Scintilla	file:
LineTranspose	..\\scintilla\\src\\Editor.cxx	/^void Editor::LineTranspose() {$/;"	f	class:Editor	typeref:typename:void	signature:()
LineVector	..\\scintilla\\src\\CellBuffer.cxx	/^LineVector::LineVector() : starts(256), perLine(0) {$/;"	f	class:LineVector	signature:()
LineVector	..\\scintilla\\src\\CellBuffer.h	/^class LineVector {$/;"	c	namespace:Scintilla
Lines	..\\scintilla\\src\\CellBuffer.cxx	/^Sci::Line CellBuffer::Lines() const {$/;"	f	class:CellBuffer	typeref:typename:Sci::Line	signature:() const
Lines	..\\scintilla\\src\\CellBuffer.h	/^	Sci::Line Lines() const {$/;"	f	class:Scintilla::LineVector	typeref:typename:Sci::Line	access:public	signature:() const
Lines	..\\scintilla\\src\\PerLine.cxx	/^int LineAnnotation::Lines(Sci::Line line) const {$/;"	f	class:LineAnnotation	typeref:typename:int	signature:(Sci::Line line) const
Lines	..\\scite\\win32\\Strips.cxx	/^int ReplaceStrip::Lines() const {$/;"	f	class:ReplaceStrip	typeref:typename:int	signature:() const
Lines	..\\scite\\win32\\Strips.cxx	/^int Strip::Lines() const {$/;"	f	class:Strip	typeref:typename:int	signature:() const
Lines	..\\scite\\win32\\Strips.cxx	/^int UserStrip::Lines() const {$/;"	f	class:UserStrip	typeref:typename:int	signature:() const
LinesAddedOrRemoved	..\\scintilla\\src\\EditView.cxx	/^void EditView::LinesAddedOrRemoved(Sci::Line lineOfPos, Sci::Line linesAdded) {$/;"	f	class:EditView	typeref:typename:void	signature:(Sci::Line lineOfPos,Sci::Line linesAdded)
LinesBreak	..\\scite\\src\\MatchMarker.cxx	/^std::vector<LineRange> LinesBreak(GUI::ScintillaWindow *pSci) {$/;"	f	typeref:typename:std::vector<LineRange>	signature:(GUI::ScintillaWindow * pSci)
LinesDisplayed	..\\scintilla\\src\\ContractionState.cxx	/^Sci::Line ContractionState::LinesDisplayed() const {$/;"	f	class:ContractionState	typeref:typename:Sci::Line	signature:() const
LinesFormFromTextForm	..\\scintilla\\src\\XPM.cxx	/^std::vector<const char *> XPM::LinesFormFromTextForm(const char *textForm) {$/;"	f	class:XPM	typeref:typename:std::vector<const char * >	signature:(const char * textForm)
LinesFromString	..\\scite\\src\\SciTEBuffers.cxx	/^static std::vector<int> LinesFromString(const std::string &s) {$/;"	f	typeref:typename:std::vector<int>	file:	signature:(const std::string & s)
LinesInDoc	..\\scintilla\\src\\ContractionState.cxx	/^Sci::Line ContractionState::LinesInDoc() const {$/;"	f	class:ContractionState	typeref:typename:Sci::Line	signature:() const
LinesJoin	..\\scintilla\\src\\Editor.cxx	/^void Editor::LinesJoin() {$/;"	f	class:Editor	typeref:typename:void	signature:()
LinesOnScreen	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::LinesOnScreen() const {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:() const
LinesOverlap	..\\scintilla\\src\\EditView.cxx	/^bool EditView::LinesOverlap() const {$/;"	f	class:EditView	typeref:typename:bool	signature:() const
LinesSplit	..\\scintilla\\src\\Editor.cxx	/^void Editor::LinesSplit(int pixelWidth) {$/;"	f	class:Editor	typeref:typename:void	signature:(int pixelWidth)
LinesToScroll	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::LinesToScroll() const {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:() const
LinesTotal	..\\scintilla\\src\\Document.cxx	/^Sci::Line Document::LinesTotal() const {$/;"	f	class:Document	typeref:typename:Sci::Line	signature:() const
List	..\\scite\\src\\FilePath.cxx	/^void FilePath::List(FilePathSet &directories, FilePathSet &files) {$/;"	f	class:FilePath	typeref:typename:void	signature:(FilePathSet & directories,FilePathSet & files)
ListBox	..\\scintilla\\curses\\ScintillaCurses.cxx	/^ListBox::ListBox() {}$/;"	f	class:ListBox	signature:()
ListBox	..\\scintilla\\gtk\\PlatGTK.cxx	/^ListBox::ListBox() {$/;"	f	class:ListBox	signature:()
ListBox	..\\scintilla\\include\\Platform.h	/^class ListBox : public Window {$/;"	c	namespace:Scintilla	inherits:Window
ListBox	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListBox::ListBox() {}$/;"	f	class:Scintilla::ListBox	signature:()
ListBox	..\\scintilla\\win32\\PlatWin.cxx	/^ListBox::ListBox() {$/;"	f	class:Scintilla::ListBox	signature:()
ListBoxEvent	..\\scintilla\\include\\Platform.h	/^	ListBoxEvent(EventType event_) : event(event_) {$/;"	f	struct:Scintilla::ListBoxEvent	access:public	signature:(EventType event_)
ListBoxEvent	..\\scintilla\\include\\Platform.h	/^struct ListBoxEvent {$/;"	s	namespace:Scintilla
ListBoxImpl	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  ListBoxImpl() : height(5), width(10), selection(0), delegate(NULL) {$/;"	f	class:ListBoxImpl	file:	access:public	signature:()
ListBoxImpl	..\\scintilla\\curses\\ScintillaCurses.cxx	/^class ListBoxImpl : public ListBox {$/;"	c	file:	inherits:ListBox
ListBoxImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListBoxImpl::ListBoxImpl()$/;"	f	class:Scintilla::ListBoxImpl	signature:()
ListBoxImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^class ListBoxImpl : public ListBox {$/;"	c	namespace:Scintilla	file:	inherits:ListBox
ListBoxX	..\\scintilla\\gtk\\PlatGTK.cxx	/^	ListBoxX() : widCached(0), frame(0), list(0), scroller(0), pixhash(NULL), pixbuf_renderer(0),$/;"	f	class:ListBoxX	file:	access:public	signature:()
ListBoxX	..\\scintilla\\gtk\\PlatGTK.cxx	/^class ListBoxX : public ListBox {$/;"	c	file:	inherits:ListBox
ListBoxX	..\\scintilla\\win32\\PlatWin.cxx	/^	ListBoxX() : lineHeight(10), fontCopy(0), technology(0), lb(0), unicodeMode(false),$/;"	f	class:Scintilla::ListBoxX	file:	access:public	signature:()
ListBoxX	..\\scintilla\\win32\\PlatWin.cxx	/^class ListBoxX : public ListBox {$/;"	c	namespace:Scintilla	file:	inherits:ListBox
ListBoxX_ClassName	..\\scintilla\\win32\\PlatWin.cxx	/^const TCHAR ListBoxX_ClassName[] = TEXT("ListBoxX");$/;"	v	namespace:Scintilla	typeref:typename:const TCHAR[]
ListBoxX_Register	..\\scintilla\\win32\\PlatWin.cxx	/^static bool ListBoxX_Register() {$/;"	f	namespace:Scintilla	typeref:typename:bool	file:	signature:()
ListBoxX_Unregister	..\\scintilla\\win32\\PlatWin.cxx	/^bool ListBoxX_Unregister() {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:()
ListFromString	..\\scite\\src\\StringHelpers.h	/^inline std::vector<GUI::gui_string> ListFromString(const GUI::gui_string &args) {$/;"	f	typeref:typename:std::vector<GUI::gui_string>	signature:(const GUI::gui_string & args)
ListImage	..\\scintilla\\gtk\\PlatGTK.cxx	/^struct ListImage {$/;"	s	file:
ListItemData	..\\scintilla\\win32\\PlatWin.cxx	/^struct ListItemData {$/;"	s	namespace:Scintilla	file:
ListNotify	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::ListNotify(ListBoxEvent *plbe) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(ListBoxEvent * plbe)
ListWidget	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListWidget::ListWidget(QWidget *parent)$/;"	f	class:Scintilla::ListWidget	signature:(QWidget * parent)
ListWidget	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^class ListWidget : public QListWidget {$/;"	c	namespace:Scintilla	file:	inherits:QListWidget
LoWord	..\\scintilla\\win32\\ScintillaWin.cxx	/^static WORD LoWord(uptr_t l) {$/;"	f	typeref:typename:WORD	file:	signature:(uptr_t l)
Load	..\\scintilla\\curses\\ScintillaCurses.cxx	/^DynamicLibrary *DynamicLibrary::Load(const char *modulePath) {$/;"	f	class:DynamicLibrary	typeref:typename:DynamicLibrary *	signature:(const char * modulePath)
Load	..\\scintilla\\gtk\\PlatGTK.cxx	/^DynamicLibrary *DynamicLibrary::Load(const char *modulePath) {$/;"	f	class:DynamicLibrary	typeref:typename:DynamicLibrary *	signature:(const char * modulePath)
Load	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^DynamicLibrary *DynamicLibrary::Load(const char *modulePath)$/;"	f	class:Scintilla::DynamicLibrary	typeref:typename:DynamicLibrary *	signature:(const char * modulePath)
Load	..\\scintilla\\src\\ExternalLexer.cxx	/^void LexerManager::Load(const char *path) {$/;"	f	class:LexerManager	typeref:typename:void	signature:(const char * path)
Load	..\\scintilla\\win32\\PlatWin.cxx	/^DynamicLibrary *DynamicLibrary::Load(const char *modulePath) {$/;"	f	class:Scintilla::DynamicLibrary	typeref:typename:DynamicLibrary *	signature:(const char * modulePath)
Load	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::Load(const char *) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char *)
Load	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::Load(const char *filename) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * filename)
Load	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::Load(const char *filename) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * filename)
Load	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::Load(const char *) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char *)
LoadBlock	..\\scintilla\\lua\\src\\lundump.c	/^static void LoadBlock(LoadState* S, void* b, size_t size)$/;"	f	typeref:typename:void	file:	signature:(LoadState * S,void * b,size_t size)
LoadByte	..\\scintilla\\lua\\src\\lundump.c	/^#define	LoadByte(/;"	d	file:	signature:(S)
LoadChar	..\\scintilla\\lua\\src\\lundump.c	/^static int LoadChar(LoadState* S)$/;"	f	typeref:typename:int	file:	signature:(LoadState * S)
LoadCode	..\\scintilla\\lua\\src\\lundump.c	/^static void LoadCode(LoadState* S, Proto* f)$/;"	f	typeref:typename:void	file:	signature:(LoadState * S,Proto * f)
LoadConstants	..\\scintilla\\lua\\src\\lundump.c	/^static void LoadConstants(LoadState* S, Proto* f)$/;"	f	typeref:typename:void	file:	signature:(LoadState * S,Proto * f)
LoadD2D	..\\scintilla\\win32\\PlatWin.cxx	/^bool LoadD2D() {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:()
LoadDebug	..\\scintilla\\lua\\src\\lundump.c	/^static void LoadDebug(LoadState* S, Proto* f)$/;"	f	typeref:typename:void	file:	signature:(LoadState * S,Proto * f)
LoadF	..\\scintilla\\lua\\src\\lauxlib.c	/^typedef struct LoadF {$/;"	s	file:
LoadF	..\\scintilla\\lua\\src\\lauxlib.c	/^} LoadF;$/;"	t	typeref:struct:LoadF	file:
LoadFunction	..\\scintilla\\lua\\src\\lundump.c	/^static Proto* LoadFunction(LoadState* S, TString* p)$/;"	f	typeref:typename:Proto *	file:	signature:(LoadState * S,TString * p)
LoadHeader	..\\scintilla\\lua\\src\\lundump.c	/^static void LoadHeader(LoadState* S)$/;"	f	typeref:typename:void	file:	signature:(LoadState * S)
LoadInt	..\\scintilla\\lua\\src\\lundump.c	/^static int LoadInt(LoadState* S)$/;"	f	typeref:typename:int	file:	signature:(LoadState * S)
LoadMem	..\\scintilla\\lua\\src\\lundump.c	/^#define LoadMem(/;"	d	file:	signature:(S,b,n,size)
LoadNumber	..\\scintilla\\lua\\src\\lundump.c	/^static lua_Number LoadNumber(LoadState* S)$/;"	f	typeref:typename:lua_Number	file:	signature:(LoadState * S)
LoadS	..\\scintilla\\lua\\src\\lauxlib.c	/^typedef struct LoadS {$/;"	s	file:
LoadS	..\\scintilla\\lua\\src\\lauxlib.c	/^} LoadS;$/;"	t	typeref:struct:LoadS	file:
LoadSessionDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::LoadSessionDialog() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
LoadSessionDialog	..\\scite\\src\\SciTEBase.h	/^	virtual void LoadSessionDialog() {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:()
LoadSessionDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::LoadSessionDialog() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
LoadSessionFile	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::LoadSessionFile(const GUI::gui_char *sessionName) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const GUI::gui_char * sessionName)
LoadState	..\\scintilla\\lua\\src\\lundump.c	/^} LoadState;$/;"	t	typeref:struct:__anonc6bc71bc0108	file:
LoadString	..\\scintilla\\lua\\src\\lundump.c	/^static TString* LoadString(LoadState* S)$/;"	f	typeref:typename:TString *	file:	signature:(LoadState * S)
LoadVar	..\\scintilla\\lua\\src\\lundump.c	/^#define LoadVar(/;"	d	file:	signature:(S,x)
LoadVector	..\\scintilla\\lua\\src\\lundump.c	/^#define LoadVector(/;"	d	file:	signature:(S,b,n,size)
LocVar	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct LocVar {$/;"	s
LocVar	..\\scintilla\\lua\\src\\lobject.h	/^} LocVar;$/;"	t	typeref:struct:LocVar
LocaliseControl	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::LocaliseControl(HWND w) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(HWND w)
LocaliseDialog	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::LocaliseDialog(HWND wDialog) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(HWND wDialog)
LocaliseMenu	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::LocaliseMenu(HMENU hmenu) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(HMENU hmenu)
LocaliseMenus	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::LocaliseMenus() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
LocaliseMessage	..\\scite\\src\\SciTEProps.cxx	/^GUI::gui_string SciTEBase::LocaliseMessage(const char *s, const GUI::gui_char *param0, const GUI/;"	f	class:SciTEBase	typeref:typename:GUI::gui_string	signature:(const char * s,const GUI::gui_char * param0,const GUI::gui_char * param1,const GUI::gui_char * param2)
Localization	..\\scite\\src\\SciTEBase.h	/^	Localization() : PropSetFile(true), read(false) {$/;"	f	class:Localization	access:public	signature:()
Localization	..\\scite\\src\\SciTEBase.h	/^class Localization : public PropSetFile, public ILocalize {$/;"	c	inherits:PropSetFile,ILocalize
LocationFromPosition	..\\scintilla\\src\\EditView.cxx	/^Point EditView::LocationFromPosition(Surface *surface, const EditModel &model, SelectionPosition/;"	f	class:EditView	typeref:typename:Point	signature:(Surface * surface,const EditModel & model,SelectionPosition pos,Sci::Line topLine,const ViewStyle & vs,PointEnd pe)
LocationFromPosition	..\\scintilla\\src\\Editor.cxx	/^Point Editor::LocationFromPosition(Sci::Position pos, PointEnd pe) {$/;"	f	class:Editor	typeref:typename:Point	signature:(Sci::Position pos,PointEnd pe)
LocationFromPosition	..\\scintilla\\src\\Editor.cxx	/^Point Editor::LocationFromPosition(SelectionPosition pos, PointEnd pe) {$/;"	f	class:Editor	typeref:typename:Point	signature:(SelectionPosition pos,PointEnd pe)
Lock	..\\scite\\gtk\\GTKMutex.cxx	/^	virtual void Lock() {$/;"	f	class:GTKMutex	typeref:typename:void	file:	access:private	signature:()
Lock	..\\scite\\src\\Mutex.h	/^	explicit Lock(Mutex *mute_) : mute(mute_) {$/;"	f	class:Lock	access:public	signature:(Mutex * mute_)
Lock	..\\scite\\src\\Mutex.h	/^class Lock {$/;"	c
Lock	..\\scite\\win32\\WinMutex.cxx	/^	virtual void Lock() { ::EnterCriticalSection(&cs); }$/;"	f	class:WinMutex	typeref:typename:void	file:	access:private	signature:()
LogPixelsY	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int LogPixelsY() { return 1; }$/;"	f	class:SurfaceImpl	typeref:typename:int	file:	access:public	signature:()
LogPixelsY	..\\scintilla\\gtk\\PlatGTK.cxx	/^int SurfaceImpl::LogPixelsY() {$/;"	f	class:SurfaceImpl	typeref:typename:int	signature:()
LogPixelsY	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^int SurfaceImpl::LogPixelsY()$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:int	signature:()
LogPixelsY	..\\scintilla\\win32\\PlatWin.cxx	/^int SurfaceD2D::LogPixelsY() {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:int	signature:()
LogPixelsY	..\\scintilla\\win32\\PlatWin.cxx	/^int SurfaceGDI::LogPixelsY() {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:int	signature:()
LongFromTwoShorts	..\\scintilla\\include\\Platform.h	/^	static long LongFromTwoShorts(short a,short b) {$/;"	f	class:Scintilla::Platform	typeref:typename:long	access:public	signature:(short a,short b)
LongFromTwoShorts	..\\scite\\src\\SciTEBase.h	/^inline long LongFromTwoShorts(short a,short b) {$/;"	f	typeref:typename:long	signature:(short a,short b)
Lookup	..\\scite\\src\\Containers.h	/^	bool Lookup(ARG_KEY key, VALUE& rValue) {$/;"	f	class:TMap	typeref:typename:bool	access:public	signature:(ARG_KEY key,VALUE & rValue)
LowShortFromLong	..\\scintilla\\src\\Editor.cxx	/^short LowShortFromLong(long x) {$/;"	f	namespace:__anon92132c300211	typeref:typename:short	signature:(long x)
LowerCaseAZ	..\\scite\\src\\StringHelpers.cxx	/^static int LowerCaseAZ(int c) {$/;"	f	typeref:typename:int	file:	signature:(int c)
LowerCaseAZ	..\\scite\\src\\StringHelpers.cxx	/^void LowerCaseAZ(std::string &s) {$/;"	f	typeref:typename:void	signature:(std::string & s)
Lowercase	..\\scite\\src\\FilePath.cxx	/^static void Lowercase(GUI::gui_string &s) {$/;"	f	typeref:typename:void	file:	signature:(GUI::gui_string & s)
LuaExtension	..\\scite\\src\\LuaExtension.cxx	/^LuaExtension::LuaExtension() {}$/;"	f	class:LuaExtension	signature:()
LuaExtension	..\\scite\\src\\LuaExtension.h	/^class LuaExtension : public Extension {$/;"	c	inherits:Extension
LuaPanicFunction	..\\scite\\src\\LuaExtension.cxx	/^static int LuaPanicFunction(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
MAGENTA	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired MAGENTA(0x80, 0, 0x80);$/;"	v	typeref:typename:ColourDesired	file:
MARGINVIEW_H	..\\scintilla\\src\\MarginView.h	/^#define MARGINVIEW_H$/;"	d
MARKER_MAX	..\\scintilla\\include\\Scintilla.h	/^#define MARKER_MAX /;"	d
MASK0	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MASK0(/;"	d	signature:(n,p)
MASK1	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MASK1(/;"	d	signature:(n,p)
MAXARG_A	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MAXARG_A /;"	d
MAXARG_B	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MAXARG_B /;"	d
MAXARG_Bx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MAXARG_Bx /;"	d
MAXARG_C	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MAXARG_C /;"	d
MAXARG_sBx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MAXARG_sBx /;"	d
MAXASIZE	..\\scintilla\\lua\\src\\ltable.c	/^#define MAXASIZE	/;"	d	file:
MAXAUX	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXAUX	/;"	d
MAXBACK	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXBACK /;"	d
MAXBEHIND	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXBEHIND	/;"	d
MAXBITS	..\\scintilla\\lua\\src\\ltable.c	/^#define MAXBITS	/;"	d	file:
MAXCHR	..\\scintilla\\src\\RESearch.h	/^#define MAXCHR	/;"	d
MAXINDEXRK	..\\scintilla\\lua\\src\\lopcodes.h	/^#define MAXINDEXRK	/;"	d
MAXLENINPUTIME	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define MAXLENINPUTIME /;"	d	file:
MAXNFA	..\\scintilla\\src\\RESearch.h	/^	enum { MAXNFA=4096 };$/;"	e	enum:Scintilla::RESearch::__anonbaade40b0203	access:public
MAXOFF	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXOFF	/;"	d
MAXPATTSIZE	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXPATTSIZE	/;"	d
MAXRULES	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXRULES /;"	d
MAXSRC	..\\scintilla\\lua\\src\\llex.c	/^#define MAXSRC /;"	d	file:
MAXSTACK	..\\scintilla\\lua\\src\\llimits.h	/^#define MAXSTACK	/;"	d
MAXSTACKIDX	..\\scintilla\\lua\\src\\lptypes.h	/^#define MAXSTACKIDX	/;"	d
MAXSTRCAPS	..\\scintilla\\lua\\src\\lpcap.c	/^#define MAXSTRCAPS	/;"	d	file:
MAXTAG	..\\scintilla\\src\\RESearch.h	/^	enum { MAXTAG=10 };$/;"	e	enum:Scintilla::RESearch::__anonbaade40b0103	access:public
MAXTAGLOOP	..\\scintilla\\lua\\src\\lvm.c	/^#define MAXTAGLOOP	/;"	d	file:
MAX_FORMAT	..\\scintilla\\lua\\src\\lstrlib.c	/^#define MAX_FORMAT	/;"	d	file:
MAX_INT	..\\scintilla\\lua\\src\\llimits.h	/^#define MAX_INT /;"	d
MAX_ITEM	..\\scintilla\\lua\\src\\lstrlib.c	/^#define MAX_ITEM	/;"	d	file:
MAX_LUMEM	..\\scintilla\\lua\\src\\llimits.h	/^#define MAX_LUMEM	/;"	d
MAX_PATH	..\\scite\\src\\FilePath.h	/^#define MAX_PATH /;"	d
MAX_PIPES	..\\scite\\gtk\\DirectorExtension.cxx	/^const int MAX_PIPES = 20;$/;"	v	typeref:typename:const int
MAX_SIZET	..\\scintilla\\lua\\src\\llimits.h	/^#define MAX_SIZET	/;"	d
MAX_STYLEDEF	..\\scite\\src\\ExportRTF.cxx	/^#define MAX_STYLEDEF /;"	d	file:
MEMERRMSG	..\\scintilla\\lua\\src\\lmem.h	/^#define MEMERRMSG	/;"	d
MINSIZEARRAY	..\\scintilla\\lua\\src\\lmem.c	/^#define MINSIZEARRAY	/;"	d	file:
MINSTRTABSIZE	..\\scintilla\\lua\\src\\llimits.h	/^#define MINSTRTABSIZE	/;"	d
MK_ALT	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define MK_ALT /;"	d	file:
MMFn	..\\scite\\win32\\SciTEWinDlg.cxx	/^			typedef BOOL (WINAPI *MMFn) (LPCSTR, HMODULE, DWORD);$/;"	t	function:PlayThisSound	typeref:typename:BOOL (WINAPI *)(LPCSTR,HMODULE,DWORD)	file:
MRU_START	..\\scite\\src\\SciTE.h	/^#define MRU_START	/;"	d
MULTIPLEXEXTENSION_H	..\\scite\\src\\MultiplexExtension.h	/^#define MULTIPLEXEXTENSION_H$/;"	d
MUTEX_H	..\\scite\\src\\Mutex.h	/^#define MUTEX_H$/;"	d
Main	..\\scintilla\\src\\Selection.cxx	/^size_t Selection::Main() const {$/;"	f	class:Selection	typeref:typename:size_t	signature:() const
MainAnchor	..\\scintilla\\src\\Selection.cxx	/^Sci::Position Selection::MainAnchor() const {$/;"	f	class:Selection	typeref:typename:Sci::Position	signature:() const
MainCaret	..\\scintilla\\src\\Selection.cxx	/^Sci::Position Selection::MainCaret() const {$/;"	f	class:Selection	typeref:typename:Sci::Position	signature:() const
MainForAll	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::MainForAll(GtkContainer *container, gboolean include_internals, GtkCallback c/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkContainer * container,gboolean include_internals,GtkCallback callback,gpointer callback_data)
MainHWND	..\\scintilla\\win32\\ScintillaWin.cxx	/^HWND ScintillaWin::MainHWND() {$/;"	f	class:ScintillaWin	typeref:typename:HWND	signature:()
MainHWND	..\\scite\\win32\\SciTEWin.cxx	/^HWND SciTEWin::MainHWND() {$/;"	f	class:SciTEWin	typeref:typename:HWND	signature:()
MaintainIndentation	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::MaintainIndentation(char ch) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(char ch)
MakeAlias	..\\scintilla\\src\\Style.cxx	/^void FontAlias::MakeAlias(Font &fontOrigin) {$/;"	f	class:FontAlias	typeref:typename:void	signature:(Font & fontOrigin)
MakeLongPath	..\\scite\\src\\FilePath.cxx	/^static bool MakeLongPath(const GUI::gui_char* shortPath, GUI::gui_string &longPath) {$/;"	f	typeref:typename:bool	file:	signature:(const GUI::gui_char * shortPath,GUI::gui_string & longPath)
MakeLowerCase	..\\scintilla\\lexlib\\CharacterSet.h	/^inline int MakeLowerCase(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(int ch)
MakePipe	..\\scite\\gtk\\DirectorExtension.cxx	/^static bool MakePipe(const char *pipeName) {$/;"	f	typeref:typename:bool	file:	signature:(const char * pipeName)
MakeUpperCase	..\\scintilla\\lexlib\\CharacterSet.h	/^inline int MakeUpperCase(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(int ch)
MakeUpperCase	..\\scite\\src\\StringHelpers.h	/^inline char MakeUpperCase(char ch) {$/;"	f	typeref:typename:char	signature:(char ch)
Map	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Map(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget)
MapDefault	..\\scintilla\\src\\KeyMap.cxx	/^const KeyToCommand KeyMap::MapDefault[] = {$/;"	m	class:KeyMap	typeref:typename:const KeyToCommand[]
MapDefault	..\\scintilla\\src\\KeyMap.h	/^	static const KeyToCommand MapDefault[];$/;"	m	class:Scintilla::KeyMap	typeref:typename:const KeyToCommand[]	access:private
MapImeIndicators	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static std::vector<int> MapImeIndicators(PangoAttrList *attrs, const char *u8Str) {$/;"	f	typeref:typename:std::vector<int>	file:	signature:(PangoAttrList * attrs,const char * u8Str)
MapImeIndicators	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^static std::vector<int> MapImeIndicators(QInputMethodEvent *event)$/;"	f	typeref:typename:std::vector<int>	file:	signature:(QInputMethodEvent * event)
MapImeIndicators	..\\scintilla\\win32\\ScintillaWin.cxx	/^std::vector<int> MapImeIndicators(std::vector<BYTE> inputStyle) {$/;"	f	namespace:__anon5333cfc50311	typeref:typename:std::vector<int>	signature:(std::vector<BYTE> inputStyle)
MapRepresentation	..\\scintilla\\src\\PositionCache.h	/^typedef std::map<int, Representation> MapRepresentation;$/;"	t	namespace:Scintilla	typeref:typename:std::map<int,Representation>
MapThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::MapThis() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
MapWidget	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void MapWidget(GtkWidget *widget) {$/;"	f	typeref:typename:void	file:	signature:(GtkWidget * widget)
MarginClearAll	..\\scintilla\\src\\Document.cxx	/^void Document::MarginClearAll() {$/;"	f	class:Document	typeref:typename:void	signature:()
MarginClick	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::MarginClick(int position, int modifiers) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(int position,int modifiers)
MarginFromLocation	..\\scintilla\\src\\ViewStyle.cxx	/^int ViewStyle::MarginFromLocation(Point pt) const {$/;"	f	class:ViewStyle	typeref:typename:int	signature:(Point pt) const
MarginSetStyle	..\\scintilla\\src\\Document.cxx	/^void Document::MarginSetStyle(Sci::Line line, int style) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,int style)
MarginSetStyles	..\\scintilla\\src\\Document.cxx	/^void Document::MarginSetStyles(Sci::Line line, const unsigned char *styles) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,const unsigned char * styles)
MarginSetText	..\\scintilla\\src\\Document.cxx	/^void Document::MarginSetText(Sci::Line line, const char *text) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line,const char * text)
MarginStyle	..\\scintilla\\src\\ViewStyle.cxx	/^MarginStyle::MarginStyle(int style_, int width_, int mask_) :$/;"	f	class:MarginStyle	signature:(int style_,int width_,int mask_)
MarginStyle	..\\scintilla\\src\\ViewStyle.h	/^class MarginStyle {$/;"	c	namespace:Scintilla
MarginStyledText	..\\scintilla\\src\\Document.cxx	/^StyledText Document::MarginStyledText(Sci::Line line) const {$/;"	f	class:Document	typeref:typename:StyledText	signature:(Sci::Line line) const
MarginView	..\\scintilla\\src\\MarginView.cxx	/^MarginView::MarginView() {$/;"	f	class:Scintilla::MarginView	signature:()
MarginView	..\\scintilla\\src\\MarginView.h	/^class MarginView {$/;"	c	namespace:Scintilla
Margins	..\\scintilla\\src\\Document.cxx	/^LineAnnotation *Document::Margins() const {$/;"	f	class:Document	typeref:typename:LineAnnotation *	signature:() const
MarkAll	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::MarkAll(MarkPurpose purpose) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(MarkPurpose purpose)
MarkAllCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::MarkAllCmd() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
MarkIncremental	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindReplaceStrip::MarkIncremental() {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:()
MarkIncremental	..\\scite\\win32\\Strips.cxx	/^void FindReplaceStrip::MarkIncremental() {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:()
MarkPurpose	..\\scite\\src\\SciTEBase.h	/^	enum MarkPurpose { markWithBookMarks, markIncremental };$/;"	g	class:Searcher	access:public
MarkValue	..\\scintilla\\src\\PerLine.cxx	/^int LineMarkers::MarkValue(Sci::Line line) {$/;"	f	class:LineMarkers	typeref:typename:int	signature:(Sci::Line line)
MarkValue	..\\scintilla\\src\\PerLine.cxx	/^int MarkerHandleSet::MarkValue() const {$/;"	f	class:MarkerHandleSet	typeref:typename:int	signature:() const
MarkerHandleNumber	..\\scintilla\\src\\PerLine.h	/^	MarkerHandleNumber(int handle_, int number_) : handle(handle_), number(number_) {}$/;"	f	struct:Scintilla::MarkerHandleNumber	access:public	signature:(int handle_,int number_)
MarkerHandleNumber	..\\scintilla\\src\\PerLine.h	/^struct MarkerHandleNumber {$/;"	s	namespace:Scintilla
MarkerHandleSet	..\\scintilla\\src\\PerLine.cxx	/^MarkerHandleSet::MarkerHandleSet() {$/;"	f	class:MarkerHandleSet	signature:()
MarkerHandleSet	..\\scintilla\\src\\PerLine.h	/^class MarkerHandleSet {$/;"	c	namespace:Scintilla
MarkerNext	..\\scintilla\\src\\Document.cxx	/^Sci::Line Document::MarkerNext(Sci::Line lineStart, int mask) const {$/;"	f	class:Document	typeref:typename:Sci::Line	signature:(Sci::Line lineStart,int mask) const
MarkerNext	..\\scintilla\\src\\PerLine.cxx	/^Sci::Line LineMarkers::MarkerNext(Sci::Line lineStart, int mask) const {$/;"	f	class:LineMarkers	typeref:typename:Sci::Line	signature:(Sci::Line lineStart,int mask) const
Markers	..\\scintilla\\src\\Document.cxx	/^LineMarkers *Document::Markers() const {$/;"	f	class:Document	typeref:typename:LineMarkers *	signature:() const
Match	..\\scintilla\\lexlib\\LexAccessor.h	/^	bool Match(Sci_Position pos, const char *s) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:bool	access:public	signature:(Sci_Position pos,const char * s)
Match	..\\scintilla\\lexlib\\StyleContext.h	/^	bool Match(char ch0) const {$/;"	f	class:Scintilla::StyleContext	typeref:typename:bool	access:public	signature:(char ch0) const
Match	..\\scintilla\\lexlib\\StyleContext.h	/^	bool Match(char ch0, char ch1) const {$/;"	f	class:Scintilla::StyleContext	typeref:typename:bool	access:public	signature:(char ch0,char ch1) const
Match	..\\scintilla\\lexlib\\StyleContext.h	/^	bool Match(const char *s) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:bool	access:public	signature:(const char * s)
Match	..\\scite\\src\\LuaExtension.cxx	/^	bool Match(const char *s) {$/;"	f	struct:StylingContext	typeref:typename:bool	file:	access:public	signature:(const char * s)
Match	..\\scite\\src\\LuaExtension.cxx	/^	static int Match(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
Match	..\\scite\\src\\StyleWriter.cxx	/^bool TextReader::Match(int pos, const char *s) {$/;"	f	class:TextReader	typeref:typename:bool	signature:(int pos,const char * s)
MatchFlags	..\\scintilla\\src\\Document.cxx	/^std::regex_constants::match_flag_type MatchFlags(const Document *doc, Sci::Position startPos, Sc/;"	f	namespace:__anon1ef09aa80111	typeref:typename:std::regex_constants::match_flag_type	signature:(const Document * doc,Sci::Position startPos,Sci::Position endPos)
MatchIgnoreCase	..\\scintilla\\lexlib\\StyleContext.cxx	/^bool StyleContext::MatchIgnoreCase(const char *s) {$/;"	f	class:StyleContext	typeref:typename:bool	signature:(const char * s)
MatchKeyCode	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEKeys::MatchKeyCode(long parsedKeyCode, int keyval, int modifiers) {$/;"	f	class:SciTEKeys	typeref:typename:bool	signature:(long parsedKeyCode,int keyval,int modifiers)
MatchKeyCode	..\\scite\\win32\\SciTEWin.cxx	/^bool SciTEKeys::MatchKeyCode(long parsedKeyCode, int keyval, int modifiers) {$/;"	f	class:SciTEKeys	typeref:typename:bool	signature:(long parsedKeyCode,int keyval,int modifiers)
MatchMarker	..\\scite\\src\\MatchMarker.cxx	/^MatchMarker::MatchMarker() : $/;"	f	class:MatchMarker	signature:()
MatchMarker	..\\scite\\src\\MatchMarker.h	/^class MatchMarker {$/;"	c
MatchOnLines	..\\scintilla\\src\\Document.cxx	/^bool MatchOnLines(const Document *doc, const Regex &regexp, const RESearchRange &resr, RESearch /;"	f	namespace:__anon1ef09aa80111	typeref:typename:bool	signature:(const Document * doc,const Regex & regexp,const RESearchRange & resr,RESearch & search)
MatchState	..\\scintilla\\lua\\src\\lstrlib.c	/^typedef struct MatchState {$/;"	s	file:
MatchState	..\\scintilla\\lua\\src\\lstrlib.c	/^} MatchState;$/;"	t	typeref:struct:MatchState	file:
MatchWild	..\\scite\\src\\PropSetFile.cxx	/^static bool MatchWild(const char *pattern, size_t lenPattern, const char *fileName, bool caseSen/;"	f	typeref:typename:bool	file:	signature:(const char * pattern,size_t lenPattern,const char * fileName,bool caseSensitive)
Matches	..\\scite\\src\\FilePath.cxx	/^bool FilePath::Matches(const GUI::gui_char *pattern) const {$/;"	f	class:FilePath	typeref:typename:bool	signature:(const GUI::gui_char * pattern) const
MatchesWordOptions	..\\scintilla\\src\\Document.cxx	/^bool Document::MatchesWordOptions(bool word, bool wordStart, Sci::Position pos, Sci::Position le/;"	f	class:Document	typeref:typename:bool	signature:(bool word,bool wordStart,Sci::Position pos,Sci::Position length) const
MaxScrollPos	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::MaxScrollPos() const {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:() const
MaxTrackSize	..\\scintilla\\win32\\PlatWin.cxx	/^POINT ListBoxX::MaxTrackSize() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:POINT	signature:() const
Maximum	..\\scintilla\\lexlib\\LexerModule.h	/^inline int Maximum(int a, int b) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(int a,int b)
Maximum	..\\scite\\src\\SciTEBase.h	/^inline int Maximum(int a, int b) {$/;"	f	typeref:typename:int	signature:(int a,int b)
Mbuffer	..\\scintilla\\lua\\src\\lzio.h	/^typedef struct Mbuffer {$/;"	s
Mbuffer	..\\scintilla\\lua\\src\\lzio.h	/^} Mbuffer;$/;"	t	typeref:struct:Mbuffer
MeasureLength	..\\scintilla\\src\\XPM.cxx	/^static size_t MeasureLength(const char *s) {$/;"	f	typeref:typename:size_t	file:	signature:(const char * s)
MeasureStringWidth	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^	float MeasureStringWidth()$/;"	f	class:QuartzTextLayout	typeref:typename:float	access:public	signature:()
MeasureWidths	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void MeasureWidths(Font &font_, const char *s, int len,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(Font & font_,const char * s,int len,XYPOSITION * positions)
MeasureWidths	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(Font & font_,const char * s,int len,XYPOSITION * positions)
MeasureWidths	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::MeasureWidths(Font &font,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(Font & font,const char * s,int len,XYPOSITION * positions)
MeasureWidths	..\\scintilla\\src\\PositionCache.cxx	/^void PositionCache::MeasureWidths(Surface *surface, const ViewStyle &vstyle, unsigned int styleN/;"	f	class:PositionCache	typeref:typename:void	signature:(Surface * surface,const ViewStyle & vstyle,unsigned int styleNumber,const char * s,unsigned int len,XYPOSITION * positions,const Document * pdoc)
MeasureWidths	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(Font & font_,const char * s,int len,XYPOSITION * positions)
MeasureWidths	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(Font & font_,const char * s,int len,XYPOSITION * positions)
Menu	..\\scintilla\\curses\\ScintillaCurses.cxx	/^Menu::Menu() : mid(0) {}$/;"	f	class:Menu	signature:()
Menu	..\\scintilla\\gtk\\PlatGTK.cxx	/^Menu::Menu() : mid(0) {}$/;"	f	class:Menu	signature:()
Menu	..\\scintilla\\include\\Platform.h	/^class Menu {$/;"	c	namespace:Scintilla
Menu	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^Menu::Menu() : mid(0) {}$/;"	f	class:Scintilla::Menu	signature:()
Menu	..\\scintilla\\win32\\PlatWin.cxx	/^Menu::Menu() : mid(0) {$/;"	f	class:Scintilla::Menu	signature:()
Menu	..\\scite\\src\\GUI.h	/^	Menu() : mid(0) {$/;"	f	class:GUI::Menu	access:public	signature:()
Menu	..\\scite\\src\\GUI.h	/^class Menu {$/;"	c	namespace:GUI
MenuAction	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::MenuAction(guint action) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(guint action)
MenuAction	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::MenuAction(guint action) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(guint action)
MenuAction	..\\scite\\gtk\\Widget.h	/^	virtual void MenuAction(guint \/* action *\/) {}$/;"	f	class:Strip	typeref:typename:void	access:public	signature:(guint)
MenuCommand	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::MenuCommand(int cmdID, int source) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int cmdID,int source)
MenuID	..\\scintilla\\include\\Platform.h	/^typedef void *MenuID;$/;"	t	namespace:Scintilla	typeref:typename:void *
MenuID	..\\scite\\src\\GUI.h	/^typedef void *MenuID;$/;"	t	namespace:GUI	typeref:typename:void *
MenuItemFromAction	..\\scite\\gtk\\SciTEGTK.cxx	/^GtkWidget *SciTEGTK::MenuItemFromAction(int itemID) {$/;"	f	class:SciTEGTK	typeref:typename:GtkWidget *	signature:(int itemID)
MenuPositionFunc	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void MenuPositionFunc(GtkMenu *, gint *x, gint *y, gboolean *, gpointer userData) {$/;"	f	typeref:typename:void	file:	signature:(GtkMenu *,gint * x,gint * y,gboolean *,gpointer userData)
MenuPositionFunc	..\\scite\\gtk\\GUIGTK.cxx	/^static void  MenuPositionFunc(GtkMenu *, gint *x, gint *y, gboolean *, gpointer userData) {$/;"	f	namespace:GUI	typeref:typename:void	file:	signature:(GtkMenu *,gint * x,gint * y,gboolean *,gpointer userData)
MenuSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::MenuSignal(GtkMenuItem *menuitem, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkMenuItem * menuitem,SciTEGTK * scitew)
MenuSignal	..\\scite\\gtk\\Widget.cxx	/^void Strip::MenuSignal(GtkMenuItem *menuItem, Strip *pStrip) {$/;"	f	class:Strip	typeref:typename:void	signature:(GtkMenuItem * menuItem,Strip * pStrip)
Merge	..\\scintilla\\lexlib\\SparseState.h	/^	bool Merge(const SparseState<T> &other, Sci_Position ignoreAfter) {$/;"	f	class:Scintilla::SparseState	typeref:typename:bool	access:public	signature:(const SparseState<T> & other,Sci_Position ignoreAfter)
MergeMarkers	..\\scintilla\\src\\PerLine.cxx	/^void LineMarkers::MergeMarkers(Sci::Line line) {$/;"	f	class:LineMarkers	typeref:typename:void	signature:(Sci::Line line)
MessageBoxChoice	..\\scite\\src\\SciTEBase.h	/^	enum MessageBoxChoice {$/;"	g	class:SciTEBase	access:protected
MessageBoxStyle	..\\scite\\src\\SciTEBase.h	/^	typedef int MessageBoxStyle;$/;"	t	class:SciTEBase	typeref:typename:int	access:protected
MinClientWidth	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::MinClientWidth() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:() const
MinTrackSize	..\\scintilla\\win32\\PlatWin.cxx	/^POINT ListBoxX::MinTrackSize() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:POINT	signature:() const
MinimizeToTray	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::MinimizeToTray() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
MinimizeVirtualSpace	..\\scintilla\\src\\Selection.cxx	/^void SelectionRange::MinimizeVirtualSpace() {$/;"	f	class:SelectionRange	typeref:typename:void	signature:()
Minimum	..\\scite\\src\\SciTEBase.h	/^inline int Minimum(int a, int b) {$/;"	f	typeref:typename:int	signature:(int a,int b)
ModelessHandler	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::ModelessHandler(MSG *pmsg) {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:(MSG * pmsg)
ModifiedAt	..\\scintilla\\src\\Document.cxx	/^void Document::ModifiedAt(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Position pos)
ModifiedTime	..\\scite\\src\\FilePath.cxx	/^time_t FilePath::ModifiedTime() const {$/;"	f	class:FilePath	typeref:typename:time_t	signature:() const
ModifierFlags	..\\scintilla\\src\\Editor.cxx	/^int Editor::ModifierFlags(bool shift, bool ctrl, bool alt, bool meta, bool super) {$/;"	f	class:Editor	typeref:typename:int	signature:(bool shift,bool ctrl,bool alt,bool meta,bool super)
ModifiersOfKeyboard	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^int ScintillaEditBase::ModifiersOfKeyboard() const$/;"	f	class:ScintillaEditBase	typeref:typename:int	signature:() const
ModifyScrollBars	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool ModifyScrollBars(int nMax, int nPage) {$/;"	f	class:ScintillaCurses	typeref:typename:bool	file:	access:public	signature:(int nMax,int nPage)
ModifyScrollBars	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::ModifyScrollBars(Sci::Line nMax, Sci::Line nPage) {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:(Sci::Line nMax,Sci::Line nPage)
ModifyScrollBars	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^bool ScintillaQt::ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)$/;"	f	class:ScintillaQt	typeref:typename:bool	signature:(Sci::Line nMax,Sci::Line nPage)
ModifyScrollBars	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::ModifyScrollBars(Sci::Line nMax, Sci::Line nPage) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(Sci::Line nMax,Sci::Line nPage)
MonitorRectangleForWidget	..\\scintilla\\gtk\\PlatGTK.cxx	/^GdkRectangle MonitorRectangleForWidget(GtkWidget *wid) {$/;"	f	namespace:__anon0ae033de0111	typeref:typename:GdkRectangle	signature:(GtkWidget * wid)
More	..\\scintilla\\lexlib\\StyleContext.h	/^	bool More() const {$/;"	f	class:Scintilla::StyleContext	typeref:typename:bool	access:public	signature:() const
More	..\\scintilla\\src\\PositionCache.cxx	/^bool BreakFinder::More() const {$/;"	f	class:BreakFinder	typeref:typename:bool	signature:() const
More	..\\scite\\src\\LuaExtension.cxx	/^	static int More(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
Motion	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::Motion(GtkWidget *widget, GdkEventMotion *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventMotion * event)
Mouse	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::Mouse(GdkEventButton *event) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GdkEventButton * event)
MouseClick	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::MouseClick(Point pt) {$/;"	f	class:CallTip	typeref:typename:void	signature:(Point pt)
MouseInClose	..\\scite\\win32\\Strips.cxx	/^bool Strip::MouseInClose(GUI::Point pt) {$/;"	f	class:Strip	typeref:typename:bool	signature:(GUI::Point pt)
MouseLeave	..\\scintilla\\src\\Editor.cxx	/^void Editor::MouseLeave() {$/;"	f	class:Editor	typeref:typename:void	signature:()
MouseModifiers	..\\scintilla\\win32\\ScintillaWin.cxx	/^int ScintillaWin::MouseModifiers(uptr_t wParam) {$/;"	f	class:ScintillaWin	typeref:typename:int	signature:(uptr_t wParam)
MouseMove	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool MouseMove(int y, int x, bool shift, bool ctrl, bool alt) {$/;"	f	class:ScintillaCurses	typeref:typename:bool	file:	access:public	signature:(int y,int x,bool shift,bool ctrl,bool alt)
MousePress	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool MousePress(int button, unsigned int time, int y, int x, bool shift,$/;"	f	class:ScintillaCurses	typeref:typename:bool	file:	access:public	signature:(int button,unsigned int time,int y,int x,bool shift,bool ctrl,bool alt)
MousePress	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::MousePress(GtkWidget * \/*widget*\/, GdkEventButton *event, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GtkWidget *,GdkEventButton * event,SciTEGTK * scitew)
MouseRelease	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void MouseRelease(int time, int y, int x, int ctrl) {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(int time,int y,int x,int ctrl)
MouseRelease	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::MouseRelease(GtkWidget *widget, GdkEventButton *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventButton * event)
Move	..\\scintilla\\include\\Platform.h	/^	void Move(XYPOSITION xDelta, XYPOSITION yDelta) {$/;"	f	class:Scintilla::PRectangle	typeref:typename:void	access:public	signature:(XYPOSITION xDelta,XYPOSITION yDelta)
Move	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::Move(int delta) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(int delta)
MoveBack	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::MoveBack() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
MoveCaretInsideView	..\\scintilla\\src\\Editor.cxx	/^void Editor::MoveCaretInsideView(bool ensureVisible) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool ensureVisible)
MoveExtends	..\\scintilla\\src\\Selection.cxx	/^bool Selection::MoveExtends() const {$/;"	f	class:Selection	typeref:typename:bool	signature:() const
MoveForInsertDelete	..\\scintilla\\src\\Selection.cxx	/^void SelectionPosition::MoveForInsertDelete(bool insertion, Sci::Position startChange, Sci::Posi/;"	f	class:SelectionPosition	typeref:typename:void	signature:(bool insertion,Sci::Position startChange,Sci::Position length)
MoveForInsertDelete	..\\scintilla\\src\\Selection.cxx	/^void SelectionRange::MoveForInsertDelete(bool insertion, Sci::Position startChange, Sci::Positio/;"	f	class:SelectionRange	typeref:typename:void	signature:(bool insertion,Sci::Position startChange,Sci::Position length)
MoveImeCarets	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::MoveImeCarets(int pos) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(int pos)
MoveImeCarets	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::MoveImeCarets(int offset)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(int offset)
MoveImeCarets	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::MoveImeCarets(Sci::Position offset) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(Sci::Position offset)
MovePositionForDeletion	..\\scintilla\\src\\Editor.cxx	/^static inline Sci::Position MovePositionForDeletion(Sci::Position position, Sci::Position startD/;"	f	typeref:typename:Sci::Position	file:	signature:(Sci::Position position,Sci::Position startDeletion,Sci::Position length)
MovePositionForInsertion	..\\scintilla\\src\\Editor.cxx	/^static inline Sci::Position MovePositionForInsertion(Sci::Position position, Sci::Position start/;"	f	typeref:typename:Sci::Position	file:	signature:(Sci::Position position,Sci::Position startInsertion,Sci::Position length)
MovePositionOutsideChar	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::MovePositionOutsideChar(Sci::Position pos, Sci::Position moveDir, bool c/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos,Sci::Position moveDir,bool checkLineEnd) const
MovePositionOutsideChar	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::MovePositionOutsideChar(Sci::Position pos, Sci::Position moveDir, bool che/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position pos,Sci::Position moveDir,bool checkLineEnd) const
MovePositionOutsideChar	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::MovePositionOutsideChar(SelectionPosition pos, Sci::Position moveDir, /;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(SelectionPosition pos,Sci::Position moveDir,bool checkLineEnd) const
MovePositionSoVisible	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::MovePositionSoVisible(Sci::Position pos, int moveDir) {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(Sci::Position pos,int moveDir)
MovePositionSoVisible	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::MovePositionSoVisible(SelectionPosition pos, int moveDir) {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(SelectionPosition pos,int moveDir)
MovePositionTo	..\\scintilla\\src\\Editor.cxx	/^void Editor::MovePositionTo(Sci::Position newPos, Selection::selTypes selt, bool ensureVisible) /;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position newPos,Selection::selTypes selt,bool ensureVisible)
MovePositionTo	..\\scintilla\\src\\Editor.cxx	/^void Editor::MovePositionTo(SelectionPosition newPos, Selection::selTypes selt, bool ensureVisib/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition newPos,Selection::selTypes selt,bool ensureVisible)
MovePositions	..\\scintilla\\src\\Selection.cxx	/^void Selection::MovePositions(bool insertion, Sci::Position startChange, Sci::Position length) {$/;"	f	class:Selection	typeref:typename:void	signature:(bool insertion,Sci::Position startChange,Sci::Position length)
MoveSelectedLines	..\\scintilla\\src\\Editor.cxx	/^void Editor::MoveSelectedLines(int lineDelta) {$/;"	f	class:Editor	typeref:typename:void	signature:(int lineDelta)
MoveSelectedLinesDown	..\\scintilla\\src\\Editor.cxx	/^void Editor::MoveSelectedLinesDown() {$/;"	f	class:Editor	typeref:typename:void	signature:()
MoveSelectedLinesUp	..\\scintilla\\src\\Editor.cxx	/^void Editor::MoveSelectedLinesUp() {$/;"	f	class:Editor	typeref:typename:void	signature:()
MoveSplit	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::MoveSplit(GUI::Point ptNewDrag) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::Point ptNewDrag)
MoveTabLeft	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::MoveTabLeft() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
MoveTabRight	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::MoveTabRight() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
MoveTo	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void MoveTo(int x_, int y_) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(int x_,int y_)
MoveTo	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::MoveTo(int x_, int y_) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(int x_,int y_)
MoveTo	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::MoveTo(int x_, int y_)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(int x_,int y_)
MoveTo	..\\scintilla\\src\\MarginView.cxx	/^		void MoveTo(int xRelative, int yRelative) {$/;"	f	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:void	file:	access:public	signature:(int xRelative,int yRelative)
MoveTo	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::MoveTo(int x_, int y_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(int x_,int y_)
MoveTo	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::MoveTo(int x_, int y_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(int x_,int y_)
MoveToStackTop	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::MoveToStackTop(int index) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int index)
MovedCaret	..\\scintilla\\src\\Editor.cxx	/^void Editor::MovedCaret(SelectionPosition newPos, SelectionPosition previousPos, bool ensureVisi/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition newPos,SelectionPosition previousPos,bool ensureVisible)
MultiByteAccess	..\\scintilla\\lexlib\\LexAccessor.h	/^	IDocumentWithLineEnd *MultiByteAccess() const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:IDocumentWithLineEnd *	access:public	signature:() const
MultiByteLenFromIconv	..\\scintilla\\gtk\\PlatGTK.cxx	/^static size_t MultiByteLenFromIconv(const Converter &conv, const char *s, size_t len) {$/;"	f	typeref:typename:size_t	file:	signature:(const Converter & conv,const char * s,size_t len)
MultipleSelectAdd	..\\scintilla\\src\\Editor.cxx	/^void Editor::MultipleSelectAdd(AddNumber addNumber) {$/;"	f	class:Editor	typeref:typename:void	signature:(AddNumber addNumber)
MultipleStyles	..\\scintilla\\src\\PerLine.cxx	/^bool LineAnnotation::MultipleStyles(Sci::Line line) const {$/;"	f	class:LineAnnotation	typeref:typename:bool	signature:(Sci::Line line) const
MultiplexExtension	..\\scite\\src\\MultiplexExtension.cxx	/^MultiplexExtension::MultiplexExtension(): host(nullptr) {}$/;"	f	class:MultiplexExtension	signature:()
MultiplexExtension	..\\scite\\src\\MultiplexExtension.h	/^class MultiplexExtension: public Extension {$/;"	c	inherits:Extension
Mutex	..\\scite\\src\\Mutex.h	/^class Mutex {$/;"	c
NDEBUG	..\\scintilla\\lua\\src\\lptypes.h	/^#define NDEBUG$/;"	d
NOEXCEPT	..\\scintilla\\src\\Document.cxx	/^#define NOEXCEPT /;"	d	file:
NOEXCEPT	..\\scintilla\\src\\Document.cxx	/^#define NOEXCEPT$/;"	d	file:
NOINST	..\\scintilla\\lua\\src\\lpcode.c	/^#define NOINST	/;"	d	file:
NOMINMAX	..\\scintilla\\win32\\PlatWin.cxx	/^#define NOMINMAX$/;"	d	file:
NOP	..\\scintilla\\src\\RESearch.cxx	/^#define NOP /;"	d	file:
NOTFOUND	..\\scintilla\\src\\RESearch.h	/^	enum { NOTFOUND=-1 };$/;"	e	enum:Scintilla::RESearch::__anonbaade40b0303	access:public
NOTIFY_SIGNAL	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    NOTIFY_SIGNAL,$/;"	e	enum:__anon9c9cef500103	file:	access:public
NO_JUMP	..\\scintilla\\lua\\src\\lcode.h	/^#define NO_JUMP /;"	d
NO_REG	..\\scintilla\\lua\\src\\lopcodes.h	/^#define NO_REG	/;"	d
NUM_OPCODES	..\\scintilla\\lua\\src\\lopcodes.h	/^#define NUM_OPCODES	/;"	d
NUM_RESERVED	..\\scintilla\\lua\\src\\llex.h	/^#define NUM_RESERVED	/;"	d
NUM_TAGS	..\\scintilla\\lua\\src\\lobject.h	/^#define NUM_TAGS	/;"	d
N_COLUMNS	..\\scintilla\\gtk\\PlatGTK.cxx	/^	N_COLUMNS$/;"	e	enum:__anon0ae033de0203	file:	access:public
Name	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::Name() const {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:() const
NameOfStyle	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::NameOfStyle(int style) {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:(int style)
NameOfStyle	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::NameOfStyle(int style) {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:(int style)
NameOfStyle	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::NameOfStyle(int style) {$/;"	f	class:LexState	typeref:typename:const char *	signature:(int style)
NamedStyles	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::NamedStyles() {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:()
NamedStyles	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::NamedStyles() {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:()
NamedStyles	..\\scintilla\\lexlib\\LexerModule.cxx	/^size_t LexerModule::NamedStyles() const {$/;"	f	class:LexerModule	typeref:typename:size_t	signature:() const
NamedStyles	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::NamedStyles() {$/;"	f	class:LexState	typeref:typename:int	signature:()
NaturalDirection	..\\scintilla\\src\\Editor.cxx	/^int NaturalDirection(unsigned int iMessage) {$/;"	f	namespace:__anon92132c300211	typeref:typename:int	signature:(unsigned int iMessage)
NcHitTest	..\\scintilla\\win32\\PlatWin.cxx	/^LRESULT ListBoxX::NcHitTest(WPARAM wParam, LPARAM lParam) const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:LRESULT	signature:(WPARAM wParam,LPARAM lParam) const
Need	..\\scintilla\\src\\Editor.h	/^	void Need(workItems items_, Sci::Position pos) {$/;"	f	class:Scintilla::WorkNeeded	typeref:typename:void	access:public	signature:(workItems items_,Sci::Position pos)
NeedShown	..\\scintilla\\src\\Editor.cxx	/^void Editor::NeedShown(Sci::Position pos, Sci::Position len) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position pos,Sci::Position len)
NeedWrapping	..\\scintilla\\src\\Editor.cxx	/^void Editor::NeedWrapping(Sci::Line docLineStart, Sci::Line docLineEnd) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line docLineStart,Sci::Line docLineEnd)
Needed	..\\scintilla\\src\\Document.h	/^	bool Needed() const {$/;"	f	class:Scintilla::UndoGroup	typeref:typename:bool	access:public	signature:() const
NeedsDrawing	..\\scintilla\\src\\Document.h	/^	bool NeedsDrawing(Sci::Line line) const {$/;"	f	class:Scintilla::HighlightDelimiter	typeref:typename:bool	access:public	signature:(Sci::Line line) const
NeedsOnClose	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::NeedsOnClose() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
NeedsOnClose	..\\scite\\src\\Extender.h	/^	virtual bool NeedsOnClose() { return true; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:()
NeedsOnClose	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::NeedsOnClose() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
NeedsOnClose	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::NeedsOnClose() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
NeedsOnClose	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::NeedsOnClose() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
NeedsSave	..\\scite\\src\\SciTEBuffers.cxx	/^bool Buffer::NeedsSave(int delayBeforeSave) const {$/;"	f	class:Buffer	typeref:typename:bool	signature:(int delayBeforeSave) const
NeedsWrap	..\\scintilla\\src\\Editor.h	/^	bool NeedsWrap() const {$/;"	f	struct:Scintilla::WrapPending	typeref:typename:bool	access:public	signature:() const
New	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::New() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
NewAssoc	..\\scite\\src\\Containers.h	/^	Association* NewAssoc() {$/;"	f	class:TMap	typeref:typename:Association *	access:protected	signature:()
NewLine	..\\scintilla\\src\\Editor.cxx	/^void Editor::NewLine() {$/;"	f	class:Editor	typeref:typename:void	signature:()
NewLineInOutput	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::NewLineInOutput() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
NewNode	..\\scite\\src\\Containers.h	/^	Node* NewNode(Node* pPrev, Node* pNext) {$/;"	f	class:TList	typeref:typename:Node *	access:protected	signature:(Node * pPrev,Node * pNext)
NewerThan	..\\scintilla\\src\\PositionCache.cxx	/^bool PositionCacheEntry::NewerThan(const PositionCacheEntry &other) const {$/;"	f	class:PositionCacheEntry	typeref:typename:bool	signature:(const PositionCacheEntry & other) const
Next	..\\scintilla\\gtk\\PlatGTK.cxx	/^	void Next() {$/;"	f	class:ClusterIterator	typeref:typename:void	file:	access:public	signature:()
Next	..\\scintilla\\src\\PositionCache.cxx	/^TextSegment BreakFinder::Next() {$/;"	f	class:BreakFinder	typeref:typename:TextSegment	signature:()
Next	..\\scite\\src\\Credits.cxx	/^	void Next() {$/;"	f	class:__anon1b46962c0111::RandomColour	typeref:typename:void	file:	access:public	signature:()
Next	..\\scite\\src\\LuaExtension.cxx	/^	static int Next(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
Next	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::Next() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Next	..\\scite\\src\\SciTEIO.cxx	/^	const char *Next() {$/;"	f	class:FileReader	typeref:typename:const char *	file:	access:public	signature:()
Next	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Next(bool markAll, bool invertDirection) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(bool markAll,bool invertDirection)
Next	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Next(bool select) {$/;"	f	class:SearchStrip	typeref:typename:void	signature:(bool select)
NextByte	..\\scite\\src\\SciTEIO.cxx	/^	int NextByte() {$/;"	f	class:BufferedFile	typeref:typename:int	file:	access:public	signature:()
NextCharacter	..\\scintilla\\src\\Document.cxx	/^bool Document::NextCharacter(Sci::Position &pos, int moveDir) const {$/;"	f	class:Document	typeref:typename:bool	signature:(Sci::Position & pos,int moveDir) const
NextField	..\\scintilla\\src\\XPM.cxx	/^static const char *NextField(const char *s) {$/;"	f	typeref:typename:const char *	file:	signature:(const char * s)
NextInStack	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::NextInStack() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
NextIncremental	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindReplaceStrip::NextIncremental() {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:()
NextIncremental	..\\scite\\win32\\Strips.cxx	/^void FindReplaceStrip::NextIncremental(ChangingSource source) {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:(ChangingSource source)
NextLine	..\\scite\\gtk\\Widget.cxx	/^void WTable::NextLine() {$/;"	f	class:WTable	typeref:typename:void	signature:()
NextPosition	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::NextPosition(Sci::Position pos, int moveDir) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos,int moveDir) const
NextRandom	..\\scite\\src\\Credits.cxx	/^	int NextRandom() {$/;"	f	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:private	signature:()
NextTab	..\\scintilla\\src\\Document.cxx	/^static Sci::Position NextTab(Sci::Position pos, Sci::Position tabSize) {$/;"	f	typeref:typename:Sci::Position	file:	signature:(Sci::Position pos,Sci::Position tabSize)
NextTabPos	..\\scintilla\\src\\CallTip.cxx	/^int CallTip::NextTabPos(int x) const {$/;"	f	class:CallTip	typeref:typename:int	signature:(int x) const
NextTabstopPos	..\\scintilla\\src\\EditView.cxx	/^XYPOSITION EditView::NextTabstopPos(Sci::Line line, XYPOSITION x, XYPOSITION tabWidth) const {$/;"	f	class:EditView	typeref:typename:XYPOSITION	signature:(Sci::Line line,XYPOSITION x,XYPOSITION tabWidth) const
NextWordEnd	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::NextWordEnd(Sci::Position pos, int delta) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos,int delta) const
NextWordStart	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::NextWordStart(Sci::Position pos, int delta) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos,int delta) const
NoMatchColour	..\\scite\\win32\\Strips.cxx	/^LRESULT SearchStripBase::NoMatchColour(HDC hdc) {$/;"	f	class:SearchStripBase	typeref:typename:LRESULT	signature:(HDC hdc)
Node	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct Node {$/;"	s
Node	..\\scintilla\\lua\\src\\lobject.h	/^} Node;$/;"	t	typeref:struct:Node
Node	..\\scite\\src\\Containers.h	/^	struct Node	{$/;"	s	class:TList	access:protected
NormaliseSplit	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::NormaliseSplit(int splitPos) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(int splitPos)
NormalizePath	..\\scite\\src\\FilePath.cxx	/^FilePath FilePath::NormalizePath() const {$/;"	f	class:FilePath	typeref:typename:FilePath	signature:() const
NotificationToStripCommand	..\\scite\\win32\\Strips.cxx	/^static StripCommand NotificationToStripCommand(int notification) {$/;"	f	typeref:typename:StripCommand	file:	signature:(int notification)
NotificationType	..\\scintilla\\cocoa\\InfoBarCommunicator.h	/^typedef NS_ENUM(NSInteger, NotificationType) {$/;"	t	typeref:typename:NS_ENUM (NSInteger,){ IBNZoomChanged, IBNCaretChanged, IBNStatusChanged, }
Notify	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::Notify(GtkWidget *, gint, SCNotification *nt) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(GtkWidget *,gint,SCNotification * nt)
Notify	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Notify(const SCNotification *notification) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const SCNotification * notification)
Notify	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Notify(const SCNotification *notification) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const SCNotification * notification)
Notify	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::Notify(const SCNotification *notification) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const SCNotification * notification)
NotifyCaretMove	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyCaretMove() {$/;"	f	class:Editor	typeref:typename:void	signature:()
NotifyCaretMove	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::NotifyCaretMove() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
NotifyChange	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void NotifyChange() {}$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
NotifyChange	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::NotifyChange() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
NotifyChange	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::NotifyChange()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
NotifyChange	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::NotifyChange() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
NotifyChar	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyChar(int ch) {$/;"	f	class:Editor	typeref:typename:void	signature:(int ch)
NotifyClick	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyClick(Point pt, bool shift, bool ctrl, bool alt) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,bool shift,bool ctrl,bool alt)
NotifyClick	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyClick(Point pt, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,int modifiers)
NotifyDeleted	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifyDeleted(Document *, void *) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,void *)
NotifyDeleted	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyDeleted(Document *, void *) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,void *)
NotifyDoubleClick	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyDoubleClick(Point pt, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,int modifiers)
NotifyDoubleClick	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::NotifyDoubleClick(Point pt, int modifiers) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(Point pt,int modifiers)
NotifyDwelling	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyDwelling(Point pt, bool state) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,bool state)
NotifyErrorOccurred	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifyErrorOccurred(Document *, void *, int status) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,void *,int status)
NotifyErrorOccurred	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyErrorOccurred(Document *, void *, int status) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,void *,int status)
NotifyFocus	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::NotifyFocus(bool focus) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(bool focus)
NotifyFocus	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::NotifyFocus(bool focus)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(bool focus)
NotifyFocus	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyFocus(bool focus) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool focus)
NotifyFocus	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::NotifyFocus(bool focus) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(bool focus)
NotifyHeader	..\\scintilla\\include\\Scintilla.h	/^#define NotifyHeader /;"	d
NotifyHotSpotClicked	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyHotSpotClicked(Sci::Position position, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position position,int modifiers)
NotifyHotSpotDoubleClicked	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyHotSpotDoubleClicked(Sci::Position position, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position position,int modifiers)
NotifyHotSpotReleaseClick	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyHotSpotReleaseClick(Sci::Position position, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position position,int modifiers)
NotifyIndicatorClick	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyIndicatorClick(bool click, Sci::Position position, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool click,Sci::Position position,int modifiers)
NotifyKey	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::NotifyKey(int key, int modifiers) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(int key,int modifiers)
NotifyLexerChanged	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifyLexerChanged(Document *, void *) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,void *)
NotifyLexerChanged	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyLexerChanged(Document *, void *) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,void *)
NotifyLexerChanged	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::NotifyLexerChanged(Document *, void *) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Document *,void *)
NotifyMacroRecord	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyMacroRecord(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:Editor	typeref:typename:void	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
NotifyMarginClick	..\\scintilla\\src\\Editor.cxx	/^bool Editor::NotifyMarginClick(Point pt, int modifiers) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Point pt,int modifiers)
NotifyMarginRightClick	..\\scintilla\\src\\Editor.cxx	/^bool Editor::NotifyMarginRightClick(Point pt, int modifiers) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Point pt,int modifiers)
NotifyModified	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifyModified(Document *, DocModification mh, void *) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,DocModification mh,void *)
NotifyModified	..\\scintilla\\src\\Document.cxx	/^void Document::NotifyModified(DocModification mh) {$/;"	f	class:Document	typeref:typename:void	signature:(DocModification mh)
NotifyModified	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyModified(Document *, DocModification mh, void *) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,DocModification mh,void *)
NotifyModifyAttempt	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifyModifyAttempt(Document *, void *) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,void *)
NotifyModifyAttempt	..\\scintilla\\src\\Document.cxx	/^void Document::NotifyModifyAttempt() {$/;"	f	class:Document	typeref:typename:void	signature:()
NotifyModifyAttempt	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyModifyAttempt() {$/;"	f	class:Editor	typeref:typename:void	signature:()
NotifyModifyAttempt	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyModifyAttempt(Document *, void *) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,void *)
NotifyNeedShown	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyNeedShown(Sci::Position pos, Sci::Position len) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position pos,Sci::Position len)
NotifyPainted	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyPainted() {$/;"	f	class:Editor	typeref:typename:void	signature:()
NotifyParent	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void NotifyParent(SCNotification scn) {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(SCNotification scn)
NotifyParent	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::NotifyParent(SCNotification scn) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(SCNotification scn)
NotifyParent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::NotifyParent(SCNotification scn)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(SCNotification scn)
NotifyParent	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::NotifyParent(SCNotification scn) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(SCNotification scn)
NotifyReadOnly	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::NotifyReadOnly() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:()
NotifySavePoint	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifySavePoint(Document *, void *, bool atSavePoint) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,void *,bool atSavePoint)
NotifySavePoint	..\\scintilla\\src\\Document.cxx	/^void Document::NotifySavePoint(bool atSavePoint) {$/;"	f	class:Document	typeref:typename:void	signature:(bool atSavePoint)
NotifySavePoint	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifySavePoint(Document *, void *, bool atSavePoint) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,void *,bool atSavePoint)
NotifySavePoint	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifySavePoint(bool isSavePoint) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool isSavePoint)
NotifySignal	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::NotifySignal(GtkWidget *, gint \/*wParam*\/, SCNotification *notification, SciTEG/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkWidget *,gint,SCNotification * notification,SciTEGTK * scitew)
NotifyStyleNeeded	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void WatcherHelper::NotifyStyleNeeded(Document *, void *, Sci::Position endPos) {$/;"	f	class:WatcherHelper	typeref:typename:void	signature:(Document *,void *,Sci::Position endPos)
NotifyStyleNeeded	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyStyleNeeded(Document *, void *, Sci::Position endStyleNeeded) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document *,void *,Sci::Position endStyleNeeded)
NotifyStyleToNeeded	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyStyleToNeeded(Sci::Position endStyleNeeded) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position endStyleNeeded)
NotifyStyleToNeeded	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::NotifyStyleToNeeded(Sci::Position endStyleNeeded) {$/;"	f	class:ScintillaBase	typeref:typename:void	signature:(Sci::Position endStyleNeeded)
NotifyURIDropped	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::NotifyURIDropped(const char *list) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(const char * list)
NotifyURIDropped	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::NotifyURIDropped(const char *uri)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const char * uri)
NotifyUpdateUI	..\\scintilla\\src\\Editor.cxx	/^bool Editor::NotifyUpdateUI() {$/;"	f	class:Editor	typeref:typename:bool	signature:()
NotifyZoom	..\\scintilla\\src\\Editor.cxx	/^void Editor::NotifyZoom() {$/;"	f	class:Editor	typeref:typename:void	signature:()
NoutRefresh	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void NoutRefresh() {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
NumberLines	..\\scintilla\\src\\PerLine.cxx	/^static int NumberLines(const char *text) {$/;"	f	typeref:typename:int	file:	signature:(const char * text)
OBJECT_CLASS	..\\scintilla\\gtk\\ScintillaGTK.h	/^#define OBJECT_CLASS /;"	d
OKP	..\\scintilla\\src\\RESearch.cxx	/^#define OKP /;"	d	file:
OPR_ADD	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr	access:public
OPR_AND	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr	access:public
OPR_CONCAT	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_CONCAT,$/;"	e	enum:BinOpr	access:public
OPR_DIV	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr	access:public
OPR_EQ	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr	access:public
OPR_GE	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr	access:public
OPR_GT	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr	access:public
OPR_LE	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr	access:public
OPR_LEN	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr	access:public
OPR_LT	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_LT, OPR_LE, OPR_GT, OPR_GE,$/;"	e	enum:BinOpr	access:public
OPR_MINUS	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr	access:public
OPR_MOD	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr	access:public
OPR_MUL	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr	access:public
OPR_NE	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_NE, OPR_EQ,$/;"	e	enum:BinOpr	access:public
OPR_NOBINOPR	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_NOBINOPR$/;"	e	enum:BinOpr	access:public
OPR_NOT	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr	access:public
OPR_NOUNOPR	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	e	enum:UnOpr	access:public
OPR_OR	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_AND, OPR_OR,$/;"	e	enum:BinOpr	access:public
OPR_POW	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr	access:public
OPR_SUB	..\\scintilla\\lua\\src\\lcode.h	/^  OPR_ADD, OPR_SUB, OPR_MUL, OPR_DIV, OPR_MOD, OPR_POW,$/;"	e	enum:BinOpr	access:public
OPTIONSET_H	..\\scintilla\\lexlib\\OptionSet.h	/^#define OPTIONSET_H$/;"	d
OP_ADD	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_ADD,\/*	A B C	R(A) := RK(B) + RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_CALL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_CALL,\/*	A B C	R(A), ... ,R(A+C-2) := R(A)(R(A+1), ... ,R(A+B-1)) *\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_CLOSE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_CLOSE,\/*	A 	close all variables in the stack up to (>=) R(A)*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_CLOSURE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_CLOSURE,\/*	A Bx	R(A) := closure(KPROTO[Bx], R(A), ... ,R(A+n))	*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_CONCAT	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_CONCAT,\/*	A B C	R(A) := R(B).. ... ..R(C)			*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_DIV	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_DIV,\/*	A B C	R(A) := RK(B) \/ RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_EQ	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_EQ,\/*	A B C	if ((RK(B) == RK(C)) ~= A) then pc++		*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_FORLOOP	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_FORLOOP,\/*	A sBx	R(A)+=R(A+2);$/;"	e	enum:__anon6042b6d50103	access:public
OP_FORPREP	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_FORPREP,\/*	A sBx	R(A)-=R(A+2); pc+=sBx				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_GETGLOBAL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_GETGLOBAL,\/*	A Bx	R(A) := Gbl[Kst(Bx)]				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_GETTABLE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_GETTABLE,\/*	A B C	R(A) := R(B)[RK(C)]				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_GETUPVAL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_GETUPVAL,\/*	A B	R(A) := UpValue[B]				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_JMP	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_JMP,\/*	sBx	pc+=sBx					*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_LE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_LE,\/*	A B C	if ((RK(B) <= RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_LEN	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_LEN,\/*	A B	R(A) := length of R(B)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_LOADBOOL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_LOADBOOL,\/*	A B C	R(A) := (Bool)B; if (C) pc++			*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_LOADK	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_LOADK,\/*	A Bx	R(A) := Kst(Bx)					*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_LOADNIL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_LOADNIL,\/*	A B	R(A) := ... := R(B) := nil			*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_LT	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_LT,\/*	A B C	if ((RK(B) <  RK(C)) ~= A) then pc++  		*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_MOD	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_MOD,\/*	A B C	R(A) := RK(B) % RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_MOVE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_MOVE,\/*	A B	R(A) := R(B)					*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_MUL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_MUL,\/*	A B C	R(A) := RK(B) * RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_NEWTABLE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_NEWTABLE,\/*	A B C	R(A) := {} (size = B,C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_NOT	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_NOT,\/*	A B	R(A) := not R(B)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_POW	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_POW,\/*	A B C	R(A) := RK(B) ^ RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_RETURN	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_RETURN,\/*	A B	return R(A), ... ,R(A+B-2)	(see note)	*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_SELF	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_SELF,\/*	A B C	R(A+1) := R(B); R(A) := R(B)[RK(C)]		*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_SETGLOBAL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_SETGLOBAL,\/*	A Bx	Gbl[Kst(Bx)] := R(A)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_SETLIST	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_SETLIST,\/*	A B C	R(A)[(C-1)*FPF+i] := R(A+i), 1 <= i <= B	*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_SETTABLE	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_SETTABLE,\/*	A B C	R(A)[RK(B)] := RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_SETUPVAL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_SETUPVAL,\/*	A B	UpValue[B] := R(A)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_SUB	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_SUB,\/*	A B C	R(A) := RK(B) - RK(C)				*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_TAILCALL	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_TAILCALL,\/*	A B C	return R(A)(R(A+1), ... ,R(A+B-1))		*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_TEST	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_TEST,\/*	A C	if not (R(A) <=> C) then pc++			*\/ $/;"	e	enum:__anon6042b6d50103	access:public
OP_TESTSET	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_TESTSET,\/*	A B C	if (R(B) <=> C) then R(A) := R(B) else pc++	*\/ $/;"	e	enum:__anon6042b6d50103	access:public
OP_TFORLOOP	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_TFORLOOP,\/*	A C	R(A+3), ... ,R(A+2+C) := R(A)(R(A+1), R(A+2)); $/;"	e	enum:__anon6042b6d50103	access:public
OP_UNM	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_UNM,\/*	A B	R(A) := -R(B)					*\/$/;"	e	enum:__anon6042b6d50103	access:public
OP_VARARG	..\\scintilla\\lua\\src\\lopcodes.h	/^OP_VARARG\/*	A B	R(A), R(A+1), ..., R(A+B-1) = vararg		*\/$/;"	e	enum:__anon6042b6d50103	access:public
OS_X_KEYS	..\\scintilla\\src\\KeyMap.cxx	/^#define OS_X_KEYS /;"	d	file:
OUTPUT	..\\scintilla\\lua\\src\\luac.c	/^#define	OUTPUT	/;"	d	file:
ObjectSignal	..\\scite\\gtk\\Widget.h	/^class ObjectSignal {$/;"	c
OctalEscape	..\\scite\\scripts\\RegenerateSource.py	/^def OctalEscape(s):$/;"	f	access:public	signature:(s)
OmitXidContinue	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool OmitXidContinue(int character) {$/;"	f	namespace:Scintilla::__anonf0c5a84c0211	typeref:typename:bool	signature:(int character)
OmitXidStart	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^bool OmitXidStart(int character) {$/;"	f	namespace:Scintilla::__anonf0c5a84c0211	typeref:typename:bool	signature:(int character)
OnBeforeSave	..\\scite\\src\\Extender.h	/^	virtual bool OnBeforeSave(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
OnBeforeSave	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnBeforeSave(const char *filename) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * filename)
OnBeforeSave	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnBeforeSave(const char *filename) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * filename)
OnChar	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnChar(char) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(char)
OnChar	..\\scite\\src\\Extender.h	/^	virtual bool OnChar(char) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(char)
OnChar	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnChar(char ch) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(char ch)
OnChar	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnChar(char c) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(char c)
OnChar	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnChar(char) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(char)
OnClick	..\\scite\\src\\Extender.h	/^	virtual bool OnClick(int) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int)
OnClick	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnClick(int modifiers) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int modifiers)
OnClick	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnClick(int modifiers) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int modifiers)
OnClose	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnClose(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnClose	..\\scite\\src\\Extender.h	/^	virtual bool OnClose(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
OnClose	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnClose(const char *filename) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * filename)
OnClose	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnClose(const char *filename) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * filename)
OnClose	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnClose(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnDoubleClick	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::OnDoubleClick() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:()
OnDoubleClick	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnDoubleClick() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnDoubleClick	..\\scite\\src\\Extender.h	/^	virtual bool OnDoubleClick() { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:()
OnDoubleClick	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnDoubleClick() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
OnDoubleClick	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnDoubleClick() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
OnDoubleClick	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnDoubleClick() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnDwellStart	..\\scite\\src\\Extender.h	/^	virtual bool OnDwellStart(int, const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int,const char *)
OnDwellStart	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnDwellStart(int pos, const char *word) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int pos,const char * word)
OnDwellStart	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnDwellStart(int pos, const char *word) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int pos,const char * word)
OnExecute	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnExecute(const char *cmd) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * cmd)
OnExecute	..\\scite\\src\\Extender.h	/^	virtual bool OnExecute(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
OnExecute	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnExecute(const char *s) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * s)
OnExecute	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnExecute(const char *cmd) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * cmd)
OnExecute	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnExecute(const char *cmd) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * cmd)
OnIdle	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::OnIdle() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
OnKey	..\\scite\\src\\Extender.h	/^	virtual bool OnKey(int, int) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int,int)
OnKey	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnKey(int keyval, int modifiers) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int keyval,int modifiers)
OnKey	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnKey(int keyval, int modifiers) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int keyval,int modifiers)
OnMacro	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnMacro(const char *command, const char *params) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * command,const char * params)
OnMacro	..\\scite\\src\\Extender.h	/^	virtual bool OnMacro(const char *, const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *,const char *)
OnMacro	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnMacro(const char *p, const char *q) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * p,const char * q)
OnMacro	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnMacro(const char *command, const char *params) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * command,const char * params)
OnMarginClick	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnMarginClick() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnMarginClick	..\\scite\\src\\Extender.h	/^	virtual bool OnMarginClick() { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:()
OnMarginClick	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnMarginClick() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
OnMarginClick	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnMarginClick() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
OnMarginClick	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnMarginClick() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnOpen	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnOpen(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnOpen	..\\scite\\src\\Extender.h	/^	virtual bool OnOpen(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
OnOpen	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnOpen(const char *filename) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * filename)
OnOpen	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnOpen(const char *filename) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * filename)
OnOpen	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnOpen(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnSave	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnSave(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnSave	..\\scite\\src\\Extender.h	/^	virtual bool OnSave(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
OnSave	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnSave(const char *filename) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * filename)
OnSave	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSave(const char *filename) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * filename)
OnSave	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnSave(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnSavePointLeft	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnSavePointLeft() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnSavePointLeft	..\\scite\\src\\Extender.h	/^	virtual bool OnSavePointLeft() { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:()
OnSavePointLeft	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnSavePointLeft() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
OnSavePointLeft	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSavePointLeft() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
OnSavePointLeft	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnSavePointLeft() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnSavePointReached	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnSavePointReached() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnSavePointReached	..\\scite\\src\\Extender.h	/^	virtual bool OnSavePointReached() { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:()
OnSavePointReached	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnSavePointReached() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
OnSavePointReached	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSavePointReached() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
OnSavePointReached	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnSavePointReached() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnSelChange	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::OnSelChange() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:()
OnStyle	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnStyle(unsigned int, int, int, StyleWriter *) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(unsigned int,int,int,StyleWriter *)
OnStyle	..\\scite\\src\\Extender.h	/^	virtual bool OnStyle(unsigned int, int, int, StyleWriter *) {$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(unsigned int,int,int,StyleWriter *)
OnStyle	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnStyle(unsigned int startPos, int lengthDoc, int initStyle, StyleWriter *sty/;"	f	class:LuaExtension	typeref:typename:bool	signature:(unsigned int startPos,int lengthDoc,int initStyle,StyleWriter * styler)
OnStyle	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnStyle(unsigned int p, int q, int r, StyleWriter *s) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(unsigned int p,int q,int r,StyleWriter * s)
OnStyle	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnStyle(unsigned int, int, int, StyleWriter *) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(unsigned int,int,int,StyleWriter *)
OnSwitchFile	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnSwitchFile(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnSwitchFile	..\\scite\\src\\Extender.h	/^	virtual bool OnSwitchFile(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
OnSwitchFile	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnSwitchFile(const char *filename) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(const char * filename)
OnSwitchFile	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSwitchFile(const char *filename) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * filename)
OnSwitchFile	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnSwitchFile(const char *path) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * path)
OnTimer	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::OnTimer() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
OnUpdateUI	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::OnUpdateUI() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnUpdateUI	..\\scite\\src\\Extender.h	/^	virtual bool OnUpdateUI() { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:()
OnUpdateUI	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnUpdateUI() {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:()
OnUpdateUI	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnUpdateUI() {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:()
OnUpdateUI	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::OnUpdateUI() {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:()
OnUserListSelection	..\\scite\\src\\Extender.h	/^	virtual bool OnUserListSelection(int, const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int,const char *)
OnUserListSelection	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnUserListSelection(int listType, const char *selection) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int listType,const char * selection)
OnUserListSelection	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnUserListSelection(int listType, const char *selection) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int listType,const char * selection)
OnUserStrip	..\\scite\\src\\Extender.h	/^	virtual bool OnUserStrip(int \/* control *\/, int \/* change *\/) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int,int)
OnUserStrip	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::OnUserStrip(int control, int change) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int control,int change)
OnUserStrip	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::OnUserStrip(int control, int change) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int control,int change)
OneToOne	..\\scintilla\\src\\ContractionState.h	/^	bool OneToOne() const {$/;"	f	class:Scintilla::ContractionState	typeref:typename:bool	access:private	signature:() const
OpArgK	..\\scintilla\\lua\\src\\lopcodes.h	/^  OpArgK   \/* argument is a constant or register\/constant *\/$/;"	e	enum:OpArgMask	access:public
OpArgMask	..\\scintilla\\lua\\src\\lopcodes.h	/^enum OpArgMask {$/;"	g
OpArgN	..\\scintilla\\lua\\src\\lopcodes.h	/^  OpArgN,  \/* argument is not used *\/$/;"	e	enum:OpArgMask	access:public
OpArgR	..\\scintilla\\lua\\src\\lopcodes.h	/^  OpArgR,  \/* argument is a register or a jump offset *\/$/;"	e	enum:OpArgMask	access:public
OpArgU	..\\scintilla\\lua\\src\\lopcodes.h	/^  OpArgU,  \/* argument is used *\/$/;"	e	enum:OpArgMask	access:public
OpCode	..\\scintilla\\lua\\src\\lopcodes.h	/^} OpCode;$/;"	t	typeref:enum:__anon6042b6d50103
OpMode	..\\scintilla\\lua\\src\\lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	g
Opcode	..\\scintilla\\lua\\src\\lpvm.h	/^typedef enum Opcode {$/;"	g
Opcode	..\\scintilla\\lua\\src\\lpvm.h	/^} Opcode;$/;"	t	typeref:enum:Opcode
Open	..\\scintilla\\gtk\\Converter.h	/^	void Open(const char *charSetDestination, const char *charSetSource, bool transliterations) {$/;"	f	class:Scintilla::Converter	typeref:typename:void	access:public	signature:(const char * charSetDestination,const char * charSetSource,bool transliterations)
Open	..\\scite\\src\\FilePath.cxx	/^FILE *FilePath::Open(const GUI::gui_char *mode) const {$/;"	f	class:FilePath	typeref:typename:FILE *	signature:(const GUI::gui_char * mode) const
Open	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::Open(FilePath file, OpenFlags of) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(FilePath file,OpenFlags of)
OpenClipboardRetry	..\\scintilla\\win32\\ScintillaWin.cxx	/^static bool OpenClipboardRetry(HWND hwnd) {$/;"	f	typeref:typename:bool	file:	signature:(HWND hwnd)
OpenCompletion	..\\scite\\src\\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	g	class:SciTEBase	access:protected
OpenCurrentFile	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::OpenCurrentFile(long fileSize, bool suppressMessage, bool asynchronous) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(long fileSize,bool suppressMessage,bool asynchronous)
OpenDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::OpenDialog(FilePath directory, const char *filter) {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:(FilePath directory,const char * filter)
OpenDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::OpenDialog(FilePath directory, const GUI::gui_char *filesFilter) {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:(FilePath directory,const GUI::gui_char * filesFilter)
OpenFilesFromStdin	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::OpenFilesFromStdin() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
OpenFlags	..\\scite\\src\\SciTEBase.h	/^	enum OpenFlags {$/;"	g	class:SciTEBase	access:protected
OpenFromStdin	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::OpenFromStdin(bool UseOutputPane) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool UseOutputPane)
OpenHandle	..\\scintilla\\gtk\\Converter.h	/^	void OpenHandle(const char *fullDestination, const char *charSetSource) {$/;"	f	class:Scintilla::Converter	typeref:typename:void	access:private	signature:(const char * fullDestination,const char * charSetSource)
OpenPipe	..\\scite\\gtk\\DirectorExtension.cxx	/^static int OpenPipe(const char *pipeName) {$/;"	f	typeref:typename:int	file:	signature:(const char * pipeName)
OpenProperties	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::OpenProperties(int propsFile) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int propsFile)
OpenSelected	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::OpenSelected() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
OpenUriList	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::OpenUriList(const char *list) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const char * list)
OpenUriList	..\\scite\\src\\SciTEBase.h	/^	virtual void OpenUriList(const char *) {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:(const char *)
Option	..\\scintilla\\lexlib\\OptionSet.h	/^		Option() :$/;"	f	struct:Scintilla::OptionSet::Option	access:public	signature:()
Option	..\\scintilla\\lexlib\\OptionSet.h	/^		Option(plcob pb_, std::string description_="") :$/;"	f	struct:Scintilla::OptionSet::Option	access:public	signature:(plcob pb_,std::string description_="")
Option	..\\scintilla\\lexlib\\OptionSet.h	/^		Option(plcoi pi_, std::string description_) :$/;"	f	struct:Scintilla::OptionSet::Option	access:public	signature:(plcoi pi_,std::string description_)
Option	..\\scintilla\\lexlib\\OptionSet.h	/^		Option(plcos ps_, std::string description_) :$/;"	f	struct:Scintilla::OptionSet::Option	access:public	signature:(plcos ps_,std::string description_)
Option	..\\scintilla\\lexlib\\OptionSet.h	/^	struct Option {$/;"	s	class:Scintilla::OptionSet	access:private
OptionMap	..\\scintilla\\lexlib\\OptionSet.h	/^	typedef std::map<std::string, Option> OptionMap;$/;"	t	class:Scintilla::OptionSet	typeref:typename:std::map<std::string,Option>	access:private
OptionSet	..\\scintilla\\lexlib\\OptionSet.h	/^class OptionSet {$/;"	c	namespace:Scintilla
Original	..\\scite\\src\\SciTEIO.cxx	/^	const char *Original() const {$/;"	f	class:FileReader	typeref:typename:const char *	file:	access:public	signature:() const
OtherID	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^enum class OtherID { oidNone, oidStart, oidContinue };$/;"	g	namespace:Scintilla::__anonf0c5a84c0211	file:
OtherIDOfCharacter	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^OtherID OtherIDOfCharacter(int character) {$/;"	f	namespace:Scintilla::__anonf0c5a84c0211	typeref:typename:OtherID	signature:(int character)
Output	..\\scintilla\\lua\\src\\luac.c	/^static char Output[]={ OUTPUT };	\/* default output file name *\/$/;"	v	typeref:typename:char[]	file:
OutputAppendEncodedStringSynchronised	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::OutputAppendEncodedStringSynchronised(GUI::gui_string s, int codePageDocument) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(GUI::gui_string s,int codePageDocument)
OutputAppendString	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::OutputAppendString(const char *s, int len) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * s,int len)
OutputAppendStringSynchronised	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::OutputAppendStringSynchronised(const char *s, int len) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * s,int len)
Overlaps	..\\scintilla\\src\\Document.h	/^	bool Overlaps(Range other) const {$/;"	f	class:Scintilla::Range	typeref:typename:bool	access:public	signature:(Range other) const
OverridesTextFore	..\\scintilla\\src\\Indicator.h	/^	bool OverridesTextFore() const {$/;"	f	class:Scintilla::Indicator	typeref:typename:bool	access:public	signature:() const
OwnPrimarySelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::OwnPrimarySelection() {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:()
PACKVERSION	..\\scite\\win32\\Strips.cxx	/^#define PACKVERSION(/;"	d	file:	signature:(major,minor)
PARTITIONING_H	..\\scintilla\\src\\Partitioning.h	/^#define PARTITIONING_H$/;"	d
PATTERN_T	..\\scintilla\\lua\\src\\lptypes.h	/^#define PATTERN_T	/;"	d
PCRC	..\\scintilla\\lua\\src\\ldo.h	/^#define PCRC	/;"	d
PCRLUA	..\\scintilla\\lua\\src\\ldo.h	/^#define PCRLUA	/;"	d
PCRYIELD	..\\scintilla\\lua\\src\\ldo.h	/^#define PCRYIELD	/;"	d
PDFObjectTracker	..\\scite\\src\\ExportPDF.cxx	/^		explicit PDFObjectTracker(FILE *fp_) {$/;"	f	class:SciTEBase::SaveToPDF::PDFObjectTracker	file:	access:public	signature:(FILE * fp_)
PDFObjectTracker	..\\scite\\src\\ExportPDF.cxx	/^	class PDFObjectTracker {$/;"	c	function:SciTEBase::SaveToPDF	file:
PDFRender	..\\scite\\src\\ExportPDF.cxx	/^		PDFRender() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	file:	access:public	signature:()
PDFRender	..\\scite\\src\\ExportPDF.cxx	/^	class PDFRender {$/;"	c	function:SciTEBase::SaveToPDF	file:
PDFStyle	..\\scite\\src\\ExportPDF.cxx	/^struct PDFStyle {$/;"	s	file:
PDF_ENCODING	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_ENCODING	/;"	d	file:
PDF_FONTSIZE_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_FONTSIZE_DEFAULT	/;"	d	file:
PDF_FONT_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_FONT_DEFAULT	/;"	d	file:
PDF_HEIGHT_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_HEIGHT_DEFAULT	/;"	d	file:
PDF_MARGIN_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_MARGIN_DEFAULT	/;"	d	file:
PDF_SPACING_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_SPACING_DEFAULT	/;"	d	file:
PDF_TAB_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_TAB_DEFAULT	/;"	d	file:
PDF_WIDTH_DEFAULT	..\\scite\\src\\ExportPDF.cxx	/^#define PDF_WIDTH_DEFAULT	/;"	d	file:
PDFfontAscenders	..\\scite\\src\\ExportPDF.cxx	/^static short PDFfontAscenders[] =  { 629, 718, 699 };$/;"	v	typeref:typename:short[]	file:
PDFfontDescenders	..\\scite\\src\\ExportPDF.cxx	/^static short PDFfontDescenders[] = { 157, 207, 217 };$/;"	v	typeref:typename:short[]	file:
PDFfontNames	..\\scite\\src\\ExportPDF.cxx	/^static const char *PDFfontNames[] = {$/;"	v	typeref:typename:const char * []	file:
PDFfontWidths	..\\scite\\src\\ExportPDF.cxx	/^static short PDFfontWidths[] =     { 600,   0,   0 };$/;"	v	typeref:typename:short[]	file:
PERLINE_H	..\\scintilla\\src\\PerLine.h	/^#define PERLINE_H$/;"	d
PEnofail	..\\scintilla\\lua\\src\\lpcode.h	/^#define PEnofail /;"	d
PEnullable	..\\scintilla\\lua\\src\\lpcode.h	/^#define PEnullable /;"	d
PFNIsCommentLeader	..\\scintilla\\lexlib\\Accessor.h	/^typedef bool (*PFNIsCommentLeader)(Accessor &styler, Sci_Position pos, Sci_Position len);$/;"	t	namespace:Scintilla	typeref:typename:bool (*)(Accessor & styler,Sci_Position pos,Sci_Position len)
PFont	..\\scintilla\\gtk\\PlatGTK.cxx	/^static FontHandle *PFont(Font &f) {$/;"	f	typeref:typename:FontHandle *	file:	signature:(Font & f)
PI	..\\scintilla\\lua\\src\\lmathlib.c	/^#define PI /;"	d	file:
PIXBUF_COLUMN	..\\scintilla\\gtk\\PlatGTK.cxx	/^	PIXBUF_COLUMN,$/;"	e	enum:__anon0ae033de0203	file:	access:public
PLATCOCOA_H	..\\scintilla\\cocoa\\PlatCocoa.h	/^#define PLATCOCOA_H$/;"	d
PLATFORM_ASSERT	..\\scintilla\\include\\Platform.h	/^#define PLATFORM_ASSERT(/;"	d	signature:(c)
PLATFORM_H	..\\scintilla\\include\\Platform.h	/^#define PLATFORM_H$/;"	d
PLATQT_H	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^#define PLATQT_H$/;"	d
PLATWIN_H	..\\scintilla\\win32\\PlatWin.h	/^#define PLATWIN_H$/;"	d
PLAT_CURSES	..\\scintilla\\include\\Platform.h	/^#define PLAT_CURSES /;"	d
PLAT_DARWIN	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^PLAT_DARWIN = platform.system() == "Darwin"$/;"	v	access:public
PLAT_FOX	..\\scintilla\\include\\Platform.h	/^#define PLAT_FOX /;"	d
PLAT_GTK	..\\scintilla\\include\\Platform.h	/^#define PLAT_GTK /;"	d
PLAT_GTK_MACOSX	..\\scintilla\\include\\Platform.h	/^#define PLAT_GTK_MACOSX /;"	d
PLAT_GTK_WIN32	..\\scintilla\\include\\Platform.h	/^#define PLAT_GTK_WIN32 /;"	d
PLAT_LINUX	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^PLAT_LINUX = not (PLAT_DARWIN or PLAT_WINDOWS)$/;"	v	access:public
PLAT_MACOSX	..\\scintilla\\include\\Platform.h	/^#define PLAT_MACOSX /;"	d
PLAT_QT	..\\scintilla\\include\\Platform.h	/^#define PLAT_QT /;"	d
PLAT_TK	..\\scintilla\\include\\Platform.h	/^#define PLAT_TK /;"	d
PLAT_WIN	..\\scintilla\\include\\Platform.h	/^#define PLAT_WIN /;"	d
PLAT_WINDOWS	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^PLAT_WINDOWS = platform.system() == "Windows"$/;"	v	access:public
PLAT_WX	..\\scintilla\\include\\Platform.h	/^#define PLAT_WX /;"	d
PMatch	..\\scintilla\\src\\RESearch.cxx	/^Sci::Position RESearch::PMatch(const CharacterIndexer &ci, Sci::Position lp, Sci::Position endp,/;"	f	class:RESearch	typeref:typename:Sci::Position	signature:(const CharacterIndexer & ci,Sci::Position lp,Sci::Position endp,char * ap)
POF	..\\scintilla\\lua\\src\\loadlib.c	/^#define POF	/;"	d	file:
POSITIONCACHE_H	..\\scintilla\\src\\PositionCache.h	/^#define POSITIONCACHE_H$/;"	d
POSITION_H	..\\scintilla\\src\\Position.h	/^#define POSITION_H$/;"	d
POS_A	..\\scintilla\\lua\\src\\lopcodes.h	/^#define POS_A	/;"	d
POS_B	..\\scintilla\\lua\\src\\lopcodes.h	/^#define POS_B	/;"	d
POS_Bx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define POS_Bx	/;"	d
POS_C	..\\scintilla\\lua\\src\\lopcodes.h	/^#define POS_C	/;"	d
POS_OP	..\\scintilla\\lua\\src\\lopcodes.h	/^#define POS_OP	/;"	d
PROGNAME	..\\scintilla\\lua\\src\\luac.c	/^#define PROGNAME	/;"	d	file:
PROPERTIES_EXTENSION	..\\scite\\src\\PropSetFile.h	/^#define PROPERTIES_EXTENSION	/;"	d
PROPSETFILE_H	..\\scite\\src\\PropSetFile.h	/^#define PROPSETFILE_H$/;"	d
PROPSETSIMPLE_H	..\\scintilla\\lexlib\\PropSetSimple.h	/^#define PROPSETSIMPLE_H$/;"	d
PRectFromQRect	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^inline PRectangle PRectFromQRect(QRect qr)$/;"	f	namespace:Scintilla	typeref:typename:PRectangle	signature:(QRect qr)
PRectangle	..\\scintilla\\include\\Platform.h	/^	explicit PRectangle(XYPOSITION left_=0, XYPOSITION top_=0, XYPOSITION right_=0, XYPOSITION bott/;"	f	class:Scintilla::PRectangle	access:public	signature:(XYPOSITION left_=0,XYPOSITION top_=0,XYPOSITION right_=0,XYPOSITION bottom_=0)
PRectangle	..\\scintilla\\include\\Platform.h	/^class PRectangle {$/;"	c	namespace:Scintilla
PWidget	..\\scintilla\\gtk\\PlatGTK.cxx	/^static GtkWidget *PWidget(WindowID wid) {$/;"	f	typeref:typename:GtkWidget *	file:	signature:(WindowID wid)
PWidget	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static GtkWidget *PWidget(Window &w) {$/;"	f	typeref:typename:GtkWidget *	file:	signature:(Window & w)
PWidget	..\\scite\\gtk\\GUIGTK.cxx	/^static GtkWidget *PWidget(WindowID wid) {$/;"	f	namespace:GUI	typeref:typename:GtkWidget *	file:	signature:(WindowID wid)
PWidget	..\\scite\\gtk\\SciTEGTK.cxx	/^static GtkWidget *PWidget(GUI::Window &w) {$/;"	f	typeref:typename:GtkWidget *	file:	signature:(GUI::Window & w)
PWindow	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static GdkWindow *PWindow(const Window &w) {$/;"	f	typeref:typename:GdkWindow *	file:	signature:(const Window & w)
PackInto	..\\scite\\gtk\\Widget.cxx	/^void WTable::PackInto(GtkBox *box, gboolean expand) {$/;"	f	class:WTable	typeref:typename:void	signature:(GtkBox * box,gboolean expand)
PageMove	..\\scintilla\\src\\Editor.cxx	/^void Editor::PageMove(int direction, Selection::selTypes selt, bool stuttered) {$/;"	f	class:Editor	typeref:typename:void	signature:(int direction,Selection::selTypes selt,bool stuttered)
Paint	..\\scintilla\\src\\Editor.cxx	/^void Editor::Paint(Surface *surfaceWindow, PRectangle rcArea) {$/;"	f	class:Editor	typeref:typename:void	signature:(Surface * surfaceWindow,PRectangle rcArea)
Paint	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::Paint(HDC hDC) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(HDC hDC)
Paint	..\\scite\\win32\\SciTEWin.cxx	/^void ContentWin::Paint(HDC hDC, GUI::Rectangle) {$/;"	f	class:ContentWin	typeref:typename:void	signature:(HDC hDC,GUI::Rectangle)
Paint	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Paint(HDC hDC) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(HDC hDC)
Paint	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::Paint(HDC hDC) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(HDC hDC)
Paint	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Paint(HDC hDC) {$/;"	f	class:SearchStrip	typeref:typename:void	signature:(HDC hDC)
Paint	..\\scite\\win32\\Strips.cxx	/^void Strip::Paint(HDC hDC) {$/;"	f	class:Strip	typeref:typename:void	signature:(HDC hDC)
PaintCT	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::PaintCT(Surface *surfaceWindow) {$/;"	f	class:CallTip	typeref:typename:void	signature:(Surface * surfaceWindow)
PaintContains	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::PaintContains(PRectangle rc) {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:(PRectangle rc)
PaintContains	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PaintContains(PRectangle rc) {$/;"	f	class:Editor	typeref:typename:bool	signature:(PRectangle rc)
PaintContains	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::PaintContains(PRectangle rc) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(PRectangle rc)
PaintContainsMargin	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PaintContainsMargin() {$/;"	f	class:Editor	typeref:typename:bool	signature:()
PaintContents	..\\scintilla\\src\\CallTip.cxx	/^int CallTip::PaintContents(Surface *surfaceWindow, bool draw) {$/;"	f	class:CallTip	typeref:typename:int	signature:(Surface * surfaceWindow,bool draw)
PaintMargin	..\\scintilla\\src\\MarginView.cxx	/^void MarginView::PaintMargin(Surface *surface, Sci::Line topLine, PRectangle rc, PRectangle rcMa/;"	f	class:Scintilla::MarginView	typeref:typename:void	signature:(Surface * surface,Sci::Line topLine,PRectangle rc,PRectangle rcMargin,const EditModel & model,const ViewStyle & vs)
PaintSelMargin	..\\scintilla\\src\\Editor.cxx	/^void Editor::PaintSelMargin(Surface *surfaceWindow, PRectangle &rc) {$/;"	f	class:Editor	typeref:typename:void	signature:(Surface * surfaceWindow,PRectangle & rc)
PaintText	..\\scintilla\\src\\EditView.cxx	/^void EditView::PaintText(Surface *surfaceWindow, const EditModel &model, PRectangle rcArea,$/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surfaceWindow,const EditModel & model,PRectangle rcArea,PRectangle rcClient,const ViewStyle & vsDraw)
Pane	..\\scite\\src\\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	g	class:ExtensionAPI	access:public
PaneButtonRelease	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::PaneButtonRelease(GtkWidget *, GdkEvent *, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GtkWidget *,GdkEvent *,SciTEGTK * scitew)
PaneMatchObject	..\\scite\\src\\LuaExtension.cxx	/^struct PaneMatchObject {$/;"	s	file:
PanePositionChanged	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::PanePositionChanged(GObject *, GParamSpec *, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GObject *,GParamSpec *,SciTEGTK * scitew)
PangoLayoutFromStyleDefinition	..\\scite\\gtk\\SciTEGTK.cxx	/^static PangoLayout *PangoLayoutFromStyleDefinition(GtkPrintContext *context, const StyleDefiniti/;"	f	typeref:typename:PangoLayout *	file:	signature:(GtkPrintContext * context,const StyleDefinition & sd)
ParaDown	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::ParaDown(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos) const
ParaUp	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::ParaUp(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos) const
ParaUpOrDown	..\\scintilla\\src\\Editor.cxx	/^void Editor::ParaUpOrDown(int direction, Selection::selTypes selt) {$/;"	f	class:Editor	typeref:typename:void	signature:(int direction,Selection::selTypes selt)
ParamCancelCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ParamCancelCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ParamCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ParamCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ParamGrab	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ParamGrab() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ParamGrab	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::ParamGrab() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ParamResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ParamResponse(int responseID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int responseID)
ParametersDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::ParametersDialog(bool modal) {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:(bool modal)
ParametersDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::ParametersDialog(bool modal) {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:(bool modal)
ParametersDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::ParametersDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) /;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
ParametersMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::ParametersMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
ParametersOpen	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::ParametersOpen() {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:()
ParametersOpen	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::ParametersOpen() {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:()
ParseIndicatorDefinition	..\\scite\\src\\StyleDefinition.cxx	/^bool IndicatorDefinition::ParseIndicatorDefinition(const char *definition) {$/;"	f	class:IndicatorDefinition	typeref:typename:bool	signature:(const char * definition)
ParseKeyCode	..\\scite\\gtk\\SciTEGTK.cxx	/^long SciTEKeys::ParseKeyCode(const char *mnemonic) {$/;"	f	class:SciTEKeys	typeref:typename:long	signature:(const char * mnemonic)
ParseKeyCode	..\\scite\\win32\\SciTEWin.cxx	/^long SciTEKeys::ParseKeyCode(const char *mnemonic) {$/;"	f	class:SciTEKeys	typeref:typename:long	signature:(const char * mnemonic)
ParseStyleDefinition	..\\scite\\src\\StyleDefinition.cxx	/^bool StyleDefinition::ParseStyleDefinition(const char *definition) {$/;"	f	class:StyleDefinition	typeref:typename:bool	signature:(const char * definition)
PartialPaint	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::PartialPaint(const PRectangle &rect)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(const PRectangle & rect)
PartitionFromPosition	..\\scintilla\\src\\Partitioning.h	/^	T PartitionFromPosition(T pos) const {$/;"	f	class:Scintilla::Partitioning	typeref:typename:T	access:public	signature:(T pos) const
Partitioning	..\\scintilla\\src\\Partitioning.h	/^	explicit Partitioning(int growSize) {$/;"	f	class:Scintilla::Partitioning	access:public	signature:(int growSize)
Partitioning	..\\scintilla\\src\\Partitioning.h	/^class Partitioning {$/;"	c	namespace:Scintilla
Partitions	..\\scintilla\\src\\Partitioning.h	/^	T Partitions() const {$/;"	f	class:Scintilla::Partitioning	typeref:typename:T	access:public	signature:() const
Paste	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Paste() {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
Paste	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Paste() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
Paste	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::Paste()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
Paste	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::Paste() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
PasteFromMode	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::PasteFromMode(QClipboard::Mode clipboardMode_)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(QClipboard::Mode clipboardMode_)
PasteRectangular	..\\scintilla\\src\\Editor.cxx	/^void Editor::PasteRectangular(SelectionPosition pos, const char *ptr, Sci::Position len) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition pos,const char * ptr,Sci::Position len)
PasteShape	..\\scintilla\\src\\Editor.h	/^	enum PasteShape { pasteStream=0, pasteRectangular = 1, pasteLine = 2 };$/;"	g	class:Scintilla::Editor	access:protected
PasteText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::PasteText(AtkEditableText *text, gint positio/;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(AtkEditableText * text,gint position)
PasteText	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::PasteText(int charPosition) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(int charPosition)
PathRoundRectangle	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void PathRoundRectangle(cairo_t *context, double left, double top, double width, double h/;"	f	typeref:typename:void	file:	signature:(cairo_t * context,double left,double top,double width,double height,int radius)
Pattern	..\\scintilla\\lua\\src\\lptree.h	/^typedef struct Pattern {$/;"	s
Pattern	..\\scintilla\\lua\\src\\lptree.h	/^} Pattern;$/;"	t	typeref:struct:Pattern
PenColour	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void PenColour(ColourDesired fore) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(ColourDesired fore)
PenColour	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::PenColour(ColourDesired fore) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(ColourDesired fore)
PenColour	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::PenColour(ColourDesired fore)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(ColourDesired fore)
PenColour	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::PenColour(ColourDesired fore) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(ColourDesired fore)
PenColour	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::PenColour(ColourDesired fore) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(ColourDesired fore)
PerLine	..\\scintilla\\src\\CellBuffer.h	/^class PerLine {$/;"	c	namespace:Scintilla
Perform	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Perform(const char *actionList) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * actionList)
PerformDeferredTasks	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::PerformDeferredTasks() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
PerformGrep	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::PerformGrep() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
PerformInsertAbbreviation	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::PerformInsertAbbreviation() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
PerformOnNewThread	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::PerformOnNewThread(Worker *pWorker) {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:(Worker * pWorker)
PerformOnNewThread	..\\scite\\win32\\SciTEWin.cxx	/^bool SciTEWin::PerformOnNewThread(Worker *pWorker) {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:(Worker * pWorker)
PerformOne	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::PerformOne(char *action) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(char * action)
PerformRedoStep	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::PerformRedoStep() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
PerformUndoStep	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::PerformUndoStep() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
Pfunc	..\\scintilla\\lua\\src\\ldo.h	/^typedef void (*Pfunc) (lua_State *L, void *ud);$/;"	t	typeref:typename:void (*)(lua_State * L,void * ud)
PhasesDraw	..\\scintilla\\src\\EditView.h	/^	enum PhasesDraw { phasesOne, phasesTwo, phasesMultiple };$/;"	g	class:Scintilla::EditView	access:public
PipeEntry	..\\scite\\gtk\\DirectorExtension.cxx	/^struct PipeEntry {$/;"	s	file:
PixelAt	..\\scintilla\\src\\XPM.cxx	/^void XPM::PixelAt(int x, int y, ColourDesired &colour, bool &transparent) const {$/;"	f	class:XPM	typeref:typename:void	signature:(int x,int y,ColourDesired & colour,bool & transparent) const
PixelGridAlign	..\\scintilla\\src\\Indicator.cxx	/^static PRectangle PixelGridAlign(const PRectangle &rc) {$/;"	f	typeref:typename:PRectangle	file:	signature:(const PRectangle & rc)
Pixels	..\\scintilla\\src\\XPM.cxx	/^const unsigned char *RGBAImage::Pixels() const {$/;"	f	class:RGBAImage	typeref:typename:const unsigned char *	signature:() const
Platform	..\\scintilla\\include\\Platform.h	/^	Platform() {}$/;"	f	class:Scintilla::Platform	access:public	signature:()
Platform	..\\scintilla\\include\\Platform.h	/^	Platform(const Platform &) {}$/;"	f	class:Scintilla::Platform	access:private	signature:(const Platform &)
Platform	..\\scintilla\\include\\Platform.h	/^class Platform {$/;"	c	namespace:Scintilla
Platform_Finalise	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Platform_Finalise() {$/;"	f	typeref:typename:void	signature:()
Platform_Finalise	..\\scintilla\\win32\\PlatWin.cxx	/^void Platform_Finalise(bool fromDllMain) {$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(bool fromDllMain)
Platform_Initialise	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Platform_Initialise() {$/;"	f	typeref:typename:void	signature:()
Platform_Initialise	..\\scintilla\\win32\\PlatWin.cxx	/^void Platform_Initialise(void *hInstance) {$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(void * hInstance)
PlayThisSound	..\\scite\\win32\\SciTEWinDlg.cxx	/^static void PlayThisSound($/;"	f	typeref:typename:void	file:	signature:(const char * sound,int duration,HMODULE & hMM)
Point	..\\scintilla\\include\\Platform.h	/^	explicit Point(XYPOSITION x_=0, XYPOSITION y_=0) : x(x_), y(y_) {$/;"	f	class:Scintilla::Point	access:public	signature:(XYPOSITION x_=0,XYPOSITION y_=0)
Point	..\\scintilla\\include\\Platform.h	/^class Point {$/;"	c	namespace:Scintilla
Point	..\\scite\\src\\GUI.h	/^	explicit Point(int x_=0, int y_=0) : x(x_), y(y_) {$/;"	f	class:GUI::Point	access:public	signature:(int x_=0,int y_=0)
Point	..\\scite\\src\\GUI.h	/^class Point {$/;"	c	namespace:GUI
PointDocument	..\\scintilla\\src\\PositionCache.h	/^	explicit PointDocument(Point pt) : x(pt.x), y(pt.y) {$/;"	f	class:Scintilla::PointDocument	access:public	signature:(Point pt)
PointDocument	..\\scintilla\\src\\PositionCache.h	/^	explicit PointDocument(double x_ = 0, double y_ = 0) : x(x_), y(y_) {$/;"	f	class:Scintilla::PointDocument	access:public	signature:(double x_=0,double y_=0)
PointDocument	..\\scintilla\\src\\PositionCache.h	/^class PointDocument {$/;"	c	namespace:Scintilla
PointEnd	..\\scintilla\\src\\PositionCache.h	/^enum PointEnd {$/;"	g	namespace:Scintilla
PointFromLParam	..\\scintilla\\win32\\ScintillaWin.cxx	/^static Point PointFromLParam(sptr_t lpoint) {$/;"	f	typeref:typename:Point	file:	signature:(sptr_t lpoint)
PointFromLong	..\\scite\\win32\\SciTEWin.h	/^inline GUI::Point PointFromLong(LPARAM lPoint) {$/;"	f	typeref:typename:GUI::Point	signature:(LPARAM lPoint)
PointFromPOINT	..\\scintilla\\win32\\ScintillaWin.cxx	/^static Point PointFromPOINT(POINT pt) {$/;"	f	typeref:typename:Point	file:	signature:(POINT pt)
PointFromPosition	..\\scintilla\\src\\PositionCache.cxx	/^Point LineLayout::PointFromPosition(int posInLine, int lineHeight, PointEnd pe) const {$/;"	f	class:LineLayout	typeref:typename:Point	signature:(int posInLine,int lineHeight,PointEnd pe) const
PointFromQPoint	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^inline Point PointFromQPoint(QPoint qp)$/;"	f	namespace:Scintilla	typeref:typename:Point	signature:(QPoint qp)
PointInSelMargin	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PointInSelMargin(Point pt) const {$/;"	f	class:Editor	typeref:typename:bool	signature:(Point pt) const
PointInSelection	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PointInSelection(Point pt) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Point pt)
PointIsHotspot	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PointIsHotspot(Point pt) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Point pt)
PointMainCaret	..\\scintilla\\src\\Editor.cxx	/^Point Editor::PointMainCaret() {$/;"	f	class:Editor	typeref:typename:Point	signature:()
PointOfCursor	..\\scite\\win32\\SciTEWinBar.cxx	/^GUI::Point PointOfCursor() {$/;"	f	typeref:typename:GUI::Point	signature:()
PointPointer	..\\scite\\win32\\SciTEWin.h	/^inline POINT *PointPointer(GUI::Point *pt) {$/;"	f	typeref:typename:POINT *	signature:(GUI::Point * pt)
Pointer	..\\scite\\gtk\\Widget.cxx	/^GtkWidget* WBase::Pointer() {$/;"	f	class:WBase	typeref:typename:GtkWidget *	signature:()
PointerFromWindow	..\\scintilla\\win32\\PlatWin.cxx	/^static void *PointerFromWindow(HWND hWnd) {$/;"	f	typeref:typename:void *	file:	signature:(HWND hWnd)
PointerFromWindow	..\\scintilla\\win32\\ScintillaWin.cxx	/^static void *PointerFromWindow(HWND hWnd) {$/;"	f	typeref:typename:void *	file:	signature:(HWND hWnd)
PointerFromWindow	..\\scite\\win32\\Strips.cxx	/^void *PointerFromWindow(HWND hWnd) {$/;"	f	typeref:typename:void *	signature:(HWND hWnd)
PollTool	..\\scite\\gtk\\SciTEGTK.cxx	/^int SciTEGTK::PollTool(SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:int	signature:(SciTEGTK * scitew)
Polygon	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(Point * pts,int npts,ColourDesired fore,ColourDesired back)
Polygon	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Polygon(Point *pts, int npts, ColourDesired fore,$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(Point * pts,int npts,ColourDesired fore,ColourDesired back)
Polygon	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::Polygon(Point *pts,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(Point * pts,int npts,ColourDesired fore,ColourDesired back)
Polygon	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(Point * pts,int npts,ColourDesired fore,ColourDesired back)
Polygon	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(Point * pts,int npts,ColourDesired fore,ColourDesired back)
PopStack	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::PopStack() {$/;"	f	class:BufferList	typeref:typename:void	signature:()
PopUpCB	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::PopUpCB(GtkMenuItem *menuItem, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkMenuItem * menuItem,ScintillaGTK * sciThis)
PopUpCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::PopUpCmd(GtkMenuItem *menuItem, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GtkMenuItem * menuItem,SciTEGTK * scitew)
Pos	..\\scintilla\\src\\Document.cxx	/^	Sci::Position Pos() const {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:Sci::Position	file:	access:public	signature:() const
Pos	..\\scintilla\\src\\Document.cxx	/^	Sci::Position Pos() const {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:Sci::Position	file:	access:public	signature:() const
PosRoundUp	..\\scintilla\\src\\Document.cxx	/^	Sci::Position PosRoundUp() const {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:Sci::Position	file:	access:public	signature:() const
PosRoundUp	..\\scintilla\\src\\Document.cxx	/^	Sci::Position PosRoundUp() const {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:Sci::Position	file:	access:public	signature:() const
Position	..\\scintilla\\src\\Position.h	/^typedef int Position;$/;"	t	namespace:Sci	typeref:typename:int
Position	..\\scintilla\\src\\Selection.h	/^	Sci::Position Position() const {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:Sci::Position	access:public	signature:() const
Position	..\\scite\\src\\LuaExtension.cxx	/^	static int Position(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
PositionAfter	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	Sci::Position PositionAfter(Sci::Position pos) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:Sci::Position	access:private	signature:(Sci::Position pos)
PositionAfterArea	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::PositionAfterArea(PRectangle rcArea) const {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(PRectangle rcArea) const
PositionAfterMaxStyling	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::PositionAfterMaxStyling(Sci::Position posMax, bool scrolling) const {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position posMax,bool scrolling) const
PositionBefore	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	Sci::Position PositionBefore(Sci::Position pos) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:Sci::Position	access:private	signature:(Sci::Position pos)
PositionCache	..\\scintilla\\src\\PositionCache.cxx	/^PositionCache::PositionCache() {$/;"	f	class:PositionCache	signature:()
PositionCache	..\\scintilla\\src\\PositionCache.h	/^class PositionCache {$/;"	c	namespace:Scintilla
PositionCacheEntry	..\\scintilla\\src\\PositionCache.cxx	/^PositionCacheEntry::PositionCacheEntry() :$/;"	f	class:PositionCacheEntry	signature:()
PositionCacheEntry	..\\scintilla\\src\\PositionCache.cxx	/^PositionCacheEntry::PositionCacheEntry(const PositionCacheEntry &other) :$/;"	f	class:PositionCacheEntry	signature:(const PositionCacheEntry & other)
PositionCacheEntry	..\\scintilla\\src\\PositionCache.h	/^class PositionCacheEntry {$/;"	c	namespace:Scintilla
PositionFromLineX	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::PositionFromLineX(Sci::Line lineDoc, int x) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Line lineDoc,int x)
PositionFromLocation	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::PositionFromLocation(Point pt, bool canReturnInvalid, bool charPosition) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Point pt,bool canReturnInvalid,bool charPosition)
PositionFromPartition	..\\scintilla\\src\\Partitioning.h	/^	T PositionFromPartition(T partition) const {$/;"	f	class:Scintilla::Partitioning	typeref:typename:T	access:public	signature:(T partition) const
PositionInSelection	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PositionInSelection(Sci::Position pos) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Sci::Position pos)
PositionIsHotspot	..\\scintilla\\src\\Editor.cxx	/^bool Editor::PositionIsHotspot(Sci::Position position) const {$/;"	f	class:Editor	typeref:typename:bool	signature:(Sci::Position position) const
PositionOfElement	..\\scintilla\\src\\SparseVector.h	/^	Sci::Position PositionOfElement(int element) const {$/;"	f	class:Scintilla::SparseVector	typeref:typename:Sci::Position	access:public	signature:(int element) const
PositionUpOrDown	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::PositionUpOrDown(SelectionPosition spStart, int direction, int lastX) /;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(SelectionPosition spStart,int direction,int lastX)
PostCallback	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean SciTEGTK::PostCallback(void *ptr) {$/;"	f	class:SciTEGTK	typeref:typename:gboolean	signature:(void * ptr)
PostOnMainThread	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::PostOnMainThread(int cmd, Worker *pWorker) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int cmd,Worker * pWorker)
PostOnMainThread	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::PostOnMainThread(int cmd, Worker *pWorker) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int cmd,Worker * pWorker)
PreEditString	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	explicit PreEditString(GtkIMContext *im_context) {$/;"	f	class:__anon9c9cef500311::PreEditString	file:	access:public	signature:(GtkIMContext * im_context)
PreEditString	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^class PreEditString {$/;"	c	namespace:__anon9c9cef500311	file:
PreOpenCheck	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::PreOpenCheck(const GUI::gui_char *) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const GUI::gui_char *)
PreOpenCheck	..\\scite\\win32\\SciTEWin.cxx	/^bool SciTEWin::PreOpenCheck(const GUI::gui_char *arg) {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:(const GUI::gui_char * arg)
PreProcKind	..\\scite\\src\\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind /;"	g	class:SciTEBase	access:protected
PreeditChanged	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::PreeditChanged(GtkIMContext *, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkIMContext *,ScintillaGTK * sciThis)
PreeditChangedInlineThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::PreeditChangedInlineThis() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
PreeditChangedWindowedThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::PreeditChangedWindowedThis() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
PrepareBufferForSave	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::PrepareBufferForSave(FilePath saveName) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(FilePath saveName)
Present	..\\scite\\gtk\\Widget.cxx	/^void Dialog::Present() {$/;"	f	class:Dialog	typeref:typename:void	signature:()
Press	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::Press(GtkWidget *widget, GdkEventButton *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventButton * event)
PressCT	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::PressCT(GtkWidget *widget, GdkEventButton *event, ScintillaGTK *sciThis) /;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventButton * event,ScintillaGTK * sciThis)
PressThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::PressThis(GdkEventButton *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GdkEventButton * event)
Prev	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::Prev() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
PrevInStack	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::PrevInStack() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Previous	..\\scite\\src\\LuaExtension.cxx	/^	static int Previous(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
PrimaryClear	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::PrimaryClear(GtkWidget *widget, GdkEventSelection *event, ScintillaGTK *s/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(GtkWidget * widget,GdkEventSelection * event,ScintillaGTK * sciThis)
PrimarySelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::PrimarySelection(GtkWidget *, GtkSelectionData *selection_data, guint info, g/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget *,GtkSelectionData * selection_data,guint info,guint,ScintillaGTK * sciThis)
PrimaryStyleFromStyle	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::PrimaryStyleFromStyle(int style) {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:(int style)
PrimaryStyleFromStyle	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::PrimaryStyleFromStyle(int style) {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:(int style)
PrimaryStyleFromStyle	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::PrimaryStyleFromStyle(int style) {$/;"	f	class:LexState	typeref:typename:int	signature:(int style)
Print	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Print(bool) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(bool)
Print	..\\scite\\src\\SciTEBase.h	/^	virtual void Print(bool) {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:(bool)
Print	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::Print($/;"	f	class:SciTEWin	typeref:typename:void	signature:(bool showDialog)
PrintCode	..\\scintilla\\lua\\src\\print.c	/^static void PrintCode(const Proto* f)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f)
PrintConstant	..\\scintilla\\lua\\src\\print.c	/^static void PrintConstant(const Proto* f, int i)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f,int i)
PrintConstants	..\\scintilla\\lua\\src\\print.c	/^static void PrintConstants(const Proto* f)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f)
PrintFunction	..\\scintilla\\lua\\src\\print.c	/^#define PrintFunction	/;"	d	file:
PrintFunction	..\\scintilla\\lua\\src\\print.c	/^void PrintFunction(const Proto* f, int full)$/;"	f	typeref:typename:void	signature:(const Proto * f,int full)
PrintHeader	..\\scintilla\\lua\\src\\print.c	/^static void PrintHeader(const Proto* f)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f)
PrintLocals	..\\scintilla\\lua\\src\\print.c	/^static void PrintLocals(const Proto* f)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f)
PrintParameters	..\\scintilla\\src\\EditView.cxx	/^PrintParameters::PrintParameters() {$/;"	f	class:PrintParameters	signature:()
PrintParameters	..\\scintilla\\src\\EditView.h	/^struct PrintParameters {$/;"	s	namespace:Scintilla
PrintSetup	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::PrintSetup() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
PrintSetup	..\\scite\\src\\SciTEBase.h	/^	virtual void PrintSetup() {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:()
PrintSetup	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::PrintSetup() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
PrintString	..\\scintilla\\lua\\src\\print.c	/^static void PrintString(const TString* ts)$/;"	f	typeref:typename:void	file:	signature:(const TString * ts)
PrintUpvalues	..\\scintilla\\lua\\src\\print.c	/^static void PrintUpvalues(const Proto* f)$/;"	f	typeref:typename:void	file:	signature:(const Proto * f)
PrivateCall	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^void * SCI_METHOD DefaultLexer::PrivateCall(int, void *) {$/;"	f	class:DefaultLexer	typeref:typename:void * SCI_METHOD	signature:(int,void *)
PrivateCall	..\\scintilla\\lexlib\\LexerBase.cxx	/^void * SCI_METHOD LexerBase::PrivateCall(int, void *) {$/;"	f	class:LexerBase	typeref:typename:void * SCI_METHOD	signature:(int,void *)
PrivateCall	..\\scintilla\\src\\ScintillaBase.cxx	/^void *LexState::PrivateCall(int operation, void *pointer) {$/;"	f	class:LexState	typeref:typename:void *	signature:(int operation,void * pointer)
ProcessArgs	..\\scite\\win32\\SciTEWin.cxx	/^GUI::gui_string SciTEWin::ProcessArgs(const GUI::gui_char *cmdLine) {$/;"	f	class:SciTEWin	typeref:typename:GUI::gui_string	signature:(const GUI::gui_char * cmdLine)
ProcessCommandLine	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::ProcessCommandLine(GUI::gui_string &args, int phase) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(GUI::gui_string & args,int phase)
ProcessExecute	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ProcessExecute() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ProgressMade	..\\scite\\src\\Worker.h	/^	int ProgressMade() const {$/;"	f	struct:Worker	typeref:typename:int	access:public	signature:() const
PropGet	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::PropGet(const char *key) const {$/;"	f	class:LexState	typeref:typename:const char *	signature:(const char * key) const
PropGetExpanded	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::PropGetExpanded(const char *key, char *result) const {$/;"	f	class:LexState	typeref:typename:int	signature:(const char * key,char * result) const
PropGetInt	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::PropGetInt(const char *key, int defaultValue) const {$/;"	f	class:LexState	typeref:typename:int	signature:(const char * key,int defaultValue) const
PropSet	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::PropSet(const char *key, const char *val) {$/;"	f	class:LexState	typeref:typename:void	signature:(const char * key,const char * val)
PropSetFile	..\\scite\\src\\PropSetFile.cxx	/^PropSetFile::PropSetFile(bool lowerKeys_) : lowerKeys(lowerKeys_), superPS(0) {$/;"	f	class:PropSetFile	signature:(bool lowerKeys_)
PropSetFile	..\\scite\\src\\PropSetFile.cxx	/^PropSetFile::PropSetFile(const PropSetFile &copy) : lowerKeys(copy.lowerKeys), props(copy.props)/;"	f	class:PropSetFile	signature:(const PropSetFile & copy)
PropSetFile	..\\scite\\src\\PropSetFile.h	/^class PropSetFile {$/;"	c
PropSetSimple	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^PropSetSimple::PropSetSimple() {$/;"	f	class:PropSetSimple	signature:()
PropSetSimple	..\\scintilla\\lexlib\\PropSetSimple.h	/^class PropSetSimple {$/;"	c	namespace:Scintilla
Property	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::Property(const char *key) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char * key)
PropertyFromDirector	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::PropertyFromDirector(const char *arg) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * arg)
PropertyNames	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::PropertyNames() {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:()
PropertyNames	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::PropertyNames() {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:()
PropertyNames	..\\scintilla\\lexlib\\OptionSet.h	/^	const char *PropertyNames() const {$/;"	f	class:Scintilla::OptionSet	typeref:typename:const char *	access:public	signature:() const
PropertyNames	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::PropertyNames() {$/;"	f	class:LexState	typeref:typename:const char *	signature:()
PropertySet	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^Sci_Position SCI_METHOD DefaultLexer::PropertySet(const char *, const char *) {$/;"	f	class:DefaultLexer	typeref:typename:Sci_Position SCI_METHOD	signature:(const char *,const char *)
PropertySet	..\\scintilla\\lexlib\\LexerBase.cxx	/^Sci_Position SCI_METHOD LexerBase::PropertySet(const char *key, const char *val) {$/;"	f	class:LexerBase	typeref:typename:Sci_Position SCI_METHOD	signature:(const char * key,const char * val)
PropertySet	..\\scintilla\\lexlib\\LexerNoExceptions.cxx	/^Sci_Position SCI_METHOD LexerNoExceptions::PropertySet(const char *key, const char *val) {$/;"	f	class:LexerNoExceptions	typeref:typename:Sci_Position SCI_METHOD	signature:(const char * key,const char * val)
PropertySet	..\\scintilla\\lexlib\\OptionSet.h	/^	bool PropertySet(T *base, const char *name, const char *val) {$/;"	f	class:Scintilla::OptionSet	typeref:typename:bool	access:public	signature:(T * base,const char * name,const char * val)
PropertyToDirector	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::PropertyToDirector(const char *arg) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * arg)
PropertyType	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::PropertyType(const char *) {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:(const char *)
PropertyType	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::PropertyType(const char *) {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:(const char *)
PropertyType	..\\scintilla\\lexlib\\OptionSet.h	/^	int PropertyType(const char *name) {$/;"	f	class:Scintilla::OptionSet	typeref:typename:int	access:public	signature:(const char * name)
PropertyType	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::PropertyType(const char *name) {$/;"	f	class:LexState	typeref:typename:int	signature:(const char * name)
Protect	..\\scintilla\\lua\\src\\lvm.c	/^#define Protect(/;"	d	file:	signature:(x)
ProtectionActive	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::ProtectionActive() const {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:() const
Proto	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct Proto {$/;"	s
Proto	..\\scintilla\\lua\\src\\lobject.h	/^} Proto;$/;"	t	typeref:struct:Proto
PublishGlobalBufferData	..\\scite\\src\\LuaExtension.cxx	/^static void PublishGlobalBufferData() {$/;"	f	typeref:typename:void	file:	signature:()
PushMethod	..\\scite\\src\\LuaExtension.cxx	/^	void PushMethod(lua_State *L, lua_CFunction fn, const char *name) {$/;"	f	struct:StylingContext	typeref:typename:void	file:	access:public	signature:(lua_State * L,lua_CFunction fn,const char * name)
QColorFromCA	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^inline QColor QColorFromCA(ColourDesired ca)$/;"	f	namespace:Scintilla	typeref:typename:QColor	signature:(ColourDesired ca)
QRectFFromPRect	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^inline QRectF QRectFFromPRect(PRectangle pr)$/;"	f	namespace:Scintilla	typeref:typename:QRectF	signature:(PRectangle pr)
QRectFromPRect	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^inline QRect QRectFromPRect(PRectangle pr)$/;"	f	namespace:Scintilla	typeref:typename:QRect	signature:(PRectangle pr)
Q_WS_MAC	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define Q_WS_MAC /;"	d	file:
Q_WS_X11	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define Q_WS_X11 /;"	d	file:
QuartzFont	..\\scintilla\\cocoa\\QuartzTextStyleAttribute.h	/^	QuartzFont( const char* name, size_t length, float size, int weight, bool italic )$/;"	f	class:QuartzFont	access:public	signature:(const char * name,size_t length,float size,int weight,bool italic)
QuartzFont	..\\scintilla\\cocoa\\QuartzTextStyleAttribute.h	/^class QuartzFont$/;"	c
QuartzTextLayout	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    explicit QuartzTextLayout( CGContextRef context )$/;"	f	class:QuartzTextLayout	access:public	signature:(CGContextRef context)
QuartzTextLayout	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^class QuartzTextLayout$/;"	c
QuartzTextStyle	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	QuartzTextStyle()$/;"	f	class:QuartzTextStyle	access:public	signature:()
QuartzTextStyle	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	QuartzTextStyle(const QuartzTextStyle &other)$/;"	f	class:QuartzTextStyle	access:public	signature:(const QuartzTextStyle & other)
QuartzTextStyle	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^class QuartzTextStyle$/;"	c
QueryInterface	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP ScintillaWin::QueryInterface(REFIID riid, PVOID *ppv) {$/;"	f	class:ScintillaWin	typeref:typename:STDMETHODIMP	signature:(REFIID riid,PVOID * ppv)
QueryLuaState	..\\scite\\src\\LuaExtension.cxx	/^intptr_t  LuaExtension::QueryLuaState(){$/;"	f	class:LuaExtension	typeref:typename:intptr_t	signature:()
QueryLuaState	..\\scite\\src\\MultiplexExtension.cxx	/^intptr_t MultiplexExtension::QueryLuaState() {$/;"	f	class:MultiplexExtension	typeref:typename:intptr_t	signature:()
QueryLuaState	..\\scite\\win32\\DirectorExtension.cxx	/^intptr_t DirectorExtension::QueryLuaState() {$/;"	f	class:DirectorExtension	typeref:typename:intptr_t	signature:()
QueueIdleWork	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::QueueIdleWork(WorkNeeded::workItems items, Sci::Position upTo) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(WorkNeeded::workItems items,Sci::Position upTo)
QueueIdleWork	..\\scintilla\\src\\Editor.cxx	/^void Editor::QueueIdleWork(WorkNeeded::workItems items, Sci::Position upTo) {$/;"	f	class:Editor	typeref:typename:void	signature:(WorkNeeded::workItems items,Sci::Position upTo)
QuitProgram	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::QuitProgram() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
QuitProgram	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::QuitProgram() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
QuitSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::QuitSignal(GtkWidget *, GdkEventAny *, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GtkWidget *,GdkEventAny *,SciTEGTK * scitew)
RA	..\\scintilla\\lua\\src\\lvm.c	/^#define RA(/;"	d	file:	signature:(i)
RADIANS_PER_DEGREE	..\\scintilla\\lua\\src\\lmathlib.c	/^#define RADIANS_PER_DEGREE /;"	d	file:
RB	..\\scintilla\\lua\\src\\lvm.c	/^#define RB(/;"	d	file:	signature:(i)
RC	..\\scintilla\\lua\\src\\lvm.c	/^#define RC(/;"	d	file:	signature:(i)
RECTFromRectangle	..\\scite\\win32\\Strips.cxx	/^RECT RECTFromRectangle(GUI::Rectangle r) {$/;"	f	namespace:__anon1330b7ee0111	typeref:typename:RECT	signature:(GUI::Rectangle r)
RED	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired RED(0x80, 0, 0);$/;"	v	typeref:typename:ColourDesired	file:
REF	..\\scintilla\\src\\RESearch.cxx	/^#define REF /;"	d	file:
RESEARCH_H	..\\scintilla\\src\\RESearch.h	/^#define RESEARCH_H$/;"	d
RESERVED	..\\scintilla\\lua\\src\\llex.h	/^enum RESERVED {$/;"	g
RESPONSE_CONVERT	..\\scite\\gtk\\SciTEGTK.cxx	/^#define RESPONSE_CONVERT /;"	d	file:
RESPONSE_MARK_ALL	..\\scite\\gtk\\SciTEGTK.cxx	/^#define RESPONSE_MARK_ALL /;"	d	file:
RESPONSE_REPLACE	..\\scite\\gtk\\SciTEGTK.cxx	/^#define RESPONSE_REPLACE /;"	d	file:
RESPONSE_REPLACE_ALL	..\\scite\\gtk\\SciTEGTK.cxx	/^#define RESPONSE_REPLACE_ALL /;"	d	file:
RESPONSE_REPLACE_IN_BUFFERS	..\\scite\\gtk\\SciTEGTK.cxx	/^#define RESPONSE_REPLACE_IN_BUFFERS /;"	d	file:
RESPONSE_REPLACE_IN_SELECTION	..\\scite\\gtk\\SciTEGTK.cxx	/^#define RESPONSE_REPLACE_IN_SELECTION /;"	d	file:
RESearch	..\\scintilla\\src\\RESearch.cxx	/^RESearch::RESearch(CharClassify *charClassTable) {$/;"	f	class:RESearch	signature:(CharClassify * charClassTable)
RESearch	..\\scintilla\\src\\RESearch.h	/^class RESearch {$/;"	c	namespace:Scintilla
RESearchRange	..\\scintilla\\src\\Document.cxx	/^	RESearchRange(const Document *doc_, Sci::Position minPos, Sci::Position maxPos) : doc(doc_) {$/;"	f	class:__anon1ef09aa80111::RESearchRange	file:	access:public	signature:(const Document * doc_,Sci::Position minPos,Sci::Position maxPos)
RESearchRange	..\\scintilla\\src\\Document.cxx	/^class RESearchRange {$/;"	c	namespace:__anon1ef09aa80111	file:
RGBAImage	..\\scintilla\\src\\XPM.cxx	/^RGBAImage::RGBAImage(const XPM &xpm) {$/;"	f	class:RGBAImage	signature:(const XPM & xpm)
RGBAImage	..\\scintilla\\src\\XPM.cxx	/^RGBAImage::RGBAImage(int width_, int height_, float scale_, const unsigned char *pixels_) :$/;"	f	class:RGBAImage	signature:(int width_,int height_,float scale_,const unsigned char * pixels_)
RGBAImage	..\\scintilla\\src\\XPM.h	/^class RGBAImage {$/;"	c	namespace:Scintilla
RGBAImageSet	..\\scintilla\\src\\XPM.cxx	/^RGBAImageSet::RGBAImageSet() : height(-1), width(-1) {$/;"	f	class:RGBAImageSet	signature:()
RGBAImageSet	..\\scintilla\\src\\XPM.h	/^class RGBAImageSet {$/;"	c	namespace:Scintilla
RKASK	..\\scintilla\\lua\\src\\lopcodes.h	/^#define RKASK(/;"	d	signature:(x)
RKB	..\\scintilla\\lua\\src\\lvm.c	/^#define RKB(/;"	d	file:	signature:(i)
RKC	..\\scintilla\\lua\\src\\lvm.c	/^#define RKC(/;"	d	file:	signature:(i)
RTF_BODYCLOSE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_BODYCLOSE /;"	d	file:
RTF_BODYOPEN	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_BODYOPEN /;"	d	file:
RTF_BOLD_OFF	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_BOLD_OFF /;"	d	file:
RTF_BOLD_ON	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_BOLD_ON /;"	d	file:
RTF_COLOR	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_COLOR /;"	d	file:
RTF_COLORDEFCLOSE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_COLORDEFCLOSE /;"	d	file:
RTF_COLORDEFOPEN	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_COLORDEFOPEN /;"	d	file:
RTF_EOLN	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_EOLN /;"	d	file:
RTF_FONTDEFCLOSE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_FONTDEFCLOSE /;"	d	file:
RTF_FONTDEFOPEN	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_FONTDEFOPEN /;"	d	file:
RTF_FONTFACE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_FONTFACE /;"	d	file:
RTF_HEADERCLOSE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_HEADERCLOSE /;"	d	file:
RTF_HEADEROPEN	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_HEADEROPEN /;"	d	file:
RTF_ITALIC_OFF	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_ITALIC_OFF /;"	d	file:
RTF_ITALIC_ON	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_ITALIC_ON /;"	d	file:
RTF_SETBACKGROUND	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_SETBACKGROUND /;"	d	file:
RTF_SETCOLOR	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_SETCOLOR /;"	d	file:
RTF_SETFONTFACE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_SETFONTFACE /;"	d	file:
RTF_SETFONTSIZE	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_SETFONTSIZE /;"	d	file:
RTF_STRIKE_OFF	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_STRIKE_OFF /;"	d	file:
RTF_STRIKE_ON	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_STRIKE_ON /;"	d	file:
RTF_TAB	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_TAB /;"	d	file:
RTF_UNDERLINE_OFF	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_UNDERLINE_OFF /;"	d	file:
RTF_UNDERLINE_ON	..\\scite\\src\\ExportRTF.cxx	/^#define RTF_UNDERLINE_ON /;"	d	file:
RUNSTYLES_H	..\\scintilla\\src\\RunStyles.h	/^#define RUNSTYLES_H$/;"	d
R_OK	..\\scite\\src\\FilePath.cxx	/^#define R_OK /;"	d	file:
RandomColour	..\\scite\\src\\Credits.cxx	/^	RandomColour() :$/;"	f	class:__anon1b46962c0111::RandomColour	file:	access:public	signature:()
RandomColour	..\\scite\\src\\Credits.cxx	/^class RandomColour {$/;"	c	namespace:__anon1b46962c0111	file:
Range	..\\scintilla\\src\\Document.h	/^	Range(Sci::Position start_, Sci::Position end_) :$/;"	f	class:Scintilla::Range	access:public	signature:(Sci::Position start_,Sci::Position end_)
Range	..\\scintilla\\src\\Document.h	/^	explicit Range(Sci::Position pos=0) :$/;"	f	class:Scintilla::Range	access:public	signature:(Sci::Position pos=0)
Range	..\\scintilla\\src\\Document.h	/^class Range {$/;"	c	namespace:Scintilla
Range	..\\scintilla\\src\\Selection.cxx	/^SelectionRange &Selection::Range(size_t r) {$/;"	f	class:Selection	typeref:typename:SelectionRange &	signature:(size_t r)
Range	..\\scintilla\\src\\Selection.cxx	/^const SelectionRange &Selection::Range(size_t r) const {$/;"	f	class:Selection	typeref:typename:const SelectionRange &	signature:(size_t r) const
Range	..\\scite\\src\\SciTEBase.cxx	/^char *SciTEBase::Range(Pane p, int start, int end) {$/;"	f	class:SciTEBase	typeref:typename:char *	signature:(Pane p,int start,int end)
RangeAddDelta	..\\scintilla\\src\\Partitioning.h	/^	void RangeAddDelta(ptrdiff_t start, ptrdiff_t end, T delta) {$/;"	f	class:Scintilla::SplitVectorWithRangeAdd	typeref:typename:void	access:public	signature:(ptrdiff_t start,ptrdiff_t end,T delta)
RangeContainsProtected	..\\scintilla\\src\\Editor.cxx	/^bool Editor::RangeContainsProtected(Sci::Position start, Sci::Position end) const {$/;"	f	class:Editor	typeref:typename:bool	signature:(Sci::Position start,Sci::Position end) const
RangeDisplayLine	..\\scintilla\\src\\EditView.cxx	/^Range EditView::RangeDisplayLine(Surface *surface, const EditModel &model, Sci::Line lineVisible/;"	f	class:EditView	typeref:typename:Range	signature:(Surface * surface,const EditModel & model,Sci::Line lineVisible,const ViewStyle & vs)
RangeDisplayLine	..\\scintilla\\src\\Editor.cxx	/^Range Editor::RangeDisplayLine(Sci::Line lineVisible) {$/;"	f	class:Editor	typeref:typename:Range	signature:(Sci::Line lineVisible)
RangeExtend	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::RangeExtend($/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & wCurrent,int & selStart,int & selEnd,bool (SciTEBase::* ischarforsel)(char ch))
RangeExtendAndGrab	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::RangeExtendAndGrab($/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(GUI::ScintillaWindow & wCurrent,int & selStart,int & selEnd,bool (SciTEBase::* ischarforsel)(char ch),bool stripEol)
RangeIsAllWhitespace	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::RangeIsAllWhitespace(int start, int end) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(int start,int end)
RangeMain	..\\scintilla\\src\\Selection.cxx	/^SelectionRange &Selection::RangeMain() {$/;"	f	class:Selection	typeref:typename:SelectionRange &	signature:()
RangeMain	..\\scintilla\\src\\Selection.cxx	/^const SelectionRange &Selection::RangeMain() const {$/;"	f	class:Selection	typeref:typename:const SelectionRange &	signature:() const
RangePointer	..\\scintilla\\src\\CellBuffer.cxx	/^const char *CellBuffer::RangePointer(Sci::Position position, Sci::Position rangeLength) {$/;"	f	class:CellBuffer	typeref:typename:const char *	signature:(Sci::Position position,Sci::Position rangeLength)
RangePointer	..\\scintilla\\src\\Document.h	/^	const char *RangePointer(Sci::Position position, Sci::Position rangeLength) { return cb.RangePo/;"	f	class:Scintilla::Document	typeref:typename:const char *	access:public	signature:(Sci::Position position,Sci::Position rangeLength)
RangePointer	..\\scintilla\\src\\SplitVector.h	/^	T *RangePointer(ptrdiff_t position, ptrdiff_t rangeLength) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:T *	access:public	signature:(ptrdiff_t position,ptrdiff_t rangeLength)
RangeText	..\\scintilla\\src\\Editor.cxx	/^std::string Editor::RangeText(Sci::Position start, Sci::Position end) const {$/;"	f	class:Editor	typeref:typename:std::string	signature:(Sci::Position start,Sci::Position end) const
RangeToFormat	..\\scintilla\\include\\Scintilla.h	/^#define RangeToFormat /;"	d
RangesCopy	..\\scintilla\\src\\Selection.h	/^	std::vector<SelectionRange> RangesCopy() const {$/;"	f	class:Scintilla::Selection	typeref:typename:std::vector<SelectionRange>	access:public	signature:() const
ReAllocate	..\\scintilla\\src\\SplitVector.h	/^	void ReAllocate(ptrdiff_t newSize) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t newSize)
Read	..\\scite\\src\\FilePath.cxx	/^std::vector<char> FilePath::Read() const {$/;"	f	class:FilePath	typeref:typename:std::vector<char>	signature:() const
Read	..\\scite\\src\\PropSetFile.cxx	/^bool PropSetFile::Read(FilePath filename, FilePath directoryForImports,$/;"	f	class:PropSetFile	typeref:typename:bool	signature:(FilePath filename,FilePath directoryForImports,const ImportFilter & filter,std::vector<FilePath> * imports,size_t depth)
ReadAPI	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadAPI(const std::string &fileNameForExtension) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const std::string & fileNameForExtension)
ReadAbbrevPropFile	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadAbbrevPropFile() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadCharacter	..\\scintilla\\src\\Document.cxx	/^	void ReadCharacter() {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:void	file:	access:private	signature:()
ReadDirectoryPropFile	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadDirectoryPropFile() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadEmbeddedProperties	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadEmbeddedProperties() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadEmbeddedProperties	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ReadEmbeddedProperties() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ReadEnvironment	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadEnvironment() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadFileAsList	..\\scintilla\\scripts\\FileGenerator.py	/^def ReadFileAsList(path):$/;"	f	access:public	signature:(path)
ReadFontProperties	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadFontProperties() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadFromFile	..\\scintilla\\scripts\\Face.py	/^	def ReadFromFile(self, name):$/;"	m	class:Face	access:public	signature:(self, name)
ReadFromMemory	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::ReadFromMemory(const char *data, size_t len, FilePath directoryForImports,$/;"	f	class:PropSetFile	typeref:typename:void	signature:(const char * data,size_t len,FilePath directoryForImports,const ImportFilter & filter,std::vector<FilePath> * imports,size_t depth)
ReadGlobalPropFile	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadGlobalPropFile() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadLine	..\\scite\\src\\PropSetFile.cxx	/^PropSetFile::ReadLineState PropSetFile::ReadLine(const char *lineBuffer, ReadLineState rls, File/;"	f	class:PropSetFile	typeref:typename:PropSetFile::ReadLineState	signature:(const char * lineBuffer,ReadLineState rls,FilePath directoryForImports,const ImportFilter & filter,std::vector<FilePath> * imports,size_t depth)
ReadLineState	..\\scite\\src\\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	g	class:PropSetFile	access:public
ReadLocalPropFile	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadLocalPropFile() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadLocalization	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ReadLocalization() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ReadLocalization	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadLocalization() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadLocalization	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ReadLocalization() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ReadMenuIDs	..\\scite\\scripts\\IFaceTableGen.py	/^def ReadMenuIDs(filename):$/;"	f	access:public	signature:(filename)
ReadNum	..\\scite\\src\\SciTEBase.cxx	/^static unsigned int ReadNum(const char *&t) {$/;"	f	typeref:typename:unsigned int	file:	signature:(const char * & t)
ReadProperties	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ReadProperties() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ReadProperties	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadProperties(bool reloadScripts) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool reloadScripts)
ReadProperties	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ReadProperties() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ReadPropertiesInitial	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ReadPropertiesInitial() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ReadPropertiesInitial	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::ReadPropertiesInitial() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ReadPropertiesInitial	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ReadPropertiesInitial() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
Realise	..\\scintilla\\src\\ViewStyle.cxx	/^void FontRealised::Realise(Surface &surface, int zoomLevel, int technology, const FontSpecificat/;"	f	class:FontRealised	typeref:typename:void	signature:(Surface & surface,int zoomLevel,int technology,const FontSpecification & fs)
Realize	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Realize(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget)
RealizeText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::RealizeText(GtkWidget *widget, void*) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,void *)
RealizeThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::RealizeThis(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget)
RealizeVirtualSpace	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::RealizeVirtualSpace(Sci::Position position, Sci::Position virtualSpace) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position position,Sci::Position virtualSpace)
RealizeVirtualSpace	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::RealizeVirtualSpace(const SelectionPosition &position) {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(const SelectionPosition & position)
ReapChild	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ReapChild(GPid pid, gint status, gpointer user_data) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(GPid pid,gint status,gpointer user_data)
ReceivedDrop	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ReceivedDrop(GtkSelectionData *selection_data) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkSelectionData * selection_data)
ReceivedSelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ReceivedSelection(GtkSelectionData *selection_data) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkSelectionData * selection_data)
ReceiverPipeSignal	..\\scite\\gtk\\DirectorExtension.cxx	/^static gboolean ReceiverPipeSignal(GIOChannel *source, GIOCondition condition, void *data) {$/;"	f	typeref:typename:gboolean	file:	signature:(GIOChannel * source,GIOCondition condition,void * data)
RecentFile	..\\scite\\src\\SciTEBase.h	/^	RecentFile() {$/;"	f	class:RecentFile	access:public	signature:()
RecentFile	..\\scite\\src\\SciTEBase.h	/^class RecentFile : public FilePath {$/;"	c	inherits:FilePath
ReconfigureScrollBars	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ReconfigureScrollBars() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
ReconfigureScrollBars	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::ReconfigureScrollBars()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
ReconfigureScrollBars	..\\scintilla\\src\\Editor.cxx	/^void Editor::ReconfigureScrollBars() {}$/;"	f	class:Editor	typeref:typename:void	signature:()
RecordMacroCommand	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::RecordMacroCommand(const SCNotification *notification) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const SCNotification * notification)
RectFromMonitor	..\\scintilla\\win32\\PlatWin.cxx	/^static RECT RectFromMonitor(HMONITOR hMonitor) {$/;"	f	namespace:Scintilla	typeref:typename:RECT	file:	signature:(HMONITOR hMonitor)
RectFromPRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^static RECT RectFromPRectangle(PRectangle prc) {$/;"	f	namespace:Scintilla	typeref:typename:RECT	file:	signature:(PRectangle prc)
Rectangle	..\\scite\\src\\GUI.h	/^	Rectangle(int left_=0, int top_=0, int right_=0, int bottom_ = 0) :$/;"	f	class:GUI::Rectangle	access:public	signature:(int left_=0,int top_=0,int right_=0,int bottom_=0)
Rectangle	..\\scite\\src\\GUI.h	/^class Rectangle {$/;"	c	namespace:GUI
RectangleDraw	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RectangleDraw	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RectangleDraw	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::RectangleDraw(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RectangleDraw	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RectangleDraw	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RectangleFromRange	..\\scintilla\\src\\Editor.cxx	/^PRectangle Editor::RectangleFromRange(Range r, int overlap) {$/;"	f	class:Editor	typeref:typename:PRectangle	signature:(Range r,int overlap)
Rectangular	..\\scintilla\\src\\Selection.cxx	/^SelectionRange &Selection::Rectangular() {$/;"	f	class:Selection	typeref:typename:SelectionRange &	signature:()
Redo	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::Redo() {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:()
Redo	..\\scintilla\\src\\Editor.cxx	/^void Editor::Redo() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Redraw	..\\scintilla\\src\\Editor.cxx	/^void Editor::Redraw() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Redraw	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Redraw() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
RedrawMenu	..\\scite\\src\\SciTEBase.h	/^	virtual void RedrawMenu() {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:()
RedrawMenu	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::RedrawMenu() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
RedrawRect	..\\scintilla\\src\\Editor.cxx	/^void Editor::RedrawRect(PRectangle rc) {$/;"	f	class:Editor	typeref:typename:void	signature:(PRectangle rc)
RedrawSelMargin	..\\scintilla\\src\\Editor.cxx	/^void Editor::RedrawSelMargin(Sci::Line line, bool allAfter) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line line,bool allAfter)
Refresh	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Refresh() {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
Refresh	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::Refresh(Surface &surface, int tabInChars) {$/;"	f	class:ViewStyle	typeref:typename:void	signature:(Surface & surface,int tabInChars)
RefreshPixMaps	..\\scintilla\\src\\EditView.cxx	/^void EditView::RefreshPixMaps(Surface *surfaceWindow, WindowID wid, const ViewStyle &vsDraw) {$/;"	f	class:EditView	typeref:typename:void	signature:(Surface * surfaceWindow,WindowID wid,const ViewStyle & vsDraw)
RefreshPixMaps	..\\scintilla\\src\\Editor.cxx	/^void Editor::RefreshPixMaps(Surface *surfaceWindow) {$/;"	f	class:Editor	typeref:typename:void	signature:(Surface * surfaceWindow)
RefreshPixMaps	..\\scintilla\\src\\MarginView.cxx	/^void MarginView::RefreshPixMaps(Surface *surfaceWindow, WindowID wid, const ViewStyle &vsDraw) {$/;"	f	class:Scintilla::MarginView	typeref:typename:void	signature:(Surface * surfaceWindow,WindowID wid,const ViewStyle & vsDraw)
RefreshStyleData	..\\scintilla\\src\\Editor.cxx	/^void Editor::RefreshStyleData() {$/;"	f	class:Editor	typeref:typename:void	signature:()
Regenerate	..\\scintilla\\scripts\\FileGenerator.py	/^def Regenerate(filename, commentPrefix, *lists):$/;"	f	access:public	signature:(filename, commentPrefix, *lists)
RegenerateAll	..\\scintilla\\scripts\\HFacer.py	/^def RegenerateAll(root, showMaxID):$/;"	f	access:public	signature:(root, showMaxID)
RegenerateAll	..\\scintilla\\scripts\\LexGen.py	/^def RegenerateAll(root):$/;"	f	access:public	signature:(root)
RegenerateAll	..\\scite\\scripts\\IFaceTableGen.py	/^def RegenerateAll():$/;"	f	access:public	signature:()
RegenerateAll	..\\scite\\scripts\\RegenerateSource.py	/^def RegenerateAll():$/;"	f	access:public	signature:()
RegenerateAll	..\\scite\\scripts\\commandsdoc.py	/^def RegenerateAll():$/;"	f	access:public	signature:()
RegenerateXcodeProject	..\\scintilla\\scripts\\LexGen.py	/^def RegenerateXcodeProject(path, lexers, lexerReferences):$/;"	f	access:public	signature:(path, lexers, lexerReferences)
RegexError	..\\scintilla\\src\\Document.h	/^	RegexError() : std::runtime_error("regex failure") {}$/;"	f	struct:Scintilla::RegexError	access:public	signature:()
RegexError	..\\scintilla\\src\\Document.h	/^struct RegexError : public std::runtime_error {$/;"	s	namespace:Scintilla	inherits:std::runtime_error
RegexSearchBase	..\\scintilla\\src\\Document.h	/^class RegexSearchBase {$/;"	c	namespace:Scintilla
Register	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::Register(HINSTANCE hInstance_) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(HINSTANCE hInstance_)
Register	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::Register(HINSTANCE hInstance_) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(HINSTANCE hInstance_)
RegisterExtension	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::RegisterExtension(Extension &ext_) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(Extension & ext_)
RegisterImage	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void RegisterImage(int type, const char *xpm_data) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(int type,const char * xpm_data)
RegisterImage	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::RegisterImage(int type, const char *xpm_data) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(int type,const char * xpm_data)
RegisterImage	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::RegisterImage(int type, const char *xpmData)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int type,const char * xpmData)
RegisterImage	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::RegisterImage(int type, const char *xpm_data) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int type,const char * xpm_data)
RegisterQPixmapImage	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::RegisterQPixmapImage(int type, const QPixmap& pm)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int type,const QPixmap & pm)
RegisterRGBA	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::RegisterRGBA(int type, RGBAImage *image) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(int type,RGBAImage * image)
RegisterRGBAImage	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void RegisterRGBAImage(int type, int width, int height,$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(int type,int width,int height,const unsigned char * pixelsImage)
RegisterRGBAImage	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsIma/;"	f	class:ListBoxX	typeref:typename:void	signature:(int type,int width,int height,const unsigned char * pixelsImage)
RegisterRGBAImage	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::RegisterRGBAImage(int type, int width, int height, const unsigned char *pixels/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int type,int width,int height,const unsigned char * pixelsImage)
RegisterRGBAImage	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsIma/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int type,int width,int height,const unsigned char * pixelsImage)
Relative	..\\scintilla\\src\\MarginView.cxx	/^	struct Relative {$/;"	s	function:Scintilla::DrawWrapMarker	file:
Release	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Release() { win = 0; }$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:()
Release	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Font::Release() { fid = 0; }$/;"	f	class:Font	typeref:typename:void	signature:()
Release	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Font::Release() {$/;"	f	class:Font	typeref:typename:void	signature:()
Release	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::Release() {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:()
Release	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^void SCI_METHOD DefaultLexer::Release() {$/;"	f	class:DefaultLexer	typeref:typename:void SCI_METHOD	signature:()
Release	..\\scintilla\\lexlib\\LexerBase.cxx	/^void SCI_METHOD LexerBase::Release() {$/;"	f	class:LexerBase	typeref:typename:void SCI_METHOD	signature:()
Release	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Font::Release()$/;"	f	class:Scintilla::Font	typeref:typename:void	signature:()
Release	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::Release()$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:()
Release	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::Release() {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:()
Release	..\\scintilla\\win32\\PlatWin.cxx	/^void Font::Release() {$/;"	f	class:Scintilla::Font	typeref:typename:void	signature:()
Release	..\\scintilla\\win32\\PlatWin.cxx	/^void FontCached::Release() {$/;"	f	class:Scintilla::FontCached	typeref:typename:void	signature:()
Release	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::Release() {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:()
Release	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::Release() {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:()
ReleaseAllExtendedStyles	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::ReleaseAllExtendedStyles() {$/;"	f	class:ViewStyle	typeref:typename:void	signature:()
ReleaseId	..\\scintilla\\win32\\PlatWin.cxx	/^void FontCached::ReleaseId(FontID fid_) {$/;"	f	class:Scintilla::FontCached	typeref:typename:void	signature:(FontID fid_)
ReloadProperties	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::ReloadProperties() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Remove	..\\scite\\src\\FilePath.cxx	/^void FilePath::Remove() const {$/;"	f	class:FilePath	typeref:typename:void	signature:() const
Remove	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Remove(Pane p, int start, int end) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(Pane p,int start,int end)
Remove	..\\scite\\src\\StringHelpers.h	/^int Remove(T &s, const T &sFind) {$/;"	f	typeref:typename:int	signature:(T & s,const T & sFind)
RemoveAll	..\\scite\\src\\Containers.h	/^	void RemoveAll() {$/;"	f	class:TArray	typeref:typename:void	access:public	signature:()
RemoveAll	..\\scite\\src\\Containers.h	/^	void RemoveAll() {$/;"	f	class:TList	typeref:typename:void	access:public	signature:()
RemoveAll	..\\scite\\src\\Containers.h	/^	void RemoveAll() {$/;"	f	class:TMap	typeref:typename:void	access:public	signature:()
RemoveAllTabs	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::RemoveAllTabs() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
RemoveAllTabs	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::RemoveAllTabs() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
RemoveAt	..\\scite\\src\\Containers.h	/^	void RemoveAt(T_POSITION position) {$/;"	f	class:TList	typeref:typename:void	access:public	signature:(T_POSITION position)
RemoveAt	..\\scite\\src\\Containers.h	/^	void RemoveAt(int nIndex, int nCount = 1) {$/;"	f	class:TArray	typeref:typename:void	access:public	signature:(int nIndex,int nCount=1)
RemoveBuffer	..\\scite\\src\\Extender.h	/^	virtual bool RemoveBuffer(int) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(int)
RemoveBuffer	..\\scite\\src\\LuaExtension.cxx	/^bool LuaExtension::RemoveBuffer(int index) {$/;"	f	class:LuaExtension	typeref:typename:bool	signature:(int index)
RemoveBuffer	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::RemoveBuffer(int index) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(int index)
RemoveCurrent	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::RemoveCurrent() {$/;"	f	class:BufferList	typeref:typename:void	signature:()
RemoveDuplicates	..\\scintilla\\src\\Selection.cxx	/^void Selection::RemoveDuplicates() {$/;"	f	class:Selection	typeref:typename:void	signature:()
RemoveEscSeq	..\\scite\\src\\SciTEBuffers.cxx	/^static void RemoveEscSeq(std::string &s) {$/;"	f	typeref:typename:void	file:	signature:(std::string & s)
RemoveFileFromStack	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::RemoveFileFromStack(FilePath file) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath file)
RemoveFindMarks	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::RemoveFindMarks() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
RemoveHandle	..\\scintilla\\src\\PerLine.cxx	/^void MarkerHandleSet::RemoveHandle(int handle) {$/;"	f	class:MarkerHandleSet	typeref:typename:void	signature:(int handle)
RemoveHead	..\\scite\\src\\Containers.h	/^	TYPE RemoveHead() {$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:()
RemoveInvisible	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::RemoveInvisible(int index) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int index)
RemoveKey	..\\scite\\src\\Containers.h	/^	bool RemoveKey(ARG_KEY key) {$/;"	f	class:TMap	typeref:typename:bool	access:public	signature:(ARG_KEY key)
RemoveLine	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::RemoveLine(Sci::Line line) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\CellBuffer.cxx	/^void LineVector::RemoveLine(Sci::Line line) {$/;"	f	class:LineVector	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\Document.cxx	/^void Document::RemoveLine(Sci::Line line) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::RemoveLine(Sci::Line line) {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\PerLine.cxx	/^void LineLevels::RemoveLine(Sci::Line line) {$/;"	f	class:LineLevels	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\PerLine.cxx	/^void LineMarkers::RemoveLine(Sci::Line line) {$/;"	f	class:LineMarkers	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\PerLine.cxx	/^void LineState::RemoveLine(Sci::Line line) {$/;"	f	class:LineState	typeref:typename:void	signature:(Sci::Line line)
RemoveLine	..\\scintilla\\src\\PerLine.cxx	/^void LineTabstops::RemoveLine(Sci::Line line) {$/;"	f	class:LineTabstops	typeref:typename:void	signature:(Sci::Line line)
RemoveNumber	..\\scintilla\\src\\PerLine.cxx	/^bool MarkerHandleSet::RemoveNumber(int markerNum, bool all) {$/;"	f	class:MarkerHandleSet	typeref:typename:bool	signature:(int markerNum,bool all)
RemovePartition	..\\scintilla\\src\\Partitioning.h	/^	void RemovePartition(T partition) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:public	signature:(T partition)
RemoveRun	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::RemoveRun(DISTANCE run) {$/;"	f	class:RunStyles	typeref:typename:void	signature:(DISTANCE run)
RemoveRunIfEmpty	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::RemoveRunIfEmpty(DISTANCE run) {$/;"	f	class:RunStyles	typeref:typename:void	signature:(DISTANCE run)
RemoveRunIfSameAsPrevious	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::RemoveRunIfSameAsPrevious(DISTANCE run) {$/;"	f	class:RunStyles	typeref:typename:void	signature:(DISTANCE run)
RemoveSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::AtkTextIface::RemoveSelection(AtkText *text, gint selection_num/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gboolean	signature:(AtkText * text,gint selection_num)
RemoveSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::RemoveSelection(gint selection_num) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gboolean	signature:(gint selection_num)
RemoveSendPipes	..\\scite\\gtk\\DirectorExtension.cxx	/^static void RemoveSendPipes() {$/;"	f	typeref:typename:void	file:	signature:()
RemoveStringOnce	..\\scite\\src\\StringHelpers.cxx	/^bool RemoveStringOnce(std::string &s, const char *marker) {$/;"	f	typeref:typename:bool	signature:(std::string & s,const char * marker)
RemoveTail	..\\scite\\src\\Containers.h	/^	TYPE RemoveTail() {$/;"	f	class:TList	typeref:typename:TYPE	access:public	signature:()
RemoveText	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::RemoveText(int position) {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:(int position)
RemoveToolsMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::RemoveToolsMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
RemoveWatcher	..\\scintilla\\src\\Document.cxx	/^bool Document::RemoveWatcher(DocWatcher *watcher, void *userData) {$/;"	f	class:Document	typeref:typename:bool	signature:(DocWatcher * watcher,void * userData)
Replace	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Replace() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
Replace	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::Replace() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ReplaceAll	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::ReplaceAll(bool inSelection) {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(bool inSelection)
ReplaceAllCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ReplaceAllCmd() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
ReplaceCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ReplaceCmd() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
ReplaceDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::ReplaceDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
ReplaceInBuffers	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::ReplaceInBuffers() {$/;"	f	class:SciTEBase	typeref:typename:int	signature:()
ReplaceInSelectionCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ReplaceInSelectionCmd() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
ReplaceMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::ReplaceMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
ReplaceOnce	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ReplaceOnce(bool showWarnings) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool showWarnings)
ReplaceREInFile	..\\scintilla\\scripts\\FileGenerator.py	/^def ReplaceREInFile(path, match, replace):$/;"	f	access:public	signature:(path, match, replace)
ReplaceStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	ReplaceStrip() {$/;"	f	class:ReplaceStrip	file:	access:public	signature:()
ReplaceStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^class ReplaceStrip : public FindReplaceStrip {$/;"	c	file:	inherits:FindReplaceStrip
ReplaceStrip	..\\scite\\win32\\Strips.h	/^	ReplaceStrip() {$/;"	f	class:ReplaceStrip	access:public	signature:()
ReplaceStrip	..\\scite\\win32\\Strips.h	/^class ReplaceStrip : public FindReplaceStrip {$/;"	c	inherits:FindReplaceStrip
ReplaceTarget	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::ReplaceTarget(bool replacePatterns, const char *text, Sci::Position length/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(bool replacePatterns,const char * text,Sci::Position length)
Representation	..\\scintilla\\src\\PositionCache.h	/^	explicit Representation(const char *value="") : stringRep(value) {$/;"	f	class:Scintilla::Representation	access:public	signature:(const char * value="")
Representation	..\\scintilla\\src\\PositionCache.h	/^class Representation {$/;"	c	namespace:Scintilla
RepresentationFromCharacter	..\\scintilla\\src\\PositionCache.cxx	/^const Representation *SpecialRepresentations::RepresentationFromCharacter(const char *charBytes,/;"	f	class:SpecialRepresentations	typeref:typename:const Representation *	signature:(const char * charBytes,size_t len) const
Reset	..\\scintilla\\src\\Editor.h	/^	void Reset() {$/;"	f	class:Scintilla::WorkNeeded	typeref:typename:void	access:public	signature:()
Reset	..\\scintilla\\src\\Editor.h	/^	void Reset() {$/;"	f	struct:Scintilla::WrapPending	typeref:typename:void	access:public	signature:()
Reset	..\\scintilla\\src\\Selection.h	/^	void Reset() {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:void	access:public	signature:()
Reset	..\\scintilla\\src\\Selection.h	/^	void Reset() {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:void	access:public	signature:()
ResetClock	..\\scintilla\\src\\PositionCache.cxx	/^void PositionCacheEntry::ResetClock() {$/;"	f	class:PositionCacheEntry	typeref:typename:void	signature:()
ResetDefaultStyle	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::ResetDefaultStyle() {$/;"	f	class:ViewStyle	typeref:typename:void	signature:()
ResetExecution	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ResetExecution() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ResetExecution	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ResetExecution() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ResetLineEnds	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::ResetLineEnds() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
Resize	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::Resize(int width, int height) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(int width,int height)
Resize	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayout::Resize(int maxLineLength_) {$/;"	f	class:LineLayout	typeref:typename:void	signature:(int maxLineLength_)
Resize	..\\scite\\gtk\\Widget.cxx	/^void WTable::Resize(int rows_, int columns_) {$/;"	f	class:WTable	typeref:typename:void	signature:(int rows_,int columns_)
ResizeToCursor	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::ResizeToCursor() {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:()
ResourcesRelease	..\\scintilla\\win32\\ScintillaWin.cxx	/^static int ResourcesRelease(bool fromDllMain) {$/;"	f	typeref:typename:int	file:	signature:(bool fromDllMain)
ResponseButton	..\\scite\\gtk\\Widget.cxx	/^GtkWidget *Dialog::ResponseButton(const GUI::gui_string &text, int responseID) {$/;"	f	class:Dialog	typeref:typename:GtkWidget *	signature:(const GUI::gui_string & text,int responseID)
ResponseSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^class ResponseSignal {$/;"	c	file:
RestoreBracesHighlight	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayout::RestoreBracesHighlight(Range rangeLine, const Sci::Position braces[], bool igno/;"	f	class:LineLayout	typeref:typename:void	signature:(Range rangeLine,const Sci::Position braces[],bool ignoreStyle)
RestoreFromSession	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::RestoreFromSession(const Session &session) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const Session & session)
RestoreFromTray	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::RestoreFromTray() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
RestorePosition	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::RestorePosition() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
RestoreRecentMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::RestoreRecentMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
RestoreSession	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::RestoreSession() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
RestoreState	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::RestoreState(const Buffer &buffer, bool restoreBookmarks) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const Buffer & buffer,bool restoreBookmarks)
Retrieve	..\\scintilla\\src\\PositionCache.cxx	/^LineLayout *LineLayoutCache::Retrieve(Sci::Line lineNumber, Sci::Line lineCaret, int maxChars, i/;"	f	class:LineLayoutCache	typeref:typename:LineLayout *	signature:(Sci::Line lineNumber,Sci::Line lineCaret,int maxChars,int styleClock_,Sci::Line linesOnScreen,Sci::Line linesInDoc)
Retrieve	..\\scintilla\\src\\PositionCache.cxx	/^bool PositionCacheEntry::Retrieve(unsigned int styleNumber_, const char *s_,$/;"	f	class:PositionCacheEntry	typeref:typename:bool	signature:(unsigned int styleNumber_,const char * s_,unsigned int len_,XYPOSITION * positions_) const
RetrieveLineLayout	..\\scintilla\\src\\EditView.cxx	/^LineLayout *EditView::RetrieveLineLayout(Sci::Line lineNumber, const EditModel &model) {$/;"	f	class:EditView	typeref:typename:LineLayout *	signature:(Sci::Line lineNumber,const EditModel & model)
Revert	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::Revert() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
RightButtonDownWithModifiers	..\\scintilla\\src\\Editor.cxx	/^void Editor::RightButtonDownWithModifiers(Point pt, unsigned int, int modifiers) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt,unsigned int,int modifiers)
RightButtonDownWithModifiers	..\\scintilla\\src\\ScintillaBase.cxx	/^void ScintillaBase::RightButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers) /;"	f	class:ScintillaBase	typeref:typename:void	signature:(Point pt,unsigned int curTime,int modifiers)
RoomFor	..\\scintilla\\src\\SplitVector.h	/^	void RoomFor(ptrdiff_t insertionLength) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:protected	signature:(ptrdiff_t insertionLength)
RootLength	..\\scite\\src\\FilePath.cxx	/^int FilePath::RootLength() {$/;"	f	class:FilePath	typeref:typename:int	signature:()
RotateMain	..\\scintilla\\src\\Selection.cxx	/^void Selection::RotateMain() {$/;"	f	class:Selection	typeref:typename:void	signature:()
RoundFloat	..\\scintilla\\win32\\PlatWin.cxx	/^static float RoundFloat(float f) {$/;"	f	namespace:Scintilla	typeref:typename:float	file:	signature:(float f)
RoundXYPosition	..\\scintilla\\include\\Platform.h	/^inline int RoundXYPosition(XYPOSITION xyPos) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(XYPOSITION xyPos)
RoundedRectangle	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void RoundedRectangle(PRectangle rc, ColourDesired fore,$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RoundedRectangle	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RoundedRectangle	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::RoundedRectangle(PRectangle rc,$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RoundedRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
RoundedRectangle	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc,ColourDesired fore,ColourDesired back)
Run	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::Run(int argc, char *argv[]) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int argc,char * argv[])
Run	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::Run(const GUI::gui_char *cmdLine) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const GUI::gui_char * cmdLine)
RunFromPosition	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::RunFromPosition(DISTANCE position) const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:(DISTANCE position) const
RunStyles	..\\scintilla\\src\\RunStyles.cxx	/^RunStyles<DISTANCE, STYLE>::RunStyles() {$/;"	f	class:RunStyles	signature:()
RunStyles	..\\scintilla\\src\\RunStyles.cxx	/^template class Scintilla::RunStyles<int, char>;$/;"	m	class:Scintilla	typeref:typename:class
RunStyles	..\\scintilla\\src\\RunStyles.cxx	/^template class Scintilla::RunStyles<int, int>;$/;"	m	class:Scintilla	typeref:typename:class
RunStyles	..\\scintilla\\src\\RunStyles.h	/^class RunStyles {$/;"	c	namespace:Scintilla
Runs	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::Runs() const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:() const
S	..\\scintilla\\lua\\src\\print.c	/^#define S(/;"	d	file:	signature:(x)
SCEN_CHANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCEN_CHANGE /;"	d
SCEN_KILLFOCUS	..\\scintilla\\include\\Scintilla.h	/^#define SCEN_KILLFOCUS /;"	d
SCEN_SETFOCUS	..\\scintilla\\include\\Scintilla.h	/^#define SCEN_SETFOCUS /;"	d
SCE_A68K_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_COMMENT /;"	d
SCE_A68K_COMMENT_DOXYGEN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_COMMENT_DOXYGEN /;"	d
SCE_A68K_COMMENT_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_COMMENT_SPECIAL /;"	d
SCE_A68K_COMMENT_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_COMMENT_WORD /;"	d
SCE_A68K_CPUINSTRUCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_CPUINSTRUCTION /;"	d
SCE_A68K_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_DEFAULT /;"	d
SCE_A68K_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_DIRECTIVE /;"	d
SCE_A68K_EXTINSTRUCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_EXTINSTRUCTION /;"	d
SCE_A68K_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_IDENTIFIER /;"	d
SCE_A68K_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_LABEL /;"	d
SCE_A68K_MACRO_ARG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_MACRO_ARG /;"	d
SCE_A68K_MACRO_DECLARATION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_MACRO_DECLARATION /;"	d
SCE_A68K_NUMBER_BIN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_NUMBER_BIN /;"	d
SCE_A68K_NUMBER_DEC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_NUMBER_DEC /;"	d
SCE_A68K_NUMBER_HEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_NUMBER_HEX /;"	d
SCE_A68K_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_OPERATOR /;"	d
SCE_A68K_REGISTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_REGISTER /;"	d
SCE_A68K_STRING1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_STRING1 /;"	d
SCE_A68K_STRING2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_A68K_STRING2 /;"	d
SCE_ABAQUS_ARGUMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_ARGUMENT /;"	d
SCE_ABAQUS_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_COMMAND /;"	d
SCE_ABAQUS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_COMMENT /;"	d
SCE_ABAQUS_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_COMMENTBLOCK /;"	d
SCE_ABAQUS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_DEFAULT /;"	d
SCE_ABAQUS_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_FUNCTION /;"	d
SCE_ABAQUS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_NUMBER /;"	d
SCE_ABAQUS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_OPERATOR /;"	d
SCE_ABAQUS_PROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_PROCESSOR /;"	d
SCE_ABAQUS_SLASHCOMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_SLASHCOMMAND /;"	d
SCE_ABAQUS_STARCOMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_STARCOMMAND /;"	d
SCE_ABAQUS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_STRING /;"	d
SCE_ABAQUS_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABAQUS_WORD /;"	d
SCE_ABL_BLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_BLOCK /;"	d
SCE_ABL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_CHARACTER /;"	d
SCE_ABL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_COMMENT /;"	d
SCE_ABL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_DEFAULT /;"	d
SCE_ABL_END	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_END /;"	d
SCE_ABL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_IDENTIFIER /;"	d
SCE_ABL_LINECOMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_LINECOMMENT /;"	d
SCE_ABL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_NUMBER /;"	d
SCE_ABL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_OPERATOR /;"	d
SCE_ABL_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_PREPROCESSOR /;"	d
SCE_ABL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_STRING /;"	d
SCE_ABL_TASKMARKER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_TASKMARKER /;"	d
SCE_ABL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ABL_WORD /;"	d
SCE_ADA_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_CHARACTER /;"	d
SCE_ADA_CHARACTEREOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_CHARACTEREOL /;"	d
SCE_ADA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_COMMENTLINE /;"	d
SCE_ADA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_DEFAULT /;"	d
SCE_ADA_DELIMITER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_DELIMITER /;"	d
SCE_ADA_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_IDENTIFIER /;"	d
SCE_ADA_ILLEGAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_ILLEGAL /;"	d
SCE_ADA_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_LABEL /;"	d
SCE_ADA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_NUMBER /;"	d
SCE_ADA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_STRING /;"	d
SCE_ADA_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_STRINGEOL /;"	d
SCE_ADA_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ADA_WORD /;"	d
SCE_APDL_ARGUMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_ARGUMENT /;"	d
SCE_APDL_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_COMMAND /;"	d
SCE_APDL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_COMMENT /;"	d
SCE_APDL_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_COMMENTBLOCK /;"	d
SCE_APDL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_DEFAULT /;"	d
SCE_APDL_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_FUNCTION /;"	d
SCE_APDL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_NUMBER /;"	d
SCE_APDL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_OPERATOR /;"	d
SCE_APDL_PROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_PROCESSOR /;"	d
SCE_APDL_SLASHCOMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_SLASHCOMMAND /;"	d
SCE_APDL_STARCOMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_STARCOMMAND /;"	d
SCE_APDL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_STRING /;"	d
SCE_APDL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_APDL_WORD /;"	d
SCE_ASM_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_CHARACTER /;"	d
SCE_ASM_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_COMMENT /;"	d
SCE_ASM_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_COMMENTBLOCK /;"	d
SCE_ASM_COMMENTDIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_COMMENTDIRECTIVE /;"	d
SCE_ASM_CPUINSTRUCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_CPUINSTRUCTION /;"	d
SCE_ASM_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_DEFAULT /;"	d
SCE_ASM_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_DIRECTIVE /;"	d
SCE_ASM_DIRECTIVEOPERAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_DIRECTIVEOPERAND /;"	d
SCE_ASM_EXTINSTRUCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_EXTINSTRUCTION /;"	d
SCE_ASM_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_IDENTIFIER /;"	d
SCE_ASM_MATHINSTRUCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_MATHINSTRUCTION /;"	d
SCE_ASM_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_NUMBER /;"	d
SCE_ASM_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_OPERATOR /;"	d
SCE_ASM_REGISTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_REGISTER /;"	d
SCE_ASM_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_STRING /;"	d
SCE_ASM_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASM_STRINGEOL /;"	d
SCE_ASN1_ATTRIBUTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_ATTRIBUTE /;"	d
SCE_ASN1_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_COMMENT /;"	d
SCE_ASN1_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_DEFAULT /;"	d
SCE_ASN1_DESCRIPTOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_DESCRIPTOR /;"	d
SCE_ASN1_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_IDENTIFIER /;"	d
SCE_ASN1_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_KEYWORD /;"	d
SCE_ASN1_OID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_OID /;"	d
SCE_ASN1_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_OPERATOR /;"	d
SCE_ASN1_SCALAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_SCALAR /;"	d
SCE_ASN1_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_STRING /;"	d
SCE_ASN1_TYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASN1_TYPE /;"	d
SCE_ASY_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_CHARACTER /;"	d
SCE_ASY_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_COMMENT /;"	d
SCE_ASY_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_COMMENTLINE /;"	d
SCE_ASY_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_COMMENTLINEDOC /;"	d
SCE_ASY_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_DEFAULT /;"	d
SCE_ASY_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_IDENTIFIER /;"	d
SCE_ASY_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_NUMBER /;"	d
SCE_ASY_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_OPERATOR /;"	d
SCE_ASY_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_STRING /;"	d
SCE_ASY_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_STRINGEOL /;"	d
SCE_ASY_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_WORD /;"	d
SCE_ASY_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ASY_WORD2 /;"	d
SCE_AU3_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_COMMENT /;"	d
SCE_AU3_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_COMMENTBLOCK /;"	d
SCE_AU3_COMOBJ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_COMOBJ /;"	d
SCE_AU3_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_DEFAULT /;"	d
SCE_AU3_EXPAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_EXPAND /;"	d
SCE_AU3_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_FUNCTION /;"	d
SCE_AU3_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_KEYWORD /;"	d
SCE_AU3_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_MACRO /;"	d
SCE_AU3_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_NUMBER /;"	d
SCE_AU3_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_OPERATOR /;"	d
SCE_AU3_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_PREPROCESSOR /;"	d
SCE_AU3_SENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_SENT /;"	d
SCE_AU3_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_SPECIAL /;"	d
SCE_AU3_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_STRING /;"	d
SCE_AU3_UDF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_UDF /;"	d
SCE_AU3_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AU3_VARIABLE /;"	d
SCE_AVE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_COMMENT /;"	d
SCE_AVE_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_DEFAULT /;"	d
SCE_AVE_ENUM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_ENUM /;"	d
SCE_AVE_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_IDENTIFIER /;"	d
SCE_AVE_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_NUMBER /;"	d
SCE_AVE_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_OPERATOR /;"	d
SCE_AVE_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_STRING /;"	d
SCE_AVE_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_STRINGEOL /;"	d
SCE_AVE_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD /;"	d
SCE_AVE_WORD1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD1 /;"	d
SCE_AVE_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD2 /;"	d
SCE_AVE_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD3 /;"	d
SCE_AVE_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD4 /;"	d
SCE_AVE_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD5 /;"	d
SCE_AVE_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVE_WORD6 /;"	d
SCE_AVS_CLIPPROP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_CLIPPROP /;"	d
SCE_AVS_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_COMMENTBLOCK /;"	d
SCE_AVS_COMMENTBLOCKN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_COMMENTBLOCKN /;"	d
SCE_AVS_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_COMMENTLINE /;"	d
SCE_AVS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_DEFAULT /;"	d
SCE_AVS_FILTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_FILTER /;"	d
SCE_AVS_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_FUNCTION /;"	d
SCE_AVS_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_IDENTIFIER /;"	d
SCE_AVS_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_KEYWORD /;"	d
SCE_AVS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_NUMBER /;"	d
SCE_AVS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_OPERATOR /;"	d
SCE_AVS_PLUGIN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_PLUGIN /;"	d
SCE_AVS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_STRING /;"	d
SCE_AVS_TRIPLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_TRIPLESTRING /;"	d
SCE_AVS_USERDFN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_AVS_USERDFN /;"	d
SCE_BAAN_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_COMMENT /;"	d
SCE_BAAN_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_COMMENTDOC /;"	d
SCE_BAAN_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_DEFAULT /;"	d
SCE_BAAN_DEFINEDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_DEFINEDEF /;"	d
SCE_BAAN_DOMDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_DOMDEF /;"	d
SCE_BAAN_FUNCDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_FUNCDEF /;"	d
SCE_BAAN_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_FUNCTION /;"	d
SCE_BAAN_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_IDENTIFIER /;"	d
SCE_BAAN_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_NUMBER /;"	d
SCE_BAAN_OBJECTDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_OBJECTDEF /;"	d
SCE_BAAN_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_OPERATOR /;"	d
SCE_BAAN_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_PREPROCESSOR /;"	d
SCE_BAAN_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_STRING /;"	d
SCE_BAAN_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_STRINGEOL /;"	d
SCE_BAAN_TABLEDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_TABLEDEF /;"	d
SCE_BAAN_TABLESQL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_TABLESQL /;"	d
SCE_BAAN_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD /;"	d
SCE_BAAN_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD2 /;"	d
SCE_BAAN_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD3 /;"	d
SCE_BAAN_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD4 /;"	d
SCE_BAAN_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD5 /;"	d
SCE_BAAN_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD6 /;"	d
SCE_BAAN_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD7 /;"	d
SCE_BAAN_WORD8	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD8 /;"	d
SCE_BAAN_WORD9	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAAN_WORD9 /;"	d
SCE_BAT_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_COMMAND /;"	d
SCE_BAT_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_COMMENT /;"	d
SCE_BAT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_DEFAULT /;"	d
SCE_BAT_HIDE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_HIDE /;"	d
SCE_BAT_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_IDENTIFIER /;"	d
SCE_BAT_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_LABEL /;"	d
SCE_BAT_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_OPERATOR /;"	d
SCE_BAT_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BAT_WORD /;"	d
SCE_BIBTEX_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_COMMENT /;"	d
SCE_BIBTEX_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_DEFAULT /;"	d
SCE_BIBTEX_ENTRY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_ENTRY /;"	d
SCE_BIBTEX_KEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_KEY /;"	d
SCE_BIBTEX_PARAMETER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_PARAMETER /;"	d
SCE_BIBTEX_UNKNOWN_ENTRY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_UNKNOWN_ENTRY /;"	d
SCE_BIBTEX_VALUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_BIBTEX_VALUE /;"	d
SCE_B_ASM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_ASM /;"	d
SCE_B_BINNUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_BINNUMBER /;"	d
SCE_B_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_COMMENT /;"	d
SCE_B_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_COMMENTBLOCK /;"	d
SCE_B_CONSTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_CONSTANT /;"	d
SCE_B_DATE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_DATE /;"	d
SCE_B_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_DEFAULT /;"	d
SCE_B_DOCBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_DOCBLOCK /;"	d
SCE_B_DOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_DOCKEYWORD /;"	d
SCE_B_DOCLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_DOCLINE /;"	d
SCE_B_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_ERROR /;"	d
SCE_B_HEXNUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_HEXNUMBER /;"	d
SCE_B_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_IDENTIFIER /;"	d
SCE_B_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_KEYWORD /;"	d
SCE_B_KEYWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_KEYWORD2 /;"	d
SCE_B_KEYWORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_KEYWORD3 /;"	d
SCE_B_KEYWORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_KEYWORD4 /;"	d
SCE_B_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_LABEL /;"	d
SCE_B_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_NUMBER /;"	d
SCE_B_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_OPERATOR /;"	d
SCE_B_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_PREPROCESSOR /;"	d
SCE_B_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_STRING /;"	d
SCE_B_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_B_STRINGEOL /;"	d
SCE_CAML_CHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_CHAR /;"	d
SCE_CAML_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_COMMENT /;"	d
SCE_CAML_COMMENT1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_COMMENT1 /;"	d
SCE_CAML_COMMENT2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_COMMENT2 /;"	d
SCE_CAML_COMMENT3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_COMMENT3 /;"	d
SCE_CAML_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_DEFAULT /;"	d
SCE_CAML_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_IDENTIFIER /;"	d
SCE_CAML_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_KEYWORD /;"	d
SCE_CAML_KEYWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_KEYWORD2 /;"	d
SCE_CAML_KEYWORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_KEYWORD3 /;"	d
SCE_CAML_LINENUM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_LINENUM /;"	d
SCE_CAML_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_NUMBER /;"	d
SCE_CAML_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_OPERATOR /;"	d
SCE_CAML_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_STRING /;"	d
SCE_CAML_TAGNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_TAGNAME /;"	d
SCE_CAML_WHITE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CAML_WHITE /;"	d
SCE_CLW_ATTRIBUTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_ATTRIBUTE /;"	d
SCE_CLW_BUILTIN_PROCEDURES_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_BUILTIN_PROCEDURES_FUNCTION /;"	d
SCE_CLW_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_COMMENT /;"	d
SCE_CLW_COMPILER_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_COMPILER_DIRECTIVE /;"	d
SCE_CLW_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_DEFAULT /;"	d
SCE_CLW_DEPRECATED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_DEPRECATED /;"	d
SCE_CLW_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_ERROR /;"	d
SCE_CLW_INTEGER_CONSTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_INTEGER_CONSTANT /;"	d
SCE_CLW_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_KEYWORD /;"	d
SCE_CLW_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_LABEL /;"	d
SCE_CLW_PICTURE_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_PICTURE_STRING /;"	d
SCE_CLW_REAL_CONSTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_REAL_CONSTANT /;"	d
SCE_CLW_RUNTIME_EXPRESSIONS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_RUNTIME_EXPRESSIONS /;"	d
SCE_CLW_STANDARD_EQUATE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_STANDARD_EQUATE /;"	d
SCE_CLW_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_STRING /;"	d
SCE_CLW_STRUCTURE_DATA_TYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_STRUCTURE_DATA_TYPE /;"	d
SCE_CLW_USER_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CLW_USER_IDENTIFIER /;"	d
SCE_CMAKE_COMMANDS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_COMMANDS /;"	d
SCE_CMAKE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_COMMENT /;"	d
SCE_CMAKE_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_DEFAULT /;"	d
SCE_CMAKE_FOREACHDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_FOREACHDEF /;"	d
SCE_CMAKE_IFDEFINEDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_IFDEFINEDEF /;"	d
SCE_CMAKE_MACRODEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_MACRODEF /;"	d
SCE_CMAKE_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_NUMBER /;"	d
SCE_CMAKE_PARAMETERS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_PARAMETERS /;"	d
SCE_CMAKE_STRINGDQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_STRINGDQ /;"	d
SCE_CMAKE_STRINGLQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_STRINGLQ /;"	d
SCE_CMAKE_STRINGRQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_STRINGRQ /;"	d
SCE_CMAKE_STRINGVAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_STRINGVAR /;"	d
SCE_CMAKE_USERDEFINED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_USERDEFINED /;"	d
SCE_CMAKE_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_VARIABLE /;"	d
SCE_CMAKE_WHILEDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CMAKE_WHILEDEF /;"	d
SCE_COFFEESCRIPT_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_CHARACTER /;"	d
SCE_COFFEESCRIPT_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENT /;"	d
SCE_COFFEESCRIPT_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENTBLOCK /;"	d
SCE_COFFEESCRIPT_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENTDOC /;"	d
SCE_COFFEESCRIPT_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENTDOCKEYWORD /;"	d
SCE_COFFEESCRIPT_COMMENTDOCKEYWORDERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENTDOCKEYWORDERROR /;"	d
SCE_COFFEESCRIPT_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENTLINE /;"	d
SCE_COFFEESCRIPT_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_COMMENTLINEDOC /;"	d
SCE_COFFEESCRIPT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_DEFAULT /;"	d
SCE_COFFEESCRIPT_GLOBALCLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_GLOBALCLASS /;"	d
SCE_COFFEESCRIPT_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_IDENTIFIER /;"	d
SCE_COFFEESCRIPT_INSTANCEPROPERTY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_INSTANCEPROPERTY /;"	d
SCE_COFFEESCRIPT_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_NUMBER /;"	d
SCE_COFFEESCRIPT_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_OPERATOR /;"	d
SCE_COFFEESCRIPT_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_PREPROCESSOR /;"	d
SCE_COFFEESCRIPT_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_REGEX /;"	d
SCE_COFFEESCRIPT_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_STRING /;"	d
SCE_COFFEESCRIPT_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_STRINGEOL /;"	d
SCE_COFFEESCRIPT_STRINGRAW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_STRINGRAW /;"	d
SCE_COFFEESCRIPT_TRIPLEVERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_TRIPLEVERBATIM /;"	d
SCE_COFFEESCRIPT_UUID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_UUID /;"	d
SCE_COFFEESCRIPT_VERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_VERBATIM /;"	d
SCE_COFFEESCRIPT_VERBOSE_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_VERBOSE_REGEX /;"	d
SCE_COFFEESCRIPT_VERBOSE_REGEX_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_VERBOSE_REGEX_COMMENT /;"	d
SCE_COFFEESCRIPT_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_WORD /;"	d
SCE_COFFEESCRIPT_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_COFFEESCRIPT_WORD2 /;"	d
SCE_CONF_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_COMMENT /;"	d
SCE_CONF_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_DEFAULT /;"	d
SCE_CONF_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_DIRECTIVE /;"	d
SCE_CONF_EXTENSION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_EXTENSION /;"	d
SCE_CONF_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_IDENTIFIER /;"	d
SCE_CONF_IP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_IP /;"	d
SCE_CONF_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_NUMBER /;"	d
SCE_CONF_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_OPERATOR /;"	d
SCE_CONF_PARAMETER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_PARAMETER /;"	d
SCE_CONF_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CONF_STRING /;"	d
SCE_CSOUND_ARATE_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_ARATE_VAR /;"	d
SCE_CSOUND_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_COMMENT /;"	d
SCE_CSOUND_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_COMMENTBLOCK /;"	d
SCE_CSOUND_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_DEFAULT /;"	d
SCE_CSOUND_GLOBAL_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_GLOBAL_VAR /;"	d
SCE_CSOUND_HEADERSTMT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_HEADERSTMT /;"	d
SCE_CSOUND_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_IDENTIFIER /;"	d
SCE_CSOUND_INSTR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_INSTR /;"	d
SCE_CSOUND_IRATE_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_IRATE_VAR /;"	d
SCE_CSOUND_KRATE_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_KRATE_VAR /;"	d
SCE_CSOUND_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_NUMBER /;"	d
SCE_CSOUND_OPCODE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_OPCODE /;"	d
SCE_CSOUND_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_OPERATOR /;"	d
SCE_CSOUND_PARAM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_PARAM /;"	d
SCE_CSOUND_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_STRINGEOL /;"	d
SCE_CSOUND_USERKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSOUND_USERKEYWORD /;"	d
SCE_CSS_ATTRIBUTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_ATTRIBUTE /;"	d
SCE_CSS_CLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_CLASS /;"	d
SCE_CSS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_COMMENT /;"	d
SCE_CSS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_DEFAULT /;"	d
SCE_CSS_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_DIRECTIVE /;"	d
SCE_CSS_DOUBLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_DOUBLESTRING /;"	d
SCE_CSS_EXTENDED_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_EXTENDED_IDENTIFIER /;"	d
SCE_CSS_EXTENDED_PSEUDOCLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_EXTENDED_PSEUDOCLASS /;"	d
SCE_CSS_EXTENDED_PSEUDOELEMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_EXTENDED_PSEUDOELEMENT /;"	d
SCE_CSS_ID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_ID /;"	d
SCE_CSS_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_IDENTIFIER /;"	d
SCE_CSS_IDENTIFIER2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_IDENTIFIER2 /;"	d
SCE_CSS_IDENTIFIER3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_IDENTIFIER3 /;"	d
SCE_CSS_IMPORTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_IMPORTANT /;"	d
SCE_CSS_MEDIA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_MEDIA /;"	d
SCE_CSS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_OPERATOR /;"	d
SCE_CSS_PSEUDOCLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_PSEUDOCLASS /;"	d
SCE_CSS_PSEUDOELEMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_PSEUDOELEMENT /;"	d
SCE_CSS_SINGLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_SINGLESTRING /;"	d
SCE_CSS_TAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_TAG /;"	d
SCE_CSS_UNKNOWN_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_UNKNOWN_IDENTIFIER /;"	d
SCE_CSS_UNKNOWN_PSEUDOCLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_UNKNOWN_PSEUDOCLASS /;"	d
SCE_CSS_VALUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_VALUE /;"	d
SCE_CSS_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_CSS_VARIABLE /;"	d
SCE_C_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_CHARACTER /;"	d
SCE_C_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_COMMENT /;"	d
SCE_C_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_COMMENTDOC /;"	d
SCE_C_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_COMMENTDOCKEYWORD /;"	d
SCE_C_COMMENTDOCKEYWORDERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_COMMENTDOCKEYWORDERROR /;"	d
SCE_C_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_COMMENTLINE /;"	d
SCE_C_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_COMMENTLINEDOC /;"	d
SCE_C_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_DEFAULT /;"	d
SCE_C_ESCAPESEQUENCE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_ESCAPESEQUENCE /;"	d
SCE_C_GLOBALCLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_GLOBALCLASS /;"	d
SCE_C_HASHQUOTEDSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_HASHQUOTEDSTRING /;"	d
SCE_C_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_IDENTIFIER /;"	d
SCE_C_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_NUMBER /;"	d
SCE_C_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_OPERATOR /;"	d
SCE_C_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_PREPROCESSOR /;"	d
SCE_C_PREPROCESSORCOMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_PREPROCESSORCOMMENT /;"	d
SCE_C_PREPROCESSORCOMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_PREPROCESSORCOMMENTDOC /;"	d
SCE_C_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_REGEX /;"	d
SCE_C_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_STRING /;"	d
SCE_C_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_STRINGEOL /;"	d
SCE_C_STRINGRAW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_STRINGRAW /;"	d
SCE_C_TASKMARKER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_TASKMARKER /;"	d
SCE_C_TRIPLEVERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_TRIPLEVERBATIM /;"	d
SCE_C_USERLITERAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_USERLITERAL /;"	d
SCE_C_UUID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_UUID /;"	d
SCE_C_VERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_VERBATIM /;"	d
SCE_C_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_WORD /;"	d
SCE_C_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_C_WORD2 /;"	d
SCE_DIFF_ADDED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_ADDED /;"	d
SCE_DIFF_CHANGED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_CHANGED /;"	d
SCE_DIFF_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_COMMAND /;"	d
SCE_DIFF_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_COMMENT /;"	d
SCE_DIFF_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_DEFAULT /;"	d
SCE_DIFF_DELETED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_DELETED /;"	d
SCE_DIFF_HEADER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_HEADER /;"	d
SCE_DIFF_PATCH_ADD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_PATCH_ADD /;"	d
SCE_DIFF_PATCH_DELETE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_PATCH_DELETE /;"	d
SCE_DIFF_POSITION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_POSITION /;"	d
SCE_DIFF_REMOVED_PATCH_ADD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_REMOVED_PATCH_ADD /;"	d
SCE_DIFF_REMOVED_PATCH_DELETE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DIFF_REMOVED_PATCH_DELETE /;"	d
SCE_DMAP_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_COMMENT /;"	d
SCE_DMAP_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_DEFAULT /;"	d
SCE_DMAP_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_IDENTIFIER /;"	d
SCE_DMAP_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_NUMBER /;"	d
SCE_DMAP_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_OPERATOR /;"	d
SCE_DMAP_STRING1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_STRING1 /;"	d
SCE_DMAP_STRING2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_STRING2 /;"	d
SCE_DMAP_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_STRINGEOL /;"	d
SCE_DMAP_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_WORD /;"	d
SCE_DMAP_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_WORD2 /;"	d
SCE_DMAP_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMAP_WORD3 /;"	d
SCE_DMIS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_COMMENT /;"	d
SCE_DMIS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_DEFAULT /;"	d
SCE_DMIS_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_KEYWORD /;"	d
SCE_DMIS_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_LABEL /;"	d
SCE_DMIS_MAJORWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_MAJORWORD /;"	d
SCE_DMIS_MINORWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_MINORWORD /;"	d
SCE_DMIS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_NUMBER /;"	d
SCE_DMIS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_STRING /;"	d
SCE_DMIS_UNSUPPORTED_MAJOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_UNSUPPORTED_MAJOR /;"	d
SCE_DMIS_UNSUPPORTED_MINOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_DMIS_UNSUPPORTED_MINOR /;"	d
SCE_D_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_CHARACTER /;"	d
SCE_D_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENT /;"	d
SCE_D_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENTDOC /;"	d
SCE_D_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENTDOCKEYWORD /;"	d
SCE_D_COMMENTDOCKEYWORDERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENTDOCKEYWORDERROR /;"	d
SCE_D_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENTLINE /;"	d
SCE_D_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENTLINEDOC /;"	d
SCE_D_COMMENTNESTED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_COMMENTNESTED /;"	d
SCE_D_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_DEFAULT /;"	d
SCE_D_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_IDENTIFIER /;"	d
SCE_D_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_NUMBER /;"	d
SCE_D_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_OPERATOR /;"	d
SCE_D_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_STRING /;"	d
SCE_D_STRINGB	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_STRINGB /;"	d
SCE_D_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_STRINGEOL /;"	d
SCE_D_STRINGR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_STRINGR /;"	d
SCE_D_TYPEDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_TYPEDEF /;"	d
SCE_D_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_WORD /;"	d
SCE_D_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_WORD2 /;"	d
SCE_D_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_WORD3 /;"	d
SCE_D_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_WORD5 /;"	d
SCE_D_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_WORD6 /;"	d
SCE_D_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_D_WORD7 /;"	d
SCE_ECL_ADDED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_ADDED /;"	d
SCE_ECL_CHANGED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_CHANGED /;"	d
SCE_ECL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_CHARACTER /;"	d
SCE_ECL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_COMMENT /;"	d
SCE_ECL_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_COMMENTDOC /;"	d
SCE_ECL_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_COMMENTDOCKEYWORD /;"	d
SCE_ECL_COMMENTDOCKEYWORDERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_COMMENTDOCKEYWORDERROR /;"	d
SCE_ECL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_COMMENTLINE /;"	d
SCE_ECL_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_COMMENTLINEDOC /;"	d
SCE_ECL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_DEFAULT /;"	d
SCE_ECL_DELETED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_DELETED /;"	d
SCE_ECL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_IDENTIFIER /;"	d
SCE_ECL_MOVED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_MOVED /;"	d
SCE_ECL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_NUMBER /;"	d
SCE_ECL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_OPERATOR /;"	d
SCE_ECL_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_PREPROCESSOR /;"	d
SCE_ECL_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_REGEX /;"	d
SCE_ECL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_STRING /;"	d
SCE_ECL_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_STRINGEOL /;"	d
SCE_ECL_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_UNKNOWN /;"	d
SCE_ECL_UUID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_UUID /;"	d
SCE_ECL_VERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_VERBATIM /;"	d
SCE_ECL_WORD0	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_WORD0 /;"	d
SCE_ECL_WORD1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_WORD1 /;"	d
SCE_ECL_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_WORD2 /;"	d
SCE_ECL_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_WORD3 /;"	d
SCE_ECL_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_WORD4 /;"	d
SCE_ECL_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ECL_WORD5 /;"	d
SCE_EDI_BADSEGMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_BADSEGMENT /;"	d
SCE_EDI_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_DEFAULT /;"	d
SCE_EDI_SEGMENTEND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_SEGMENTEND /;"	d
SCE_EDI_SEGMENTSTART	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_SEGMENTSTART /;"	d
SCE_EDI_SEP_COMPOSITE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_SEP_COMPOSITE /;"	d
SCE_EDI_SEP_ELEMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_SEP_ELEMENT /;"	d
SCE_EDI_SEP_RELEASE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_SEP_RELEASE /;"	d
SCE_EDI_UNA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_UNA /;"	d
SCE_EDI_UNH	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EDI_UNH /;"	d
SCE_EIFFEL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_CHARACTER /;"	d
SCE_EIFFEL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_COMMENTLINE /;"	d
SCE_EIFFEL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_DEFAULT /;"	d
SCE_EIFFEL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_IDENTIFIER /;"	d
SCE_EIFFEL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_NUMBER /;"	d
SCE_EIFFEL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_OPERATOR /;"	d
SCE_EIFFEL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_STRING /;"	d
SCE_EIFFEL_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_STRINGEOL /;"	d
SCE_EIFFEL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_EIFFEL_WORD /;"	d
SCE_ERLANG_ATOM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_ATOM /;"	d
SCE_ERLANG_ATOM_QUOTED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_ATOM_QUOTED /;"	d
SCE_ERLANG_BIFS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_BIFS /;"	d
SCE_ERLANG_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_CHARACTER /;"	d
SCE_ERLANG_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_COMMENT /;"	d
SCE_ERLANG_COMMENT_DOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_COMMENT_DOC /;"	d
SCE_ERLANG_COMMENT_DOC_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_COMMENT_DOC_MACRO /;"	d
SCE_ERLANG_COMMENT_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_COMMENT_FUNCTION /;"	d
SCE_ERLANG_COMMENT_MODULE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_COMMENT_MODULE /;"	d
SCE_ERLANG_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_DEFAULT /;"	d
SCE_ERLANG_FUNCTION_NAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_FUNCTION_NAME /;"	d
SCE_ERLANG_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_KEYWORD /;"	d
SCE_ERLANG_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_MACRO /;"	d
SCE_ERLANG_MACRO_QUOTED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_MACRO_QUOTED /;"	d
SCE_ERLANG_MODULES	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_MODULES /;"	d
SCE_ERLANG_MODULES_ATT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_MODULES_ATT /;"	d
SCE_ERLANG_NODE_NAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_NODE_NAME /;"	d
SCE_ERLANG_NODE_NAME_QUOTED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_NODE_NAME_QUOTED /;"	d
SCE_ERLANG_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_NUMBER /;"	d
SCE_ERLANG_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_OPERATOR /;"	d
SCE_ERLANG_PREPROC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_PREPROC /;"	d
SCE_ERLANG_RECORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_RECORD /;"	d
SCE_ERLANG_RECORD_QUOTED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_RECORD_QUOTED /;"	d
SCE_ERLANG_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_STRING /;"	d
SCE_ERLANG_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_UNKNOWN /;"	d
SCE_ERLANG_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERLANG_VARIABLE /;"	d
SCE_ERR_ABSF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ABSF /;"	d
SCE_ERR_BORLAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_BORLAND /;"	d
SCE_ERR_CMD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_CMD /;"	d
SCE_ERR_CTAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_CTAG /;"	d
SCE_ERR_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_DEFAULT /;"	d
SCE_ERR_DIFF_ADDITION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_DIFF_ADDITION /;"	d
SCE_ERR_DIFF_CHANGED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_DIFF_CHANGED /;"	d
SCE_ERR_DIFF_DELETION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_DIFF_DELETION /;"	d
SCE_ERR_DIFF_MESSAGE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_DIFF_MESSAGE /;"	d
SCE_ERR_ELF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ELF /;"	d
SCE_ERR_ESCSEQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ESCSEQ /;"	d
SCE_ERR_ESCSEQ_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ESCSEQ_UNKNOWN /;"	d
SCE_ERR_ES_BLACK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BLACK /;"	d
SCE_ERR_ES_BLUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BLUE /;"	d
SCE_ERR_ES_BRIGHT_BLUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BRIGHT_BLUE /;"	d
SCE_ERR_ES_BRIGHT_CYAN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BRIGHT_CYAN /;"	d
SCE_ERR_ES_BRIGHT_GREEN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BRIGHT_GREEN /;"	d
SCE_ERR_ES_BRIGHT_MAGENTA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BRIGHT_MAGENTA /;"	d
SCE_ERR_ES_BRIGHT_RED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BRIGHT_RED /;"	d
SCE_ERR_ES_BROWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_BROWN /;"	d
SCE_ERR_ES_CYAN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_CYAN /;"	d
SCE_ERR_ES_DARK_GRAY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_DARK_GRAY /;"	d
SCE_ERR_ES_GRAY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_GRAY /;"	d
SCE_ERR_ES_GREEN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_GREEN /;"	d
SCE_ERR_ES_MAGENTA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_MAGENTA /;"	d
SCE_ERR_ES_RED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_RED /;"	d
SCE_ERR_ES_WHITE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_WHITE /;"	d
SCE_ERR_ES_YELLOW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_ES_YELLOW /;"	d
SCE_ERR_GCC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_GCC /;"	d
SCE_ERR_GCC_INCLUDED_FROM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_GCC_INCLUDED_FROM /;"	d
SCE_ERR_IFC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_IFC /;"	d
SCE_ERR_IFORT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_IFORT /;"	d
SCE_ERR_JAVA_STACK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_JAVA_STACK /;"	d
SCE_ERR_LUA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_LUA /;"	d
SCE_ERR_MS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_MS /;"	d
SCE_ERR_NET	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_NET /;"	d
SCE_ERR_PERL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_PERL /;"	d
SCE_ERR_PHP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_PHP /;"	d
SCE_ERR_PYTHON	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_PYTHON /;"	d
SCE_ERR_TIDY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_TIDY /;"	d
SCE_ERR_VALUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ERR_VALUE /;"	d
SCE_ESCRIPT_BRACE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_BRACE /;"	d
SCE_ESCRIPT_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_COMMENT /;"	d
SCE_ESCRIPT_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_COMMENTDOC /;"	d
SCE_ESCRIPT_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_COMMENTLINE /;"	d
SCE_ESCRIPT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_DEFAULT /;"	d
SCE_ESCRIPT_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_IDENTIFIER /;"	d
SCE_ESCRIPT_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_NUMBER /;"	d
SCE_ESCRIPT_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_OPERATOR /;"	d
SCE_ESCRIPT_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_STRING /;"	d
SCE_ESCRIPT_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_WORD /;"	d
SCE_ESCRIPT_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_WORD2 /;"	d
SCE_ESCRIPT_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ESCRIPT_WORD3 /;"	d
SCE_FORTH_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_COMMENT /;"	d
SCE_FORTH_COMMENT_ML	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_COMMENT_ML /;"	d
SCE_FORTH_CONTROL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_CONTROL /;"	d
SCE_FORTH_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_DEFAULT /;"	d
SCE_FORTH_DEFWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_DEFWORD /;"	d
SCE_FORTH_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_IDENTIFIER /;"	d
SCE_FORTH_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_KEYWORD /;"	d
SCE_FORTH_LOCALE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_LOCALE /;"	d
SCE_FORTH_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_NUMBER /;"	d
SCE_FORTH_PREWORD1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_PREWORD1 /;"	d
SCE_FORTH_PREWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_PREWORD2 /;"	d
SCE_FORTH_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FORTH_STRING /;"	d
SCE_FS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENT /;"	d
SCE_FS_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTDOC /;"	d
SCE_FS_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTDOCKEYWORD /;"	d
SCE_FS_COMMENTDOCKEYWORDERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTDOCKEYWORDERROR /;"	d
SCE_FS_COMMENTDOC_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTDOC_C /;"	d
SCE_FS_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTLINE /;"	d
SCE_FS_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTLINEDOC /;"	d
SCE_FS_COMMENTLINEDOC_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_COMMENTLINEDOC_C /;"	d
SCE_FS_CONSTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_CONSTANT /;"	d
SCE_FS_DATE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_DATE /;"	d
SCE_FS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_DEFAULT /;"	d
SCE_FS_DEFAULT_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_DEFAULT_C /;"	d
SCE_FS_DISABLEDCODE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_DISABLEDCODE /;"	d
SCE_FS_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_IDENTIFIER /;"	d
SCE_FS_IDENTIFIER_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_IDENTIFIER_C /;"	d
SCE_FS_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_KEYWORD /;"	d
SCE_FS_KEYWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_KEYWORD2 /;"	d
SCE_FS_KEYWORD2_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_KEYWORD2_C /;"	d
SCE_FS_KEYWORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_KEYWORD3 /;"	d
SCE_FS_KEYWORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_KEYWORD4 /;"	d
SCE_FS_KEYWORD_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_KEYWORD_C /;"	d
SCE_FS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_NUMBER /;"	d
SCE_FS_NUMBER_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_NUMBER_C /;"	d
SCE_FS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_OPERATOR /;"	d
SCE_FS_OPERATOR_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_OPERATOR_C /;"	d
SCE_FS_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_PREPROCESSOR /;"	d
SCE_FS_PREPROCESSOR_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_PREPROCESSOR_C /;"	d
SCE_FS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_STRING /;"	d
SCE_FS_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_STRINGEOL /;"	d
SCE_FS_STRINGEOL_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_STRINGEOL_C /;"	d
SCE_FS_STRING_C	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_STRING_C /;"	d
SCE_FS_WORDOPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_FS_WORDOPERATOR /;"	d
SCE_F_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_COMMENT /;"	d
SCE_F_CONTINUATION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_CONTINUATION /;"	d
SCE_F_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_DEFAULT /;"	d
SCE_F_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_IDENTIFIER /;"	d
SCE_F_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_LABEL /;"	d
SCE_F_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_NUMBER /;"	d
SCE_F_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_OPERATOR /;"	d
SCE_F_OPERATOR2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_OPERATOR2 /;"	d
SCE_F_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_PREPROCESSOR /;"	d
SCE_F_STRING1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_STRING1 /;"	d
SCE_F_STRING2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_STRING2 /;"	d
SCE_F_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_STRINGEOL /;"	d
SCE_F_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_WORD /;"	d
SCE_F_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_WORD2 /;"	d
SCE_F_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_F_WORD3 /;"	d
SCE_GAP_CHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_CHAR /;"	d
SCE_GAP_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_COMMENT /;"	d
SCE_GAP_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_DEFAULT /;"	d
SCE_GAP_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_IDENTIFIER /;"	d
SCE_GAP_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_KEYWORD /;"	d
SCE_GAP_KEYWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_KEYWORD2 /;"	d
SCE_GAP_KEYWORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_KEYWORD3 /;"	d
SCE_GAP_KEYWORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_KEYWORD4 /;"	d
SCE_GAP_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_NUMBER /;"	d
SCE_GAP_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_OPERATOR /;"	d
SCE_GAP_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_STRING /;"	d
SCE_GAP_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GAP_STRINGEOL /;"	d
SCE_GC_ATTRIBUTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_ATTRIBUTE /;"	d
SCE_GC_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_COMMAND /;"	d
SCE_GC_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_COMMENTBLOCK /;"	d
SCE_GC_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_COMMENTLINE /;"	d
SCE_GC_CONTROL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_CONTROL /;"	d
SCE_GC_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_DEFAULT /;"	d
SCE_GC_EVENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_EVENT /;"	d
SCE_GC_GLOBAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_GLOBAL /;"	d
SCE_GC_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_OPERATOR /;"	d
SCE_GC_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_GC_STRING /;"	d
SCE_HA_CAPITAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_CAPITAL /;"	d
SCE_HA_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_CHARACTER /;"	d
SCE_HA_CLASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_CLASS /;"	d
SCE_HA_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_COMMENTBLOCK /;"	d
SCE_HA_COMMENTBLOCK2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_COMMENTBLOCK2 /;"	d
SCE_HA_COMMENTBLOCK3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_COMMENTBLOCK3 /;"	d
SCE_HA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_COMMENTLINE /;"	d
SCE_HA_DATA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_DATA /;"	d
SCE_HA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_DEFAULT /;"	d
SCE_HA_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_IDENTIFIER /;"	d
SCE_HA_IMPORT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_IMPORT /;"	d
SCE_HA_INSTANCE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_INSTANCE /;"	d
SCE_HA_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_KEYWORD /;"	d
SCE_HA_LITERATE_CODEDELIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_LITERATE_CODEDELIM /;"	d
SCE_HA_LITERATE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_LITERATE_COMMENT /;"	d
SCE_HA_MODULE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_MODULE /;"	d
SCE_HA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_NUMBER /;"	d
SCE_HA_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_OPERATOR /;"	d
SCE_HA_PRAGMA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_PRAGMA /;"	d
SCE_HA_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_PREPROCESSOR /;"	d
SCE_HA_RESERVED_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_RESERVED_OPERATOR /;"	d
SCE_HA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_STRING /;"	d
SCE_HA_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HA_STRINGEOL /;"	d
SCE_HBA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_COMMENTLINE /;"	d
SCE_HBA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_DEFAULT /;"	d
SCE_HBA_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_IDENTIFIER /;"	d
SCE_HBA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_NUMBER /;"	d
SCE_HBA_START	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_START /;"	d
SCE_HBA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_STRING /;"	d
SCE_HBA_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_STRINGEOL /;"	d
SCE_HBA_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HBA_WORD /;"	d
SCE_HB_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_COMMENTLINE /;"	d
SCE_HB_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_DEFAULT /;"	d
SCE_HB_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_IDENTIFIER /;"	d
SCE_HB_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_NUMBER /;"	d
SCE_HB_START	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_START /;"	d
SCE_HB_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_STRING /;"	d
SCE_HB_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_STRINGEOL /;"	d
SCE_HB_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HB_WORD /;"	d
SCE_HEX_ADDRESSFIELD_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_ADDRESSFIELD_UNKNOWN /;"	d
SCE_HEX_BYTECOUNT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_BYTECOUNT /;"	d
SCE_HEX_BYTECOUNT_WRONG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_BYTECOUNT_WRONG /;"	d
SCE_HEX_CHECKSUM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_CHECKSUM /;"	d
SCE_HEX_CHECKSUM_WRONG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_CHECKSUM_WRONG /;"	d
SCE_HEX_DATAADDRESS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_DATAADDRESS /;"	d
SCE_HEX_DATA_EMPTY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_DATA_EMPTY /;"	d
SCE_HEX_DATA_EVEN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_DATA_EVEN /;"	d
SCE_HEX_DATA_ODD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_DATA_ODD /;"	d
SCE_HEX_DATA_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_DATA_UNKNOWN /;"	d
SCE_HEX_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_DEFAULT /;"	d
SCE_HEX_EXTENDEDADDRESS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_EXTENDEDADDRESS /;"	d
SCE_HEX_GARBAGE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_GARBAGE /;"	d
SCE_HEX_NOADDRESS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_NOADDRESS /;"	d
SCE_HEX_RECCOUNT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_RECCOUNT /;"	d
SCE_HEX_RECSTART	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_RECSTART /;"	d
SCE_HEX_RECTYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_RECTYPE /;"	d
SCE_HEX_RECTYPE_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_RECTYPE_UNKNOWN /;"	d
SCE_HEX_STARTADDRESS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HEX_STARTADDRESS /;"	d
SCE_HJA_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_COMMENT /;"	d
SCE_HJA_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_COMMENTDOC /;"	d
SCE_HJA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_COMMENTLINE /;"	d
SCE_HJA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_DEFAULT /;"	d
SCE_HJA_DOUBLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_DOUBLESTRING /;"	d
SCE_HJA_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_KEYWORD /;"	d
SCE_HJA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_NUMBER /;"	d
SCE_HJA_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_REGEX /;"	d
SCE_HJA_SINGLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_SINGLESTRING /;"	d
SCE_HJA_START	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_START /;"	d
SCE_HJA_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_STRINGEOL /;"	d
SCE_HJA_SYMBOLS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_SYMBOLS /;"	d
SCE_HJA_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJA_WORD /;"	d
SCE_HJ_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_COMMENT /;"	d
SCE_HJ_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_COMMENTDOC /;"	d
SCE_HJ_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_COMMENTLINE /;"	d
SCE_HJ_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_DEFAULT /;"	d
SCE_HJ_DOUBLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_DOUBLESTRING /;"	d
SCE_HJ_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_KEYWORD /;"	d
SCE_HJ_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_NUMBER /;"	d
SCE_HJ_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_REGEX /;"	d
SCE_HJ_SINGLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_SINGLESTRING /;"	d
SCE_HJ_START	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_START /;"	d
SCE_HJ_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_STRINGEOL /;"	d
SCE_HJ_SYMBOLS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_SYMBOLS /;"	d
SCE_HJ_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HJ_WORD /;"	d
SCE_HPA_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_CHARACTER /;"	d
SCE_HPA_CLASSNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_CLASSNAME /;"	d
SCE_HPA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_COMMENTLINE /;"	d
SCE_HPA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_DEFAULT /;"	d
SCE_HPA_DEFNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_DEFNAME /;"	d
SCE_HPA_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_IDENTIFIER /;"	d
SCE_HPA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_NUMBER /;"	d
SCE_HPA_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_OPERATOR /;"	d
SCE_HPA_START	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_START /;"	d
SCE_HPA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_STRING /;"	d
SCE_HPA_TRIPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_TRIPLE /;"	d
SCE_HPA_TRIPLEDOUBLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_TRIPLEDOUBLE /;"	d
SCE_HPA_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPA_WORD /;"	d
SCE_HPHP_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_COMMENT /;"	d
SCE_HPHP_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_COMMENTLINE /;"	d
SCE_HPHP_COMPLEX_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_COMPLEX_VARIABLE /;"	d
SCE_HPHP_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_DEFAULT /;"	d
SCE_HPHP_HSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_HSTRING /;"	d
SCE_HPHP_HSTRING_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_HSTRING_VARIABLE /;"	d
SCE_HPHP_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_NUMBER /;"	d
SCE_HPHP_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_OPERATOR /;"	d
SCE_HPHP_SIMPLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_SIMPLESTRING /;"	d
SCE_HPHP_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_VARIABLE /;"	d
SCE_HPHP_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HPHP_WORD /;"	d
SCE_HP_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_CHARACTER /;"	d
SCE_HP_CLASSNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_CLASSNAME /;"	d
SCE_HP_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_COMMENTLINE /;"	d
SCE_HP_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_DEFAULT /;"	d
SCE_HP_DEFNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_DEFNAME /;"	d
SCE_HP_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_IDENTIFIER /;"	d
SCE_HP_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_NUMBER /;"	d
SCE_HP_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_OPERATOR /;"	d
SCE_HP_START	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_START /;"	d
SCE_HP_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_STRING /;"	d
SCE_HP_TRIPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_TRIPLE /;"	d
SCE_HP_TRIPLEDOUBLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_TRIPLEDOUBLE /;"	d
SCE_HP_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_HP_WORD /;"	d
SCE_H_ASP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_ASP /;"	d
SCE_H_ASPAT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_ASPAT /;"	d
SCE_H_ATTRIBUTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_ATTRIBUTE /;"	d
SCE_H_ATTRIBUTEUNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_ATTRIBUTEUNKNOWN /;"	d
SCE_H_CDATA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_CDATA /;"	d
SCE_H_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_COMMENT /;"	d
SCE_H_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_DEFAULT /;"	d
SCE_H_DOUBLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_DOUBLESTRING /;"	d
SCE_H_ENTITY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_ENTITY /;"	d
SCE_H_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_NUMBER /;"	d
SCE_H_OTHER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_OTHER /;"	d
SCE_H_QUESTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_QUESTION /;"	d
SCE_H_SCRIPT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SCRIPT /;"	d
SCE_H_SGML_1ST_PARAM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_1ST_PARAM /;"	d
SCE_H_SGML_1ST_PARAM_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_1ST_PARAM_COMMENT /;"	d
SCE_H_SGML_BLOCK_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_BLOCK_DEFAULT /;"	d
SCE_H_SGML_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_COMMAND /;"	d
SCE_H_SGML_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_COMMENT /;"	d
SCE_H_SGML_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_DEFAULT /;"	d
SCE_H_SGML_DOUBLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_DOUBLESTRING /;"	d
SCE_H_SGML_ENTITY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_ENTITY /;"	d
SCE_H_SGML_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_ERROR /;"	d
SCE_H_SGML_SIMPLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_SIMPLESTRING /;"	d
SCE_H_SGML_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SGML_SPECIAL /;"	d
SCE_H_SINGLESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_SINGLESTRING /;"	d
SCE_H_TAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_TAG /;"	d
SCE_H_TAGEND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_TAGEND /;"	d
SCE_H_TAGUNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_TAGUNKNOWN /;"	d
SCE_H_VALUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_VALUE /;"	d
SCE_H_XCCOMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_XCCOMMENT /;"	d
SCE_H_XMLEND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_XMLEND /;"	d
SCE_H_XMLSTART	..\\scintilla\\include\\SciLexer.h	/^#define SCE_H_XMLSTART /;"	d
SCE_INNO_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_COMMENT /;"	d
SCE_INNO_COMMENT_PASCAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_COMMENT_PASCAL /;"	d
SCE_INNO_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_DEFAULT /;"	d
SCE_INNO_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_IDENTIFIER /;"	d
SCE_INNO_INLINE_EXPANSION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_INLINE_EXPANSION /;"	d
SCE_INNO_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_KEYWORD /;"	d
SCE_INNO_KEYWORD_PASCAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_KEYWORD_PASCAL /;"	d
SCE_INNO_KEYWORD_USER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_KEYWORD_USER /;"	d
SCE_INNO_PARAMETER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_PARAMETER /;"	d
SCE_INNO_PREPROC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_PREPROC /;"	d
SCE_INNO_SECTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_SECTION /;"	d
SCE_INNO_STRING_DOUBLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_STRING_DOUBLE /;"	d
SCE_INNO_STRING_SINGLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_INNO_STRING_SINGLE /;"	d
SCE_JSON_BLOCKCOMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_BLOCKCOMMENT /;"	d
SCE_JSON_COMPACTIRI	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_COMPACTIRI /;"	d
SCE_JSON_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_DEFAULT /;"	d
SCE_JSON_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_ERROR /;"	d
SCE_JSON_ESCAPESEQUENCE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_ESCAPESEQUENCE /;"	d
SCE_JSON_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_KEYWORD /;"	d
SCE_JSON_LDKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_LDKEYWORD /;"	d
SCE_JSON_LINECOMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_LINECOMMENT /;"	d
SCE_JSON_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_NUMBER /;"	d
SCE_JSON_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_OPERATOR /;"	d
SCE_JSON_PROPERTYNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_PROPERTYNAME /;"	d
SCE_JSON_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_STRING /;"	d
SCE_JSON_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_STRINGEOL /;"	d
SCE_JSON_URI	..\\scintilla\\include\\SciLexer.h	/^#define SCE_JSON_URI /;"	d
SCE_KIX_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_COMMENT /;"	d
SCE_KIX_COMMENTSTREAM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_COMMENTSTREAM /;"	d
SCE_KIX_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_DEFAULT /;"	d
SCE_KIX_FUNCTIONS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_FUNCTIONS /;"	d
SCE_KIX_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_IDENTIFIER /;"	d
SCE_KIX_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_KEYWORD /;"	d
SCE_KIX_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_MACRO /;"	d
SCE_KIX_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_NUMBER /;"	d
SCE_KIX_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_OPERATOR /;"	d
SCE_KIX_STRING1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_STRING1 /;"	d
SCE_KIX_STRING2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_STRING2 /;"	d
SCE_KIX_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KIX_VAR /;"	d
SCE_KVIRC_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_COMMENT /;"	d
SCE_KVIRC_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_COMMENTBLOCK /;"	d
SCE_KVIRC_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_DEFAULT /;"	d
SCE_KVIRC_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_FUNCTION /;"	d
SCE_KVIRC_FUNCTION_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_FUNCTION_KEYWORD /;"	d
SCE_KVIRC_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_KEYWORD /;"	d
SCE_KVIRC_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_NUMBER /;"	d
SCE_KVIRC_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_OPERATOR /;"	d
SCE_KVIRC_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_STRING /;"	d
SCE_KVIRC_STRING_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_STRING_FUNCTION /;"	d
SCE_KVIRC_STRING_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_STRING_VARIABLE /;"	d
SCE_KVIRC_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_VARIABLE /;"	d
SCE_KVIRC_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_KVIRC_WORD /;"	d
SCE_LISP_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_COMMENT /;"	d
SCE_LISP_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_DEFAULT /;"	d
SCE_LISP_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_IDENTIFIER /;"	d
SCE_LISP_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_KEYWORD /;"	d
SCE_LISP_KEYWORD_KW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_KEYWORD_KW /;"	d
SCE_LISP_MULTI_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_MULTI_COMMENT /;"	d
SCE_LISP_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_NUMBER /;"	d
SCE_LISP_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_OPERATOR /;"	d
SCE_LISP_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_SPECIAL /;"	d
SCE_LISP_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_STRING /;"	d
SCE_LISP_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_STRINGEOL /;"	d
SCE_LISP_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LISP_SYMBOL /;"	d
SCE_LOT_ABORT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_ABORT /;"	d
SCE_LOT_BREAK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_BREAK /;"	d
SCE_LOT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_DEFAULT /;"	d
SCE_LOT_FAIL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_FAIL /;"	d
SCE_LOT_HEADER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_HEADER /;"	d
SCE_LOT_PASS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_PASS /;"	d
SCE_LOT_SET	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOT_SET /;"	d
SCE_LOUT_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_COMMENT /;"	d
SCE_LOUT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_DEFAULT /;"	d
SCE_LOUT_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_IDENTIFIER /;"	d
SCE_LOUT_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_NUMBER /;"	d
SCE_LOUT_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_OPERATOR /;"	d
SCE_LOUT_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_STRING /;"	d
SCE_LOUT_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_STRINGEOL /;"	d
SCE_LOUT_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_WORD /;"	d
SCE_LOUT_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_WORD2 /;"	d
SCE_LOUT_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_WORD3 /;"	d
SCE_LOUT_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LOUT_WORD4 /;"	d
SCE_LUA_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_CHARACTER /;"	d
SCE_LUA_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_COMMENT /;"	d
SCE_LUA_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_COMMENTDOC /;"	d
SCE_LUA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_COMMENTLINE /;"	d
SCE_LUA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_DEFAULT /;"	d
SCE_LUA_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_IDENTIFIER /;"	d
SCE_LUA_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_LABEL /;"	d
SCE_LUA_LITERALSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_LITERALSTRING /;"	d
SCE_LUA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_NUMBER /;"	d
SCE_LUA_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_OPERATOR /;"	d
SCE_LUA_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_PREPROCESSOR /;"	d
SCE_LUA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_STRING /;"	d
SCE_LUA_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_STRINGEOL /;"	d
SCE_LUA_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD /;"	d
SCE_LUA_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD2 /;"	d
SCE_LUA_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD3 /;"	d
SCE_LUA_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD4 /;"	d
SCE_LUA_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD5 /;"	d
SCE_LUA_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD6 /;"	d
SCE_LUA_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD7 /;"	d
SCE_LUA_WORD8	..\\scintilla\\include\\SciLexer.h	/^#define SCE_LUA_WORD8 /;"	d
SCE_L_CMDOPT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_CMDOPT /;"	d
SCE_L_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_COMMAND /;"	d
SCE_L_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_COMMENT /;"	d
SCE_L_COMMENT2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_COMMENT2 /;"	d
SCE_L_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_DEFAULT /;"	d
SCE_L_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_ERROR /;"	d
SCE_L_MATH	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_MATH /;"	d
SCE_L_MATH2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_MATH2 /;"	d
SCE_L_SHORTCMD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_SHORTCMD /;"	d
SCE_L_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_SPECIAL /;"	d
SCE_L_TAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_TAG /;"	d
SCE_L_TAG2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_TAG2 /;"	d
SCE_L_VERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_L_VERBATIM /;"	d
SCE_MAGIK_BRACE_BLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_BRACE_BLOCK /;"	d
SCE_MAGIK_BRACKET_BLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_BRACKET_BLOCK /;"	d
SCE_MAGIK_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_CHARACTER /;"	d
SCE_MAGIK_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_COMMENT /;"	d
SCE_MAGIK_CONTAINER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_CONTAINER /;"	d
SCE_MAGIK_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_DEFAULT /;"	d
SCE_MAGIK_FLOW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_FLOW /;"	d
SCE_MAGIK_HYPER_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_HYPER_COMMENT /;"	d
SCE_MAGIK_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_IDENTIFIER /;"	d
SCE_MAGIK_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_KEYWORD /;"	d
SCE_MAGIK_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_NUMBER /;"	d
SCE_MAGIK_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_OPERATOR /;"	d
SCE_MAGIK_PRAGMA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_PRAGMA /;"	d
SCE_MAGIK_SQBRACKET_BLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_SQBRACKET_BLOCK /;"	d
SCE_MAGIK_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_STRING /;"	d
SCE_MAGIK_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_SYMBOL /;"	d
SCE_MAGIK_UNKNOWN_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAGIK_UNKNOWN_KEYWORD /;"	d
SCE_MAKE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_COMMENT /;"	d
SCE_MAKE_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_DEFAULT /;"	d
SCE_MAKE_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_DIRECTIVE /;"	d
SCE_MAKE_EXTCMD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_EXTCMD /;"	d
SCE_MAKE_FLAGS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_FLAGS /;"	d
SCE_MAKE_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_FUNCTION /;"	d
SCE_MAKE_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_IDENTIFIER /;"	d
SCE_MAKE_IDEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_IDEOL /;"	d
SCE_MAKE_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_NUMBER /;"	d
SCE_MAKE_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_OPERATOR /;"	d
SCE_MAKE_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_PREPROCESSOR /;"	d
SCE_MAKE_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_STRING /;"	d
SCE_MAKE_TARGET	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_TARGET /;"	d
SCE_MAKE_USER_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAKE_USER_VARIABLE /;"	d
SCE_MARKDOWN_BLOCKQUOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_BLOCKQUOTE /;"	d
SCE_MARKDOWN_CODE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_CODE /;"	d
SCE_MARKDOWN_CODE2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_CODE2 /;"	d
SCE_MARKDOWN_CODEBK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_CODEBK /;"	d
SCE_MARKDOWN_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_DEFAULT /;"	d
SCE_MARKDOWN_EM1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_EM1 /;"	d
SCE_MARKDOWN_EM2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_EM2 /;"	d
SCE_MARKDOWN_HEADER1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HEADER1 /;"	d
SCE_MARKDOWN_HEADER2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HEADER2 /;"	d
SCE_MARKDOWN_HEADER3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HEADER3 /;"	d
SCE_MARKDOWN_HEADER4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HEADER4 /;"	d
SCE_MARKDOWN_HEADER5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HEADER5 /;"	d
SCE_MARKDOWN_HEADER6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HEADER6 /;"	d
SCE_MARKDOWN_HRULE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_HRULE /;"	d
SCE_MARKDOWN_LINE_BEGIN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_LINE_BEGIN /;"	d
SCE_MARKDOWN_LINK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_LINK /;"	d
SCE_MARKDOWN_OLIST_ITEM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_OLIST_ITEM /;"	d
SCE_MARKDOWN_PRECHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_PRECHAR /;"	d
SCE_MARKDOWN_STRIKEOUT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_STRIKEOUT /;"	d
SCE_MARKDOWN_STRONG1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_STRONG1 /;"	d
SCE_MARKDOWN_STRONG2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_STRONG2 /;"	d
SCE_MARKDOWN_ULIST_ITEM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MARKDOWN_ULIST_ITEM /;"	d
SCE_MATLAB_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_COMMAND /;"	d
SCE_MATLAB_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_COMMENT /;"	d
SCE_MATLAB_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_DEFAULT /;"	d
SCE_MATLAB_DOUBLEQUOTESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_DOUBLEQUOTESTRING /;"	d
SCE_MATLAB_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_IDENTIFIER /;"	d
SCE_MATLAB_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_KEYWORD /;"	d
SCE_MATLAB_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_NUMBER /;"	d
SCE_MATLAB_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_OPERATOR /;"	d
SCE_MATLAB_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MATLAB_STRING /;"	d
SCE_MAXIMA_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_COMMAND /;"	d
SCE_MAXIMA_COMMANDENDING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_COMMANDENDING /;"	d
SCE_MAXIMA_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_COMMENT /;"	d
SCE_MAXIMA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_NUMBER /;"	d
SCE_MAXIMA_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_OPERATOR /;"	d
SCE_MAXIMA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_STRING /;"	d
SCE_MAXIMA_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_UNKNOWN /;"	d
SCE_MAXIMA_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MAXIMA_VARIABLE /;"	d
SCE_METAPOST_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_COMMAND /;"	d
SCE_METAPOST_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_DEFAULT /;"	d
SCE_METAPOST_EXTRA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_EXTRA /;"	d
SCE_METAPOST_GROUP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_GROUP /;"	d
SCE_METAPOST_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_SPECIAL /;"	d
SCE_METAPOST_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_SYMBOL /;"	d
SCE_METAPOST_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_METAPOST_TEXT /;"	d
SCE_MMIXAL_CHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_CHAR /;"	d
SCE_MMIXAL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_COMMENT /;"	d
SCE_MMIXAL_HEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_HEX /;"	d
SCE_MMIXAL_INCLUDE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_INCLUDE /;"	d
SCE_MMIXAL_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_LABEL /;"	d
SCE_MMIXAL_LEADWS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_LEADWS /;"	d
SCE_MMIXAL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_NUMBER /;"	d
SCE_MMIXAL_OPCODE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPCODE /;"	d
SCE_MMIXAL_OPCODE_POST	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPCODE_POST /;"	d
SCE_MMIXAL_OPCODE_PRE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPCODE_PRE /;"	d
SCE_MMIXAL_OPCODE_UNKNOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPCODE_UNKNOWN /;"	d
SCE_MMIXAL_OPCODE_VALID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPCODE_VALID /;"	d
SCE_MMIXAL_OPERANDS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPERANDS /;"	d
SCE_MMIXAL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_OPERATOR /;"	d
SCE_MMIXAL_REF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_REF /;"	d
SCE_MMIXAL_REGISTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_REGISTER /;"	d
SCE_MMIXAL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_STRING /;"	d
SCE_MMIXAL_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MMIXAL_SYMBOL /;"	d
SCE_MODULA_BADSTR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_BADSTR /;"	d
SCE_MODULA_BASENUM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_BASENUM /;"	d
SCE_MODULA_CHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_CHAR /;"	d
SCE_MODULA_CHARSPEC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_CHARSPEC /;"	d
SCE_MODULA_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_COMMENT /;"	d
SCE_MODULA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_DEFAULT /;"	d
SCE_MODULA_DOXYCOMM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_DOXYCOMM /;"	d
SCE_MODULA_DOXYKEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_DOXYKEY /;"	d
SCE_MODULA_FLOAT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_FLOAT /;"	d
SCE_MODULA_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_KEYWORD /;"	d
SCE_MODULA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_NUMBER /;"	d
SCE_MODULA_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_OPERATOR /;"	d
SCE_MODULA_PRAGMA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_PRAGMA /;"	d
SCE_MODULA_PRGKEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_PRGKEY /;"	d
SCE_MODULA_PROC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_PROC /;"	d
SCE_MODULA_RESERVED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_RESERVED /;"	d
SCE_MODULA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_STRING /;"	d
SCE_MODULA_STRSPEC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MODULA_STRSPEC /;"	d
SCE_MSSQL_COLUMN_NAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_COLUMN_NAME /;"	d
SCE_MSSQL_COLUMN_NAME_2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_COLUMN_NAME_2 /;"	d
SCE_MSSQL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_COMMENT /;"	d
SCE_MSSQL_DATATYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_DATATYPE /;"	d
SCE_MSSQL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_DEFAULT /;"	d
SCE_MSSQL_DEFAULT_PREF_DATATYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_DEFAULT_PREF_DATATYPE /;"	d
SCE_MSSQL_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_FUNCTION /;"	d
SCE_MSSQL_GLOBAL_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_GLOBAL_VARIABLE /;"	d
SCE_MSSQL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_IDENTIFIER /;"	d
SCE_MSSQL_LINE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_LINE_COMMENT /;"	d
SCE_MSSQL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_NUMBER /;"	d
SCE_MSSQL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_OPERATOR /;"	d
SCE_MSSQL_STATEMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_STATEMENT /;"	d
SCE_MSSQL_STORED_PROCEDURE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_STORED_PROCEDURE /;"	d
SCE_MSSQL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_STRING /;"	d
SCE_MSSQL_SYSTABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_SYSTABLE /;"	d
SCE_MSSQL_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MSSQL_VARIABLE /;"	d
SCE_MYSQL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_COMMENT /;"	d
SCE_MYSQL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_COMMENTLINE /;"	d
SCE_MYSQL_DATABASEOBJECT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_DATABASEOBJECT /;"	d
SCE_MYSQL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_DEFAULT /;"	d
SCE_MYSQL_DQSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_DQSTRING /;"	d
SCE_MYSQL_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_FUNCTION /;"	d
SCE_MYSQL_HIDDENCOMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_HIDDENCOMMAND /;"	d
SCE_MYSQL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_IDENTIFIER /;"	d
SCE_MYSQL_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_KEYWORD /;"	d
SCE_MYSQL_KNOWNSYSTEMVARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_KNOWNSYSTEMVARIABLE /;"	d
SCE_MYSQL_MAJORKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_MAJORKEYWORD /;"	d
SCE_MYSQL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_NUMBER /;"	d
SCE_MYSQL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_OPERATOR /;"	d
SCE_MYSQL_PLACEHOLDER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_PLACEHOLDER /;"	d
SCE_MYSQL_PROCEDUREKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_PROCEDUREKEYWORD /;"	d
SCE_MYSQL_QUOTEDIDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_QUOTEDIDENTIFIER /;"	d
SCE_MYSQL_SQSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_SQSTRING /;"	d
SCE_MYSQL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_STRING /;"	d
SCE_MYSQL_SYSTEMVARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_SYSTEMVARIABLE /;"	d
SCE_MYSQL_USER1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_USER1 /;"	d
SCE_MYSQL_USER2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_USER2 /;"	d
SCE_MYSQL_USER3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_USER3 /;"	d
SCE_MYSQL_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_MYSQL_VARIABLE /;"	d
SCE_NIM_BACKTICKS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_BACKTICKS /;"	d
SCE_NIM_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_CHARACTER /;"	d
SCE_NIM_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_COMMENT /;"	d
SCE_NIM_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_COMMENTDOC /;"	d
SCE_NIM_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_COMMENTLINE /;"	d
SCE_NIM_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_COMMENTLINEDOC /;"	d
SCE_NIM_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_DEFAULT /;"	d
SCE_NIM_FUNCNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_FUNCNAME /;"	d
SCE_NIM_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_IDENTIFIER /;"	d
SCE_NIM_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_NUMBER /;"	d
SCE_NIM_NUMERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_NUMERROR /;"	d
SCE_NIM_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_OPERATOR /;"	d
SCE_NIM_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_STRING /;"	d
SCE_NIM_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_STRINGEOL /;"	d
SCE_NIM_TRIPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_TRIPLE /;"	d
SCE_NIM_TRIPLEDOUBLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_TRIPLEDOUBLE /;"	d
SCE_NIM_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NIM_WORD /;"	d
SCE_NNCRONTAB_ASTERISK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_ASTERISK /;"	d
SCE_NNCRONTAB_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_COMMENT /;"	d
SCE_NNCRONTAB_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_DEFAULT /;"	d
SCE_NNCRONTAB_ENVIRONMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_ENVIRONMENT /;"	d
SCE_NNCRONTAB_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_IDENTIFIER /;"	d
SCE_NNCRONTAB_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_KEYWORD /;"	d
SCE_NNCRONTAB_MODIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_MODIFIER /;"	d
SCE_NNCRONTAB_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_NUMBER /;"	d
SCE_NNCRONTAB_SECTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_SECTION /;"	d
SCE_NNCRONTAB_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_STRING /;"	d
SCE_NNCRONTAB_TASK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NNCRONTAB_TASK /;"	d
SCE_NSIS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_COMMENT /;"	d
SCE_NSIS_COMMENTBOX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_COMMENTBOX /;"	d
SCE_NSIS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_DEFAULT /;"	d
SCE_NSIS_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_FUNCTION /;"	d
SCE_NSIS_FUNCTIONDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_FUNCTIONDEF /;"	d
SCE_NSIS_IFDEFINEDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_IFDEFINEDEF /;"	d
SCE_NSIS_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_LABEL /;"	d
SCE_NSIS_MACRODEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_MACRODEF /;"	d
SCE_NSIS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_NUMBER /;"	d
SCE_NSIS_PAGEEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_PAGEEX /;"	d
SCE_NSIS_SECTIONDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_SECTIONDEF /;"	d
SCE_NSIS_SECTIONGROUP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_SECTIONGROUP /;"	d
SCE_NSIS_STRINGDQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_STRINGDQ /;"	d
SCE_NSIS_STRINGLQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_STRINGLQ /;"	d
SCE_NSIS_STRINGRQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_STRINGRQ /;"	d
SCE_NSIS_STRINGVAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_STRINGVAR /;"	d
SCE_NSIS_SUBSECTIONDEF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_SUBSECTIONDEF /;"	d
SCE_NSIS_USERDEFINED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_USERDEFINED /;"	d
SCE_NSIS_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_NSIS_VARIABLE /;"	d
SCE_OPAL_BOOL_CONST	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_BOOL_CONST /;"	d
SCE_OPAL_COMMENT_BLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_COMMENT_BLOCK /;"	d
SCE_OPAL_COMMENT_LINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_COMMENT_LINE /;"	d
SCE_OPAL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_DEFAULT /;"	d
SCE_OPAL_INTEGER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_INTEGER /;"	d
SCE_OPAL_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_KEYWORD /;"	d
SCE_OPAL_PAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_PAR /;"	d
SCE_OPAL_SORT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_SORT /;"	d
SCE_OPAL_SPACE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_SPACE /;"	d
SCE_OPAL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OPAL_STRING /;"	d
SCE_OSCRIPT_BLOCK_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_BLOCK_COMMENT /;"	d
SCE_OSCRIPT_CONSTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_CONSTANT /;"	d
SCE_OSCRIPT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_DEFAULT /;"	d
SCE_OSCRIPT_DOC_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_DOC_COMMENT /;"	d
SCE_OSCRIPT_DOUBLEQUOTE_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_DOUBLEQUOTE_STRING /;"	d
SCE_OSCRIPT_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_FUNCTION /;"	d
SCE_OSCRIPT_GLOBAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_GLOBAL /;"	d
SCE_OSCRIPT_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_IDENTIFIER /;"	d
SCE_OSCRIPT_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_KEYWORD /;"	d
SCE_OSCRIPT_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_LABEL /;"	d
SCE_OSCRIPT_LINE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_LINE_COMMENT /;"	d
SCE_OSCRIPT_METHOD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_METHOD /;"	d
SCE_OSCRIPT_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_NUMBER /;"	d
SCE_OSCRIPT_OBJECT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_OBJECT /;"	d
SCE_OSCRIPT_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_OPERATOR /;"	d
SCE_OSCRIPT_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_PREPROCESSOR /;"	d
SCE_OSCRIPT_PROPERTY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_PROPERTY /;"	d
SCE_OSCRIPT_SINGLEQUOTE_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_SINGLEQUOTE_STRING /;"	d
SCE_OSCRIPT_TYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_OSCRIPT_TYPE /;"	d
SCE_PAS_ASM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_ASM /;"	d
SCE_PAS_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_CHARACTER /;"	d
SCE_PAS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_COMMENT /;"	d
SCE_PAS_COMMENT2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_COMMENT2 /;"	d
SCE_PAS_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_COMMENTLINE /;"	d
SCE_PAS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_DEFAULT /;"	d
SCE_PAS_HEXNUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_HEXNUMBER /;"	d
SCE_PAS_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_IDENTIFIER /;"	d
SCE_PAS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_NUMBER /;"	d
SCE_PAS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_OPERATOR /;"	d
SCE_PAS_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_PREPROCESSOR /;"	d
SCE_PAS_PREPROCESSOR2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_PREPROCESSOR2 /;"	d
SCE_PAS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_STRING /;"	d
SCE_PAS_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_STRINGEOL /;"	d
SCE_PAS_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PAS_WORD /;"	d
SCE_PLM_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_COMMENT /;"	d
SCE_PLM_CONTROL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_CONTROL /;"	d
SCE_PLM_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_DEFAULT /;"	d
SCE_PLM_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_IDENTIFIER /;"	d
SCE_PLM_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_KEYWORD /;"	d
SCE_PLM_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_NUMBER /;"	d
SCE_PLM_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_OPERATOR /;"	d
SCE_PLM_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PLM_STRING /;"	d
SCE_PL_ARRAY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_ARRAY /;"	d
SCE_PL_BACKTICKS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_BACKTICKS /;"	d
SCE_PL_BACKTICKS_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_BACKTICKS_VAR /;"	d
SCE_PL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_CHARACTER /;"	d
SCE_PL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_COMMENTLINE /;"	d
SCE_PL_DATASECTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_DATASECTION /;"	d
SCE_PL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_DEFAULT /;"	d
SCE_PL_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_ERROR /;"	d
SCE_PL_FORMAT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_FORMAT /;"	d
SCE_PL_FORMAT_IDENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_FORMAT_IDENT /;"	d
SCE_PL_HASH	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HASH /;"	d
SCE_PL_HERE_DELIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HERE_DELIM /;"	d
SCE_PL_HERE_Q	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HERE_Q /;"	d
SCE_PL_HERE_QQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HERE_QQ /;"	d
SCE_PL_HERE_QQ_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HERE_QQ_VAR /;"	d
SCE_PL_HERE_QX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HERE_QX /;"	d
SCE_PL_HERE_QX_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_HERE_QX_VAR /;"	d
SCE_PL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_IDENTIFIER /;"	d
SCE_PL_LONGQUOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_LONGQUOTE /;"	d
SCE_PL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_NUMBER /;"	d
SCE_PL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_OPERATOR /;"	d
SCE_PL_POD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_POD /;"	d
SCE_PL_POD_VERB	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_POD_VERB /;"	d
SCE_PL_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_PREPROCESSOR /;"	d
SCE_PL_PUNCTUATION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_PUNCTUATION /;"	d
SCE_PL_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_REGEX /;"	d
SCE_PL_REGEX_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_REGEX_VAR /;"	d
SCE_PL_REGSUBST	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_REGSUBST /;"	d
SCE_PL_REGSUBST_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_REGSUBST_VAR /;"	d
SCE_PL_SCALAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_SCALAR /;"	d
SCE_PL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING /;"	d
SCE_PL_STRING_Q	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_Q /;"	d
SCE_PL_STRING_QQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QQ /;"	d
SCE_PL_STRING_QQ_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QQ_VAR /;"	d
SCE_PL_STRING_QR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QR /;"	d
SCE_PL_STRING_QR_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QR_VAR /;"	d
SCE_PL_STRING_QW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QW /;"	d
SCE_PL_STRING_QX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QX /;"	d
SCE_PL_STRING_QX_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_QX_VAR /;"	d
SCE_PL_STRING_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_STRING_VAR /;"	d
SCE_PL_SUB_PROTOTYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_SUB_PROTOTYPE /;"	d
SCE_PL_SYMBOLTABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_SYMBOLTABLE /;"	d
SCE_PL_VARIABLE_INDEXER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_VARIABLE_INDEXER /;"	d
SCE_PL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_WORD /;"	d
SCE_PL_XLAT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PL_XLAT /;"	d
SCE_POV_BADDIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_BADDIRECTIVE /;"	d
SCE_POV_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_COMMENT /;"	d
SCE_POV_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_COMMENTLINE /;"	d
SCE_POV_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_DEFAULT /;"	d
SCE_POV_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_DIRECTIVE /;"	d
SCE_POV_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_IDENTIFIER /;"	d
SCE_POV_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_NUMBER /;"	d
SCE_POV_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_OPERATOR /;"	d
SCE_POV_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_STRING /;"	d
SCE_POV_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_STRINGEOL /;"	d
SCE_POV_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD2 /;"	d
SCE_POV_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD3 /;"	d
SCE_POV_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD4 /;"	d
SCE_POV_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD5 /;"	d
SCE_POV_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD6 /;"	d
SCE_POV_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD7 /;"	d
SCE_POV_WORD8	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POV_WORD8 /;"	d
SCE_POWERPRO_ALTQUOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_ALTQUOTE /;"	d
SCE_POWERPRO_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_COMMENTBLOCK /;"	d
SCE_POWERPRO_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_COMMENTLINE /;"	d
SCE_POWERPRO_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_DEFAULT /;"	d
SCE_POWERPRO_DOUBLEQUOTEDSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_DOUBLEQUOTEDSTRING /;"	d
SCE_POWERPRO_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_FUNCTION /;"	d
SCE_POWERPRO_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_IDENTIFIER /;"	d
SCE_POWERPRO_LINECONTINUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_LINECONTINUE /;"	d
SCE_POWERPRO_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_NUMBER /;"	d
SCE_POWERPRO_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_OPERATOR /;"	d
SCE_POWERPRO_SINGLEQUOTEDSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_SINGLEQUOTEDSTRING /;"	d
SCE_POWERPRO_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_STRINGEOL /;"	d
SCE_POWERPRO_VERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_VERBATIM /;"	d
SCE_POWERPRO_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_WORD /;"	d
SCE_POWERPRO_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_WORD2 /;"	d
SCE_POWERPRO_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_WORD3 /;"	d
SCE_POWERPRO_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERPRO_WORD4 /;"	d
SCE_POWERSHELL_ALIAS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_ALIAS /;"	d
SCE_POWERSHELL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_CHARACTER /;"	d
SCE_POWERSHELL_CMDLET	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_CMDLET /;"	d
SCE_POWERSHELL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_COMMENT /;"	d
SCE_POWERSHELL_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_COMMENTDOCKEYWORD /;"	d
SCE_POWERSHELL_COMMENTSTREAM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_COMMENTSTREAM /;"	d
SCE_POWERSHELL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_DEFAULT /;"	d
SCE_POWERSHELL_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_FUNCTION /;"	d
SCE_POWERSHELL_HERE_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_HERE_CHARACTER /;"	d
SCE_POWERSHELL_HERE_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_HERE_STRING /;"	d
SCE_POWERSHELL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_IDENTIFIER /;"	d
SCE_POWERSHELL_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_KEYWORD /;"	d
SCE_POWERSHELL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_NUMBER /;"	d
SCE_POWERSHELL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_OPERATOR /;"	d
SCE_POWERSHELL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_STRING /;"	d
SCE_POWERSHELL_USER1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_USER1 /;"	d
SCE_POWERSHELL_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_POWERSHELL_VARIABLE /;"	d
SCE_PO_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_COMMENT /;"	d
SCE_PO_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_DEFAULT /;"	d
SCE_PO_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_ERROR /;"	d
SCE_PO_FLAGS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_FLAGS /;"	d
SCE_PO_FUZZY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_FUZZY /;"	d
SCE_PO_MSGCTXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGCTXT /;"	d
SCE_PO_MSGCTXT_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGCTXT_TEXT /;"	d
SCE_PO_MSGCTXT_TEXT_EOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGCTXT_TEXT_EOL /;"	d
SCE_PO_MSGID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGID /;"	d
SCE_PO_MSGID_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGID_TEXT /;"	d
SCE_PO_MSGID_TEXT_EOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGID_TEXT_EOL /;"	d
SCE_PO_MSGSTR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGSTR /;"	d
SCE_PO_MSGSTR_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGSTR_TEXT /;"	d
SCE_PO_MSGSTR_TEXT_EOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_MSGSTR_TEXT_EOL /;"	d
SCE_PO_PROGRAMMER_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_PROGRAMMER_COMMENT /;"	d
SCE_PO_REFERENCE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PO_REFERENCE /;"	d
SCE_PROPS_ASSIGNMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PROPS_ASSIGNMENT /;"	d
SCE_PROPS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PROPS_COMMENT /;"	d
SCE_PROPS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PROPS_DEFAULT /;"	d
SCE_PROPS_DEFVAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PROPS_DEFVAL /;"	d
SCE_PROPS_KEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PROPS_KEY /;"	d
SCE_PROPS_SECTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PROPS_SECTION /;"	d
SCE_PS_BADSTRINGCHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_BADSTRINGCHAR /;"	d
SCE_PS_BASE85STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_BASE85STRING /;"	d
SCE_PS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_COMMENT /;"	d
SCE_PS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_DEFAULT /;"	d
SCE_PS_DSC_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_DSC_COMMENT /;"	d
SCE_PS_DSC_VALUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_DSC_VALUE /;"	d
SCE_PS_HEXSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_HEXSTRING /;"	d
SCE_PS_IMMEVAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_IMMEVAL /;"	d
SCE_PS_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_KEYWORD /;"	d
SCE_PS_LITERAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_LITERAL /;"	d
SCE_PS_NAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_NAME /;"	d
SCE_PS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_NUMBER /;"	d
SCE_PS_PAREN_ARRAY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_PAREN_ARRAY /;"	d
SCE_PS_PAREN_DICT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_PAREN_DICT /;"	d
SCE_PS_PAREN_PROC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_PAREN_PROC /;"	d
SCE_PS_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_PS_TEXT /;"	d
SCE_P_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_CHARACTER /;"	d
SCE_P_CLASSNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_CLASSNAME /;"	d
SCE_P_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_COMMENTBLOCK /;"	d
SCE_P_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_COMMENTLINE /;"	d
SCE_P_DECORATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_DECORATOR /;"	d
SCE_P_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_DEFAULT /;"	d
SCE_P_DEFNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_DEFNAME /;"	d
SCE_P_FCHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_FCHARACTER /;"	d
SCE_P_FSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_FSTRING /;"	d
SCE_P_FTRIPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_FTRIPLE /;"	d
SCE_P_FTRIPLEDOUBLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_FTRIPLEDOUBLE /;"	d
SCE_P_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_IDENTIFIER /;"	d
SCE_P_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_NUMBER /;"	d
SCE_P_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_OPERATOR /;"	d
SCE_P_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_STRING /;"	d
SCE_P_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_STRINGEOL /;"	d
SCE_P_TRIPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_TRIPLE /;"	d
SCE_P_TRIPLEDOUBLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_TRIPLEDOUBLE /;"	d
SCE_P_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_WORD /;"	d
SCE_P_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_P_WORD2 /;"	d
SCE_RB_BACKTICKS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_BACKTICKS /;"	d
SCE_RB_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_CHARACTER /;"	d
SCE_RB_CLASSNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_CLASSNAME /;"	d
SCE_RB_CLASS_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_CLASS_VAR /;"	d
SCE_RB_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_COMMENTLINE /;"	d
SCE_RB_DATASECTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_DATASECTION /;"	d
SCE_RB_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_DEFAULT /;"	d
SCE_RB_DEFNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_DEFNAME /;"	d
SCE_RB_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_ERROR /;"	d
SCE_RB_GLOBAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_GLOBAL /;"	d
SCE_RB_HERE_DELIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_HERE_DELIM /;"	d
SCE_RB_HERE_Q	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_HERE_Q /;"	d
SCE_RB_HERE_QQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_HERE_QQ /;"	d
SCE_RB_HERE_QX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_HERE_QX /;"	d
SCE_RB_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_IDENTIFIER /;"	d
SCE_RB_INSTANCE_VAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_INSTANCE_VAR /;"	d
SCE_RB_MODULE_NAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_MODULE_NAME /;"	d
SCE_RB_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_NUMBER /;"	d
SCE_RB_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_OPERATOR /;"	d
SCE_RB_POD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_POD /;"	d
SCE_RB_REGEX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_REGEX /;"	d
SCE_RB_STDERR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STDERR /;"	d
SCE_RB_STDIN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STDIN /;"	d
SCE_RB_STDOUT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STDOUT /;"	d
SCE_RB_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STRING /;"	d
SCE_RB_STRING_Q	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STRING_Q /;"	d
SCE_RB_STRING_QQ	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STRING_QQ /;"	d
SCE_RB_STRING_QR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STRING_QR /;"	d
SCE_RB_STRING_QW	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STRING_QW /;"	d
SCE_RB_STRING_QX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_STRING_QX /;"	d
SCE_RB_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_SYMBOL /;"	d
SCE_RB_UPPER_BOUND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_UPPER_BOUND /;"	d
SCE_RB_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_WORD /;"	d
SCE_RB_WORD_DEMOTED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RB_WORD_DEMOTED /;"	d
SCE_REBOL_BINARY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_BINARY /;"	d
SCE_REBOL_BRACEDSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_BRACEDSTRING /;"	d
SCE_REBOL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_CHARACTER /;"	d
SCE_REBOL_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_COMMENTBLOCK /;"	d
SCE_REBOL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_COMMENTLINE /;"	d
SCE_REBOL_DATE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_DATE /;"	d
SCE_REBOL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_DEFAULT /;"	d
SCE_REBOL_EMAIL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_EMAIL /;"	d
SCE_REBOL_FILE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_FILE /;"	d
SCE_REBOL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_IDENTIFIER /;"	d
SCE_REBOL_ISSUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_ISSUE /;"	d
SCE_REBOL_MONEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_MONEY /;"	d
SCE_REBOL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_NUMBER /;"	d
SCE_REBOL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_OPERATOR /;"	d
SCE_REBOL_PAIR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_PAIR /;"	d
SCE_REBOL_PREFACE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_PREFACE /;"	d
SCE_REBOL_QUOTEDSTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_QUOTEDSTRING /;"	d
SCE_REBOL_TAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_TAG /;"	d
SCE_REBOL_TIME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_TIME /;"	d
SCE_REBOL_TUPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_TUPLE /;"	d
SCE_REBOL_URL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_URL /;"	d
SCE_REBOL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD /;"	d
SCE_REBOL_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD2 /;"	d
SCE_REBOL_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD3 /;"	d
SCE_REBOL_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD4 /;"	d
SCE_REBOL_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD5 /;"	d
SCE_REBOL_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD6 /;"	d
SCE_REBOL_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD7 /;"	d
SCE_REBOL_WORD8	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REBOL_WORD8 /;"	d
SCE_REG_ADDEDKEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_ADDEDKEY /;"	d
SCE_REG_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_COMMENT /;"	d
SCE_REG_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_DEFAULT /;"	d
SCE_REG_DELETEDKEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_DELETEDKEY /;"	d
SCE_REG_ESCAPED	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_ESCAPED /;"	d
SCE_REG_HEXDIGIT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_HEXDIGIT /;"	d
SCE_REG_KEYPATH_GUID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_KEYPATH_GUID /;"	d
SCE_REG_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_OPERATOR /;"	d
SCE_REG_PARAMETER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_PARAMETER /;"	d
SCE_REG_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_STRING /;"	d
SCE_REG_STRING_GUID	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_STRING_GUID /;"	d
SCE_REG_VALUENAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_VALUENAME /;"	d
SCE_REG_VALUETYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_REG_VALUETYPE /;"	d
SCE_RUST_BYTECHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_BYTECHARACTER /;"	d
SCE_RUST_BYTESTRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_BYTESTRING /;"	d
SCE_RUST_BYTESTRINGR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_BYTESTRINGR /;"	d
SCE_RUST_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_CHARACTER /;"	d
SCE_RUST_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_COMMENTBLOCK /;"	d
SCE_RUST_COMMENTBLOCKDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_COMMENTBLOCKDOC /;"	d
SCE_RUST_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_COMMENTLINE /;"	d
SCE_RUST_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_COMMENTLINEDOC /;"	d
SCE_RUST_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_DEFAULT /;"	d
SCE_RUST_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_IDENTIFIER /;"	d
SCE_RUST_LEXERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_LEXERROR /;"	d
SCE_RUST_LIFETIME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_LIFETIME /;"	d
SCE_RUST_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_MACRO /;"	d
SCE_RUST_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_NUMBER /;"	d
SCE_RUST_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_OPERATOR /;"	d
SCE_RUST_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_STRING /;"	d
SCE_RUST_STRINGR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_STRINGR /;"	d
SCE_RUST_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD /;"	d
SCE_RUST_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD2 /;"	d
SCE_RUST_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD3 /;"	d
SCE_RUST_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD4 /;"	d
SCE_RUST_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD5 /;"	d
SCE_RUST_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD6 /;"	d
SCE_RUST_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_RUST_WORD7 /;"	d
SCE_R_BASEKWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_BASEKWORD /;"	d
SCE_R_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_COMMENT /;"	d
SCE_R_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_DEFAULT /;"	d
SCE_R_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_IDENTIFIER /;"	d
SCE_R_INFIX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_INFIX /;"	d
SCE_R_INFIXEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_INFIXEOL /;"	d
SCE_R_KWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_KWORD /;"	d
SCE_R_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_NUMBER /;"	d
SCE_R_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_OPERATOR /;"	d
SCE_R_OTHERKWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_OTHERKWORD /;"	d
SCE_R_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_STRING /;"	d
SCE_R_STRING2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_R_STRING2 /;"	d
SCE_SAS_BLOCK_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_BLOCK_KEYWORD /;"	d
SCE_SAS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_COMMENT /;"	d
SCE_SAS_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_COMMENTBLOCK /;"	d
SCE_SAS_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_COMMENTLINE /;"	d
SCE_SAS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_DEFAULT /;"	d
SCE_SAS_GLOBAL_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_GLOBAL_MACRO /;"	d
SCE_SAS_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_IDENTIFIER /;"	d
SCE_SAS_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_MACRO /;"	d
SCE_SAS_MACRO_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_MACRO_FUNCTION /;"	d
SCE_SAS_MACRO_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_MACRO_KEYWORD /;"	d
SCE_SAS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_NUMBER /;"	d
SCE_SAS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_OPERATOR /;"	d
SCE_SAS_STATEMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_STATEMENT /;"	d
SCE_SAS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_STRING /;"	d
SCE_SAS_TYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_TYPE /;"	d
SCE_SAS_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SAS_WORD /;"	d
SCE_SCRIPTOL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_CHARACTER /;"	d
SCE_SCRIPTOL_CLASSNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_CLASSNAME /;"	d
SCE_SCRIPTOL_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_COMMENTBLOCK /;"	d
SCE_SCRIPTOL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_COMMENTLINE /;"	d
SCE_SCRIPTOL_CSTYLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_CSTYLE /;"	d
SCE_SCRIPTOL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_DEFAULT /;"	d
SCE_SCRIPTOL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_IDENTIFIER /;"	d
SCE_SCRIPTOL_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_KEYWORD /;"	d
SCE_SCRIPTOL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_NUMBER /;"	d
SCE_SCRIPTOL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_OPERATOR /;"	d
SCE_SCRIPTOL_PERSISTENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_PERSISTENT /;"	d
SCE_SCRIPTOL_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_PREPROCESSOR /;"	d
SCE_SCRIPTOL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_STRING /;"	d
SCE_SCRIPTOL_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_STRINGEOL /;"	d
SCE_SCRIPTOL_TRIPLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_TRIPLE /;"	d
SCE_SCRIPTOL_WHITE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SCRIPTOL_WHITE /;"	d
SCE_SH_BACKTICKS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_BACKTICKS /;"	d
SCE_SH_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_CHARACTER /;"	d
SCE_SH_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_COMMENTLINE /;"	d
SCE_SH_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_DEFAULT /;"	d
SCE_SH_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_ERROR /;"	d
SCE_SH_HERE_DELIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_HERE_DELIM /;"	d
SCE_SH_HERE_Q	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_HERE_Q /;"	d
SCE_SH_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_IDENTIFIER /;"	d
SCE_SH_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_NUMBER /;"	d
SCE_SH_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_OPERATOR /;"	d
SCE_SH_PARAM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_PARAM /;"	d
SCE_SH_SCALAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_SCALAR /;"	d
SCE_SH_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_STRING /;"	d
SCE_SH_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SH_WORD /;"	d
SCE_SML_CHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_CHAR /;"	d
SCE_SML_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_COMMENT /;"	d
SCE_SML_COMMENT1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_COMMENT1 /;"	d
SCE_SML_COMMENT2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_COMMENT2 /;"	d
SCE_SML_COMMENT3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_COMMENT3 /;"	d
SCE_SML_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_DEFAULT /;"	d
SCE_SML_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_IDENTIFIER /;"	d
SCE_SML_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_KEYWORD /;"	d
SCE_SML_KEYWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_KEYWORD2 /;"	d
SCE_SML_KEYWORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_KEYWORD3 /;"	d
SCE_SML_LINENUM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_LINENUM /;"	d
SCE_SML_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_NUMBER /;"	d
SCE_SML_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_OPERATOR /;"	d
SCE_SML_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_STRING /;"	d
SCE_SML_TAGNAME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SML_TAGNAME /;"	d
SCE_SN_CODE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_CODE /;"	d
SCE_SN_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_COMMENTLINE /;"	d
SCE_SN_COMMENTLINEBANG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_COMMENTLINEBANG /;"	d
SCE_SN_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_DEFAULT /;"	d
SCE_SN_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_IDENTIFIER /;"	d
SCE_SN_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_NUMBER /;"	d
SCE_SN_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_OPERATOR /;"	d
SCE_SN_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_PREPROCESSOR /;"	d
SCE_SN_REGEXTAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_REGEXTAG /;"	d
SCE_SN_SIGNAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_SIGNAL /;"	d
SCE_SN_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_STRING /;"	d
SCE_SN_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_STRINGEOL /;"	d
SCE_SN_USER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_USER /;"	d
SCE_SN_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_WORD /;"	d
SCE_SN_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_WORD2 /;"	d
SCE_SN_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SN_WORD3 /;"	d
SCE_SORCUS_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_COMMAND /;"	d
SCE_SORCUS_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_COMMENTLINE /;"	d
SCE_SORCUS_CONSTANT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_CONSTANT /;"	d
SCE_SORCUS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_DEFAULT /;"	d
SCE_SORCUS_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_IDENTIFIER /;"	d
SCE_SORCUS_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_NUMBER /;"	d
SCE_SORCUS_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_OPERATOR /;"	d
SCE_SORCUS_PARAMETER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_PARAMETER /;"	d
SCE_SORCUS_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_STRING /;"	d
SCE_SORCUS_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SORCUS_STRINGEOL /;"	d
SCE_SPICE_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_COMMENTLINE /;"	d
SCE_SPICE_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_DEFAULT /;"	d
SCE_SPICE_DELIMITER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_DELIMITER /;"	d
SCE_SPICE_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_IDENTIFIER /;"	d
SCE_SPICE_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_KEYWORD /;"	d
SCE_SPICE_KEYWORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_KEYWORD2 /;"	d
SCE_SPICE_KEYWORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_KEYWORD3 /;"	d
SCE_SPICE_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_NUMBER /;"	d
SCE_SPICE_VALUE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SPICE_VALUE /;"	d
SCE_SQL_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_CHARACTER /;"	d
SCE_SQL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_COMMENT /;"	d
SCE_SQL_COMMENTDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_COMMENTDOC /;"	d
SCE_SQL_COMMENTDOCKEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_COMMENTDOCKEYWORD /;"	d
SCE_SQL_COMMENTDOCKEYWORDERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_COMMENTDOCKEYWORDERROR /;"	d
SCE_SQL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_COMMENTLINE /;"	d
SCE_SQL_COMMENTLINEDOC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_COMMENTLINEDOC /;"	d
SCE_SQL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_DEFAULT /;"	d
SCE_SQL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_IDENTIFIER /;"	d
SCE_SQL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_NUMBER /;"	d
SCE_SQL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_OPERATOR /;"	d
SCE_SQL_QOPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_QOPERATOR /;"	d
SCE_SQL_QUOTEDIDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_QUOTEDIDENTIFIER /;"	d
SCE_SQL_SQLPLUS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_SQLPLUS /;"	d
SCE_SQL_SQLPLUS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_SQLPLUS_COMMENT /;"	d
SCE_SQL_SQLPLUS_PROMPT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_SQLPLUS_PROMPT /;"	d
SCE_SQL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_STRING /;"	d
SCE_SQL_USER1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_USER1 /;"	d
SCE_SQL_USER2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_USER2 /;"	d
SCE_SQL_USER3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_USER3 /;"	d
SCE_SQL_USER4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_USER4 /;"	d
SCE_SQL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_WORD /;"	d
SCE_SQL_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_SQL_WORD2 /;"	d
SCE_STATA_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_COMMENT /;"	d
SCE_STATA_COMMENTBLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_COMMENTBLOCK /;"	d
SCE_STATA_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_COMMENTLINE /;"	d
SCE_STATA_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_DEFAULT /;"	d
SCE_STATA_GLOBAL_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_GLOBAL_MACRO /;"	d
SCE_STATA_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_IDENTIFIER /;"	d
SCE_STATA_MACRO	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_MACRO /;"	d
SCE_STATA_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_NUMBER /;"	d
SCE_STATA_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_OPERATOR /;"	d
SCE_STATA_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_STRING /;"	d
SCE_STATA_TYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_TYPE /;"	d
SCE_STATA_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STATA_WORD /;"	d
SCE_STTXT_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_CHARACTER /;"	d
SCE_STTXT_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_COMMENT /;"	d
SCE_STTXT_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_COMMENTLINE /;"	d
SCE_STTXT_DATETIME	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_DATETIME /;"	d
SCE_STTXT_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_DEFAULT /;"	d
SCE_STTXT_FB	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_FB /;"	d
SCE_STTXT_FUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_FUNCTION /;"	d
SCE_STTXT_HEXNUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_HEXNUMBER /;"	d
SCE_STTXT_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_IDENTIFIER /;"	d
SCE_STTXT_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_KEYWORD /;"	d
SCE_STTXT_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_NUMBER /;"	d
SCE_STTXT_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_OPERATOR /;"	d
SCE_STTXT_PRAGMA	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_PRAGMA /;"	d
SCE_STTXT_PRAGMAS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_PRAGMAS /;"	d
SCE_STTXT_STRING1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_STRING1 /;"	d
SCE_STTXT_STRING2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_STRING2 /;"	d
SCE_STTXT_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_STRINGEOL /;"	d
SCE_STTXT_TYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_TYPE /;"	d
SCE_STTXT_VARS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_STTXT_VARS /;"	d
SCE_ST_ASSIGN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_ASSIGN /;"	d
SCE_ST_BINARY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_BINARY /;"	d
SCE_ST_BOOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_BOOL /;"	d
SCE_ST_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_CHARACTER /;"	d
SCE_ST_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_COMMENT /;"	d
SCE_ST_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_DEFAULT /;"	d
SCE_ST_GLOBAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_GLOBAL /;"	d
SCE_ST_KWSEND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_KWSEND /;"	d
SCE_ST_NIL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_NIL /;"	d
SCE_ST_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_NUMBER /;"	d
SCE_ST_RETURN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_RETURN /;"	d
SCE_ST_SELF	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_SELF /;"	d
SCE_ST_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_SPECIAL /;"	d
SCE_ST_SPEC_SEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_SPEC_SEL /;"	d
SCE_ST_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_STRING /;"	d
SCE_ST_SUPER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_SUPER /;"	d
SCE_ST_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_ST_SYMBOL /;"	d
SCE_T3_BLOCK_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_BLOCK_COMMENT /;"	d
SCE_T3_BRACE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_BRACE /;"	d
SCE_T3_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_DEFAULT /;"	d
SCE_T3_D_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_D_STRING /;"	d
SCE_T3_HTML_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_HTML_DEFAULT /;"	d
SCE_T3_HTML_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_HTML_STRING /;"	d
SCE_T3_HTML_TAG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_HTML_TAG /;"	d
SCE_T3_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_IDENTIFIER /;"	d
SCE_T3_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_KEYWORD /;"	d
SCE_T3_LIB_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_LIB_DIRECTIVE /;"	d
SCE_T3_LINE_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_LINE_COMMENT /;"	d
SCE_T3_MSG_PARAM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_MSG_PARAM /;"	d
SCE_T3_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_NUMBER /;"	d
SCE_T3_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_OPERATOR /;"	d
SCE_T3_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_PREPROCESSOR /;"	d
SCE_T3_S_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_S_STRING /;"	d
SCE_T3_USER1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_USER1 /;"	d
SCE_T3_USER2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_USER2 /;"	d
SCE_T3_USER3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_USER3 /;"	d
SCE_T3_X_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_X_DEFAULT /;"	d
SCE_T3_X_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_T3_X_STRING /;"	d
SCE_TCL_BLOCK_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_BLOCK_COMMENT /;"	d
SCE_TCL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_COMMENT /;"	d
SCE_TCL_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_COMMENTLINE /;"	d
SCE_TCL_COMMENT_BOX	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_COMMENT_BOX /;"	d
SCE_TCL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_DEFAULT /;"	d
SCE_TCL_EXPAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_EXPAND /;"	d
SCE_TCL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_IDENTIFIER /;"	d
SCE_TCL_IN_QUOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_IN_QUOTE /;"	d
SCE_TCL_MODIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_MODIFIER /;"	d
SCE_TCL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_NUMBER /;"	d
SCE_TCL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_OPERATOR /;"	d
SCE_TCL_SUBSTITUTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_SUBSTITUTION /;"	d
SCE_TCL_SUB_BRACE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_SUB_BRACE /;"	d
SCE_TCL_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD /;"	d
SCE_TCL_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD2 /;"	d
SCE_TCL_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD3 /;"	d
SCE_TCL_WORD4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD4 /;"	d
SCE_TCL_WORD5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD5 /;"	d
SCE_TCL_WORD6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD6 /;"	d
SCE_TCL_WORD7	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD7 /;"	d
SCE_TCL_WORD8	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD8 /;"	d
SCE_TCL_WORD_IN_QUOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCL_WORD_IN_QUOTE /;"	d
SCE_TCMD_CLABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_CLABEL /;"	d
SCE_TCMD_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_COMMAND /;"	d
SCE_TCMD_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_COMMENT /;"	d
SCE_TCMD_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_DEFAULT /;"	d
SCE_TCMD_ENVIRONMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_ENVIRONMENT /;"	d
SCE_TCMD_EXPANSION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_EXPANSION /;"	d
SCE_TCMD_HIDE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_HIDE /;"	d
SCE_TCMD_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_IDENTIFIER /;"	d
SCE_TCMD_LABEL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_LABEL /;"	d
SCE_TCMD_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_OPERATOR /;"	d
SCE_TCMD_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TCMD_WORD /;"	d
SCE_TEX_COMMAND	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TEX_COMMAND /;"	d
SCE_TEX_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TEX_DEFAULT /;"	d
SCE_TEX_GROUP	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TEX_GROUP /;"	d
SCE_TEX_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TEX_SPECIAL /;"	d
SCE_TEX_SYMBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TEX_SYMBOL /;"	d
SCE_TEX_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TEX_TEXT /;"	d
SCE_TXT2TAGS_BLOCKQUOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_BLOCKQUOTE /;"	d
SCE_TXT2TAGS_CODE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_CODE /;"	d
SCE_TXT2TAGS_CODE2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_CODE2 /;"	d
SCE_TXT2TAGS_CODEBK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_CODEBK /;"	d
SCE_TXT2TAGS_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_COMMENT /;"	d
SCE_TXT2TAGS_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_DEFAULT /;"	d
SCE_TXT2TAGS_EM1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_EM1 /;"	d
SCE_TXT2TAGS_EM2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_EM2 /;"	d
SCE_TXT2TAGS_HEADER1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HEADER1 /;"	d
SCE_TXT2TAGS_HEADER2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HEADER2 /;"	d
SCE_TXT2TAGS_HEADER3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HEADER3 /;"	d
SCE_TXT2TAGS_HEADER4	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HEADER4 /;"	d
SCE_TXT2TAGS_HEADER5	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HEADER5 /;"	d
SCE_TXT2TAGS_HEADER6	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HEADER6 /;"	d
SCE_TXT2TAGS_HRULE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_HRULE /;"	d
SCE_TXT2TAGS_LINE_BEGIN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_LINE_BEGIN /;"	d
SCE_TXT2TAGS_LINK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_LINK /;"	d
SCE_TXT2TAGS_OLIST_ITEM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_OLIST_ITEM /;"	d
SCE_TXT2TAGS_OPTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_OPTION /;"	d
SCE_TXT2TAGS_POSTPROC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_POSTPROC /;"	d
SCE_TXT2TAGS_PRECHAR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_PRECHAR /;"	d
SCE_TXT2TAGS_PREPROC	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_PREPROC /;"	d
SCE_TXT2TAGS_STRIKEOUT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_STRIKEOUT /;"	d
SCE_TXT2TAGS_STRONG1	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_STRONG1 /;"	d
SCE_TXT2TAGS_STRONG2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_STRONG2 /;"	d
SCE_TXT2TAGS_ULIST_ITEM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_TXT2TAGS_ULIST_ITEM /;"	d
SCE_VHDL_ATTRIBUTE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_ATTRIBUTE /;"	d
SCE_VHDL_BLOCK_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_BLOCK_COMMENT /;"	d
SCE_VHDL_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_COMMENT /;"	d
SCE_VHDL_COMMENTLINEBANG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_COMMENTLINEBANG /;"	d
SCE_VHDL_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_DEFAULT /;"	d
SCE_VHDL_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_IDENTIFIER /;"	d
SCE_VHDL_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_KEYWORD /;"	d
SCE_VHDL_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_NUMBER /;"	d
SCE_VHDL_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_OPERATOR /;"	d
SCE_VHDL_STDFUNCTION	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_STDFUNCTION /;"	d
SCE_VHDL_STDOPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_STDOPERATOR /;"	d
SCE_VHDL_STDPACKAGE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_STDPACKAGE /;"	d
SCE_VHDL_STDTYPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_STDTYPE /;"	d
SCE_VHDL_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_STRING /;"	d
SCE_VHDL_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_STRINGEOL /;"	d
SCE_VHDL_USERWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VHDL_USERWORD /;"	d
SCE_VISUALPROLOG_ANONYMOUS	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_ANONYMOUS /;"	d
SCE_VISUALPROLOG_CHARACTER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_CHARACTER /;"	d
SCE_VISUALPROLOG_CHARACTER_ESCAPE_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_CHARACTER_ESCAPE_ERROR /;"	d
SCE_VISUALPROLOG_CHARACTER_TOO_MANY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_CHARACTER_TOO_MANY /;"	d
SCE_VISUALPROLOG_COMMENT_BLOCK	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_COMMENT_BLOCK /;"	d
SCE_VISUALPROLOG_COMMENT_KEY	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_COMMENT_KEY /;"	d
SCE_VISUALPROLOG_COMMENT_KEY_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_COMMENT_KEY_ERROR /;"	d
SCE_VISUALPROLOG_COMMENT_LINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_COMMENT_LINE /;"	d
SCE_VISUALPROLOG_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_DEFAULT /;"	d
SCE_VISUALPROLOG_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_IDENTIFIER /;"	d
SCE_VISUALPROLOG_KEY_DIRECTIVE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_KEY_DIRECTIVE /;"	d
SCE_VISUALPROLOG_KEY_MAJOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_KEY_MAJOR /;"	d
SCE_VISUALPROLOG_KEY_MINOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_KEY_MINOR /;"	d
SCE_VISUALPROLOG_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_NUMBER /;"	d
SCE_VISUALPROLOG_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_OPERATOR /;"	d
SCE_VISUALPROLOG_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING /;"	d
SCE_VISUALPROLOG_STRING_EOL_OPEN	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING_EOL_OPEN /;"	d
SCE_VISUALPROLOG_STRING_ESCAPE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING_ESCAPE /;"	d
SCE_VISUALPROLOG_STRING_ESCAPE_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING_ESCAPE_ERROR /;"	d
SCE_VISUALPROLOG_STRING_VERBATIM	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING_VERBATIM /;"	d
SCE_VISUALPROLOG_STRING_VERBATIM_EOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING_VERBATIM_EOL /;"	d
SCE_VISUALPROLOG_STRING_VERBATIM_SPECIAL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_STRING_VERBATIM_SPECIAL /;"	d
SCE_VISUALPROLOG_VARIABLE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_VISUALPROLOG_VARIABLE /;"	d
SCE_V_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_COMMENT /;"	d
SCE_V_COMMENTLINE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_COMMENTLINE /;"	d
SCE_V_COMMENTLINEBANG	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_COMMENTLINEBANG /;"	d
SCE_V_COMMENT_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_COMMENT_WORD /;"	d
SCE_V_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_DEFAULT /;"	d
SCE_V_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_IDENTIFIER /;"	d
SCE_V_INOUT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_INOUT /;"	d
SCE_V_INPUT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_INPUT /;"	d
SCE_V_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_NUMBER /;"	d
SCE_V_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_OPERATOR /;"	d
SCE_V_OUTPUT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_OUTPUT /;"	d
SCE_V_PORT_CONNECT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_PORT_CONNECT /;"	d
SCE_V_PREPROCESSOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_PREPROCESSOR /;"	d
SCE_V_STRING	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_STRING /;"	d
SCE_V_STRINGEOL	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_STRINGEOL /;"	d
SCE_V_USER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_USER /;"	d
SCE_V_WORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_WORD /;"	d
SCE_V_WORD2	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_WORD2 /;"	d
SCE_V_WORD3	..\\scintilla\\include\\SciLexer.h	/^#define SCE_V_WORD3 /;"	d
SCE_YAML_COMMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_COMMENT /;"	d
SCE_YAML_DEFAULT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_DEFAULT /;"	d
SCE_YAML_DOCUMENT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_DOCUMENT /;"	d
SCE_YAML_ERROR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_ERROR /;"	d
SCE_YAML_IDENTIFIER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_IDENTIFIER /;"	d
SCE_YAML_KEYWORD	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_KEYWORD /;"	d
SCE_YAML_NUMBER	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_NUMBER /;"	d
SCE_YAML_OPERATOR	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_OPERATOR /;"	d
SCE_YAML_REFERENCE	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_REFERENCE /;"	d
SCE_YAML_TEXT	..\\scintilla\\include\\SciLexer.h	/^#define SCE_YAML_TEXT /;"	d
SCFIND_CXX11REGEX	..\\scintilla\\include\\Scintilla.h	/^#define SCFIND_CXX11REGEX /;"	d
SCFIND_MATCHCASE	..\\scintilla\\include\\Scintilla.h	/^#define SCFIND_MATCHCASE /;"	d
SCFIND_POSIX	..\\scintilla\\include\\Scintilla.h	/^#define SCFIND_POSIX /;"	d
SCFIND_REGEXP	..\\scintilla\\include\\Scintilla.h	/^#define SCFIND_REGEXP /;"	d
SCFIND_WHOLEWORD	..\\scintilla\\include\\Scintilla.h	/^#define SCFIND_WHOLEWORD /;"	d
SCFIND_WORDSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCFIND_WORDSTART /;"	d
SCILEXER_H	..\\scintilla\\include\\SciLexer.h	/^#define SCILEXER_H$/;"	d
SCINTILLA	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA(/;"	d	signature:(obj)
SCINTILLABASE_H	..\\scintilla\\src\\ScintillaBase.h	/^#define SCINTILLABASE_H$/;"	d
SCINTILLACURSES_H	..\\scintilla\\curses\\ScintillaCurses.h	/^#define SCINTILLACURSES_H$/;"	d
SCINTILLADOCUMENT_H	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.h	/^#define SCINTILLADOCUMENT_H$/;"	d
SCINTILLAEDITBASE_H	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^#define SCINTILLAEDITBASE_H$/;"	d
SCINTILLAGTKACCESSIBLE_H	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^#define SCINTILLAGTKACCESSIBLE_H$/;"	d
SCINTILLAGTK_H	..\\scintilla\\gtk\\ScintillaGTK.h	/^#define SCINTILLAGTK_H$/;"	d
SCINTILLAQT_H	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^#define SCINTILLAQT_H$/;"	d
SCINTILLAWIDGET_H	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLAWIDGET_H$/;"	d
SCINTILLA_CLASS	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_CLASS(/;"	d	signature:(klass)
SCINTILLA_H	..\\scintilla\\include\\Scintilla.h	/^#define SCINTILLA_H$/;"	d
SCINTILLA_IS_OBJECT	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_IS_OBJECT(/;"	d	signature:(obj)
SCINTILLA_IS_OBJECT_CLASS	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_IS_OBJECT_CLASS(/;"	d	signature:(klass)
SCINTILLA_NOTIFY	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_NOTIFY /;"	d
SCINTILLA_OBJECT	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_OBJECT(/;"	d	signature:(obj)
SCINTILLA_OBJECT_ACCESSIBLE	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define SCINTILLA_OBJECT_ACCESSIBLE(/;"	d	file:	signature:(obj)
SCINTILLA_OBJECT_ACCESSIBLE_GET_PRIVATE	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define SCINTILLA_OBJECT_ACCESSIBLE_GET_PRIVATE(/;"	d	file:	signature:(inst)
SCINTILLA_OBJECT_CLASS	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_OBJECT_CLASS(/;"	d	signature:(klass)
SCINTILLA_OBJECT_GET_CLASS	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_OBJECT_GET_CLASS(/;"	d	signature:(obj)
SCINTILLA_TYPE_NOTIFICATION	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_TYPE_NOTIFICATION /;"	d
SCINTILLA_TYPE_OBJECT	..\\scintilla\\include\\ScintillaWidget.h	/^#define SCINTILLA_TYPE_OBJECT /;"	d
SCINTILLA_TYPE_OBJECT_ACCESSIBLE	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define SCINTILLA_TYPE_OBJECT_ACCESSIBLE /;"	d	file:
SCITEKEYS_H	..\\scite\\src\\SciTEKeys.h	/^#define SCITEKEYS_H$/;"	d
SCITE_DROP	..\\scite\\win32\\SciTEWin.h	/^const int SCITE_DROP = WM_APP + 1;$/;"	v	typeref:typename:const int
SCITE_H	..\\scite\\src\\SciTE.h	/^#define SCITE_H$/;"	d
SCITE_SHOWOUTPUT	..\\scite\\win32\\SciTEWin.h	/^const int SCITE_SHOWOUTPUT = WM_APP + 3;$/;"	v	typeref:typename:const int
SCITE_STOCK_CANCEL	..\\scite\\gtk\\SciTEGTK.cxx	/^#define SCITE_STOCK_CANCEL /;"	d	file:
SCITE_STOCK_OK	..\\scite\\gtk\\SciTEGTK.cxx	/^#define SCITE_STOCK_OK /;"	d	file:
SCITE_STOCK_OPEN	..\\scite\\gtk\\SciTEGTK.cxx	/^#define SCITE_STOCK_OPEN /;"	d	file:
SCITE_STOCK_SAVE	..\\scite\\gtk\\SciTEGTK.cxx	/^#define SCITE_STOCK_SAVE /;"	d	file:
SCITE_TRAY	..\\scite\\win32\\SciTEWin.h	/^const int SCITE_TRAY = WM_APP + 0;$/;"	v	typeref:typename:const int
SCITE_WORKER	..\\scite\\win32\\SciTEWin.h	/^const int SCITE_WORKER = WM_APP + 2;$/;"	v	typeref:typename:const int
SCI_ADDREFDOCUMENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ADDREFDOCUMENT /;"	d
SCI_ADDSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ADDSELECTION /;"	d
SCI_ADDSTYLEDTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ADDSTYLEDTEXT /;"	d
SCI_ADDTABSTOP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ADDTABSTOP /;"	d
SCI_ADDTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ADDTEXT /;"	d
SCI_ADDUNDOACTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ADDUNDOACTION /;"	d
SCI_ALLOCATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ALLOCATE /;"	d
SCI_ALLOCATEEXTENDEDSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ALLOCATEEXTENDEDSTYLES /;"	d
SCI_ALLOCATESUBSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ALLOCATESUBSTYLES /;"	d
SCI_ALT	..\\scintilla\\src\\KeyMap.h	/^#define SCI_ALT /;"	d
SCI_ANNOTATIONCLEARALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONCLEARALL /;"	d
SCI_ANNOTATIONGETLINES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONGETLINES /;"	d
SCI_ANNOTATIONGETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONGETSTYLE /;"	d
SCI_ANNOTATIONGETSTYLEOFFSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONGETSTYLEOFFSET /;"	d
SCI_ANNOTATIONGETSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONGETSTYLES /;"	d
SCI_ANNOTATIONGETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONGETTEXT /;"	d
SCI_ANNOTATIONGETVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONGETVISIBLE /;"	d
SCI_ANNOTATIONSETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONSETSTYLE /;"	d
SCI_ANNOTATIONSETSTYLEOFFSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONSETSTYLEOFFSET /;"	d
SCI_ANNOTATIONSETSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONSETSTYLES /;"	d
SCI_ANNOTATIONSETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONSETTEXT /;"	d
SCI_ANNOTATIONSETVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ANNOTATIONSETVISIBLE /;"	d
SCI_APPENDTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_APPENDTEXT /;"	d
SCI_ASHIFT	..\\scintilla\\src\\KeyMap.h	/^#define SCI_ASHIFT /;"	d
SCI_ASSIGNCMDKEY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ASSIGNCMDKEY /;"	d
SCI_AUTOCACTIVE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCACTIVE /;"	d
SCI_AUTOCCANCEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCCANCEL /;"	d
SCI_AUTOCCOMPLETE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCCOMPLETE /;"	d
SCI_AUTOCGETAUTOHIDE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETAUTOHIDE /;"	d
SCI_AUTOCGETCANCELATSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETCANCELATSTART /;"	d
SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR /;"	d
SCI_AUTOCGETCHOOSESINGLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETCHOOSESINGLE /;"	d
SCI_AUTOCGETCURRENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETCURRENT /;"	d
SCI_AUTOCGETCURRENTTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETCURRENTTEXT /;"	d
SCI_AUTOCGETDROPRESTOFWORD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETDROPRESTOFWORD /;"	d
SCI_AUTOCGETIGNORECASE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETIGNORECASE /;"	d
SCI_AUTOCGETMAXHEIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETMAXHEIGHT /;"	d
SCI_AUTOCGETMAXWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETMAXWIDTH /;"	d
SCI_AUTOCGETMULTI	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETMULTI /;"	d
SCI_AUTOCGETORDER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETORDER /;"	d
SCI_AUTOCGETSEPARATOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETSEPARATOR /;"	d
SCI_AUTOCGETTYPESEPARATOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCGETTYPESEPARATOR /;"	d
SCI_AUTOCPOSSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCPOSSTART /;"	d
SCI_AUTOCSELECT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSELECT /;"	d
SCI_AUTOCSETAUTOHIDE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETAUTOHIDE /;"	d
SCI_AUTOCSETCANCELATSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETCANCELATSTART /;"	d
SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR /;"	d
SCI_AUTOCSETCHOOSESINGLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETCHOOSESINGLE /;"	d
SCI_AUTOCSETDROPRESTOFWORD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETDROPRESTOFWORD /;"	d
SCI_AUTOCSETFILLUPS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETFILLUPS /;"	d
SCI_AUTOCSETIGNORECASE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETIGNORECASE /;"	d
SCI_AUTOCSETMAXHEIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETMAXHEIGHT /;"	d
SCI_AUTOCSETMAXWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETMAXWIDTH /;"	d
SCI_AUTOCSETMULTI	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETMULTI /;"	d
SCI_AUTOCSETORDER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETORDER /;"	d
SCI_AUTOCSETSEPARATOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETSEPARATOR /;"	d
SCI_AUTOCSETTYPESEPARATOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSETTYPESEPARATOR /;"	d
SCI_AUTOCSHOW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSHOW /;"	d
SCI_AUTOCSTOPS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_AUTOCSTOPS /;"	d
SCI_BACKTAB	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BACKTAB /;"	d
SCI_BEGINUNDOACTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BEGINUNDOACTION /;"	d
SCI_BRACEBADLIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BRACEBADLIGHT /;"	d
SCI_BRACEBADLIGHTINDICATOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BRACEBADLIGHTINDICATOR /;"	d
SCI_BRACEHIGHLIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BRACEHIGHLIGHT /;"	d
SCI_BRACEHIGHLIGHTINDICATOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BRACEHIGHLIGHTINDICATOR /;"	d
SCI_BRACEMATCH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_BRACEMATCH /;"	d
SCI_CALLTIPACTIVE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPACTIVE /;"	d
SCI_CALLTIPCANCEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPCANCEL /;"	d
SCI_CALLTIPPOSSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPPOSSTART /;"	d
SCI_CALLTIPSETBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSETBACK /;"	d
SCI_CALLTIPSETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSETFORE /;"	d
SCI_CALLTIPSETFOREHLT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSETFOREHLT /;"	d
SCI_CALLTIPSETHLT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSETHLT /;"	d
SCI_CALLTIPSETPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSETPOSITION /;"	d
SCI_CALLTIPSETPOSSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSETPOSSTART /;"	d
SCI_CALLTIPSHOW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPSHOW /;"	d
SCI_CALLTIPUSESTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CALLTIPUSESTYLE /;"	d
SCI_CANCEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CANCEL /;"	d
SCI_CANPASTE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CANPASTE /;"	d
SCI_CANREDO	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CANREDO /;"	d
SCI_CANUNDO	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CANUNDO /;"	d
SCI_CHANGEINSERTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHANGEINSERTION /;"	d
SCI_CHANGELEXERSTATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHANGELEXERSTATE /;"	d
SCI_CHARLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARLEFT /;"	d
SCI_CHARLEFTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARLEFTEXTEND /;"	d
SCI_CHARLEFTRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARLEFTRECTEXTEND /;"	d
SCI_CHARPOSITIONFROMPOINT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARPOSITIONFROMPOINT /;"	d
SCI_CHARPOSITIONFROMPOINTCLOSE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARPOSITIONFROMPOINTCLOSE /;"	d
SCI_CHARRIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARRIGHT /;"	d
SCI_CHARRIGHTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARRIGHTEXTEND /;"	d
SCI_CHARRIGHTRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHARRIGHTRECTEXTEND /;"	d
SCI_CHOOSECARETX	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CHOOSECARETX /;"	d
SCI_CLEAR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEAR /;"	d
SCI_CLEARALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARALL /;"	d
SCI_CLEARALLCMDKEYS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARALLCMDKEYS /;"	d
SCI_CLEARCMDKEY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARCMDKEY /;"	d
SCI_CLEARDOCUMENTSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARDOCUMENTSTYLE /;"	d
SCI_CLEARREGISTEREDIMAGES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARREGISTEREDIMAGES /;"	d
SCI_CLEARREPRESENTATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARREPRESENTATION /;"	d
SCI_CLEARSELECTIONS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARSELECTIONS /;"	d
SCI_CLEARTABSTOPS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CLEARTABSTOPS /;"	d
SCI_COLORS	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired SCI_COLORS[] = {$/;"	v	typeref:typename:ColourDesired[]	file:
SCI_COLOR_PAIR	..\\scintilla\\curses\\ScintillaCurses.h	/^#define SCI_COLOR_PAIR(/;"	d	signature:(f,b)
SCI_COLOURISE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_COLOURISE /;"	d
SCI_CONTRACTEDFOLDNEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CONTRACTEDFOLDNEXT /;"	d
SCI_CONVERTEOLS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CONVERTEOLS /;"	d
SCI_COPY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_COPY /;"	d
SCI_COPYALLOWLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_COPYALLOWLINE /;"	d
SCI_COPYRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_COPYRANGE /;"	d
SCI_COPYTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_COPYTEXT /;"	d
SCI_COUNTCHARACTERS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_COUNTCHARACTERS /;"	d
SCI_CREATEDOCUMENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CREATEDOCUMENT /;"	d
SCI_CREATELOADER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CREATELOADER /;"	d
SCI_CSHIFT	..\\scintilla\\src\\KeyMap.h	/^#define SCI_CSHIFT /;"	d
SCI_CTRL	..\\scintilla\\src\\KeyMap.h	/^#define SCI_CTRL /;"	d
SCI_CTRL_META	..\\scintilla\\src\\KeyMap.cxx	/^#define SCI_CTRL_META /;"	d	file:
SCI_CUT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_CUT /;"	d
SCI_DELETEBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELETEBACK /;"	d
SCI_DELETEBACKNOTLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELETEBACKNOTLINE /;"	d
SCI_DELETERANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELETERANGE /;"	d
SCI_DELLINELEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELLINELEFT /;"	d
SCI_DELLINERIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELLINERIGHT /;"	d
SCI_DELWORDLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELWORDLEFT /;"	d
SCI_DELWORDRIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELWORDRIGHT /;"	d
SCI_DELWORDRIGHTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DELWORDRIGHTEND /;"	d
SCI_DESCRIBEKEYWORDSETS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DESCRIBEKEYWORDSETS /;"	d
SCI_DESCRIBEPROPERTY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DESCRIBEPROPERTY /;"	d
SCI_DESCRIPTIONOFSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DESCRIPTIONOFSTYLE /;"	d
SCI_DISTANCETOSECONDARYSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DISTANCETOSECONDARYSTYLES /;"	d
SCI_DOCLINEFROMVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DOCLINEFROMVISIBLE /;"	d
SCI_DOCUMENTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DOCUMENTEND /;"	d
SCI_DOCUMENTENDEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DOCUMENTENDEXTEND /;"	d
SCI_DOCUMENTSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DOCUMENTSTART /;"	d
SCI_DOCUMENTSTARTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DOCUMENTSTARTEXTEND /;"	d
SCI_DROPSELECTIONN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_DROPSELECTIONN /;"	d
SCI_EDITTOGGLEOVERTYPE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_EDITTOGGLEOVERTYPE /;"	d
SCI_EMPTYUNDOBUFFER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_EMPTYUNDOBUFFER /;"	d
SCI_ENCODEDFROMUTF8	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ENCODEDFROMUTF8 /;"	d
SCI_ENDUNDOACTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ENDUNDOACTION /;"	d
SCI_ENSUREVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ENSUREVISIBLE /;"	d
SCI_ENSUREVISIBLEENFORCEPOLICY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ENSUREVISIBLEENFORCEPOLICY /;"	d
SCI_EXPANDCHILDREN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_EXPANDCHILDREN /;"	d
SCI_FINDCOLUMN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FINDCOLUMN /;"	d
SCI_FINDINDICATORFLASH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FINDINDICATORFLASH /;"	d
SCI_FINDINDICATORHIDE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FINDINDICATORHIDE /;"	d
SCI_FINDINDICATORSHOW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FINDINDICATORSHOW /;"	d
SCI_FINDTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FINDTEXT /;"	d
SCI_FOLDALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FOLDALL /;"	d
SCI_FOLDCHILDREN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FOLDCHILDREN /;"	d
SCI_FOLDDISPLAYTEXTSETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FOLDDISPLAYTEXTSETSTYLE /;"	d
SCI_FOLDLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FOLDLINE /;"	d
SCI_FORMATRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FORMATRANGE /;"	d
SCI_FORMFEED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FORMFEED /;"	d
SCI_FREESUBSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_FREESUBSTYLES /;"	d
SCI_GETACCESSIBILITY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETACCESSIBILITY /;"	d
SCI_GETADDITIONALCARETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETADDITIONALCARETFORE /;"	d
SCI_GETADDITIONALCARETSBLINK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETADDITIONALCARETSBLINK /;"	d
SCI_GETADDITIONALCARETSVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETADDITIONALCARETSVISIBLE /;"	d
SCI_GETADDITIONALSELALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETADDITIONALSELALPHA /;"	d
SCI_GETADDITIONALSELECTIONTYPING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETADDITIONALSELECTIONTYPING /;"	d
SCI_GETALLLINESVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETALLLINESVISIBLE /;"	d
SCI_GETANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETANCHOR /;"	d
SCI_GETAUTOMATICFOLD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETAUTOMATICFOLD /;"	d
SCI_GETBACKSPACEUNINDENTS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETBACKSPACEUNINDENTS /;"	d
SCI_GETBUFFEREDDRAW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETBUFFEREDDRAW /;"	d
SCI_GETCARETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETFORE /;"	d
SCI_GETCARETLINEBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETLINEBACK /;"	d
SCI_GETCARETLINEBACKALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETLINEBACKALPHA /;"	d
SCI_GETCARETLINEFRAME	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETLINEFRAME /;"	d
SCI_GETCARETLINEVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETLINEVISIBLE /;"	d
SCI_GETCARETLINEVISIBLEALWAYS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETLINEVISIBLEALWAYS /;"	d
SCI_GETCARETPERIOD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETPERIOD /;"	d
SCI_GETCARETSTICKY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETSTICKY /;"	d
SCI_GETCARETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETSTYLE /;"	d
SCI_GETCARETWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCARETWIDTH /;"	d
SCI_GETCHARACTERPOINTER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCHARACTERPOINTER /;"	d
SCI_GETCHARAT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCHARAT /;"	d
SCI_GETCODEPAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCODEPAGE /;"	d
SCI_GETCOLUMN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCOLUMN /;"	d
SCI_GETCONTROLCHARSYMBOL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCONTROLCHARSYMBOL /;"	d
SCI_GETCURLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCURLINE /;"	d
SCI_GETCURRENTPOS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCURRENTPOS /;"	d
SCI_GETCURSOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETCURSOR /;"	d
SCI_GETDIRECTFUNCTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETDIRECTFUNCTION /;"	d
SCI_GETDIRECTPOINTER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETDIRECTPOINTER /;"	d
SCI_GETDOCPOINTER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETDOCPOINTER /;"	d
SCI_GETEDGECOLOUR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETEDGECOLOUR /;"	d
SCI_GETEDGECOLUMN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETEDGECOLUMN /;"	d
SCI_GETEDGEMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETEDGEMODE /;"	d
SCI_GETENDATLASTLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETENDATLASTLINE /;"	d
SCI_GETENDSTYLED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETENDSTYLED /;"	d
SCI_GETEOLMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETEOLMODE /;"	d
SCI_GETEXTRAASCENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETEXTRAASCENT /;"	d
SCI_GETEXTRADESCENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETEXTRADESCENT /;"	d
SCI_GETFIRSTVISIBLELINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETFIRSTVISIBLELINE /;"	d
SCI_GETFOCUS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETFOCUS /;"	d
SCI_GETFOLDEXPANDED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETFOLDEXPANDED /;"	d
SCI_GETFOLDLEVEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETFOLDLEVEL /;"	d
SCI_GETFOLDPARENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETFOLDPARENT /;"	d
SCI_GETFONTQUALITY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETFONTQUALITY /;"	d
SCI_GETGAPPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETGAPPOSITION /;"	d
SCI_GETHIGHLIGHTGUIDE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETHIGHLIGHTGUIDE /;"	d
SCI_GETHOTSPOTACTIVEBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETHOTSPOTACTIVEBACK /;"	d
SCI_GETHOTSPOTACTIVEFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETHOTSPOTACTIVEFORE /;"	d
SCI_GETHOTSPOTACTIVEUNDERLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETHOTSPOTACTIVEUNDERLINE /;"	d
SCI_GETHOTSPOTSINGLELINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETHOTSPOTSINGLELINE /;"	d
SCI_GETHSCROLLBAR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETHSCROLLBAR /;"	d
SCI_GETIDENTIFIER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETIDENTIFIER /;"	d
SCI_GETIDLESTYLING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETIDLESTYLING /;"	d
SCI_GETIMEINTERACTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETIMEINTERACTION /;"	d
SCI_GETINDENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETINDENT /;"	d
SCI_GETINDENTATIONGUIDES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETINDENTATIONGUIDES /;"	d
SCI_GETINDICATORCURRENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETINDICATORCURRENT /;"	d
SCI_GETINDICATORVALUE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETINDICATORVALUE /;"	d
SCI_GETKEYSUNICODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETKEYSUNICODE /;"	d
SCI_GETLASTCHILD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLASTCHILD /;"	d
SCI_GETLAYOUTCACHE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLAYOUTCACHE /;"	d
SCI_GETLENGTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLENGTH /;"	d
SCI_GETLEXER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLEXER /;"	d
SCI_GETLEXERLANGUAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLEXERLANGUAGE /;"	d
SCI_GETLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINE /;"	d
SCI_GETLINECOUNT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINECOUNT /;"	d
SCI_GETLINEENDPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEENDPOSITION /;"	d
SCI_GETLINEENDTYPESACTIVE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEENDTYPESACTIVE /;"	d
SCI_GETLINEENDTYPESALLOWED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEENDTYPESALLOWED /;"	d
SCI_GETLINEENDTYPESSUPPORTED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEENDTYPESSUPPORTED /;"	d
SCI_GETLINEINDENTATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEINDENTATION /;"	d
SCI_GETLINEINDENTPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEINDENTPOSITION /;"	d
SCI_GETLINESELENDPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINESELENDPOSITION /;"	d
SCI_GETLINESELSTARTPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINESELSTARTPOSITION /;"	d
SCI_GETLINESTATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINESTATE /;"	d
SCI_GETLINEVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETLINEVISIBLE /;"	d
SCI_GETMAINSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMAINSELECTION /;"	d
SCI_GETMARGINBACKN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINBACKN /;"	d
SCI_GETMARGINCURSORN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINCURSORN /;"	d
SCI_GETMARGINLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINLEFT /;"	d
SCI_GETMARGINMASKN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINMASKN /;"	d
SCI_GETMARGINOPTIONS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINOPTIONS /;"	d
SCI_GETMARGINRIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINRIGHT /;"	d
SCI_GETMARGINS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINS /;"	d
SCI_GETMARGINSENSITIVEN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINSENSITIVEN /;"	d
SCI_GETMARGINTYPEN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINTYPEN /;"	d
SCI_GETMARGINWIDTHN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMARGINWIDTHN /;"	d
SCI_GETMAXLINESTATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMAXLINESTATE /;"	d
SCI_GETMODEVENTMASK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMODEVENTMASK /;"	d
SCI_GETMODIFY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMODIFY /;"	d
SCI_GETMOUSEDOWNCAPTURES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMOUSEDOWNCAPTURES /;"	d
SCI_GETMOUSEDWELLTIME	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMOUSEDWELLTIME /;"	d
SCI_GETMOUSESELECTIONRECTANGULARSWITCH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMOUSESELECTIONRECTANGULARSWITCH /;"	d
SCI_GETMOUSEWHEELCAPTURES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMOUSEWHEELCAPTURES /;"	d
SCI_GETMOVEEXTENDSSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMOVEEXTENDSSELECTION /;"	d
SCI_GETMULTIPASTE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMULTIPASTE /;"	d
SCI_GETMULTIPLESELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETMULTIPLESELECTION /;"	d
SCI_GETNAMEDSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETNAMEDSTYLES /;"	d
SCI_GETNEXTTABSTOP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETNEXTTABSTOP /;"	d
SCI_GETOVERTYPE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETOVERTYPE /;"	d
SCI_GETPASTECONVERTENDINGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPASTECONVERTENDINGS /;"	d
SCI_GETPHASESDRAW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPHASESDRAW /;"	d
SCI_GETPOSITIONCACHE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPOSITIONCACHE /;"	d
SCI_GETPRIMARYSTYLEFROMSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPRIMARYSTYLEFROMSTYLE /;"	d
SCI_GETPRINTCOLOURMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPRINTCOLOURMODE /;"	d
SCI_GETPRINTMAGNIFICATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPRINTMAGNIFICATION /;"	d
SCI_GETPRINTWRAPMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPRINTWRAPMODE /;"	d
SCI_GETPROPERTY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPROPERTY /;"	d
SCI_GETPROPERTYEXPANDED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPROPERTYEXPANDED /;"	d
SCI_GETPROPERTYINT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPROPERTYINT /;"	d
SCI_GETPUNCTUATIONCHARS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETPUNCTUATIONCHARS /;"	d
SCI_GETRANGEPOINTER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETRANGEPOINTER /;"	d
SCI_GETREADONLY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETREADONLY /;"	d
SCI_GETRECTANGULARSELECTIONANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETRECTANGULARSELECTIONANCHOR /;"	d
SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE /;"	d
SCI_GETRECTANGULARSELECTIONCARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETRECTANGULARSELECTIONCARET /;"	d
SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE /;"	d
SCI_GETRECTANGULARSELECTIONMODIFIER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETRECTANGULARSELECTIONMODIFIER /;"	d
SCI_GETREPRESENTATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETREPRESENTATION /;"	d
SCI_GETSCROLLWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSCROLLWIDTH /;"	d
SCI_GETSCROLLWIDTHTRACKING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSCROLLWIDTHTRACKING /;"	d
SCI_GETSEARCHFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSEARCHFLAGS /;"	d
SCI_GETSELALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELALPHA /;"	d
SCI_GETSELECTIONEMPTY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONEMPTY /;"	d
SCI_GETSELECTIONEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONEND /;"	d
SCI_GETSELECTIONMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONMODE /;"	d
SCI_GETSELECTIONNANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONNANCHOR /;"	d
SCI_GETSELECTIONNANCHORVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONNANCHORVIRTUALSPACE /;"	d
SCI_GETSELECTIONNCARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONNCARET /;"	d
SCI_GETSELECTIONNCARETVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONNCARETVIRTUALSPACE /;"	d
SCI_GETSELECTIONNEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONNEND /;"	d
SCI_GETSELECTIONNSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONNSTART /;"	d
SCI_GETSELECTIONS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONS /;"	d
SCI_GETSELECTIONSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELECTIONSTART /;"	d
SCI_GETSELEOLFILLED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELEOLFILLED /;"	d
SCI_GETSELTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSELTEXT /;"	d
SCI_GETSTATUS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSTATUS /;"	d
SCI_GETSTYLEAT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSTYLEAT /;"	d
SCI_GETSTYLEBITS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSTYLEBITS /;"	d
SCI_GETSTYLEBITSNEEDED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSTYLEBITSNEEDED /;"	d
SCI_GETSTYLEDTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSTYLEDTEXT /;"	d
SCI_GETSTYLEFROMSUBSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSTYLEFROMSUBSTYLE /;"	d
SCI_GETSUBSTYLEBASES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSUBSTYLEBASES /;"	d
SCI_GETSUBSTYLESLENGTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSUBSTYLESLENGTH /;"	d
SCI_GETSUBSTYLESSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETSUBSTYLESSTART /;"	d
SCI_GETTABDRAWMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTABDRAWMODE /;"	d
SCI_GETTABINDENTS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTABINDENTS /;"	d
SCI_GETTABWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTABWIDTH /;"	d
SCI_GETTAG	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTAG /;"	d
SCI_GETTARGETEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTARGETEND /;"	d
SCI_GETTARGETSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTARGETSTART /;"	d
SCI_GETTARGETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTARGETTEXT /;"	d
SCI_GETTECHNOLOGY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTECHNOLOGY /;"	d
SCI_GETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTEXT /;"	d
SCI_GETTEXTLENGTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTEXTLENGTH /;"	d
SCI_GETTEXTRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTEXTRANGE /;"	d
SCI_GETTWOPHASEDRAW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETTWOPHASEDRAW /;"	d
SCI_GETUNDOCOLLECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETUNDOCOLLECTION /;"	d
SCI_GETUSETABS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETUSETABS /;"	d
SCI_GETVIEWEOL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETVIEWEOL /;"	d
SCI_GETVIEWWS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETVIEWWS /;"	d
SCI_GETVIRTUALSPACEOPTIONS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETVIRTUALSPACEOPTIONS /;"	d
SCI_GETVSCROLLBAR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETVSCROLLBAR /;"	d
SCI_GETWHITESPACECHARS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWHITESPACECHARS /;"	d
SCI_GETWHITESPACESIZE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWHITESPACESIZE /;"	d
SCI_GETWORDCHARS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWORDCHARS /;"	d
SCI_GETWRAPINDENTMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWRAPINDENTMODE /;"	d
SCI_GETWRAPMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWRAPMODE /;"	d
SCI_GETWRAPSTARTINDENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWRAPSTARTINDENT /;"	d
SCI_GETWRAPVISUALFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWRAPVISUALFLAGS /;"	d
SCI_GETWRAPVISUALFLAGSLOCATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETWRAPVISUALFLAGSLOCATION /;"	d
SCI_GETXOFFSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETXOFFSET /;"	d
SCI_GETZOOM	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GETZOOM /;"	d
SCI_GOTOLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GOTOLINE /;"	d
SCI_GOTOPOS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GOTOPOS /;"	d
SCI_GRABFOCUS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_GRABFOCUS /;"	d
SCI_HIDELINES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HIDELINES /;"	d
SCI_HIDESELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HIDESELECTION /;"	d
SCI_HOME	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOME /;"	d
SCI_HOMEDISPLAY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOMEDISPLAY /;"	d
SCI_HOMEDISPLAYEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOMEDISPLAYEXTEND /;"	d
SCI_HOMEEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOMEEXTEND /;"	d
SCI_HOMERECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOMERECTEXTEND /;"	d
SCI_HOMEWRAP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOMEWRAP /;"	d
SCI_HOMEWRAPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_HOMEWRAPEXTEND /;"	d
SCI_INDICATORALLONFOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICATORALLONFOR /;"	d
SCI_INDICATORCLEARRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICATORCLEARRANGE /;"	d
SCI_INDICATOREND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICATOREND /;"	d
SCI_INDICATORFILLRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICATORFILLRANGE /;"	d
SCI_INDICATORSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICATORSTART /;"	d
SCI_INDICATORVALUEAT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICATORVALUEAT /;"	d
SCI_INDICGETALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETALPHA /;"	d
SCI_INDICGETFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETFLAGS /;"	d
SCI_INDICGETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETFORE /;"	d
SCI_INDICGETHOVERFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETHOVERFORE /;"	d
SCI_INDICGETHOVERSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETHOVERSTYLE /;"	d
SCI_INDICGETOUTLINEALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETOUTLINEALPHA /;"	d
SCI_INDICGETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETSTYLE /;"	d
SCI_INDICGETUNDER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICGETUNDER /;"	d
SCI_INDICSETALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETALPHA /;"	d
SCI_INDICSETFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETFLAGS /;"	d
SCI_INDICSETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETFORE /;"	d
SCI_INDICSETHOVERFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETHOVERFORE /;"	d
SCI_INDICSETHOVERSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETHOVERSTYLE /;"	d
SCI_INDICSETOUTLINEALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETOUTLINEALPHA /;"	d
SCI_INDICSETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETSTYLE /;"	d
SCI_INDICSETUNDER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INDICSETUNDER /;"	d
SCI_INSERTTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_INSERTTEXT /;"	d
SCI_ISRANGEWORD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ISRANGEWORD /;"	d
SCI_LEXER_START	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LEXER_START /;"	d
SCI_LINECOPY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINECOPY /;"	d
SCI_LINECUT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINECUT /;"	d
SCI_LINEDELETE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEDELETE /;"	d
SCI_LINEDOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEDOWN /;"	d
SCI_LINEDOWNEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEDOWNEXTEND /;"	d
SCI_LINEDOWNRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEDOWNRECTEXTEND /;"	d
SCI_LINEDUPLICATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEDUPLICATE /;"	d
SCI_LINEEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEEND /;"	d
SCI_LINEENDDISPLAY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEENDDISPLAY /;"	d
SCI_LINEENDDISPLAYEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEENDDISPLAYEXTEND /;"	d
SCI_LINEENDEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEENDEXTEND /;"	d
SCI_LINEENDRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEENDRECTEXTEND /;"	d
SCI_LINEENDWRAP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEENDWRAP /;"	d
SCI_LINEENDWRAPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEENDWRAPEXTEND /;"	d
SCI_LINEFROMPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEFROMPOSITION /;"	d
SCI_LINELENGTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINELENGTH /;"	d
SCI_LINEREVERSE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEREVERSE /;"	d
SCI_LINESCROLL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINESCROLL /;"	d
SCI_LINESCROLLDOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINESCROLLDOWN /;"	d
SCI_LINESCROLLUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINESCROLLUP /;"	d
SCI_LINESJOIN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINESJOIN /;"	d
SCI_LINESONSCREEN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINESONSCREEN /;"	d
SCI_LINESSPLIT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINESSPLIT /;"	d
SCI_LINETRANSPOSE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINETRANSPOSE /;"	d
SCI_LINEUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEUP /;"	d
SCI_LINEUPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEUPEXTEND /;"	d
SCI_LINEUPRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LINEUPRECTEXTEND /;"	d
SCI_LOADLEXERLIBRARY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LOADLEXERLIBRARY /;"	d
SCI_LOWERCASE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_LOWERCASE /;"	d
SCI_MARGINGETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINGETSTYLE /;"	d
SCI_MARGINGETSTYLEOFFSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINGETSTYLEOFFSET /;"	d
SCI_MARGINGETSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINGETSTYLES /;"	d
SCI_MARGINGETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINGETTEXT /;"	d
SCI_MARGINSETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINSETSTYLE /;"	d
SCI_MARGINSETSTYLEOFFSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINSETSTYLEOFFSET /;"	d
SCI_MARGINSETSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINSETSTYLES /;"	d
SCI_MARGINSETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINSETTEXT /;"	d
SCI_MARGINTEXTCLEARALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARGINTEXTCLEARALL /;"	d
SCI_MARKERADD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERADD /;"	d
SCI_MARKERADDSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERADDSET /;"	d
SCI_MARKERDEFINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERDEFINE /;"	d
SCI_MARKERDEFINEPIXMAP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERDEFINEPIXMAP /;"	d
SCI_MARKERDEFINERGBAIMAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERDEFINERGBAIMAGE /;"	d
SCI_MARKERDELETE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERDELETE /;"	d
SCI_MARKERDELETEALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERDELETEALL /;"	d
SCI_MARKERDELETEHANDLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERDELETEHANDLE /;"	d
SCI_MARKERENABLEHIGHLIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERENABLEHIGHLIGHT /;"	d
SCI_MARKERGET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERGET /;"	d
SCI_MARKERLINEFROMHANDLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERLINEFROMHANDLE /;"	d
SCI_MARKERNEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERNEXT /;"	d
SCI_MARKERPREVIOUS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERPREVIOUS /;"	d
SCI_MARKERSETALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERSETALPHA /;"	d
SCI_MARKERSETBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERSETBACK /;"	d
SCI_MARKERSETBACKSELECTED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERSETBACKSELECTED /;"	d
SCI_MARKERSETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERSETFORE /;"	d
SCI_MARKERSYMBOLDEFINED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MARKERSYMBOLDEFINED /;"	d
SCI_META	..\\scintilla\\src\\KeyMap.h	/^#define SCI_META /;"	d
SCI_METHOD	..\\scintilla\\include\\Sci_Position.h	/^	#define SCI_METHOD /;"	d
SCI_METHOD	..\\scintilla\\include\\Sci_Position.h	/^	#define SCI_METHOD$/;"	d
SCI_MOVECARETINSIDEVIEW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MOVECARETINSIDEVIEW /;"	d
SCI_MOVESELECTEDLINESDOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MOVESELECTEDLINESDOWN /;"	d
SCI_MOVESELECTEDLINESUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MOVESELECTEDLINESUP /;"	d
SCI_MULTIEDGEADDLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MULTIEDGEADDLINE /;"	d
SCI_MULTIEDGECLEARALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MULTIEDGECLEARALL /;"	d
SCI_MULTIPLESELECTADDEACH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MULTIPLESELECTADDEACH /;"	d
SCI_MULTIPLESELECTADDNEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_MULTIPLESELECTADDNEXT /;"	d
SCI_NAMEOFSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_NAMEOFSTYLE /;"	d
SCI_NEWLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_NEWLINE /;"	d
SCI_NORM	..\\scintilla\\src\\KeyMap.h	/^#define SCI_NORM /;"	d
SCI_NULL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_NULL /;"	d
SCI_OPTIONAL_START	..\\scintilla\\include\\Scintilla.h	/^#define SCI_OPTIONAL_START /;"	d
SCI_PAGEDOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PAGEDOWN /;"	d
SCI_PAGEDOWNEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PAGEDOWNEXTEND /;"	d
SCI_PAGEDOWNRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PAGEDOWNRECTEXTEND /;"	d
SCI_PAGEUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PAGEUP /;"	d
SCI_PAGEUPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PAGEUPEXTEND /;"	d
SCI_PAGEUPRECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PAGEUPRECTEXTEND /;"	d
SCI_PARADOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PARADOWN /;"	d
SCI_PARADOWNEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PARADOWNEXTEND /;"	d
SCI_PARAUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PARAUP /;"	d
SCI_PARAUPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PARAUPEXTEND /;"	d
SCI_PASTE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PASTE /;"	d
SCI_POINTXFROMPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POINTXFROMPOSITION /;"	d
SCI_POINTYFROMPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POINTYFROMPOSITION /;"	d
SCI_POSITIONAFTER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POSITIONAFTER /;"	d
SCI_POSITIONBEFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POSITIONBEFORE /;"	d
SCI_POSITIONFROMLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POSITIONFROMLINE /;"	d
SCI_POSITIONFROMPOINT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POSITIONFROMPOINT /;"	d
SCI_POSITIONFROMPOINTCLOSE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POSITIONFROMPOINTCLOSE /;"	d
SCI_POSITIONRELATIVE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_POSITIONRELATIVE /;"	d
SCI_POSITION_H	..\\scintilla\\include\\Sci_Position.h	/^#define SCI_POSITION_H$/;"	d
SCI_PRIVATELEXERCALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PRIVATELEXERCALL /;"	d
SCI_PROPERTYNAMES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PROPERTYNAMES /;"	d
SCI_PROPERTYTYPE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_PROPERTYTYPE /;"	d
SCI_REDO	..\\scintilla\\include\\Scintilla.h	/^#define SCI_REDO /;"	d
SCI_REGISTERIMAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_REGISTERIMAGE /;"	d
SCI_REGISTERRGBAIMAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_REGISTERRGBAIMAGE /;"	d
SCI_RELEASEALLEXTENDEDSTYLES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_RELEASEALLEXTENDEDSTYLES /;"	d
SCI_RELEASEDOCUMENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_RELEASEDOCUMENT /;"	d
SCI_REPLACESEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_REPLACESEL /;"	d
SCI_REPLACETARGET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_REPLACETARGET /;"	d
SCI_REPLACETARGETRE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_REPLACETARGETRE /;"	d
SCI_RGBAIMAGESETHEIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_RGBAIMAGESETHEIGHT /;"	d
SCI_RGBAIMAGESETSCALE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_RGBAIMAGESETSCALE /;"	d
SCI_RGBAIMAGESETWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_RGBAIMAGESETWIDTH /;"	d
SCI_ROTATESELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ROTATESELECTION /;"	d
SCI_SCROLLCARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SCROLLCARET /;"	d
SCI_SCROLLRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SCROLLRANGE /;"	d
SCI_SCROLLTOEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SCROLLTOEND /;"	d
SCI_SCROLLTOSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SCROLLTOSTART /;"	d
SCI_SCTRL_META	..\\scintilla\\src\\KeyMap.cxx	/^#define SCI_SCTRL_META /;"	d	file:
SCI_SEARCHANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SEARCHANCHOR /;"	d
SCI_SEARCHINTARGET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SEARCHINTARGET /;"	d
SCI_SEARCHNEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SEARCHNEXT /;"	d
SCI_SEARCHPREV	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SEARCHPREV /;"	d
SCI_SELECTALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SELECTALL /;"	d
SCI_SELECTIONDUPLICATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SELECTIONDUPLICATE /;"	d
SCI_SELECTIONISRECTANGLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SELECTIONISRECTANGLE /;"	d
SCI_SETACCESSIBILITY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETACCESSIBILITY /;"	d
SCI_SETADDITIONALCARETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALCARETFORE /;"	d
SCI_SETADDITIONALCARETSBLINK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALCARETSBLINK /;"	d
SCI_SETADDITIONALCARETSVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALCARETSVISIBLE /;"	d
SCI_SETADDITIONALSELALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALSELALPHA /;"	d
SCI_SETADDITIONALSELBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALSELBACK /;"	d
SCI_SETADDITIONALSELECTIONTYPING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALSELECTIONTYPING /;"	d
SCI_SETADDITIONALSELFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETADDITIONALSELFORE /;"	d
SCI_SETANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETANCHOR /;"	d
SCI_SETAUTOMATICFOLD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETAUTOMATICFOLD /;"	d
SCI_SETBACKSPACEUNINDENTS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETBACKSPACEUNINDENTS /;"	d
SCI_SETBUFFEREDDRAW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETBUFFEREDDRAW /;"	d
SCI_SETCARETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETFORE /;"	d
SCI_SETCARETLINEBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETLINEBACK /;"	d
SCI_SETCARETLINEBACKALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETLINEBACKALPHA /;"	d
SCI_SETCARETLINEFRAME	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETLINEFRAME /;"	d
SCI_SETCARETLINEVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETLINEVISIBLE /;"	d
SCI_SETCARETLINEVISIBLEALWAYS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETLINEVISIBLEALWAYS /;"	d
SCI_SETCARETPERIOD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETPERIOD /;"	d
SCI_SETCARETSTICKY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETSTICKY /;"	d
SCI_SETCARETSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETSTYLE /;"	d
SCI_SETCARETWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCARETWIDTH /;"	d
SCI_SETCHARSDEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCHARSDEFAULT /;"	d
SCI_SETCODEPAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCODEPAGE /;"	d
SCI_SETCONTROLCHARSYMBOL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCONTROLCHARSYMBOL /;"	d
SCI_SETCURRENTPOS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCURRENTPOS /;"	d
SCI_SETCURSOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETCURSOR /;"	d
SCI_SETDOCPOINTER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETDOCPOINTER /;"	d
SCI_SETEDGECOLOUR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEDGECOLOUR /;"	d
SCI_SETEDGECOLUMN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEDGECOLUMN /;"	d
SCI_SETEDGEMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEDGEMODE /;"	d
SCI_SETEMPTYSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEMPTYSELECTION /;"	d
SCI_SETENDATLASTLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETENDATLASTLINE /;"	d
SCI_SETEOLMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEOLMODE /;"	d
SCI_SETEXTRAASCENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEXTRAASCENT /;"	d
SCI_SETEXTRADESCENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETEXTRADESCENT /;"	d
SCI_SETFIRSTVISIBLELINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFIRSTVISIBLELINE /;"	d
SCI_SETFOCUS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFOCUS /;"	d
SCI_SETFOLDEXPANDED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFOLDEXPANDED /;"	d
SCI_SETFOLDFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFOLDFLAGS /;"	d
SCI_SETFOLDLEVEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFOLDLEVEL /;"	d
SCI_SETFOLDMARGINCOLOUR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFOLDMARGINCOLOUR /;"	d
SCI_SETFOLDMARGINHICOLOUR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFOLDMARGINHICOLOUR /;"	d
SCI_SETFONTQUALITY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETFONTQUALITY /;"	d
SCI_SETHIGHLIGHTGUIDE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETHIGHLIGHTGUIDE /;"	d
SCI_SETHOTSPOTACTIVEBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETHOTSPOTACTIVEBACK /;"	d
SCI_SETHOTSPOTACTIVEFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETHOTSPOTACTIVEFORE /;"	d
SCI_SETHOTSPOTACTIVEUNDERLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETHOTSPOTACTIVEUNDERLINE /;"	d
SCI_SETHOTSPOTSINGLELINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETHOTSPOTSINGLELINE /;"	d
SCI_SETHSCROLLBAR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETHSCROLLBAR /;"	d
SCI_SETIDENTIFIER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETIDENTIFIER /;"	d
SCI_SETIDENTIFIERS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETIDENTIFIERS /;"	d
SCI_SETIDLESTYLING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETIDLESTYLING /;"	d
SCI_SETIMEINTERACTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETIMEINTERACTION /;"	d
SCI_SETINDENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETINDENT /;"	d
SCI_SETINDENTATIONGUIDES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETINDENTATIONGUIDES /;"	d
SCI_SETINDICATORCURRENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETINDICATORCURRENT /;"	d
SCI_SETINDICATORVALUE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETINDICATORVALUE /;"	d
SCI_SETKEYSUNICODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETKEYSUNICODE /;"	d
SCI_SETKEYWORDS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETKEYWORDS /;"	d
SCI_SETLAYOUTCACHE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLAYOUTCACHE /;"	d
SCI_SETLENGTHFORENCODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLENGTHFORENCODE /;"	d
SCI_SETLEXER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLEXER /;"	d
SCI_SETLEXERLANGUAGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLEXERLANGUAGE /;"	d
SCI_SETLINEENDTYPESALLOWED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLINEENDTYPESALLOWED /;"	d
SCI_SETLINEINDENTATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLINEINDENTATION /;"	d
SCI_SETLINESTATE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETLINESTATE /;"	d
SCI_SETMAINSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMAINSELECTION /;"	d
SCI_SETMARGINBACKN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINBACKN /;"	d
SCI_SETMARGINCURSORN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINCURSORN /;"	d
SCI_SETMARGINLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINLEFT /;"	d
SCI_SETMARGINMASKN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINMASKN /;"	d
SCI_SETMARGINOPTIONS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINOPTIONS /;"	d
SCI_SETMARGINRIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINRIGHT /;"	d
SCI_SETMARGINS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINS /;"	d
SCI_SETMARGINSENSITIVEN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINSENSITIVEN /;"	d
SCI_SETMARGINTYPEN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINTYPEN /;"	d
SCI_SETMARGINWIDTHN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMARGINWIDTHN /;"	d
SCI_SETMODEVENTMASK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMODEVENTMASK /;"	d
SCI_SETMOUSECAPTURE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMOUSECAPTURE /;"	d
SCI_SETMOUSEDOWNCAPTURES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMOUSEDOWNCAPTURES /;"	d
SCI_SETMOUSEDWELLTIME	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMOUSEDWELLTIME /;"	d
SCI_SETMOUSESELECTIONRECTANGULARSWITCH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMOUSESELECTIONRECTANGULARSWITCH /;"	d
SCI_SETMOUSEWHEELCAPTURES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMOUSEWHEELCAPTURES /;"	d
SCI_SETMULTIPASTE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMULTIPASTE /;"	d
SCI_SETMULTIPLESELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETMULTIPLESELECTION /;"	d
SCI_SETOVERTYPE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETOVERTYPE /;"	d
SCI_SETPASTECONVERTENDINGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPASTECONVERTENDINGS /;"	d
SCI_SETPHASESDRAW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPHASESDRAW /;"	d
SCI_SETPOSITIONCACHE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPOSITIONCACHE /;"	d
SCI_SETPRINTCOLOURMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPRINTCOLOURMODE /;"	d
SCI_SETPRINTMAGNIFICATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPRINTMAGNIFICATION /;"	d
SCI_SETPRINTWRAPMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPRINTWRAPMODE /;"	d
SCI_SETPROPERTY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPROPERTY /;"	d
SCI_SETPUNCTUATIONCHARS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETPUNCTUATIONCHARS /;"	d
SCI_SETREADONLY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETREADONLY /;"	d
SCI_SETRECTANGULARSELECTIONANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETRECTANGULARSELECTIONANCHOR /;"	d
SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE /;"	d
SCI_SETRECTANGULARSELECTIONCARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETRECTANGULARSELECTIONCARET /;"	d
SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE /;"	d
SCI_SETRECTANGULARSELECTIONMODIFIER	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETRECTANGULARSELECTIONMODIFIER /;"	d
SCI_SETREPRESENTATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETREPRESENTATION /;"	d
SCI_SETSAVEPOINT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSAVEPOINT /;"	d
SCI_SETSCROLLWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSCROLLWIDTH /;"	d
SCI_SETSCROLLWIDTHTRACKING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSCROLLWIDTHTRACKING /;"	d
SCI_SETSEARCHFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSEARCHFLAGS /;"	d
SCI_SETSEL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSEL /;"	d
SCI_SETSELALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELALPHA /;"	d
SCI_SETSELBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELBACK /;"	d
SCI_SETSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTION /;"	d
SCI_SETSELECTIONEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONEND /;"	d
SCI_SETSELECTIONMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONMODE /;"	d
SCI_SETSELECTIONNANCHOR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONNANCHOR /;"	d
SCI_SETSELECTIONNANCHORVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONNANCHORVIRTUALSPACE /;"	d
SCI_SETSELECTIONNCARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONNCARET /;"	d
SCI_SETSELECTIONNCARETVIRTUALSPACE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONNCARETVIRTUALSPACE /;"	d
SCI_SETSELECTIONNEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONNEND /;"	d
SCI_SETSELECTIONNSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONNSTART /;"	d
SCI_SETSELECTIONSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELECTIONSTART /;"	d
SCI_SETSELEOLFILLED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELEOLFILLED /;"	d
SCI_SETSELFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSELFORE /;"	d
SCI_SETSTATUS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSTATUS /;"	d
SCI_SETSTYLEBITS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSTYLEBITS /;"	d
SCI_SETSTYLING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSTYLING /;"	d
SCI_SETSTYLINGEX	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETSTYLINGEX /;"	d
SCI_SETTABDRAWMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTABDRAWMODE /;"	d
SCI_SETTABINDENTS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTABINDENTS /;"	d
SCI_SETTABWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTABWIDTH /;"	d
SCI_SETTARGETEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTARGETEND /;"	d
SCI_SETTARGETRANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTARGETRANGE /;"	d
SCI_SETTARGETSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTARGETSTART /;"	d
SCI_SETTECHNOLOGY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTECHNOLOGY /;"	d
SCI_SETTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTEXT /;"	d
SCI_SETTWOPHASEDRAW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETTWOPHASEDRAW /;"	d
SCI_SETUNDOCOLLECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETUNDOCOLLECTION /;"	d
SCI_SETUSETABS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETUSETABS /;"	d
SCI_SETVIEWEOL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETVIEWEOL /;"	d
SCI_SETVIEWWS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETVIEWWS /;"	d
SCI_SETVIRTUALSPACEOPTIONS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETVIRTUALSPACEOPTIONS /;"	d
SCI_SETVISIBLEPOLICY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETVISIBLEPOLICY /;"	d
SCI_SETVSCROLLBAR	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETVSCROLLBAR /;"	d
SCI_SETWHITESPACEBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWHITESPACEBACK /;"	d
SCI_SETWHITESPACECHARS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWHITESPACECHARS /;"	d
SCI_SETWHITESPACEFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWHITESPACEFORE /;"	d
SCI_SETWHITESPACESIZE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWHITESPACESIZE /;"	d
SCI_SETWORDCHARS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWORDCHARS /;"	d
SCI_SETWRAPINDENTMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWRAPINDENTMODE /;"	d
SCI_SETWRAPMODE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWRAPMODE /;"	d
SCI_SETWRAPSTARTINDENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWRAPSTARTINDENT /;"	d
SCI_SETWRAPVISUALFLAGS	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWRAPVISUALFLAGS /;"	d
SCI_SETWRAPVISUALFLAGSLOCATION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETWRAPVISUALFLAGSLOCATION /;"	d
SCI_SETXCARETPOLICY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETXCARETPOLICY /;"	d
SCI_SETXOFFSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETXOFFSET /;"	d
SCI_SETYCARETPOLICY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETYCARETPOLICY /;"	d
SCI_SETZOOM	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SETZOOM /;"	d
SCI_SHIFT	..\\scintilla\\src\\KeyMap.h	/^#define SCI_SHIFT /;"	d
SCI_SHOWLINES	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SHOWLINES /;"	d
SCI_START	..\\scintilla\\include\\Scintilla.h	/^#define SCI_START /;"	d
SCI_STARTRECORD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STARTRECORD /;"	d
SCI_STARTSTYLING	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STARTSTYLING /;"	d
SCI_STOPRECORD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STOPRECORD /;"	d
SCI_STUTTEREDPAGEDOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STUTTEREDPAGEDOWN /;"	d
SCI_STUTTEREDPAGEDOWNEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STUTTEREDPAGEDOWNEXTEND /;"	d
SCI_STUTTEREDPAGEUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STUTTEREDPAGEUP /;"	d
SCI_STUTTEREDPAGEUPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STUTTEREDPAGEUPEXTEND /;"	d
SCI_STYLECLEARALL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLECLEARALL /;"	d
SCI_STYLEGETBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETBACK /;"	d
SCI_STYLEGETBOLD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETBOLD /;"	d
SCI_STYLEGETCASE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETCASE /;"	d
SCI_STYLEGETCHANGEABLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETCHANGEABLE /;"	d
SCI_STYLEGETCHARACTERSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETCHARACTERSET /;"	d
SCI_STYLEGETEOLFILLED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETEOLFILLED /;"	d
SCI_STYLEGETFONT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETFONT /;"	d
SCI_STYLEGETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETFORE /;"	d
SCI_STYLEGETHOTSPOT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETHOTSPOT /;"	d
SCI_STYLEGETITALIC	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETITALIC /;"	d
SCI_STYLEGETSIZE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETSIZE /;"	d
SCI_STYLEGETSIZEFRACTIONAL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETSIZEFRACTIONAL /;"	d
SCI_STYLEGETUNDERLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETUNDERLINE /;"	d
SCI_STYLEGETVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETVISIBLE /;"	d
SCI_STYLEGETWEIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLEGETWEIGHT /;"	d
SCI_STYLERESETDEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLERESETDEFAULT /;"	d
SCI_STYLESETBACK	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETBACK /;"	d
SCI_STYLESETBOLD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETBOLD /;"	d
SCI_STYLESETCASE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETCASE /;"	d
SCI_STYLESETCHANGEABLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETCHANGEABLE /;"	d
SCI_STYLESETCHARACTERSET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETCHARACTERSET /;"	d
SCI_STYLESETEOLFILLED	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETEOLFILLED /;"	d
SCI_STYLESETFONT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETFONT /;"	d
SCI_STYLESETFORE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETFORE /;"	d
SCI_STYLESETHOTSPOT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETHOTSPOT /;"	d
SCI_STYLESETITALIC	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETITALIC /;"	d
SCI_STYLESETSIZE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETSIZE /;"	d
SCI_STYLESETSIZEFRACTIONAL	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETSIZEFRACTIONAL /;"	d
SCI_STYLESETUNDERLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETUNDERLINE /;"	d
SCI_STYLESETVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETVISIBLE /;"	d
SCI_STYLESETWEIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_STYLESETWEIGHT /;"	d
SCI_SUPER	..\\scintilla\\src\\KeyMap.h	/^#define SCI_SUPER /;"	d
SCI_SWAPMAINANCHORCARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_SWAPMAINANCHORCARET /;"	d
SCI_TAB	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TAB /;"	d
SCI_TAGSOFSTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TAGSOFSTYLE /;"	d
SCI_TARGETASUTF8	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TARGETASUTF8 /;"	d
SCI_TARGETFROMSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TARGETFROMSELECTION /;"	d
SCI_TARGETWHOLEDOCUMENT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TARGETWHOLEDOCUMENT /;"	d
SCI_TEXTHEIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TEXTHEIGHT /;"	d
SCI_TEXTWIDTH	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TEXTWIDTH /;"	d
SCI_TOGGLECARETSTICKY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TOGGLECARETSTICKY /;"	d
SCI_TOGGLEFOLD	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TOGGLEFOLD /;"	d
SCI_TOGGLEFOLDSHOWTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_TOGGLEFOLDSHOWTEXT /;"	d
SCI_UNDO	..\\scintilla\\include\\Scintilla.h	/^#define SCI_UNDO /;"	d
SCI_UPPERCASE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_UPPERCASE /;"	d
SCI_USEPOPUP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_USEPOPUP /;"	d
SCI_USERLISTSHOW	..\\scintilla\\include\\Scintilla.h	/^#define SCI_USERLISTSHOW /;"	d
SCI_VCHOME	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOME /;"	d
SCI_VCHOMEDISPLAY	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOMEDISPLAY /;"	d
SCI_VCHOMEDISPLAYEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOMEDISPLAYEXTEND /;"	d
SCI_VCHOMEEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOMEEXTEND /;"	d
SCI_VCHOMERECTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOMERECTEXTEND /;"	d
SCI_VCHOMEWRAP	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOMEWRAP /;"	d
SCI_VCHOMEWRAPEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VCHOMEWRAPEXTEND /;"	d
SCI_VERTICALCENTRECARET	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VERTICALCENTRECARET /;"	d
SCI_VISIBLEFROMDOCLINE	..\\scintilla\\include\\Scintilla.h	/^#define SCI_VISIBLEFROMDOCLINE /;"	d
SCI_WORDENDPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDENDPOSITION /;"	d
SCI_WORDLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDLEFT /;"	d
SCI_WORDLEFTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDLEFTEND /;"	d
SCI_WORDLEFTENDEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDLEFTENDEXTEND /;"	d
SCI_WORDLEFTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDLEFTEXTEND /;"	d
SCI_WORDPARTLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDPARTLEFT /;"	d
SCI_WORDPARTLEFTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDPARTLEFTEXTEND /;"	d
SCI_WORDPARTRIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDPARTRIGHT /;"	d
SCI_WORDPARTRIGHTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDPARTRIGHTEXTEND /;"	d
SCI_WORDRIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDRIGHT /;"	d
SCI_WORDRIGHTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDRIGHTEND /;"	d
SCI_WORDRIGHTENDEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDRIGHTENDEXTEND /;"	d
SCI_WORDRIGHTEXTEND	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDRIGHTEXTEND /;"	d
SCI_WORDSTARTPOSITION	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WORDSTARTPOSITION /;"	d
SCI_WRAPCOUNT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_WRAPCOUNT /;"	d
SCI_ZOOMIN	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ZOOMIN /;"	d
SCI_ZOOMOUT	..\\scintilla\\include\\Scintilla.h	/^#define SCI_ZOOMOUT /;"	d
SCK_ADD	..\\scintilla\\include\\Scintilla.h	/^#define SCK_ADD /;"	d
SCK_BACK	..\\scintilla\\include\\Scintilla.h	/^#define SCK_BACK /;"	d
SCK_DELETE	..\\scintilla\\include\\Scintilla.h	/^#define SCK_DELETE /;"	d
SCK_DIVIDE	..\\scintilla\\include\\Scintilla.h	/^#define SCK_DIVIDE /;"	d
SCK_DOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCK_DOWN /;"	d
SCK_END	..\\scintilla\\include\\Scintilla.h	/^#define SCK_END /;"	d
SCK_ESCAPE	..\\scintilla\\include\\Scintilla.h	/^#define SCK_ESCAPE /;"	d
SCK_HOME	..\\scintilla\\include\\Scintilla.h	/^#define SCK_HOME /;"	d
SCK_INSERT	..\\scintilla\\include\\Scintilla.h	/^#define SCK_INSERT /;"	d
SCK_LEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCK_LEFT /;"	d
SCK_MENU	..\\scintilla\\include\\Scintilla.h	/^#define SCK_MENU /;"	d
SCK_NEXT	..\\scintilla\\include\\Scintilla.h	/^#define SCK_NEXT /;"	d
SCK_PRIOR	..\\scintilla\\include\\Scintilla.h	/^#define SCK_PRIOR /;"	d
SCK_RETURN	..\\scintilla\\include\\Scintilla.h	/^#define SCK_RETURN /;"	d
SCK_RIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SCK_RIGHT /;"	d
SCK_RWIN	..\\scintilla\\include\\Scintilla.h	/^#define SCK_RWIN /;"	d
SCK_SUBTRACT	..\\scintilla\\include\\Scintilla.h	/^#define SCK_SUBTRACT /;"	d
SCK_TAB	..\\scintilla\\include\\Scintilla.h	/^#define SCK_TAB /;"	d
SCK_UP	..\\scintilla\\include\\Scintilla.h	/^#define SCK_UP /;"	d
SCK_WIN	..\\scintilla\\include\\Scintilla.h	/^#define SCK_WIN /;"	d
SCLEX_A68K	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_A68K /;"	d
SCLEX_ABAQUS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ABAQUS /;"	d
SCLEX_ADA	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ADA /;"	d
SCLEX_APDL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_APDL /;"	d
SCLEX_AS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_AS /;"	d
SCLEX_ASM	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ASM /;"	d
SCLEX_ASN1	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ASN1 /;"	d
SCLEX_ASYMPTOTE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ASYMPTOTE /;"	d
SCLEX_AU3	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_AU3 /;"	d
SCLEX_AUTOMATIC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_AUTOMATIC /;"	d
SCLEX_AVE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_AVE /;"	d
SCLEX_AVS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_AVS /;"	d
SCLEX_BAAN	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_BAAN /;"	d
SCLEX_BASH	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_BASH /;"	d
SCLEX_BATCH	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_BATCH /;"	d
SCLEX_BIBTEX	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_BIBTEX /;"	d
SCLEX_BLITZBASIC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_BLITZBASIC /;"	d
SCLEX_BULLANT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_BULLANT /;"	d
SCLEX_CAML	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CAML /;"	d
SCLEX_CLW	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CLW /;"	d
SCLEX_CLWNOCASE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CLWNOCASE /;"	d
SCLEX_CMAKE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CMAKE /;"	d
SCLEX_COBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_COBOL /;"	d
SCLEX_COFFEESCRIPT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_COFFEESCRIPT /;"	d
SCLEX_CONF	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CONF /;"	d
SCLEX_CONTAINER	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CONTAINER /;"	d
SCLEX_CPP	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CPP /;"	d
SCLEX_CPPNOCASE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CPPNOCASE /;"	d
SCLEX_CSOUND	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CSOUND /;"	d
SCLEX_CSS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_CSS /;"	d
SCLEX_D	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_D /;"	d
SCLEX_DIFF	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_DIFF /;"	d
SCLEX_DMAP	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_DMAP /;"	d
SCLEX_DMIS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_DMIS /;"	d
SCLEX_ECL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ECL /;"	d
SCLEX_EDIFACT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_EDIFACT /;"	d
SCLEX_EIFFEL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_EIFFEL /;"	d
SCLEX_EIFFELKW	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_EIFFELKW /;"	d
SCLEX_ERLANG	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ERLANG /;"	d
SCLEX_ERRORLIST	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ERRORLIST /;"	d
SCLEX_ESCRIPT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_ESCRIPT /;"	d
SCLEX_F77	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_F77 /;"	d
SCLEX_FLAGSHIP	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_FLAGSHIP /;"	d
SCLEX_FORTH	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_FORTH /;"	d
SCLEX_FORTRAN	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_FORTRAN /;"	d
SCLEX_FREEBASIC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_FREEBASIC /;"	d
SCLEX_GAP	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_GAP /;"	d
SCLEX_GUI4CLI	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_GUI4CLI /;"	d
SCLEX_HASKELL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_HASKELL /;"	d
SCLEX_HTML	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_HTML /;"	d
SCLEX_IHEX	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_IHEX /;"	d
SCLEX_INDENT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_INDENT /;"	d
SCLEX_INNOSETUP	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_INNOSETUP /;"	d
SCLEX_JSON	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_JSON /;"	d
SCLEX_KIX	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_KIX /;"	d
SCLEX_KVIRC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_KVIRC /;"	d
SCLEX_LATEX	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LATEX /;"	d
SCLEX_LISP	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LISP /;"	d
SCLEX_LITERATEHASKELL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LITERATEHASKELL /;"	d
SCLEX_LOT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LOT /;"	d
SCLEX_LOUT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LOUT /;"	d
SCLEX_LPEG	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LPEG /;"	d
SCLEX_LUA	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_LUA /;"	d
SCLEX_MAGIK	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MAGIK /;"	d
SCLEX_MAKEFILE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MAKEFILE /;"	d
SCLEX_MARKDOWN	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MARKDOWN /;"	d
SCLEX_MATLAB	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MATLAB /;"	d
SCLEX_MAXIMA	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MAXIMA /;"	d
SCLEX_METAPOST	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_METAPOST /;"	d
SCLEX_MMIXAL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MMIXAL /;"	d
SCLEX_MODULA	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MODULA /;"	d
SCLEX_MSSQL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MSSQL /;"	d
SCLEX_MYSQL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_MYSQL /;"	d
SCLEX_NIM	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_NIM /;"	d
SCLEX_NIMROD	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_NIMROD /;"	d
SCLEX_NNCRONTAB	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_NNCRONTAB /;"	d
SCLEX_NSIS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_NSIS /;"	d
SCLEX_NULL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_NULL /;"	d
SCLEX_OCTAVE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_OCTAVE /;"	d
SCLEX_OPAL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_OPAL /;"	d
SCLEX_OSCRIPT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_OSCRIPT /;"	d
SCLEX_PASCAL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PASCAL /;"	d
SCLEX_PERL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PERL /;"	d
SCLEX_PHPSCRIPT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PHPSCRIPT /;"	d
SCLEX_PLM	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PLM /;"	d
SCLEX_PO	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PO /;"	d
SCLEX_POV	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_POV /;"	d
SCLEX_POWERBASIC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_POWERBASIC /;"	d
SCLEX_POWERPRO	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_POWERPRO /;"	d
SCLEX_POWERSHELL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_POWERSHELL /;"	d
SCLEX_PROGRESS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PROGRESS /;"	d
SCLEX_PROPERTIES	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PROPERTIES /;"	d
SCLEX_PS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PS /;"	d
SCLEX_PUREBASIC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PUREBASIC /;"	d
SCLEX_PYTHON	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_PYTHON /;"	d
SCLEX_R	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_R /;"	d
SCLEX_REBOL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_REBOL /;"	d
SCLEX_REGISTRY	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_REGISTRY /;"	d
SCLEX_RUBY	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_RUBY /;"	d
SCLEX_RUST	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_RUST /;"	d
SCLEX_SAS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SAS /;"	d
SCLEX_SCRIPTOL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SCRIPTOL /;"	d
SCLEX_SMALLTALK	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SMALLTALK /;"	d
SCLEX_SML	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SML /;"	d
SCLEX_SORCUS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SORCUS /;"	d
SCLEX_SPECMAN	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SPECMAN /;"	d
SCLEX_SPICE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SPICE /;"	d
SCLEX_SQL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SQL /;"	d
SCLEX_SREC	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_SREC /;"	d
SCLEX_STATA	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_STATA /;"	d
SCLEX_STTXT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_STTXT /;"	d
SCLEX_TACL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TACL /;"	d
SCLEX_TADS3	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TADS3 /;"	d
SCLEX_TAL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TAL /;"	d
SCLEX_TCL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TCL /;"	d
SCLEX_TCMD	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TCMD /;"	d
SCLEX_TEHEX	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TEHEX /;"	d
SCLEX_TEX	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TEX /;"	d
SCLEX_TXT2TAGS	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_TXT2TAGS /;"	d
SCLEX_VB	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_VB /;"	d
SCLEX_VBSCRIPT	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_VBSCRIPT /;"	d
SCLEX_VERILOG	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_VERILOG /;"	d
SCLEX_VHDL	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_VHDL /;"	d
SCLEX_VISUALPROLOG	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_VISUALPROLOG /;"	d
SCLEX_XCODE	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_XCODE /;"	d
SCLEX_XML	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_XML /;"	d
SCLEX_YAML	..\\scintilla\\include\\SciLexer.h	/^#define SCLEX_YAML /;"	d
SCMOD_ALT	..\\scintilla\\include\\Scintilla.h	/^#define SCMOD_ALT /;"	d
SCMOD_CTRL	..\\scintilla\\include\\Scintilla.h	/^#define SCMOD_CTRL /;"	d
SCMOD_META	..\\scintilla\\include\\Scintilla.h	/^#define SCMOD_META /;"	d
SCMOD_NORM	..\\scintilla\\include\\Scintilla.h	/^#define SCMOD_NORM /;"	d
SCMOD_SHIFT	..\\scintilla\\include\\Scintilla.h	/^#define SCMOD_SHIFT /;"	d
SCMOD_SUPER	..\\scintilla\\include\\Scintilla.h	/^#define SCMOD_SUPER /;"	d
SCM_DRAG	..\\scintilla\\curses\\ScintillaCurses.h	/^#define SCM_DRAG /;"	d
SCM_PRESS	..\\scintilla\\curses\\ScintillaCurses.h	/^#define SCM_PRESS /;"	d
SCM_RELEASE	..\\scintilla\\curses\\ScintillaCurses.h	/^#define SCM_RELEASE /;"	d
SCN_AUTOCCANCELLED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_AUTOCCANCELLED /;"	d
SCN_AUTOCCHARDELETED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_AUTOCCHARDELETED /;"	d
SCN_AUTOCCOMPLETED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_AUTOCCOMPLETED /;"	d
SCN_AUTOCSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCN_AUTOCSELECTION /;"	d
SCN_AUTOCSELECTIONCHANGE	..\\scintilla\\include\\Scintilla.h	/^#define SCN_AUTOCSELECTIONCHANGE /;"	d
SCN_CALLTIPCLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_CALLTIPCLICK /;"	d
SCN_CHARADDED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_CHARADDED /;"	d
SCN_CLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_CLICK /;"	d
SCN_DOUBLECLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_DOUBLECLICK /;"	d
SCN_DWELLEND	..\\scintilla\\include\\Scintilla.h	/^#define SCN_DWELLEND /;"	d
SCN_DWELLSTART	..\\scintilla\\include\\Scintilla.h	/^#define SCN_DWELLSTART /;"	d
SCN_FOCUSIN	..\\scintilla\\include\\Scintilla.h	/^#define SCN_FOCUSIN /;"	d
SCN_FOCUSOUT	..\\scintilla\\include\\Scintilla.h	/^#define SCN_FOCUSOUT /;"	d
SCN_HOTSPOTCLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_HOTSPOTCLICK /;"	d
SCN_HOTSPOTDOUBLECLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_HOTSPOTDOUBLECLICK /;"	d
SCN_HOTSPOTRELEASECLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_HOTSPOTRELEASECLICK /;"	d
SCN_INDICATORCLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_INDICATORCLICK /;"	d
SCN_INDICATORRELEASE	..\\scintilla\\include\\Scintilla.h	/^#define SCN_INDICATORRELEASE /;"	d
SCN_KEY	..\\scintilla\\include\\Scintilla.h	/^#define SCN_KEY /;"	d
SCN_MACRORECORD	..\\scintilla\\include\\Scintilla.h	/^#define SCN_MACRORECORD /;"	d
SCN_MARGINCLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_MARGINCLICK /;"	d
SCN_MARGINRIGHTCLICK	..\\scintilla\\include\\Scintilla.h	/^#define SCN_MARGINRIGHTCLICK /;"	d
SCN_MODIFIED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_MODIFIED /;"	d
SCN_MODIFYATTEMPTRO	..\\scintilla\\include\\Scintilla.h	/^#define SCN_MODIFYATTEMPTRO /;"	d
SCN_NEEDSHOWN	..\\scintilla\\include\\Scintilla.h	/^#define SCN_NEEDSHOWN /;"	d
SCN_PAINTED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_PAINTED /;"	d
SCN_SAVEPOINTLEFT	..\\scintilla\\include\\Scintilla.h	/^#define SCN_SAVEPOINTLEFT /;"	d
SCN_SAVEPOINTREACHED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_SAVEPOINTREACHED /;"	d
SCN_STYLENEEDED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_STYLENEEDED /;"	d
SCN_UPDATEUI	..\\scintilla\\include\\Scintilla.h	/^#define SCN_UPDATEUI /;"	d
SCN_URIDROPPED	..\\scintilla\\include\\Scintilla.h	/^#define SCN_URIDROPPED /;"	d
SCN_USERLISTSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCN_USERLISTSELECTION /;"	d
SCN_ZOOM	..\\scintilla\\include\\Scintilla.h	/^#define SCN_ZOOM /;"	d
SCNotification	..\\scintilla\\include\\Scintilla.h	/^struct SCNotification {$/;"	s
SCNotification	..\\scintilla\\include\\Scintilla.h	/^typedef struct SCNotification SCNotification;$/;"	t	typeref:struct:SCNotification
SCS_CAP_SETRECONVERTSTRING	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SCS_CAP_SETRECONVERTSTRING /;"	d	file:
SCS_QUERYRECONVERTSTRING	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SCS_QUERYRECONVERTSTRING /;"	d	file:
SCS_SETRECONVERTSTRING	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SCS_SETRECONVERTSTRING /;"	d	file:
SCTD_LONGARROW	..\\scintilla\\include\\Scintilla.h	/^#define SCTD_LONGARROW /;"	d
SCTD_STRIKEOUT	..\\scintilla\\include\\Scintilla.h	/^#define SCTD_STRIKEOUT /;"	d
SCVS_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SCVS_NONE /;"	d
SCVS_NOWRAPLINESTART	..\\scintilla\\include\\Scintilla.h	/^#define SCVS_NOWRAPLINESTART /;"	d
SCVS_RECTANGULARSELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SCVS_RECTANGULARSELECTION /;"	d
SCVS_USERACCESSIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCVS_USERACCESSIBLE /;"	d
SCWIN_TECH_DIRECTWRITE	..\\scintilla\\src\\FontQuality.h	/^#define SCWIN_TECH_DIRECTWRITE /;"	d
SCWIN_TECH_GDI	..\\scintilla\\src\\FontQuality.h	/^#define SCWIN_TECH_GDI /;"	d
SCWS_INVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SCWS_INVISIBLE /;"	d
SCWS_VISIBLEAFTERINDENT	..\\scintilla\\include\\Scintilla.h	/^#define SCWS_VISIBLEAFTERINDENT /;"	d
SCWS_VISIBLEALWAYS	..\\scintilla\\include\\Scintilla.h	/^#define SCWS_VISIBLEALWAYS /;"	d
SCWS_VISIBLEONLYININDENT	..\\scintilla\\include\\Scintilla.h	/^#define SCWS_VISIBLEONLYININDENT /;"	d
SC_ACCESSIBILITY_DISABLED	..\\scintilla\\include\\Scintilla.h	/^#define SC_ACCESSIBILITY_DISABLED /;"	d
SC_ACCESSIBILITY_ENABLED	..\\scintilla\\include\\Scintilla.h	/^#define SC_ACCESSIBILITY_ENABLED /;"	d
SC_AC_COMMAND	..\\scintilla\\include\\Scintilla.h	/^#define SC_AC_COMMAND /;"	d
SC_AC_DOUBLECLICK	..\\scintilla\\include\\Scintilla.h	/^#define SC_AC_DOUBLECLICK /;"	d
SC_AC_FILLUP	..\\scintilla\\include\\Scintilla.h	/^#define SC_AC_FILLUP /;"	d
SC_AC_NEWLINE	..\\scintilla\\include\\Scintilla.h	/^#define SC_AC_NEWLINE /;"	d
SC_AC_TAB	..\\scintilla\\include\\Scintilla.h	/^#define SC_AC_TAB /;"	d
SC_ALPHA_NOALPHA	..\\scintilla\\include\\Scintilla.h	/^#define SC_ALPHA_NOALPHA /;"	d
SC_ALPHA_OPAQUE	..\\scintilla\\include\\Scintilla.h	/^#define SC_ALPHA_OPAQUE /;"	d
SC_ALPHA_TRANSPARENT	..\\scintilla\\include\\Scintilla.h	/^#define SC_ALPHA_TRANSPARENT /;"	d
SC_AUTOMATICFOLD_CHANGE	..\\scintilla\\include\\Scintilla.h	/^#define SC_AUTOMATICFOLD_CHANGE /;"	d
SC_AUTOMATICFOLD_CLICK	..\\scintilla\\include\\Scintilla.h	/^#define SC_AUTOMATICFOLD_CLICK /;"	d
SC_AUTOMATICFOLD_SHOW	..\\scintilla\\include\\Scintilla.h	/^#define SC_AUTOMATICFOLD_SHOW /;"	d
SC_CACHE_CARET	..\\scintilla\\include\\Scintilla.h	/^#define SC_CACHE_CARET /;"	d
SC_CACHE_DOCUMENT	..\\scintilla\\include\\Scintilla.h	/^#define SC_CACHE_DOCUMENT /;"	d
SC_CACHE_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CACHE_NONE /;"	d
SC_CACHE_PAGE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CACHE_PAGE /;"	d
SC_CARETSTICKY_OFF	..\\scintilla\\include\\Scintilla.h	/^#define SC_CARETSTICKY_OFF /;"	d
SC_CARETSTICKY_ON	..\\scintilla\\include\\Scintilla.h	/^#define SC_CARETSTICKY_ON /;"	d
SC_CARETSTICKY_WHITESPACE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CARETSTICKY_WHITESPACE /;"	d
SC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE /;"	d
SC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE /;"	d
SC_CASE_CAMEL	..\\scintilla\\include\\Scintilla.h	/^#define SC_CASE_CAMEL /;"	d
SC_CASE_LOWER	..\\scintilla\\include\\Scintilla.h	/^#define SC_CASE_LOWER /;"	d
SC_CASE_MIXED	..\\scintilla\\include\\Scintilla.h	/^#define SC_CASE_MIXED /;"	d
SC_CASE_UPPER	..\\scintilla\\include\\Scintilla.h	/^#define SC_CASE_UPPER /;"	d
SC_CHARSET_8859_15	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_8859_15 /;"	d
SC_CHARSET_ANSI	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_ANSI /;"	d
SC_CHARSET_ARABIC	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_ARABIC /;"	d
SC_CHARSET_BALTIC	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_BALTIC /;"	d
SC_CHARSET_CHINESEBIG5	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_CHINESEBIG5 /;"	d
SC_CHARSET_CYRILLIC	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_CYRILLIC /;"	d
SC_CHARSET_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_DEFAULT /;"	d
SC_CHARSET_EASTEUROPE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_EASTEUROPE /;"	d
SC_CHARSET_GB2312	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_GB2312 /;"	d
SC_CHARSET_GREEK	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_GREEK /;"	d
SC_CHARSET_HANGUL	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_HANGUL /;"	d
SC_CHARSET_HEBREW	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_HEBREW /;"	d
SC_CHARSET_JOHAB	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_JOHAB /;"	d
SC_CHARSET_MAC	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_MAC /;"	d
SC_CHARSET_OEM	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_OEM /;"	d
SC_CHARSET_OEM866	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_OEM866 /;"	d
SC_CHARSET_RUSSIAN	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_RUSSIAN /;"	d
SC_CHARSET_SHIFTJIS	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_SHIFTJIS /;"	d
SC_CHARSET_SYMBOL	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_SYMBOL /;"	d
SC_CHARSET_THAI	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_THAI /;"	d
SC_CHARSET_TURKISH	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_TURKISH /;"	d
SC_CHARSET_VIETNAMESE	..\\scintilla\\include\\Scintilla.h	/^#define SC_CHARSET_VIETNAMESE /;"	d
SC_CP_UTF8	..\\scintilla\\include\\Scintilla.h	/^#define SC_CP_UTF8 /;"	d
SC_CURSORARROW	..\\scintilla\\include\\Scintilla.h	/^#define SC_CURSORARROW /;"	d
SC_CURSORNORMAL	..\\scintilla\\include\\Scintilla.h	/^#define SC_CURSORNORMAL /;"	d
SC_CURSORREVERSEARROW	..\\scintilla\\include\\Scintilla.h	/^#define SC_CURSORREVERSEARROW /;"	d
SC_CURSORWAIT	..\\scintilla\\include\\Scintilla.h	/^#define SC_CURSORWAIT /;"	d
SC_DOCUMENTOPTION_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SC_DOCUMENTOPTION_DEFAULT /;"	d
SC_DOCUMENTOPTION_STYLES_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_DOCUMENTOPTION_STYLES_NONE /;"	d
SC_EFF_QUALITY_ANTIALIASED	..\\scintilla\\include\\Scintilla.h	/^#define SC_EFF_QUALITY_ANTIALIASED /;"	d
SC_EFF_QUALITY_ANTIALIASED	..\\scintilla\\src\\FontQuality.h	/^#define SC_EFF_QUALITY_ANTIALIASED /;"	d
SC_EFF_QUALITY_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SC_EFF_QUALITY_DEFAULT /;"	d
SC_EFF_QUALITY_DEFAULT	..\\scintilla\\src\\FontQuality.h	/^#define SC_EFF_QUALITY_DEFAULT /;"	d
SC_EFF_QUALITY_LCD_OPTIMIZED	..\\scintilla\\include\\Scintilla.h	/^#define SC_EFF_QUALITY_LCD_OPTIMIZED /;"	d
SC_EFF_QUALITY_LCD_OPTIMIZED	..\\scintilla\\src\\FontQuality.h	/^#define SC_EFF_QUALITY_LCD_OPTIMIZED /;"	d
SC_EFF_QUALITY_MASK	..\\scintilla\\include\\Scintilla.h	/^#define SC_EFF_QUALITY_MASK /;"	d
SC_EFF_QUALITY_MASK	..\\scintilla\\src\\FontQuality.h	/^#define SC_EFF_QUALITY_MASK /;"	d
SC_EFF_QUALITY_NON_ANTIALIASED	..\\scintilla\\include\\Scintilla.h	/^#define SC_EFF_QUALITY_NON_ANTIALIASED /;"	d
SC_EFF_QUALITY_NON_ANTIALIASED	..\\scintilla\\src\\FontQuality.h	/^#define SC_EFF_QUALITY_NON_ANTIALIASED /;"	d
SC_EOL_CR	..\\scintilla\\include\\Scintilla.h	/^#define SC_EOL_CR /;"	d
SC_EOL_CRLF	..\\scintilla\\include\\Scintilla.h	/^#define SC_EOL_CRLF /;"	d
SC_EOL_LF	..\\scintilla\\include\\Scintilla.h	/^#define SC_EOL_LF /;"	d
SC_FOLDACTION_CONTRACT	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDACTION_CONTRACT /;"	d
SC_FOLDACTION_EXPAND	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDACTION_EXPAND /;"	d
SC_FOLDACTION_TOGGLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDACTION_TOGGLE /;"	d
SC_FOLDDISPLAYTEXT_BOXED	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDDISPLAYTEXT_BOXED /;"	d
SC_FOLDDISPLAYTEXT_HIDDEN	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDDISPLAYTEXT_HIDDEN /;"	d
SC_FOLDDISPLAYTEXT_STANDARD	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDDISPLAYTEXT_STANDARD /;"	d
SC_FOLDFLAG_LEVELNUMBERS	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDFLAG_LEVELNUMBERS /;"	d
SC_FOLDFLAG_LINEAFTER_CONTRACTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDFLAG_LINEAFTER_CONTRACTED /;"	d
SC_FOLDFLAG_LINEAFTER_EXPANDED	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDFLAG_LINEAFTER_EXPANDED /;"	d
SC_FOLDFLAG_LINEBEFORE_CONTRACTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDFLAG_LINEBEFORE_CONTRACTED /;"	d
SC_FOLDFLAG_LINEBEFORE_EXPANDED	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDFLAG_LINEBEFORE_EXPANDED /;"	d
SC_FOLDFLAG_LINESTATE	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDFLAG_LINESTATE /;"	d
SC_FOLDLEVELBASE	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDLEVELBASE /;"	d
SC_FOLDLEVELHEADERFLAG	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDLEVELHEADERFLAG /;"	d
SC_FOLDLEVELNUMBERMASK	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDLEVELNUMBERMASK /;"	d
SC_FOLDLEVELWHITEFLAG	..\\scintilla\\include\\Scintilla.h	/^#define SC_FOLDLEVELWHITEFLAG /;"	d
SC_FONT_SIZE_MULTIPLIER	..\\scintilla\\include\\Scintilla.h	/^#define SC_FONT_SIZE_MULTIPLIER /;"	d
SC_IDLESTYLING_AFTERVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_IDLESTYLING_AFTERVISIBLE /;"	d
SC_IDLESTYLING_ALL	..\\scintilla\\include\\Scintilla.h	/^#define SC_IDLESTYLING_ALL /;"	d
SC_IDLESTYLING_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_IDLESTYLING_NONE /;"	d
SC_IDLESTYLING_TOVISIBLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_IDLESTYLING_TOVISIBLE /;"	d
SC_IME_INLINE	..\\scintilla\\include\\Scintilla.h	/^#define SC_IME_INLINE /;"	d
SC_IME_WINDOWED	..\\scintilla\\include\\Scintilla.h	/^#define SC_IME_WINDOWED /;"	d
SC_INDICATOR_CONVERTED	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define SC_INDICATOR_CONVERTED /;"	d	file:
SC_INDICATOR_CONVERTED	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define SC_INDICATOR_CONVERTED /;"	d	file:
SC_INDICATOR_CONVERTED	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SC_INDICATOR_CONVERTED /;"	d	file:
SC_INDICATOR_INPUT	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define SC_INDICATOR_INPUT /;"	d	file:
SC_INDICATOR_INPUT	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define SC_INDICATOR_INPUT /;"	d	file:
SC_INDICATOR_INPUT	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SC_INDICATOR_INPUT /;"	d	file:
SC_INDICATOR_TARGET	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define SC_INDICATOR_TARGET /;"	d	file:
SC_INDICATOR_TARGET	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define SC_INDICATOR_TARGET /;"	d	file:
SC_INDICATOR_TARGET	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SC_INDICATOR_TARGET /;"	d	file:
SC_INDICATOR_UNKNOWN	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define SC_INDICATOR_UNKNOWN /;"	d	file:
SC_INDICATOR_UNKNOWN	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^#define SC_INDICATOR_UNKNOWN /;"	d	file:
SC_INDICATOR_UNKNOWN	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SC_INDICATOR_UNKNOWN /;"	d	file:
SC_INDICFLAG_VALUEFORE	..\\scintilla\\include\\Scintilla.h	/^#define SC_INDICFLAG_VALUEFORE /;"	d
SC_INDICVALUEBIT	..\\scintilla\\include\\Scintilla.h	/^#define SC_INDICVALUEBIT /;"	d
SC_INDICVALUEMASK	..\\scintilla\\include\\Scintilla.h	/^#define SC_INDICVALUEMASK /;"	d
SC_IV_LOOKBOTH	..\\scintilla\\include\\Scintilla.h	/^#define SC_IV_LOOKBOTH /;"	d
SC_IV_LOOKFORWARD	..\\scintilla\\include\\Scintilla.h	/^#define SC_IV_LOOKFORWARD /;"	d
SC_IV_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_IV_NONE /;"	d
SC_IV_REAL	..\\scintilla\\include\\Scintilla.h	/^#define SC_IV_REAL /;"	d
SC_LASTSTEPINUNDOREDO	..\\scintilla\\include\\Scintilla.h	/^#define SC_LASTSTEPINUNDOREDO /;"	d
SC_LINE_END_TYPE_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SC_LINE_END_TYPE_DEFAULT /;"	d
SC_LINE_END_TYPE_UNICODE	..\\scintilla\\include\\Scintilla.h	/^#define SC_LINE_END_TYPE_UNICODE /;"	d
SC_MARGINOPTION_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGINOPTION_NONE /;"	d
SC_MARGINOPTION_SUBLINESELECT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGINOPTION_SUBLINESELECT /;"	d
SC_MARGIN_BACK	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_BACK /;"	d
SC_MARGIN_COLOUR	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_COLOUR /;"	d
SC_MARGIN_FORE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_FORE /;"	d
SC_MARGIN_NUMBER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_NUMBER /;"	d
SC_MARGIN_RTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_RTEXT /;"	d
SC_MARGIN_SYMBOL	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_SYMBOL /;"	d
SC_MARGIN_TEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARGIN_TEXT /;"	d
SC_MARKNUM_FOLDER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDER /;"	d
SC_MARKNUM_FOLDEREND	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDEREND /;"	d
SC_MARKNUM_FOLDERMIDTAIL	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDERMIDTAIL /;"	d
SC_MARKNUM_FOLDEROPEN	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDEROPEN /;"	d
SC_MARKNUM_FOLDEROPENMID	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDEROPENMID /;"	d
SC_MARKNUM_FOLDERSUB	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDERSUB /;"	d
SC_MARKNUM_FOLDERTAIL	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARKNUM_FOLDERTAIL /;"	d
SC_MARK_ARROW	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_ARROW /;"	d
SC_MARK_ARROWDOWN	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_ARROWDOWN /;"	d
SC_MARK_ARROWS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_ARROWS /;"	d
SC_MARK_AVAILABLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_AVAILABLE /;"	d
SC_MARK_BACKGROUND	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_BACKGROUND /;"	d
SC_MARK_BOOKMARK	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_BOOKMARK /;"	d
SC_MARK_BOXMINUS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_BOXMINUS /;"	d
SC_MARK_BOXMINUSCONNECTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_BOXMINUSCONNECTED /;"	d
SC_MARK_BOXPLUS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_BOXPLUS /;"	d
SC_MARK_BOXPLUSCONNECTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_BOXPLUSCONNECTED /;"	d
SC_MARK_CHARACTER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_CHARACTER /;"	d
SC_MARK_CIRCLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_CIRCLE /;"	d
SC_MARK_CIRCLEMINUS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_CIRCLEMINUS /;"	d
SC_MARK_CIRCLEMINUSCONNECTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_CIRCLEMINUSCONNECTED /;"	d
SC_MARK_CIRCLEPLUS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_CIRCLEPLUS /;"	d
SC_MARK_CIRCLEPLUSCONNECTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_CIRCLEPLUSCONNECTED /;"	d
SC_MARK_DOTDOTDOT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_DOTDOTDOT /;"	d
SC_MARK_EMPTY	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_EMPTY /;"	d
SC_MARK_FULLRECT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_FULLRECT /;"	d
SC_MARK_LCORNER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_LCORNER /;"	d
SC_MARK_LCORNERCURVE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_LCORNERCURVE /;"	d
SC_MARK_LEFTRECT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_LEFTRECT /;"	d
SC_MARK_MINUS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_MINUS /;"	d
SC_MARK_PIXMAP	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_PIXMAP /;"	d
SC_MARK_PLUS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_PLUS /;"	d
SC_MARK_RGBAIMAGE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_RGBAIMAGE /;"	d
SC_MARK_ROUNDRECT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_ROUNDRECT /;"	d
SC_MARK_SHORTARROW	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_SHORTARROW /;"	d
SC_MARK_SMALLRECT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_SMALLRECT /;"	d
SC_MARK_TCORNER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_TCORNER /;"	d
SC_MARK_TCORNERCURVE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_TCORNERCURVE /;"	d
SC_MARK_UNDERLINE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_UNDERLINE /;"	d
SC_MARK_VLINE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MARK_VLINE /;"	d
SC_MASK_FOLDERS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MASK_FOLDERS /;"	d
SC_MAX_MARGIN	..\\scintilla\\include\\Scintilla.h	/^#define SC_MAX_MARGIN /;"	d
SC_MODEVENTMASKALL	..\\scintilla\\include\\Scintilla.h	/^#define SC_MODEVENTMASKALL /;"	d
SC_MOD_BEFOREDELETE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_BEFOREDELETE /;"	d
SC_MOD_BEFOREINSERT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_BEFOREINSERT /;"	d
SC_MOD_CHANGEANNOTATION	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGEANNOTATION /;"	d
SC_MOD_CHANGEFOLD	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGEFOLD /;"	d
SC_MOD_CHANGEINDICATOR	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGEINDICATOR /;"	d
SC_MOD_CHANGELINESTATE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGELINESTATE /;"	d
SC_MOD_CHANGEMARGIN	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGEMARGIN /;"	d
SC_MOD_CHANGEMARKER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGEMARKER /;"	d
SC_MOD_CHANGESTYLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGESTYLE /;"	d
SC_MOD_CHANGETABSTOPS	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CHANGETABSTOPS /;"	d
SC_MOD_CONTAINER	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_CONTAINER /;"	d
SC_MOD_DELETETEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_DELETETEXT /;"	d
SC_MOD_INSERTCHECK	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_INSERTCHECK /;"	d
SC_MOD_INSERTTEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_INSERTTEXT /;"	d
SC_MOD_LEXERSTATE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MOD_LEXERSTATE /;"	d
SC_MULTIAUTOC_EACH	..\\scintilla\\include\\Scintilla.h	/^#define SC_MULTIAUTOC_EACH /;"	d
SC_MULTIAUTOC_ONCE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MULTIAUTOC_ONCE /;"	d
SC_MULTILINEUNDOREDO	..\\scintilla\\include\\Scintilla.h	/^#define SC_MULTILINEUNDOREDO /;"	d
SC_MULTIPASTE_EACH	..\\scintilla\\include\\Scintilla.h	/^#define SC_MULTIPASTE_EACH /;"	d
SC_MULTIPASTE_ONCE	..\\scintilla\\include\\Scintilla.h	/^#define SC_MULTIPASTE_ONCE /;"	d
SC_MULTISTEPUNDOREDO	..\\scintilla\\include\\Scintilla.h	/^#define SC_MULTISTEPUNDOREDO /;"	d
SC_ORDER_CUSTOM	..\\scintilla\\include\\Scintilla.h	/^#define SC_ORDER_CUSTOM /;"	d
SC_ORDER_PERFORMSORT	..\\scintilla\\include\\Scintilla.h	/^#define SC_ORDER_PERFORMSORT /;"	d
SC_ORDER_PRESORTED	..\\scintilla\\include\\Scintilla.h	/^#define SC_ORDER_PRESORTED /;"	d
SC_PERFORMED_REDO	..\\scintilla\\include\\Scintilla.h	/^#define SC_PERFORMED_REDO /;"	d
SC_PERFORMED_UNDO	..\\scintilla\\include\\Scintilla.h	/^#define SC_PERFORMED_UNDO /;"	d
SC_PERFORMED_USER	..\\scintilla\\include\\Scintilla.h	/^#define SC_PERFORMED_USER /;"	d
SC_PHASES_MULTIPLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_PHASES_MULTIPLE /;"	d
SC_PHASES_ONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_PHASES_ONE /;"	d
SC_PHASES_TWO	..\\scintilla\\include\\Scintilla.h	/^#define SC_PHASES_TWO /;"	d
SC_POPUP_ALL	..\\scintilla\\include\\Scintilla.h	/^#define SC_POPUP_ALL /;"	d
SC_POPUP_NEVER	..\\scintilla\\include\\Scintilla.h	/^#define SC_POPUP_NEVER /;"	d
SC_POPUP_TEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_POPUP_TEXT /;"	d
SC_PRINT_BLACKONWHITE	..\\scintilla\\include\\Scintilla.h	/^#define SC_PRINT_BLACKONWHITE /;"	d
SC_PRINT_COLOURONWHITE	..\\scintilla\\include\\Scintilla.h	/^#define SC_PRINT_COLOURONWHITE /;"	d
SC_PRINT_COLOURONWHITEDEFAULTBG	..\\scintilla\\include\\Scintilla.h	/^#define SC_PRINT_COLOURONWHITEDEFAULTBG /;"	d
SC_PRINT_INVERTLIGHT	..\\scintilla\\include\\Scintilla.h	/^#define SC_PRINT_INVERTLIGHT /;"	d
SC_PRINT_NORMAL	..\\scintilla\\include\\Scintilla.h	/^#define SC_PRINT_NORMAL /;"	d
SC_SEL_LINES	..\\scintilla\\include\\Scintilla.h	/^#define SC_SEL_LINES /;"	d
SC_SEL_RECTANGLE	..\\scintilla\\include\\Scintilla.h	/^#define SC_SEL_RECTANGLE /;"	d
SC_SEL_STREAM	..\\scintilla\\include\\Scintilla.h	/^#define SC_SEL_STREAM /;"	d
SC_SEL_THIN	..\\scintilla\\include\\Scintilla.h	/^#define SC_SEL_THIN /;"	d
SC_STARTACTION	..\\scintilla\\include\\Scintilla.h	/^#define SC_STARTACTION /;"	d
SC_STATUS_BADALLOC	..\\scintilla\\include\\Scintilla.h	/^#define SC_STATUS_BADALLOC /;"	d
SC_STATUS_FAILURE	..\\scintilla\\include\\Scintilla.h	/^#define SC_STATUS_FAILURE /;"	d
SC_STATUS_OK	..\\scintilla\\include\\Scintilla.h	/^#define SC_STATUS_OK /;"	d
SC_STATUS_WARN_REGEX	..\\scintilla\\include\\Scintilla.h	/^#define SC_STATUS_WARN_REGEX /;"	d
SC_STATUS_WARN_START	..\\scintilla\\include\\Scintilla.h	/^#define SC_STATUS_WARN_START /;"	d
SC_TECHNOLOGY_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SC_TECHNOLOGY_DEFAULT /;"	d
SC_TECHNOLOGY_DIRECTWRITE	..\\scintilla\\include\\Scintilla.h	/^#define SC_TECHNOLOGY_DIRECTWRITE /;"	d
SC_TECHNOLOGY_DIRECTWRITEDC	..\\scintilla\\include\\Scintilla.h	/^#define SC_TECHNOLOGY_DIRECTWRITEDC /;"	d
SC_TECHNOLOGY_DIRECTWRITERETAIN	..\\scintilla\\include\\Scintilla.h	/^#define SC_TECHNOLOGY_DIRECTWRITERETAIN /;"	d
SC_TIME_FOREVER	..\\scintilla\\include\\Scintilla.h	/^#define SC_TIME_FOREVER /;"	d
SC_TYPE_BOOLEAN	..\\scintilla\\include\\Scintilla.h	/^#define SC_TYPE_BOOLEAN /;"	d
SC_TYPE_INTEGER	..\\scintilla\\include\\Scintilla.h	/^#define SC_TYPE_INTEGER /;"	d
SC_TYPE_STRING	..\\scintilla\\include\\Scintilla.h	/^#define SC_TYPE_STRING /;"	d
SC_UPDATE_CONTENT	..\\scintilla\\include\\Scintilla.h	/^#define SC_UPDATE_CONTENT /;"	d
SC_UPDATE_H_SCROLL	..\\scintilla\\include\\Scintilla.h	/^#define SC_UPDATE_H_SCROLL /;"	d
SC_UPDATE_SELECTION	..\\scintilla\\include\\Scintilla.h	/^#define SC_UPDATE_SELECTION /;"	d
SC_UPDATE_V_SCROLL	..\\scintilla\\include\\Scintilla.h	/^#define SC_UPDATE_V_SCROLL /;"	d
SC_WEIGHT_BOLD	..\\scintilla\\include\\Scintilla.h	/^#define SC_WEIGHT_BOLD /;"	d
SC_WEIGHT_NORMAL	..\\scintilla\\include\\Scintilla.h	/^#define SC_WEIGHT_NORMAL /;"	d
SC_WEIGHT_SEMIBOLD	..\\scintilla\\include\\Scintilla.h	/^#define SC_WEIGHT_SEMIBOLD /;"	d
SC_WIN_IDLE	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SC_WIN_IDLE /;"	d	file:
SC_WRAPINDENT_FIXED	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPINDENT_FIXED /;"	d
SC_WRAPINDENT_INDENT	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPINDENT_INDENT /;"	d
SC_WRAPINDENT_SAME	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPINDENT_SAME /;"	d
SC_WRAPVISUALFLAGLOC_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAGLOC_DEFAULT /;"	d
SC_WRAPVISUALFLAGLOC_END_BY_TEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAGLOC_END_BY_TEXT /;"	d
SC_WRAPVISUALFLAGLOC_START_BY_TEXT	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAGLOC_START_BY_TEXT /;"	d
SC_WRAPVISUALFLAG_END	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAG_END /;"	d
SC_WRAPVISUALFLAG_MARGIN	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAG_MARGIN /;"	d
SC_WRAPVISUALFLAG_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAG_NONE /;"	d
SC_WRAPVISUALFLAG_START	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAPVISUALFLAG_START /;"	d
SC_WRAP_CHAR	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAP_CHAR /;"	d
SC_WRAP_NONE	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAP_NONE /;"	d
SC_WRAP_WHITESPACE	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAP_WHITESPACE /;"	d
SC_WRAP_WORD	..\\scintilla\\include\\Scintilla.h	/^#define SC_WRAP_WORD /;"	d
SDI	..\\scite\\win32\\DirectorExtension.cxx	/^unsigned int SDI = 0;$/;"	v	typeref:typename:unsigned int
SELECTION_H	..\\scintilla\\src\\Selection.h	/^#define SELECTION_H$/;"	d
SETARG_A	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SETARG_A(/;"	d	signature:(i,u)
SETARG_B	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SETARG_B(/;"	d	signature:(i,b)
SETARG_Bx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SETARG_Bx(/;"	d	signature:(i,b)
SETARG_C	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SETARG_C(/;"	d	signature:(i,b)
SETARG_sBx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SETARG_sBx(/;"	d	signature:(i,b)
SET_OPCODE	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SET_OPCODE(/;"	d	signature:(i,o)
SFIXEDBIT	..\\scintilla\\lua\\src\\lgc.h	/^#define SFIXEDBIT	/;"	d
SIZE_A	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SIZE_A	/;"	d
SIZE_B	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SIZE_B	/;"	d
SIZE_Bx	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SIZE_Bx	/;"	d
SIZE_C	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SIZE_C	/;"	d
SIZE_OP	..\\scintilla\\lua\\src\\lopcodes.h	/^#define SIZE_OP	/;"	d
SPACING	..\\scintilla\\gtk\\PlatGTK.cxx	/^#define SPACING /;"	d	file:
SPARSESTATE_H	..\\scintilla\\lexlib\\SparseState.h	/^#define SPARSESTATE_H$/;"	d
SPARSEVECTOR_H	..\\scintilla\\src\\SparseVector.h	/^#define SPARSEVECTOR_H$/;"	d
SPECIALS	..\\scintilla\\lua\\src\\lstrlib.c	/^#define SPECIALS	/;"	d	file:
SPI_GETFONTSMOOTHINGCONTRAST	..\\scintilla\\win32\\PlatWin.cxx	/^#define SPI_GETFONTSMOOTHINGCONTRAST	/;"	d	file:
SPI_GETWHEELSCROLLLINES	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^#define SPI_GETWHEELSCROLLLINES /;"	d	file:
SPI_GETWHEELSCROLLLINES	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define SPI_GETWHEELSCROLLLINES /;"	d	file:
SPLITVECTOR_H	..\\scintilla\\src\\SplitVector.h	/^#define SPLITVECTOR_H$/;"	d
SParser	..\\scintilla\\lua\\src\\ldo.c	/^struct SParser {  \/* data to `f_parser' *\/$/;"	s	file:
SPositionFromLineX	..\\scintilla\\src\\EditView.cxx	/^SelectionPosition EditView::SPositionFromLineX(Surface *surface, const EditModel &model, Sci::Li/;"	f	class:EditView	typeref:typename:SelectionPosition	signature:(Surface * surface,const EditModel & model,Sci::Line lineDoc,int x,const ViewStyle & vs)
SPositionFromLineX	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::SPositionFromLineX(Sci::Line lineDoc, int x) {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(Sci::Line lineDoc,int x)
SPositionFromLocation	..\\scintilla\\src\\EditView.cxx	/^SelectionPosition EditView::SPositionFromLocation(Surface *surface, const EditModel &model, Poin/;"	f	class:EditView	typeref:typename:SelectionPosition	signature:(Surface * surface,const EditModel & model,PointDocument pt,bool canReturnInvalid,bool charPosition,bool virtualSpace,const ViewStyle & vs)
SPositionFromLocation	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::SPositionFromLocation(Point pt, bool canReturnInvalid, bool charPositi/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:(Point pt,bool canReturnInvalid,bool charPosition,bool virtualSpace)
SS	..\\scintilla\\lua\\src\\print.c	/^#define SS(/;"	d	file:	signature:(x)
SSM	..\\scintilla\\curses\\jinx\\jinx.c	/^#define SSM(/;"	d	file:	signature:(m,w,l)
STDMETHODIMP_	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG) ScintillaWin::AddRef() {$/;"	f	signature:(ULONG)
STDMETHODIMP_	..\\scintilla\\win32\\ScintillaWin.cxx	/^STDMETHODIMP_(ULONG) ScintillaWin::Release() {$/;"	f	signature:(ULONG)
STRINGCOPY_H	..\\scintilla\\lexlib\\StringCopy.h	/^#define STRINGCOPY_H$/;"	d
STYLECONTEXT_H	..\\scintilla\\lexlib\\StyleContext.h	/^#define STYLECONTEXT_H$/;"	d
STYLEWRITER_H	..\\scite\\src\\StyleWriter.h	/^#define STYLEWRITER_H$/;"	d
STYLE_BRACEBAD	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_BRACEBAD /;"	d
STYLE_BRACELIGHT	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_BRACELIGHT /;"	d
STYLE_CALLTIP	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_CALLTIP /;"	d
STYLE_CONTROLCHAR	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_CONTROLCHAR /;"	d
STYLE_DEFAULT	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_DEFAULT /;"	d
STYLE_FOLDDISPLAYTEXT	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_FOLDDISPLAYTEXT /;"	d
STYLE_H	..\\scintilla\\src\\Style.h	/^#define STYLE_H$/;"	d
STYLE_INDENTGUIDE	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_INDENTGUIDE /;"	d
STYLE_LASTPREDEFINED	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_LASTPREDEFINED /;"	d
STYLE_LINENUMBER	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_LINENUMBER /;"	d
STYLE_MAX	..\\scintilla\\include\\Scintilla.h	/^#define STYLE_MAX /;"	d
SUBJIDX	..\\scintilla\\lua\\src\\lptypes.h	/^#define SUBJIDX	/;"	d
SUBSTYLES_H	..\\scintilla\\lexlib\\SubStyles.h	/^#define SUBSTYLES_H$/;"	d
SUPPLEMENTAL_PLANE_FIRST	..\\scintilla\\src\\UniConversion.h	/^enum { SUPPLEMENTAL_PLANE_FIRST = 0x10000 };$/;"	e	enum:Scintilla::__anonc8c742100603	access:public
SURROGATE_FIRST_VALUE	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_FIRST_VALUE = 0x10000 };$/;"	e	enum:__anonbaac78eb0503	file:	access:public
SURROGATE_LEAD_FIRST	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	e	enum:Scintilla::__anonc8c742100203	access:public
SURROGATE_LEAD_FIRST	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	e	enum:__anonbaac78eb0103	file:	access:public
SURROGATE_LEAD_FIRST	..\\scite\\win32\\GUIWin.cxx	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	e	enum:GUI::__anon76ce46bc0103	file:	access:public
SURROGATE_LEAD_LAST	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_LEAD_LAST = 0xDBFF };$/;"	e	enum:Scintilla::__anonc8c742100303	access:public
SURROGATE_LEAD_LAST	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_LEAD_LAST = 0xDBFF };$/;"	e	enum:__anonbaac78eb0203	file:	access:public
SURROGATE_TRAIL_FIRST	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	e	enum:Scintilla::__anonc8c742100403	access:public
SURROGATE_TRAIL_FIRST	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	e	enum:__anonbaac78eb0303	file:	access:public
SURROGATE_TRAIL_FIRST	..\\scite\\win32\\GUIWin.cxx	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	e	enum:GUI::__anon76ce46bc0203	file:	access:public
SURROGATE_TRAIL_LAST	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	e	enum:Scintilla::__anonc8c742100503	access:public
SURROGATE_TRAIL_LAST	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	e	enum:__anonbaac78eb0403	file:	access:public
SURROGATE_TRAIL_LAST	..\\scite\\win32\\GUIWin.cxx	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	e	enum:GUI::__anon76ce46bc0303	file:	access:public
SWndProc	..\\scintilla\\win32\\ScintillaWin.cxx	/^LRESULT PASCAL ScintillaWin::SWndProc($/;"	f	class:ScintillaWin	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
SafeGetCharAt	..\\scintilla\\lexlib\\LexAccessor.h	/^	char SafeGetCharAt(Sci_Position position, char chDefault=' ') {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:char	access:public	signature:(Sci_Position position,char chDefault=' ')
SafeGetCharAt	..\\scite\\src\\StyleWriter.h	/^	char SafeGetCharAt(int position, char chDefault=' ') {$/;"	f	class:TextReader	typeref:typename:char	access:public	signature:(int position,char chDefault=' ')
SafeSegment	..\\scintilla\\src\\Document.cxx	/^int Document::SafeSegment(const char *text, int length, int lengthSegment) const {$/;"	f	class:Document	typeref:typename:int	signature:(const char * text,int length,int lengthSegment) const
SameAs	..\\scintilla\\win32\\PlatWin.cxx	/^bool FontCached::SameAs(const FontParameters &fp) {$/;"	f	class:Scintilla::FontCached	typeref:typename:bool	signature:(const FontParameters & fp)
SameNameAs	..\\scite\\src\\FilePath.cxx	/^bool FilePath::SameNameAs(const FilePath &other) const {$/;"	f	class:FilePath	typeref:typename:bool	signature:(const FilePath & other) const
SameNameAs	..\\scite\\src\\FilePath.cxx	/^bool FilePath::SameNameAs(const GUI::gui_char *other) const {$/;"	f	class:FilePath	typeref:typename:bool	signature:(const GUI::gui_char * other) const
Save	..\\scintilla\\src\\ViewStyle.cxx	/^const char *FontNames::Save(const char *name) {$/;"	f	class:FontNames	typeref:typename:const char *	signature:(const char * name)
Save	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::Save(SaveFlags sf) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(SaveFlags sf)
SaveACopy	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveACopy() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveACopy	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveACopy() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveAllBuffers	..\\scite\\src\\SciTEBuffers.cxx	/^SciTEBase::SaveResult SciTEBase::SaveAllBuffers(bool alwaysYes) {$/;"	f	class:SciTEBase	typeref:typename:SciTEBase::SaveResult	signature:(bool alwaysYes)
SaveAs	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::SaveAs(const GUI::gui_char *file, bool fixCase) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const GUI::gui_char * file,bool fixCase)
SaveAsDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::SaveAsDialog() {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:()
SaveAsDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^bool SciTEWin::SaveAsDialog() {$/;"	f	class:SciTEWin	typeref:typename:bool	signature:()
SaveAsHTML	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveAsHTML() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveAsHTML	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveAsHTML() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveAsPDF	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveAsPDF() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveAsPDF	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveAsPDF() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveAsRTF	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveAsRTF() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveAsRTF	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveAsRTF() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveAsTEX	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveAsTEX() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveAsTEX	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveAsTEX() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveAsXML	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveAsXML() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveAsXML	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveAsXML() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveAsXXX	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::SaveAsXXX(FileFormat fmt, const char *title, const char *ext) {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:(FileFormat fmt,const char * title,const char * ext)
SaveBuffer	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::SaveBuffer(FilePath saveName, SaveFlags sf) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(FilePath saveName,SaveFlags sf)
SaveFlags	..\\scite\\src\\SciTEBase.h	/^	enum SaveFlags {$/;"	g	class:SciTEBase	access:protected
SaveIfNotOpen	..\\scite\\src\\SciTEIO.cxx	/^bool SciTEBase::SaveIfNotOpen(const FilePath &destFile, bool fixCase) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const FilePath & destFile,bool fixCase)
SaveIfUnsure	..\\scite\\src\\SciTEIO.cxx	/^SciTEBase::SaveResult SciTEBase::SaveIfUnsure(bool forceQuestion, SaveFlags sf) {$/;"	f	class:SciTEBase	typeref:typename:SciTEBase::SaveResult	signature:(bool forceQuestion,SaveFlags sf)
SaveIfUnsureAll	..\\scite\\src\\SciTEIO.cxx	/^SciTEBase::SaveResult SciTEBase::SaveIfUnsureAll() {$/;"	f	class:SciTEBase	typeref:typename:SciTEBase::SaveResult	signature:()
SaveIfUnsureForBuilt	..\\scite\\src\\SciTEIO.cxx	/^SciTEBase::SaveResult SciTEBase::SaveIfUnsureForBuilt() {$/;"	f	class:SciTEBase	typeref:typename:SciTEBase::SaveResult	signature:()
SaveName	..\\scite\\src\\SciTEIO.cxx	/^FilePath SciTEBase::SaveName(const char *ext) const {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:(const char * ext) const
SaveResult	..\\scite\\src\\SciTEBase.h	/^	enum SaveResult {$/;"	g	class:SciTEBase	access:protected
SaveSessionDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SaveSessionDialog() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SaveSessionDialog	..\\scite\\src\\SciTEBase.h	/^	virtual void SaveSessionDialog() {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:()
SaveSessionDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::SaveSessionDialog() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SaveSessionFile	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SaveSessionFile(const GUI::gui_char *sessionName) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const GUI::gui_char * sessionName)
SaveTitledBuffers	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SaveTitledBuffers() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SaveToHTML	..\\scite\\src\\ExportHTML.cxx	/^void SciTEBase::SaveToHTML(FilePath saveName) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath saveName)
SaveToPDF	..\\scite\\src\\ExportPDF.cxx	/^void SciTEBase::SaveToPDF(FilePath saveName) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath saveName)
SaveToRTF	..\\scite\\src\\ExportRTF.cxx	/^void SciTEBase::SaveToRTF(FilePath saveName, int start, int end) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath saveName,int start,int end)
SaveToStreamRTF	..\\scite\\src\\ExportRTF.cxx	/^void SciTEBase::SaveToStreamRTF(std::ostream &os, int start, int end) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(std::ostream & os,int start,int end)
SaveToTEX	..\\scite\\src\\ExportTEX.cxx	/^void SciTEBase::SaveToTEX(FilePath saveName) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath saveName)
SaveToXML	..\\scite\\src\\ExportXML.cxx	/^void SciTEBase::SaveToXML(FilePath saveName) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath saveName)
SavingInBackground	..\\scite\\src\\SciTEBuffers.cxx	/^bool BufferList::SavingInBackground() const {$/;"	f	class:BufferList	typeref:typename:bool	signature:() const
Sci	..\\scintilla\\src\\Position.h	/^namespace Sci {$/;"	n
SciFnDirect	..\\scintilla\\include\\Scintilla.h	/^typedef sptr_t (*SciFnDirect)(sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam);$/;"	t	typeref:typename:sptr_t (*)(sptr_t ptr,unsigned int iMessage,uptr_t wParam,sptr_t lParam)
SciIcon_xpm	..\\scite\\gtk\\SciIcon.h	/^static const char * SciIcon_xpm[] = {$/;"	v	typeref:typename:const char * []
SciMessageFromEM	..\\scintilla\\win32\\ScintillaWin.cxx	/^static unsigned int SciMessageFromEM(unsigned int iMessage) {$/;"	f	typeref:typename:unsigned int	file:	signature:(unsigned int iMessage)
SciNotify	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	static void SciNotify(GtkWidget *widget, gint code, SCNotification *nt, gpointer data) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:void	access:private	signature:(GtkWidget * widget,gint code,SCNotification * nt,gpointer data)
SciNotifyFunc	..\\scintilla\\cocoa\\ScintillaView.h	/^typedef void(*SciNotifyFunc) (intptr_t windowid, unsigned int iMessage, uintptr_t wParam, uintpt/;"	t	typeref:typename:void (*)(intptr_t windowid,unsigned int iMessage,uintptr_t wParam,uintptr_t lParam)
SciTEBase	..\\scite\\src\\SciTEBase.cxx	/^SciTEBase::SciTEBase(Extension *ext) : apis(true), extender(ext) {$/;"	f	class:SciTEBase	signature:(Extension * ext)
SciTEBase	..\\scite\\src\\SciTEBase.h	/^class SciTEBase : public ExtensionAPI, public Searcher, public WorkerListener {$/;"	c	inherits:ExtensionAPI,Searcher,WorkerListener
SciTEGTK	..\\scite\\gtk\\SciTEGTK.cxx	/^SciTEGTK::SciTEGTK(Extension *ext) : SciTEBase(ext) {$/;"	f	class:SciTEGTK	signature:(Extension * ext)
SciTEGTK	..\\scite\\gtk\\SciTEGTK.cxx	/^class SciTEGTK : public SciTEBase {$/;"	c	file:	inherits:SciTEBase
SciTEItemFactoryEntry	..\\scite\\gtk\\SciTEGTK.cxx	/^struct SciTEItemFactoryEntry {$/;"	s	file:
SciTEKeys	..\\scite\\src\\SciTEKeys.h	/^class SciTEKeys {$/;"	c
SciTEWin	..\\scite\\win32\\SciTEWin.cxx	/^SciTEWin::SciTEWin(Extension *ext) : SciTEBase(ext) {$/;"	f	class:SciTEWin	signature:(Extension * ext)
SciTEWin	..\\scite\\win32\\SciTEWin.h	/^class SciTEWin : public SciTEBase {$/;"	c	inherits:SciTEBase
Sci_CharacterRange	..\\scintilla\\include\\Scintilla.h	/^struct Sci_CharacterRange {$/;"	s
Sci_NotifyHeader	..\\scintilla\\include\\Scintilla.h	/^struct Sci_NotifyHeader {$/;"	s
Sci_NotifyHeader	..\\scintilla\\include\\Scintilla.h	/^typedef struct Sci_NotifyHeader Sci_NotifyHeader;$/;"	t	typeref:struct:Sci_NotifyHeader
Sci_Position	..\\scintilla\\include\\Sci_Position.h	/^typedef ptrdiff_t Sci_Position;$/;"	t	typeref:typename:ptrdiff_t
Sci_PositionCR	..\\scintilla\\include\\Sci_Position.h	/^typedef long Sci_PositionCR;$/;"	t	typeref:typename:long
Sci_PositionU	..\\scintilla\\include\\Sci_Position.h	/^typedef size_t Sci_PositionU;$/;"	t	typeref:typename:size_t
Sci_RangeToFormat	..\\scintilla\\include\\Scintilla.h	/^struct Sci_RangeToFormat {$/;"	s
Sci_Rectangle	..\\scintilla\\include\\Scintilla.h	/^struct Sci_Rectangle {$/;"	s
Sci_SurfaceID	..\\scintilla\\include\\Scintilla.h	/^typedef void *Sci_SurfaceID;$/;"	t	typeref:typename:void *
Sci_TextRange	..\\scintilla\\include\\Scintilla.h	/^struct Sci_TextRange {$/;"	s
Sci_TextToFind	..\\scintilla\\include\\Scintilla.h	/^struct Sci_TextToFind {$/;"	s
Scintilla	..\\scintilla\\cocoa\\PlatCocoa.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\curses\\jinx\\jinx.c	/^typedef void Scintilla;$/;"	t	typeref:typename:void	file:
Scintilla	..\\scintilla\\gtk\\Converter.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\gtk\\PlatGTK.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\gtk\\ScintillaGTK.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\include\\ILexer.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\include\\Platform.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\Accessor.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\lexlib\\CharacterCategory.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\CharacterSet.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\lexlib\\CharacterSet.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\DefaultLexer.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\LexAccessor.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\LexerBase.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\LexerModule.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\LexerNoExceptions.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\LexerSimple.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\OptionSet.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\PropSetSimple.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\SparseState.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\StringCopy.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\StyleContext.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\SubStyles.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\lexlib\\WordList.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\AutoComplete.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\CallTip.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\CaseConvert.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\src\\CaseConvert.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\CaseFolder.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Catalogue.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\CellBuffer.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\CharClassify.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\ContractionState.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\DBCS.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\src\\DBCS.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Decoration.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Document.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\EditModel.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\EditView.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\src\\EditView.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Editor.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\ExternalLexer.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\FontQuality.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Indicator.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\KeyMap.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\LineMarker.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\MarginView.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\src\\MarginView.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Partitioning.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\PerLine.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\PositionCache.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\RESearch.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\RunStyles.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\ScintillaBase.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\src\\ScintillaBase.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Selection.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\SparseVector.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\SplitVector.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\Style.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\UniConversion.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\src\\UniConversion.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\UnicodeFromUTF8.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\UniqueString.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\ViewStyle.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\src\\XPM.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\win32\\HanjaDic.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\win32\\HanjaDic.h	/^namespace Scintilla {$/;"	n
Scintilla	..\\scintilla\\win32\\PlatWin.cxx	/^namespace Scintilla {$/;"	n	file:
Scintilla	..\\scintilla\\win32\\PlatWin.h	/^namespace Scintilla {$/;"	n
ScintillaBase	..\\scintilla\\src\\ScintillaBase.cxx	/^ScintillaBase::ScintillaBase() {$/;"	f	class:ScintillaBase	signature:()
ScintillaBase	..\\scintilla\\src\\ScintillaBase.h	/^class ScintillaBase : public Editor, IListBoxDelegate {$/;"	c	namespace:Scintilla	inherits:Editor,IListBoxDelegate
ScintillaClass	..\\scintilla\\include\\ScintillaWidget.h	/^typedef struct _ScintillaClass  ScintillaClass;$/;"	t	typeref:struct:_ScintillaClass
ScintillaCocoa	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^class ScintillaCocoa : public ScintillaBase$/;"	c	namespace:Scintilla	inherits:ScintillaBase
ScintillaCurses	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  ScintillaCurses(void (*callback_)(void *, int, void *, void *)) :$/;"	f	class:ScintillaCurses	file:	access:public	signature:(void (* callback_)(void *,int,void *,void *))
ScintillaCurses	..\\scintilla\\curses\\ScintillaCurses.cxx	/^class ScintillaCurses : public ScintillaBase {$/;"	c	file:	inherits:ScintillaBase
ScintillaData	..\\scintilla\\scripts\\ScintillaData.py	/^class ScintillaData:$/;"	c	inherits:	access:public
ScintillaDocument	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^ScintillaDocument::ScintillaDocument(QObject *parent, void *pdoc_) :$/;"	f	class:ScintillaDocument	signature:(QObject * parent,void * pdoc_)
ScintillaDocument	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.h	/^class EXPORT_IMPORT_API ScintillaDocument : public QObject$/;"	c	inherits:QObject
ScintillaEditBase	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^ScintillaEditBase::ScintillaEditBase(QWidget *parent)$/;"	f	class:ScintillaEditBase	signature:(QWidget * parent)
ScintillaEditBase	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^class EXPORT_IMPORT_API ScintillaEditBase : public QAbstractScrollArea {$/;"	c	inherits:QAbstractScrollArea
ScintillaFailure	..\\scite\\src\\GUI.h	/^	explicit ScintillaFailure(sptr_t status_) : status(status_) {$/;"	f	struct:GUI::ScintillaFailure	access:public	signature:(sptr_t status_)
ScintillaFailure	..\\scite\\src\\GUI.h	/^struct ScintillaFailure {$/;"	s	namespace:GUI
ScintillaGTK	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^ScintillaGTK::ScintillaGTK(_ScintillaObject *sci_) :$/;"	f	class:ScintillaGTK	signature:(_ScintillaObject * sci_)
ScintillaGTK	..\\scintilla\\gtk\\ScintillaGTK.h	/^class ScintillaGTK : public ScintillaBase {$/;"	c	namespace:Scintilla	inherits:ScintillaBase
ScintillaGTKAccessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^ScintillaGTKAccessible::ScintillaGTKAccessible(GtkAccessible *accessible_, GtkWidget *widget_) :$/;"	f	class:ScintillaGTKAccessible	signature:(GtkAccessible * accessible_,GtkWidget * widget_)
ScintillaGTKAccessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^class ScintillaGTKAccessible {$/;"	c	namespace:Scintilla
ScintillaObject	..\\scintilla\\include\\ScintillaWidget.h	/^typedef struct _ScintillaObject ScintillaObject;$/;"	t	typeref:struct:_ScintillaObject
ScintillaObjectAccessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^typedef GtkAccessible ScintillaObjectAccessible;$/;"	t	typeref:typename:GtkAccessible	file:
ScintillaObjectAccessibleClass	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^typedef GtkAccessibleClass ScintillaObjectAccessibleClass;$/;"	t	typeref:typename:GtkAccessibleClass	file:
ScintillaObjectAccessibleFactory	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^typedef AtkObjectFactory ScintillaObjectAccessibleFactory;$/;"	t	typeref:typename:AtkObjectFactory	file:
ScintillaObjectAccessibleFactoryClass	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^typedef AtkObjectFactoryClass ScintillaObjectAccessibleFactoryClass;$/;"	t	typeref:typename:AtkObjectFactoryClass	file:
ScintillaObjectAccessiblePrivate	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^struct ScintillaObjectAccessiblePrivate {$/;"	s	file:
ScintillaObjectClass	..\\scintilla\\include\\ScintillaWidget.h	/^typedef struct _ScintillaClass  ScintillaObjectClass;$/;"	t	typeref:struct:_ScintillaClass
ScintillaQt	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^ScintillaQt::ScintillaQt(QAbstractScrollArea *parent)$/;"	f	class:ScintillaQt	signature:(QAbstractScrollArea * parent)
ScintillaQt	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^class ScintillaQt : public QObject, public ScintillaBase {$/;"	c	namespace:Scintilla	inherits:QObject,ScintillaBase
ScintillaRectangularMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	ScintillaRectangularMime() : QMacPasteboardMime(MIME_ALL) {$/;"	f	class:ScintillaRectangularMime	file:	access:public	signature:()
ScintillaRectangularMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^class ScintillaRectangularMime : public QMacPasteboardMime {$/;"	c	file:	inherits:QMacPasteboardMime
ScintillaWin	..\\scintilla\\win32\\ScintillaWin.cxx	/^ScintillaWin::ScintillaWin(HWND hwnd) {$/;"	f	class:ScintillaWin	signature:(HWND hwnd)
ScintillaWin	..\\scintilla\\win32\\ScintillaWin.cxx	/^class ScintillaWin :$/;"	c	file:	inherits:ScintillaBase
ScintillaWindow	..\\scite\\src\\GUI.h	/^	ScintillaWindow() : fn(0), ptr(0), status() {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:()
ScintillaWindow	..\\scite\\src\\GUI.h	/^class ScintillaWindow : public Window {$/;"	c	namespace:GUI	inherits:Window
Scintilla_LinkLexers	..\\scintilla\\src\\Catalogue.cxx	/^int Scintilla_LinkLexers() {$/;"	f	typeref:typename:int	signature:()
Scintilla_RegisterClasses	..\\scintilla\\win32\\ScintillaWin.cxx	/^int Scintilla_RegisterClasses(void *hInstance) {$/;"	f	typeref:typename:int	signature:(void * hInstance)
Scintilla_ReleaseResources	..\\scintilla\\win32\\ScintillaWin.cxx	/^int Scintilla_ReleaseResources() {$/;"	f	typeref:typename:int	signature:()
ScrollEditorIfNeeded	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ScrollEditorIfNeeded() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ScrollEvent	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::ScrollEvent(GtkWidget *widget, GdkEventScroll *event) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventScroll * event)
ScrollHSignal	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ScrollHSignal(GtkAdjustment *adj, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkAdjustment * adj,ScintillaGTK * sciThis)
ScrollMessage	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ScrollMessage(WPARAM wParam) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(WPARAM wParam)
ScrollRange	..\\scintilla\\src\\Editor.cxx	/^void Editor::ScrollRange(SelectionRange range) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionRange range)
ScrollSignal	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ScrollSignal(GtkAdjustment *adj, ScintillaGTK *sciThis) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkAdjustment * adj,ScintillaGTK * sciThis)
ScrollText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::ScrollText(Sci::Line linesToMove) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(Sci::Line linesToMove)
ScrollText	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::ScrollText(Sci::Line linesToMove)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(Sci::Line linesToMove)
ScrollText	..\\scintilla\\src\\Editor.cxx	/^void Editor::ScrollText(Sci::Line \/* linesToMove *\/) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line)
ScrollText	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ScrollText(Sci::Line \/* linesToMove *\/) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(Sci::Line)
ScrollTo	..\\scintilla\\src\\Editor.cxx	/^void Editor::ScrollTo(Sci::Line line, bool moveThumb) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line line,bool moveThumb)
SearchAnchor	..\\scintilla\\src\\Editor.cxx	/^void Editor::SearchAnchor() {$/;"	f	class:Editor	typeref:typename:void	signature:()
SearchFlags	..\\scite\\src\\SciTEBase.cxx	/^int SciTEBase::SearchFlags(bool regularExpressions) const {$/;"	f	class:SciTEBase	typeref:typename:int	signature:(bool regularExpressions) const
SearchInTarget	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::SearchInTarget(const char *text, Sci::Position length) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(const char * text,Sci::Position length)
SearchOption	..\\scite\\src\\SciTEBase.h	/^struct SearchOption {$/;"	s
SearchOtherInstance	..\\scite\\win32\\UniqueInstance.cxx	/^BOOL CALLBACK UniqueInstance::SearchOtherInstance(HWND hWnd, LPARAM lParam) {$/;"	f	class:UniqueInstance	typeref:typename:BOOL CALLBACK	signature:(HWND hWnd,LPARAM lParam)
SearchStrip	..\\scite\\win32\\Strips.h	/^	SearchStrip() {$/;"	f	class:SearchStrip	access:public	signature:()
SearchStrip	..\\scite\\win32\\Strips.h	/^class SearchStrip : public SearchStripBase {$/;"	c	inherits:SearchStripBase
SearchStripBase	..\\scite\\win32\\Strips.h	/^	SearchStripBase() : pSearcher(0), hbrNoMatch(0) {$/;"	f	class:SearchStripBase	access:public	signature:()
SearchStripBase	..\\scite\\win32\\Strips.h	/^class SearchStripBase : public Strip {$/;"	c	inherits:Strip
SearchText	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::SearchText($/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
SearchUI	..\\scite\\src\\SciTEBase.h	/^	SearchUI() : pSearcher(0) {$/;"	f	class:SearchUI	access:public	signature:()
SearchUI	..\\scite\\src\\SciTEBase.h	/^class SearchUI {$/;"	c
Searcher	..\\scite\\src\\SciTEBase.cxx	/^Searcher::Searcher() {$/;"	f	class:Searcher	signature:()
Searcher	..\\scite\\src\\SciTEBase.h	/^class Searcher {$/;"	c
Select	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void Select(int n) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(int n)
Select	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::Select(int n) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(int n)
Select	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::Select(int n)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int n)
Select	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::Select(const char *word) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(const char * word)
Select	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::Select(int n) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int n)
SelectAll	..\\scintilla\\src\\Editor.cxx	/^void Editor::SelectAll() {$/;"	f	class:Editor	typeref:typename:void	signature:()
SelectedRange	..\\scite\\src\\SciTEBase.h	/^	SelectedRange(int position_= INVALID_POSITION, int anchor_= INVALID_POSITION) :$/;"	f	struct:SelectedRange	access:public	signature:(int position_=INVALID_POSITION,int anchor_=INVALID_POSITION)
SelectedRange	..\\scite\\src\\SciTEBase.h	/^struct SelectedRange {$/;"	s
Selection	..\\scintilla\\src\\Selection.cxx	/^Selection::Selection() : mainRange(0), moveExtends(false), tentativeMain(false), selType(selStre/;"	f	class:Selection	signature:()
Selection	..\\scintilla\\src\\Selection.h	/^class Selection {$/;"	c	namespace:Scintilla
SelectionAdd	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SelectionAdd(AddSelection add) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(AddSelection add)
SelectionBackground	..\\scintilla\\src\\EditView.cxx	/^static ColourDesired SelectionBackground(const ViewStyle &vsDraw, bool main, bool primarySelecti/;"	f	typeref:typename:ColourDesired	file:	signature:(const ViewStyle & vsDraw,bool main,bool primarySelection)
SelectionBackgroundDrawn	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::SelectionBackgroundDrawn() const {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:() const
SelectionChanged	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::SelectionChanged()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
SelectionClear	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gint ScintillaGTK::SelectionClear(GtkWidget *widget, GdkEventSelection *selection_event) {$/;"	f	class:ScintillaGTK	typeref:typename:gint	signature:(GtkWidget * widget,GdkEventSelection * selection_event)
SelectionContainsProtected	..\\scintilla\\src\\Editor.cxx	/^bool Editor::SelectionContainsProtected() {$/;"	f	class:Editor	typeref:typename:bool	signature:()
SelectionEmpty	..\\scintilla\\src\\Editor.cxx	/^bool Editor::SelectionEmpty() const {$/;"	f	class:Editor	typeref:typename:bool	signature:() const
SelectionEnd	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::SelectionEnd() {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:()
SelectionExtend	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::SelectionExtend($/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(bool (SciTEBase::* ischarforsel)(char ch),bool stripEol)
SelectionFilename	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::SelectionFilename() {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:()
SelectionGet	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SelectionGet(GtkWidget *widget,$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GtkSelectionData * selection_data,guint info,guint)
SelectionIntoFind	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SelectionIntoFind(bool stripEol \/*=true*\/) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool stripEol)
SelectionIntoProperties	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SelectionIntoProperties() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SelectionOfGSD	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static GdkAtom SelectionOfGSD(GtkSelectionData *sd) { return gtk_selection_data_get_selection(sd/;"	f	typeref:typename:GdkAtom	file:	signature:(GtkSelectionData * sd)
SelectionPosition	..\\scintilla\\src\\Selection.h	/^	explicit SelectionPosition(Sci::Position position_=INVALID_POSITION, Sci::Position virtualSpace/;"	f	class:Scintilla::SelectionPosition	access:public	signature:(Sci::Position position_=INVALID_POSITION,Sci::Position virtualSpace_=0)
SelectionPosition	..\\scintilla\\src\\Selection.h	/^class SelectionPosition {$/;"	c	namespace:Scintilla
SelectionRange	..\\scintilla\\src\\Selection.h	/^	SelectionRange() : caret(), anchor() {$/;"	f	struct:Scintilla::SelectionRange	access:public	signature:()
SelectionRange	..\\scintilla\\src\\Selection.h	/^	SelectionRange(Sci::Position caret_, Sci::Position anchor_) : caret(caret_), anchor(anchor_) {$/;"	f	struct:Scintilla::SelectionRange	access:public	signature:(Sci::Position caret_,Sci::Position anchor_)
SelectionRange	..\\scintilla\\src\\Selection.h	/^	SelectionRange(SelectionPosition caret_, SelectionPosition anchor_) : caret(caret_), anchor(anc/;"	f	struct:Scintilla::SelectionRange	access:public	signature:(SelectionPosition caret_,SelectionPosition anchor_)
SelectionRange	..\\scintilla\\src\\Selection.h	/^	explicit SelectionRange(Sci::Position single) : caret(single), anchor(single) {$/;"	f	struct:Scintilla::SelectionRange	access:public	signature:(Sci::Position single)
SelectionRange	..\\scintilla\\src\\Selection.h	/^	explicit SelectionRange(SelectionPosition single) : caret(single), anchor(single) {$/;"	f	struct:Scintilla::SelectionRange	access:public	signature:(SelectionPosition single)
SelectionRange	..\\scintilla\\src\\Selection.h	/^struct SelectionRange {$/;"	s	namespace:Scintilla
SelectionReceived	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SelectionReceived(GtkWidget *widget,$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GtkSelectionData * selection_data,guint)
SelectionSegment	..\\scintilla\\src\\Selection.h	/^	SelectionSegment() : start(), end() {$/;"	f	struct:Scintilla::SelectionSegment	access:public	signature:()
SelectionSegment	..\\scintilla\\src\\Selection.h	/^	SelectionSegment(SelectionPosition a, SelectionPosition b) {$/;"	f	struct:Scintilla::SelectionSegment	access:public	signature:(SelectionPosition a,SelectionPosition b)
SelectionSegment	..\\scintilla\\src\\Selection.h	/^struct SelectionSegment {$/;"	s	namespace:Scintilla
SelectionStart	..\\scintilla\\src\\Editor.cxx	/^SelectionPosition Editor::SelectionStart() {$/;"	f	class:Editor	typeref:typename:SelectionPosition	signature:()
SelectionText	..\\scintilla\\src\\Editor.h	/^	SelectionText() : rectangular(false), lineCopy(false), codePage(0), characterSet(0) {}$/;"	f	class:Scintilla::SelectionText	access:public	signature:()
SelectionText	..\\scintilla\\src\\Editor.h	/^class SelectionText {$/;"	c	namespace:Scintilla
SelectionToHangul	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SelectionToHangul() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
SelectionWord	..\\scite\\src\\SciTEBase.cxx	/^std::string SciTEBase::SelectionWord(bool stripEol \/*=true*\/) {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(bool stripEol)
SemInfo	..\\scintilla\\lua\\src\\llex.h	/^} SemInfo;  \/* semantics information *\/$/;"	t	typeref:union:__anoncfedf8d1010a
Send	..\\scite\\gtk\\GUIGTK.cxx	/^sptr_t ScintillaWindow::Send(unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:sptr_t	signature:(unsigned int msg,uptr_t wParam,sptr_t lParam)
Send	..\\scite\\src\\SciTEBase.cxx	/^sptr_t SciTEBase::Send(Pane p, unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	typeref:typename:sptr_t	signature:(Pane p,unsigned int msg,uptr_t wParam,sptr_t lParam)
Send	..\\scite\\win32\\GUIWin.cxx	/^sptr_t ScintillaWindow::Send(unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:sptr_t	signature:(unsigned int msg,uptr_t wParam,sptr_t lParam)
SendCommands	..\\scite\\win32\\UniqueInstance.cxx	/^void UniqueInstance::SendCommands(const char *cmdLine) {$/;"	f	class:UniqueInstance	typeref:typename:void	signature:(const char * cmdLine)
SendDirector	..\\scite\\gtk\\DirectorExtension.cxx	/^static void SendDirector(const char *verb, const char *arg = 0) {$/;"	f	typeref:typename:void	file:	signature:(const char * verb,const char * arg=0)
SendDirector	..\\scite\\win32\\DirectorExtension.cxx	/^static void SendDirector(const char *verb, const char *arg = 0) {$/;"	f	typeref:typename:void	file:	signature:(const char * verb,const char * arg=0)
SendDirector	..\\scite\\win32\\DirectorExtension.cxx	/^static void SendDirector(const char *verb, sptr_t arg) {$/;"	f	typeref:typename:void	file:	signature:(const char * verb,sptr_t arg)
SendFileName	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SendFileName(int sendPipe, const char* filename) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int sendPipe,const char * filename)
SendOneProperty	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SendOneProperty(const char *kind, const char *key, const char *val) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * kind,const char * key,const char * val)
SendPipeAvailable	..\\scite\\gtk\\DirectorExtension.cxx	/^static bool SendPipeAvailable() {$/;"	f	typeref:typename:bool	file:	signature:()
SendPipeCommand	..\\scite\\gtk\\DirectorExtension.cxx	/^static bool SendPipeCommand(const char *pipeCommand) {$/;"	f	typeref:typename:bool	file:	signature:(const char * pipeCommand)
SendProperty	..\\scite\\gtk\\DirectorExtension.cxx	/^bool DirectorExtension::SendProperty(const char *prop) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * prop)
SendProperty	..\\scite\\src\\Extender.h	/^	virtual bool SendProperty(const char *) { return false; }$/;"	f	class:Extension	typeref:typename:bool	access:public	signature:(const char *)
SendProperty	..\\scite\\src\\MultiplexExtension.cxx	/^bool MultiplexExtension::SendProperty(const char *prop) {$/;"	f	class:MultiplexExtension	typeref:typename:bool	signature:(const char * prop)
SendProperty	..\\scite\\win32\\DirectorExtension.cxx	/^bool DirectorExtension::SendProperty(const char *prop) {$/;"	f	class:DirectorExtension	typeref:typename:bool	signature:(const char * prop)
Sensitive	..\\scite\\gtk\\Widget.cxx	/^bool WBase::Sensitive() {$/;"	f	class:WBase	typeref:typename:bool	signature:()
SepBuilder	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^class SepBuilder:$/;"	c	inherits:	access:public
SeqEnd	..\\scite\\src\\SciTEBuffers.cxx	/^static bool SeqEnd(int ch) {$/;"	f	typeref:typename:bool	file:	signature:(int ch)
Session	..\\scite\\src\\SciTEBase.h	/^class Session {$/;"	c
Set	..\\scintilla\\include\\Platform.h	/^	void Set(const char *val) {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:void	access:public	signature:(const char * val)
Set	..\\scintilla\\include\\Platform.h	/^	void Set(long lcol) {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:void	access:public	signature:(long lcol)
Set	..\\scintilla\\include\\Platform.h	/^	void Set(unsigned int red, unsigned int green, unsigned int blue) {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:void	access:public	signature:(unsigned int red,unsigned int green,unsigned int blue)
Set	..\\scintilla\\lexlib\\OptionSet.h	/^		bool Set(T *base, const char *val) const {$/;"	f	struct:Scintilla::OptionSet::Option	typeref:typename:bool	access:public	signature:(T * base,const char * val) const
Set	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^void PropSetSimple::Set(const char *key, const char *val, int lenKey, int lenVal) {$/;"	f	class:PropSetSimple	typeref:typename:void	signature:(const char * key,const char * val,int lenKey,int lenVal)
Set	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^void PropSetSimple::Set(const char *keyVal) {$/;"	f	class:PropSetSimple	typeref:typename:void	signature:(const char * keyVal)
Set	..\\scintilla\\lexlib\\SparseState.h	/^	void Set(Sci_Position position, T value) {$/;"	f	class:Scintilla::SparseState	typeref:typename:void	access:public	signature:(Sci_Position position,T value)
Set	..\\scintilla\\lexlib\\WordList.cxx	/^void WordList::Set(const char *s) {$/;"	f	class:WordList	typeref:typename:void	signature:(const char * s)
Set	..\\scintilla\\src\\EditView.h	/^	void Set(LineLayout *ll_) {$/;"	f	class:Scintilla::AutoLineLayout	typeref:typename:void	access:public	signature:(LineLayout * ll_)
Set	..\\scintilla\\src\\PositionCache.cxx	/^void PositionCacheEntry::Set(unsigned int styleNumber_, const char *s_,$/;"	f	class:PositionCacheEntry	typeref:typename:void	signature:(unsigned int styleNumber_,const char * s_,unsigned int len_,XYPOSITION * positions_,unsigned int clock_)
Set	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::Set(int control, const char *value) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(int control,const char * value)
Set	..\\scite\\src\\FilePath.cxx	/^void FilePath::Set(FilePath const &directory, FilePath const &name) {$/;"	f	class:FilePath	typeref:typename:void	signature:(FilePath const & directory,FilePath const & name)
Set	..\\scite\\src\\FilePath.cxx	/^void FilePath::Set(FilePath const &other) {$/;"	f	class:FilePath	typeref:typename:void	signature:(FilePath const & other)
Set	..\\scite\\src\\FilePath.cxx	/^void FilePath::Set(const GUI::gui_char *fileName_) {$/;"	f	class:FilePath	typeref:typename:void	signature:(const GUI::gui_char * fileName_)
Set	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::Set(const char *key, const char *val, ptrdiff_t lenKey, ptrdiff_t lenVal) {$/;"	f	class:PropSetFile	typeref:typename:void	signature:(const char * key,const char * val,ptrdiff_t lenKey,ptrdiff_t lenVal)
Set	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::Set(const char *keyVal) {$/;"	f	class:PropSetFile	typeref:typename:void	signature:(const char * keyVal)
Set	..\\scite\\src\\StringList.cxx	/^void StringList::Set(const char *s) {$/;"	f	class:StringList	typeref:typename:void	signature:(const char * s)
Set	..\\scite\\src\\StringList.cxx	/^void StringList::Set(const std::vector<char> &data) {$/;"	f	class:StringList	typeref:typename:void	signature:(const std::vector<char> & data)
Set	..\\scite\\win32\\Strips.cxx	/^void UserStrip::Set(int control, const char *value) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(int control,const char * value)
SetAboutMessage	..\\scite\\src\\Credits.cxx	/^void SciTEBase::SetAboutMessage(GUI::ScintillaWindow &wsci, const char *appTitle) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & wsci,const char * appTitle)
SetAboutStyle	..\\scite\\src\\Credits.cxx	/^static void SetAboutStyle(GUI::ScintillaWindow &wsci, int style, Colour fore) {$/;"	f	typeref:typename:void	file:	signature:(GUI::ScintillaWindow & wsci,int style,Colour fore)
SetAccessibility	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::SetAccessibility() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:()
SetActive	..\\scite\\gtk\\Widget.cxx	/^void WCheckDraw::SetActive(bool active) {$/;"	f	class:WCheckDraw	typeref:typename:void	signature:(bool active)
SetActive	..\\scite\\gtk\\Widget.cxx	/^void WToggle::SetActive(bool active) {$/;"	f	class:WToggle	typeref:typename:void	signature:(bool active)
SetAdjustmentValue	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void SetAdjustmentValue(GtkAdjustment *object, int value) {$/;"	f	typeref:typename:void	file:	signature:(GtkAdjustment * object,int value)
SetAnnotationHeights	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetAnnotationHeights(Sci::Line start, Sci::Line end) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line start,Sci::Line end)
SetAnnotationVisible	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetAnnotationVisible(int visible) {$/;"	f	class:Editor	typeref:typename:void	signature:(int visible)
SetAt	..\\scite\\src\\Containers.h	/^	void SetAt(ARG_KEY key, ARG_VALUE newValue) { $/;"	f	class:TMap	typeref:typename:void	access:public	signature:(ARG_KEY key,ARG_VALUE newValue)
SetAt	..\\scite\\src\\Containers.h	/^	void SetAt(T_POSITION pos, ARG_TYPE newElement) {$/;"	f	class:TList	typeref:typename:void	access:public	signature:(T_POSITION pos,ARG_TYPE newElement)
SetAt	..\\scite\\src\\Containers.h	/^	void SetAt(int nIndex, ARG_TYPE newElement) {$/;"	f	class:TArray	typeref:typename:void	access:public	signature:(int nIndex,ARG_TYPE newElement)
SetAverageCharWidth	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetAverageCharWidth(int width) {}$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(int width)
SetAverageCharWidth	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::SetAverageCharWidth(int width) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(int width)
SetAverageCharWidth	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::SetAverageCharWidth(int \/*width*\/) {}$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int)
SetAverageCharWidth	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetAverageCharWidth(int width) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int width)
SetBraceHighlight	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetBraceHighlight(Sci::Position pos0, Sci::Position pos1, int matchStyle) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position pos0,Sci::Position pos1,int matchStyle)
SetBracesHighlight	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayout::SetBracesHighlight(Range rangeLine, const Sci::Position braces[],$/;"	f	class:LineLayout	typeref:typename:void	signature:(Range rangeLine,const Sci::Position braces[],char bracesMatchStyle,int xHighlight,bool ignoreStyle)
SetBuffersMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetBuffersMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetCairoColour	..\\scite\\gtk\\SciTEGTK.cxx	/^static void SetCairoColour(cairo_t *cr, long co) {$/;"	f	typeref:typename:void	file:	signature:(cairo_t * cr,long co)
SetCancelFlag	..\\scite\\src\\JobQueue.h	/^	long SetCancelFlag(long value) {$/;"	f	class:JobQueue	typeref:typename:long	access:public	signature:(long value)
SetCandidateWindowPos	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SetCandidateWindowPos() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
SetCandidateWindowPos	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SetCandidateWindowPos() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
SetCaretAsStart	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetCaretAsStart() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetCaretOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::AtkTextIface::SetCaretOffset(AtkText *text, gint offset) {$/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gboolean	signature:(AtkText * text,gint offset)
SetCaretOffset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::SetCaretOffset(int charOffset) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gboolean	signature:(int charOffset)
SetCaseFolder	..\\scintilla\\src\\Document.cxx	/^void Document::SetCaseFolder(CaseFolder *pcf_) {$/;"	f	class:Document	typeref:typename:void	signature:(CaseFolder * pcf_)
SetCaseSensitiveFilenames	..\\scite\\src\\PropSetFile.h	/^	static void SetCaseSensitiveFilenames(bool caseSensitiveFilenames_) {$/;"	f	class:PropSetFile	typeref:typename:void	access:public	signature:(bool caseSensitiveFilenames_)
SetChangeFunction	..\\scite\\gtk\\Widget.cxx	/^void WCheckDraw::SetChangeFunction(ChangeFunction cdfn_, void *user_) {$/;"	f	class:WCheckDraw	typeref:typename:void	signature:(ChangeFunction cdfn_,void * user_)
SetCharClasses	..\\scintilla\\src\\CharClassify.cxx	/^void CharClassify::SetCharClasses(const unsigned char *chars, cc newCharClass) {$/;"	f	class:CharClassify	typeref:typename:void	signature:(const unsigned char * chars,cc newCharClass)
SetCharClasses	..\\scintilla\\src\\Document.cxx	/^void Document::SetCharClasses(const unsigned char *chars, CharClassify::cc newCharClass) {$/;"	f	class:Document	typeref:typename:void	signature:(const unsigned char * chars,CharClassify::cc newCharClass)
SetCheck	..\\scite\\win32\\SciTEWinDlg.cxx	/^	void SetCheck(int id, bool value) {$/;"	f	class:Dialog	typeref:typename:void	file:	access:public	signature:(int id,bool value)
SetClickNotified	..\\scintilla\\src\\Decoration.h	/^	void SetClickNotified(bool notified) {$/;"	f	class:Scintilla::DecorationList	typeref:typename:void	access:public	signature:(bool notified)
SetClip	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetClip(PRectangle rc) {$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(PRectangle rc)
SetClip	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::SetClip(PRectangle rc) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(PRectangle rc)
SetClip	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::SetClip(PRectangle rc)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(PRectangle rc)
SetClip	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::SetClip(PRectangle rc) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(PRectangle rc)
SetClip	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::SetClip(PRectangle rc) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(PRectangle rc)
SetClip	..\\scintilla\\win32\\ScintillaWin.cxx	/^	void SetClip(UINT uFormat) {$/;"	f	class:GlobalMemory	typeref:typename:void	file:	access:public	signature:(UINT uFormat)
SetCoalescableTimerFn	..\\scintilla\\win32\\ScintillaWin.cxx	/^	SetCoalescableTimerSig SetCoalescableTimerFn;$/;"	m	class:ScintillaWin	typeref:typename:SetCoalescableTimerSig	file:	access:private
SetCoalescableTimerSig	..\\scintilla\\win32\\ScintillaWin.cxx	/^typedef UINT_PTR (WINAPI *SetCoalescableTimerSig)(HWND hwnd, UINT_PTR nIDEvent,$/;"	t	typeref:typename:UINT_PTR (WINAPI *)(HWND hwnd,UINT_PTR nIDEvent,UINT uElapse,TIMERPROC lpTimerFunc,ULONG uToleranceDelay)	file:
SetCodePage	..\\scite\\src\\StyleWriter.h	/^	void SetCodePage(int codePage_) {$/;"	f	class:TextReader	typeref:typename:void	access:public	signature:(int codePage_)
SetCodec	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::SetCodec(Font &font)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(Font & font)
SetComboFromMemory	..\\scite\\win32\\Strips.cxx	/^static void SetComboFromMemory(GUI::Window w, const ComboMemory &mem) {$/;"	f	typeref:typename:void	file:	signature:(GUI::Window w,const ComboMemory & mem)
SetCompleted	..\\scite\\src\\Worker.h	/^	void SetCompleted() {$/;"	f	struct:Worker	typeref:typename:void	access:public	signature:()
SetConverter	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::SetConverter(int characterSet_) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(int characterSet_)
SetCtrlID	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetCtrlID(int identifier) {$/;"	f	class:Editor	typeref:typename:void	signature:(int identifier)
SetCtrlID	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SetCtrlID(int identifier) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(int identifier)
SetCurrent	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::SetCurrent(int index) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int index)
SetCurrentIndicator	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::SetCurrentIndicator(int indicator) {$/;"	f	class:DecorationList	typeref:typename:void	signature:(int indicator)
SetCurrentValue	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::SetCurrentValue(int value) {$/;"	f	class:DecorationList	typeref:typename:void	signature:(int value)
SetCursor	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::SetCursor(Cursor curs) {}$/;"	f	class:Window	typeref:typename:void	signature:(Cursor curs)
SetCursor	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::SetCursor(Cursor curs) {$/;"	f	class:Window	typeref:typename:void	signature:(Cursor curs)
SetCursor	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::SetCursor(Cursor curs)$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(Cursor curs)
SetCursor	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::SetCursor(Cursor curs) {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(Cursor curs)
SetDBCSCodePage	..\\scintilla\\src\\Document.cxx	/^bool Document::SetDBCSCodePage(int dbcsCodePage_) {$/;"	f	class:Document	typeref:typename:bool	signature:(int dbcsCodePage_)
SetDBCSMode	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetDBCSMode(int codePage) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(int codePage)
SetDBCSMode	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::SetDBCSMode(int codePage) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(int codePage)
SetDBCSMode	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::SetDBCSMode(int codePage_)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(int codePage_)
SetDBCSMode	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::SetDBCSMode(int codePage_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(int codePage_)
SetDBCSMode	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::SetDBCSMode(int codePage_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(int codePage_)
SetDefaultCharClasses	..\\scintilla\\src\\CharClassify.cxx	/^void CharClassify::SetDefaultCharClasses(bool includeWordClass) {$/;"	f	class:CharClassify	typeref:typename:void	signature:(bool includeWordClass)
SetDefaultCharClasses	..\\scintilla\\src\\Document.cxx	/^void Document::SetDefaultCharClasses(bool includeWordClass) {$/;"	f	class:Document	typeref:typename:void	signature:(bool includeWordClass)
SetDelegate	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetDelegate(IListBoxDelegate *lbDelegate) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(IListBoxDelegate * lbDelegate)
SetDelegate	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::SetDelegate(IListBoxDelegate *lbDelegate) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(IListBoxDelegate * lbDelegate)
SetDelegate	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::SetDelegate(IListBoxDelegate *lbDelegate)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(IListBoxDelegate * lbDelegate)
SetDelegate	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetDelegate(IListBoxDelegate *lbDelegate) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(IListBoxDelegate * lbDelegate)
SetDescription	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::SetDescription(const char *description) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(const char * description)
SetDescription	..\\scite\\win32\\Strips.cxx	/^void UserStrip::SetDescription(const char *description) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(const char * description)
SetDirectory	..\\scite\\src\\FilePath.cxx	/^void FilePath::SetDirectory(FilePath directory) {$/;"	f	class:FilePath	typeref:typename:void	signature:(FilePath directory)
SetDllDirectorySig	..\\scite\\win32\\SciTEWin.cxx	/^	typedef BOOL (WINAPI *SetDllDirectorySig)(LPCTSTR lpPathName);$/;"	t	function:WinMain	typeref:typename:BOOL (WINAPI *)(LPCTSTR lpPathName)	file:
SetDocPointer	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SetDocPointer(Document *document) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(Document * document)
SetDocPointer	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetDocPointer(Document *document) {$/;"	f	class:Editor	typeref:typename:void	signature:(Document * document)
SetDocumentAt	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetDocumentAt(int index, bool updateStack) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int index,bool updateStack)
SetDragPosition	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetDragPosition(SelectionPosition newPos) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition newPos)
SetEmptySelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetEmptySelection(Sci::Position currentPos_) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position currentPos_)
SetEmptySelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetEmptySelection(SelectionPosition currentPos_) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition currentPos_)
SetEol	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetEol() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetErrorStatus	..\\scintilla\\src\\Document.cxx	/^void SCI_METHOD Document::SetErrorStatus(int status) {$/;"	f	class:Document	typeref:typename:void SCI_METHOD	signature:(int status)
SetExecuting	..\\scite\\src\\JobQueue.h	/^	void SetExecuting(bool state) {$/;"	f	class:JobQueue	typeref:typename:void	access:public	signature:(bool state)
SetExpanded	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::SetExpanded(Sci::Line lineDoc, bool isExpanded) {$/;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDoc,bool isExpanded)
SetExtender	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::SetExtender(Extension *extender_) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(Extension * extender_)
SetExtender	..\\scite\\win32\\Strips.cxx	/^void UserStrip::SetExtender(Extension *extender_) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(Extension * extender_)
SetExternal	..\\scintilla\\src\\ExternalLexer.cxx	/^void ExternalLexerModule::SetExternal(GetLexerFactoryFunction fFactory, int index) {$/;"	f	class:ExternalLexerModule	typeref:typename:void	signature:(GetLexerFactoryFunction fFactory,int index)
SetFileName	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::SetFileName(FilePath openName, bool fixCase) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FilePath openName,bool fixCase)
SetFileProperties	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetFileProperties(PropSetFile &ps) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(PropSetFile & ps)
SetFileProperties	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SetFileProperties($/;"	f	class:SciTEWin	typeref:typename:void	signature:(PropSetFile & ps)
SetFileStackMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetFileStackMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetFillUpChars	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::SetFillUpChars(const char *fillUpChars_) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(const char * fillUpChars_)
SetFilter	..\\scite\\src\\PropSetFile.cxx	/^void ImportFilter::SetFilter(std::string sExcludes, std::string sIncludes) {$/;"	f	class:ImportFilter	typeref:typename:void	signature:(std::string sExcludes,std::string sIncludes)
SetFind	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetFind(const char *sFind) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * sFind)
SetFindText	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetFindText(const char *sFind) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * sFind)
SetFlags	..\\scintilla\\src\\Indicator.cxx	/^void Indicator::SetFlags(int attributes_) {$/;"	f	class:Indicator	typeref:typename:void	signature:(int attributes_)
SetFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^void SetFocus(GUI::ScintillaWindow &w) {$/;"	f	typeref:typename:void	signature:(GUI::ScintillaWindow & w)
SetFocusState	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetFocusState(bool focusState) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool focusState)
SetFoldDisplayText	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::SetFoldDisplayText(Sci::Line lineDoc, const char *text) {$/;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDoc,const char * text)
SetFoldExpanded	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetFoldExpanded(Sci::Line lineDoc, bool expanded) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line lineDoc,bool expanded)
SetFont	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetFont(Font &font) {}$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(Font & font)
SetFont	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::SetFont(Font &) {}$/;"	f	class:Window	typeref:typename:void	signature:(Font &)
SetFont	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::SetFont(Font &font) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(Font & font)
SetFont	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::SetFont(Font &) {$/;"	f	class:Window	typeref:typename:void	signature:(Font &)
SetFont	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::SetFont(Font &font)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(Font & font)
SetFont	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::SetFont(Font &font)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(Font & font)
SetFont	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::SetFont(Font &font)$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(Font & font)
SetFont	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetFont(Font &font) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(Font & font)
SetFont	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::SetFont(Font &font_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(Font & font_)
SetFont	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::SetFont(Font &font_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(Font & font_)
SetFont	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::SetFont(Font &font) {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(Font & font)
SetFontHandle	..\\scite\\win32\\Strips.cxx	/^static void SetFontHandle(const GUI::Window &w, HFONT hfont) {$/;"	f	typeref:typename:void	file:	signature:(const GUI::Window & w,HFONT hfont)
SetForeBack	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::SetForeBack( ColourDesired fore, ColourDesired back) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(ColourDesired fore,ColourDesired back)
SetForeBack	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::SetForeBack( ColourDesired fore, ColourDesired back) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(ColourDesired fore,ColourDesired back)
SetForeBack	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::SetForeBack(const ColourDesired &fore, const ColourDesired &back) {$/;"	f	class:CallTip	typeref:typename:void	signature:(const ColourDesired & fore,const ColourDesired & back)
SetForeBack	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetForeBack( ColourDesired fore, ColourDesired back) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(ColourDesired fore,ColourDesired back)
SetFromListText	..\\scite\\src\\StringList.cxx	/^void StringList::SetFromListText() {$/;"	f	class:StringList	typeref:typename:void	signature:()
SetGrowSize	..\\scintilla\\src\\SplitVector.h	/^	void SetGrowSize(ptrdiff_t growSize_) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t growSize_)
SetHeight	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::SetHeight(Sci::Line lineDoc, int height) {$/;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDoc,int height)
SetHighlight	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::SetHighlight(int start, int end) {$/;"	f	class:CallTip	typeref:typename:void	signature:(int start,int end)
SetHomeProperties	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetHomeProperties() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetHorizontalScrollPos	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetHorizontalScrollPos() {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
SetHorizontalScrollPos	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SetHorizontalScrollPos() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
SetHorizontalScrollPos	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::SetHorizontalScrollPos()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
SetHorizontalScrollPos	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SetHorizontalScrollPos() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
SetHotSpotRange	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetHotSpotRange(const Point *pt) {$/;"	f	class:Editor	typeref:typename:void	signature:(const Point * pt)
SetHoverIndicatorPoint	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetHoverIndicatorPoint(Point pt) {$/;"	f	class:Editor	typeref:typename:void	signature:(Point pt)
SetHoverIndicatorPosition	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetHoverIndicatorPosition(Sci::Position position) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position position)
SetID	..\\scintilla\\include\\Platform.h	/^	void SetID(FontID fid_) { fid = fid_; }$/;"	f	class:Scintilla::Font	typeref:typename:void	access:public	signature:(FontID fid_)
SetID	..\\scite\\src\\GUI.h	/^	void SetID(WindowID wid_) {$/;"	f	class:GUI::ScintillaWindow	typeref:typename:void	access:public	signature:(WindowID wid_)
SetID	..\\scite\\src\\GUI.h	/^	void SetID(WindowID wid_) {$/;"	f	class:GUI::Window	typeref:typename:void	access:public	signature:(WindowID wid_)
SetIcon	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetIcon() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SetIdentifiers	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^void SCI_METHOD DefaultLexer::SetIdentifiers(int, const char *) {$/;"	f	class:DefaultLexer	typeref:typename:void SCI_METHOD	signature:(int,const char *)
SetIdentifiers	..\\scintilla\\lexlib\\LexerBase.cxx	/^void SCI_METHOD LexerBase::SetIdentifiers(int, const char *) {$/;"	f	class:LexerBase	typeref:typename:void SCI_METHOD	signature:(int,const char *)
SetIdentifiers	..\\scintilla\\lexlib\\SubStyles.h	/^	void SetIdentifiers(int style, const char *identifiers) {$/;"	f	class:Scintilla::SubStyles	typeref:typename:void	access:public	signature:(int style,const char * identifiers)
SetIdentifiers	..\\scintilla\\lexlib\\SubStyles.h	/^	void SetIdentifiers(int style, const char *identifiers) {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:void	access:public	signature:(int style,const char * identifiers)
SetIdentifiers	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::SetIdentifiers(int style, const char *identifiers) {$/;"	f	class:LexState	typeref:typename:void	signature:(int style,const char * identifiers)
SetIdle	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::SetIdle(bool on) {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:(bool on)
SetIdle	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^bool ScintillaQt::SetIdle(bool on)$/;"	f	class:ScintillaQt	typeref:typename:bool	signature:(bool on)
SetIdle	..\\scintilla\\src\\Editor.h	/^	virtual bool SetIdle(bool) { return false; }$/;"	f	class:Scintilla::Editor	typeref:typename:bool	access:protected	signature:(bool)
SetIdle	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::SetIdle(bool on) {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(bool on)
SetIdler	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetIdler(bool on) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(bool on)
SetIdler	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetIdler(bool on) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool on)
SetImportMenu	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetImportMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetIncrementalBehaviour	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindReplaceStrip::SetIncrementalBehaviour(int behaviour) {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:(int behaviour)
SetIncrementalBehaviour	..\\scite\\win32\\Strips.cxx	/^void FindReplaceStrip::SetIncrementalBehaviour(int behaviour) {$/;"	f	class:FindReplaceStrip	typeref:typename:void	signature:(int behaviour)
SetIndentSettings	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetIndentSettings() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetInteger	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::SetInteger(const char *key, int i) {$/;"	f	class:PropSetFile	typeref:typename:void	signature:(const char * key,int i)
SetItemText	..\\scite\\win32\\SciTEWinDlg.cxx	/^	void SetItemText(int id, const GUI::gui_char *s) {$/;"	f	class:Dialog	typeref:typename:void	file:	access:public	signature:(int id,const GUI::gui_char * s)
SetItemTextU	..\\scite\\win32\\SciTEWinDlg.cxx	/^	void SetItemTextU(int id, const std::string &s) {$/;"	f	class:Dialog	typeref:typename:void	file:	access:public	signature:(int id,const std::string & s)
SetLanguageMenu	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetLanguageMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetLastXChosen	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetLastXChosen() {$/;"	f	class:Editor	typeref:typename:void	signature:()
SetLevel	..\\scintilla\\lexlib\\LexAccessor.h	/^	void SetLevel(Sci_Position line, int level) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:(Sci_Position line,int level)
SetLevel	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::SetLevel(Sci_Position line, int level) {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(Sci_Position line,int level)
SetLevel	..\\scintilla\\src\\PerLine.cxx	/^int LineLevels::SetLevel(Sci::Line line, int level, Sci::Line lines) {$/;"	f	class:LineLevels	typeref:typename:int	signature:(Sci::Line line,int level,Sci::Line lines)
SetLevel	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayoutCache::SetLevel(int level_) {$/;"	f	class:LineLayoutCache	typeref:typename:void	signature:(int level_)
SetLevel	..\\scite\\src\\StyleWriter.cxx	/^void StyleWriter::SetLevel(int line, int level) {$/;"	f	class:StyleWriter	typeref:typename:void	signature:(int line,int level)
SetLevelAt	..\\scite\\src\\LuaExtension.cxx	/^	static int SetLevelAt(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
SetLexInterface	..\\scintilla\\src\\Document.cxx	/^void Document::SetLexInterface(LexInterface *pLexInterface) {$/;"	f	class:Document	typeref:typename:void	signature:(LexInterface * pLexInterface)
SetLexer	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::SetLexer(uptr_t wParam) {$/;"	f	class:LexState	typeref:typename:void	signature:(uptr_t wParam)
SetLexerLanguage	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::SetLexerLanguage(const char *languageName) {$/;"	f	class:LexState	typeref:typename:void	signature:(const char * languageName)
SetLexerModule	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::SetLexerModule(const LexerModule *lex) {$/;"	f	class:LexState	typeref:typename:void	signature:(const LexerModule * lex)
SetLineEndTypes	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::SetLineEndTypes(int utf8LineEnds_) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(int utf8LineEnds_)
SetLineEndTypesAllowed	..\\scintilla\\src\\Document.cxx	/^bool Document::SetLineEndTypesAllowed(int lineEndBitSet_) {$/;"	f	class:Document	typeref:typename:bool	signature:(int lineEndBitSet_)
SetLineIndentation	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::SetLineIndentation(Sci::Line line, Sci::Position indent) {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Line line,Sci::Position indent)
SetLineIndentation	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetLineIndentation(int line, int indent) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line,int indent)
SetLineNumberWidth	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetLineNumberWidth() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetLineStart	..\\scintilla\\src\\CellBuffer.cxx	/^void LineVector::SetLineStart(Sci::Line line, Sci::Position position) {$/;"	f	class:LineVector	typeref:typename:void	signature:(Sci::Line line,Sci::Position position)
SetLineStart	..\\scintilla\\src\\PositionCache.cxx	/^void LineLayout::SetLineStart(int line, int start) {$/;"	f	class:LineLayout	typeref:typename:void	signature:(int line,int start)
SetLineState	..\\scintilla\\lexlib\\LexAccessor.h	/^	int SetLineState(Sci_Position line, int state) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:int	access:public	signature:(Sci_Position line,int state)
SetLineState	..\\scintilla\\src\\Document.cxx	/^int SCI_METHOD Document::SetLineState(Sci_Position line, int state) {$/;"	f	class:Document	typeref:typename:int SCI_METHOD	signature:(Sci_Position line,int state)
SetLineState	..\\scintilla\\src\\PerLine.cxx	/^int LineState::SetLineState(Sci::Line line, int state) {$/;"	f	class:LineState	typeref:typename:int	signature:(Sci::Line line,int state)
SetLineState	..\\scite\\src\\LuaExtension.cxx	/^	static int SetLineState(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
SetLineState	..\\scite\\src\\StyleWriter.cxx	/^int StyleWriter::SetLineState(int line, int state) {$/;"	f	class:StyleWriter	typeref:typename:int	signature:(int line,int state)
SetList	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetList(const char *listText, char separator, char typesep) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(const char * listText,char separator,char typesep)
SetList	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::SetList(const char *listText, char separator, char typesep) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(const char * listText,char separator,char typesep)
SetList	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::SetList(const char *list, char separator, char typesep)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(const char * list,char separator,char typesep)
SetList	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::SetList(const char *list) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(const char * list)
SetList	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetList(const char *list, char separator, char typesep) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(const char * list,char separator,char typesep)
SetList	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::SetList(int control, const char *value) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(int control,const char * value)
SetList	..\\scite\\win32\\Strips.cxx	/^void UserStrip::SetList(int control, const char *value) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(int control,const char * value)
SetLocalizer	..\\scite\\gtk\\Widget.h	/^	void SetLocalizer(ILocalize *localiser_) {$/;"	f	class:BaseWin	typeref:typename:void	access:public	signature:(ILocalize * localiser_)
SetLocalizer	..\\scite\\win32\\Strips.h	/^	void SetLocalizer(ILocalize *localiser_) {$/;"	f	class:BaseWin	typeref:typename:void	access:public	signature:(ILocalize * localiser_)
SetLogFont	..\\scintilla\\win32\\PlatWin.cxx	/^static void SetLogFont(LOGFONTW &lf, const char *faceName, int characterSet, float size, int wei/;"	f	namespace:Scintilla	typeref:typename:void	file:	signature:(LOGFONTW & lf,const char * faceName,int characterSet,float size,int weight,bool italic,int extraFontFlag)
SetMain	..\\scintilla\\src\\Selection.cxx	/^void Selection::SetMain(size_t r) {$/;"	f	class:Selection	typeref:typename:void	signature:(size_t r)
SetMenuItem	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetMenuItem(int, int, int itemID, const char *text, const char *mnemonic) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int,int,int itemID,const char * text,const char * mnemonic)
SetMenuItem	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SetMenuItem(int menuNumber, int position, int itemID,$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int menuNumber,int position,int itemID,const GUI::gui_char * text,const GUI::gui_char * mnemonic)
SetMenuItemLocalised	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetMenuItemLocalised(int menuNumber, int position, int itemID,$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int menuNumber,int position,int itemID,const char * text,const char * mnemonic)
SetMenuItemNew	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetMenuItemNew(int, int, int, int itemID, const char *text, const char *mnemonic)/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int,int,int,int itemID,const char * text,const char * mnemonic)
SetMenuItemNew	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SetMenuItemNew(int menuNumber, int subMenuNumber, int position, int itemID,$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int menuNumber,int subMenuNumber,int position,int itemID,const GUI::gui_char * text,const GUI::gui_char * mnemonic)
SetMissing	..\\scite\\src\\SciTEBase.h	/^	void SetMissing(const std::string &missing_) {$/;"	f	class:Localization	typeref:typename:void	access:public	signature:(const std::string & missing_)
SetMnemonicFor	..\\scite\\gtk\\Widget.cxx	/^void WStatic::SetMnemonicFor(WBase &w) {$/;"	f	class:WStatic	typeref:typename:void	signature:(WBase & w)
SetMouseCapture	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetMouseCapture(bool on) { capturedMouse = on; }$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:(bool on)
SetMouseCapture	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SetMouseCapture(bool on) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(bool on)
SetMouseCapture	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::SetMouseCapture(bool on)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(bool on)
SetMouseCapture	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SetMouseCapture(bool on) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(bool on)
SetMoveExtends	..\\scintilla\\src\\Selection.cxx	/^void Selection::SetMoveExtends(bool moveExtends_) {$/;"	f	class:Selection	typeref:typename:void	signature:(bool moveExtends_)
SetMultiple	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^void PropSetSimple::SetMultiple(const char *s) {$/;"	f	class:PropSetSimple	typeref:typename:void	signature:(const char * s)
SetOneIndicator	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetOneIndicator(GUI::ScintillaWindow &win, int indicator, const IndicatorDefinit/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & win,int indicator,const IndicatorDefinition & ind)
SetOneStyle	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetOneStyle(GUI::ScintillaWindow &win, int style, const StyleDefinition &sd) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & win,int style,const StyleDefinition & sd)
SetOutputVisibility	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetOutputVisibility(bool show) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool show)
SetOverrideLanguage	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetOverrideLanguage(int cmdID) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int cmdID)
SetPartitionStartPosition	..\\scintilla\\src\\Partitioning.h	/^	void SetPartitionStartPosition(T partition, T pos) {$/;"	f	class:Scintilla::Partitioning	typeref:typename:void	access:public	signature:(T partition,T pos)
SetPerLine	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::SetPerLine(PerLine *pl) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(PerLine * pl)
SetPerLine	..\\scintilla\\src\\CellBuffer.cxx	/^void LineVector::SetPerLine(PerLine *pl) {$/;"	f	class:LineVector	typeref:typename:void	signature:(PerLine * pl)
SetPhasesDraw	..\\scintilla\\src\\EditView.cxx	/^bool EditView::SetPhasesDraw(int phases) {$/;"	f	class:EditView	typeref:typename:bool	signature:(int phases)
SetPixel	..\\scintilla\\src\\XPM.cxx	/^void RGBAImage::SetPixel(int x, int y, ColourDesired colour, int alpha) {$/;"	f	class:RGBAImage	typeref:typename:void	signature:(int x,int y,ColourDesired colour,int alpha)
SetPosition	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::SetPosition(PRectangle rc) {$/;"	f	class:Window	typeref:typename:void	signature:(PRectangle rc)
SetPosition	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::SetPosition(PRectangle rc)$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(PRectangle rc)
SetPosition	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::SetPosition(bool aboveText) {$/;"	f	class:CallTip	typeref:typename:void	signature:(bool aboveText)
SetPosition	..\\scintilla\\src\\Selection.h	/^	void SetPosition(Sci::Position position_) {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:void	access:public	signature:(Sci::Position position_)
SetPosition	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::SetPosition(PRectangle rc) {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(PRectangle rc)
SetPosition	..\\scite\\gtk\\GUIGTK.cxx	/^void Window::SetPosition(Rectangle rc) {$/;"	f	class:GUI::Window	typeref:typename:void	signature:(Rectangle rc)
SetPosition	..\\scite\\win32\\GUIWin.cxx	/^void Window::SetPosition(Rectangle rc) {$/;"	f	class:GUI::Window	typeref:typename:void	signature:(Rectangle rc)
SetPositionRelative	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::SetPositionRelative(PRectangle rc, Window relativeTo) {$/;"	f	class:Window	typeref:typename:void	signature:(PRectangle rc,Window relativeTo)
SetPositionRelative	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::SetPositionRelative(PRectangle rc, Window relativeTo) {$/;"	f	class:Window	typeref:typename:void	signature:(PRectangle rc,Window relativeTo)
SetPositionRelative	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::SetPositionRelative(PRectangle rc, Window relativeTo)$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(PRectangle rc,Window relativeTo)
SetPositionRelative	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::SetPositionRelative(PRectangle rc, Window relativeTo) {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(PRectangle rc,Window relativeTo)
SetProgress	..\\scite\\gtk\\SciTEGTK.cxx	/^void BackgroundStrip::SetProgress(const GUI::gui_string &explanation, int size, int progress) {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:(const GUI::gui_string & explanation,int size,int progress)
SetProgress	..\\scite\\win32\\Strips.cxx	/^void BackgroundStrip::SetProgress(const GUI::gui_string &explanation, size_t size, size_t progre/;"	f	class:BackgroundStrip	typeref:typename:void	signature:(const GUI::gui_string & explanation,size_t size,size_t progress)
SetPropertiesInitial	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetPropertiesInitial() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetProperty	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetProperty(const char *key, const char *val) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * key,const char * val)
SetRGBAImage	..\\scintilla\\src\\LineMarker.cxx	/^void LineMarker::SetRGBAImage(Point sizeRGBAImage, float scale, const unsigned char *pixelsRGBAI/;"	f	class:LineMarker	typeref:typename:void	signature:(Point sizeRGBAImage,float scale,const unsigned char * pixelsRGBAImage)
SetReadOnly	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::SetReadOnly(bool set) {$/;"	f	class:CellBuffer	typeref:typename:void	signature:(bool set)
SetReadOnly	..\\scintilla\\src\\Document.h	/^	void SetReadOnly(bool set) { cb.SetReadOnly(set); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:(bool set)
SetRectangularRange	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetRectangularRange() {$/;"	f	class:Editor	typeref:typename:void	signature:()
SetRedraw	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetRedraw(bool on) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(bool on)
SetReplace	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetReplace(const char *sReplace) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * sReplace)
SetRepresentation	..\\scintilla\\src\\PositionCache.cxx	/^void SpecialRepresentations::SetRepresentation(const char *charBytes, const char *value) {$/;"	f	class:SpecialRepresentations	typeref:typename:void	signature:(const char * charBytes,const char * value)
SetRepresentations	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetRepresentations() {$/;"	f	class:Editor	typeref:typename:void	signature:()
SetSavePoint	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::SetSavePoint() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
SetSavePoint	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::SetSavePoint() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
SetSavePoint	..\\scintilla\\src\\Document.cxx	/^void Document::SetSavePoint() {$/;"	f	class:Document	typeref:typename:void	signature:()
SetScale	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::SetScale() {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:()
SetScaleFactor	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::SetScaleFactor(int scale) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int scale)
SetSciTE	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::SetSciTE(SciTEGTK *pSciTEGTK_) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(SciTEGTK * pSciTEGTK_)
SetSciTE	..\\scite\\win32\\SciTEWin.h	/^	void SetSciTE(SciTEWin *pSciTEWin_) {$/;"	f	class:ContentWin	typeref:typename:void	access:public	signature:(SciTEWin * pSciTEWin_)
SetSciTE	..\\scite\\win32\\Strips.cxx	/^void UserStrip::SetSciTE(SciTEWin *pSciTEWin_) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(SciTEWin * pSciTEWin_)
SetScrollBars	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetScrollBars() {$/;"	f	class:Editor	typeref:typename:void	signature:()
SetScrollInfo	..\\scintilla\\win32\\ScintillaWin.cxx	/^int ScintillaWin::SetScrollInfo(int nBar, LPCSCROLLINFO lpsi, BOOL bRedraw) {$/;"	f	class:ScintillaWin	typeref:typename:int	signature:(int nBar,LPCSCROLLINFO lpsi,BOOL bRedraw)
SetSearcher	..\\scite\\src\\SciTEBase.h	/^	void SetSearcher(Searcher *pSearcher_) {$/;"	f	class:SearchUI	typeref:typename:void	access:public	signature:(Searcher * pSearcher_)
SetSearcher	..\\scite\\win32\\Strips.h	/^	void SetSearcher(Searcher *pSearcher_) {$/;"	f	class:SearchStripBase	typeref:typename:void	access:public	signature:(Searcher * pSearcher_)
SetSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::AtkTextIface::SetSelection(AtkText *text, gint selection_num, g/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:gboolean	signature:(AtkText * text,gint selection_num,gint start,gint end)
SetSelection	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^gboolean ScintillaGTKAccessible::SetSelection(gint selection_num, int startChar, int endChar) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:gboolean	signature:(gint selection_num,int startChar,int endChar)
SetSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetSelection(Sci::Position currentPos_, Sci::Position anchor_) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position currentPos_,Sci::Position anchor_)
SetSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetSelection(SelectionPosition currentPos_) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition currentPos_)
SetSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetSelection(SelectionPosition currentPos_, SelectionPosition anchor_) {$/;"	f	class:Editor	typeref:typename:void	signature:(SelectionPosition currentPos_,SelectionPosition anchor_)
SetSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetSelection(int currentPos_) {$/;"	f	class:Editor	typeref:typename:void	signature:(int currentPos_)
SetSelection	..\\scintilla\\src\\Selection.cxx	/^void Selection::SetSelection(SelectionRange range) {$/;"	f	class:Selection	typeref:typename:void	signature:(SelectionRange range)
SetSelection	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetSelection(int anchor, int currentPos) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int anchor,int currentPos)
SetSelectionNMessage	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetSelectionNMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:Editor	typeref:typename:void	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
SetSeparator	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::SetSeparator(char separator_) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(char separator_)
SetSize	..\\scintilla\\src\\PositionCache.cxx	/^void PositionCache::SetSize(size_t size_) {$/;"	f	class:PositionCache	typeref:typename:void	signature:(size_t size_)
SetSizeJob	..\\scite\\src\\Worker.h	/^	void SetSizeJob(int size) {$/;"	f	struct:Worker	typeref:typename:void	access:public	signature:(int size)
SetStartupTime	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetStartupTime(const char *timestamp) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const char * timestamp)
SetState	..\\scintilla\\lexlib\\StyleContext.h	/^	void SetState(int state_) {$/;"	f	class:Scintilla::StyleContext	typeref:typename:void	access:public	signature:(int state_)
SetState	..\\scite\\src\\LuaExtension.cxx	/^	static int SetState(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
SetStatusBarText	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetStatusBarText(const char *s) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const char * s)
SetStatusBarText	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SetStatusBarText(const char *s) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const char * s)
SetStopChars	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::SetStopChars(const char *stopChars_) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(const char * stopChars_)
SetStyle	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::SetStyle(Sci::Line line, int style) {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:(Sci::Line line,int style)
SetStyleAt	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::SetStyleAt(Sci::Position position, char styleValue) {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:(Sci::Position position,char styleValue)
SetStyleBlock	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetStyleBlock(GUI::ScintillaWindow &win, const char *lang, int start, int last) /;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & win,const char * lang,int start,int last)
SetStyleFontName	..\\scintilla\\src\\ViewStyle.cxx	/^void ViewStyle::SetStyleFontName(int styleIndex, const char *name) {$/;"	f	class:ViewStyle	typeref:typename:void	signature:(int styleIndex,const char * name)
SetStyleFor	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::SetStyleFor(Sci::Position position, Sci::Position lengthStyle, char styleValue)/;"	f	class:CellBuffer	typeref:typename:bool	signature:(Sci::Position position,Sci::Position lengthStyle,char styleValue)
SetStyleFor	..\\scintilla\\src\\Document.cxx	/^bool SCI_METHOD Document::SetStyleFor(Sci_Position length, char style) {$/;"	f	class:Document	typeref:typename:bool SCI_METHOD	signature:(Sci_Position length,char style)
SetStyleFor	..\\scite\\src\\SciTEProps.cxx	/^void SciTEBase::SetStyleFor(GUI::ScintillaWindow &win, const char *lang) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(GUI::ScintillaWindow & win,const char * lang)
SetStyles	..\\scintilla\\src\\Document.cxx	/^bool SCI_METHOD Document::SetStyles(Sci_Position length, const char *styles) {$/;"	f	class:Document	typeref:typename:bool SCI_METHOD	signature:(Sci_Position length,const char * styles)
SetStyles	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::SetStyles(Sci::Line line, const unsigned char *styles) {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:(Sci::Line line,const unsigned char * styles)
SetTabSize	..\\scintilla\\src\\CallTip.cxx	/^void CallTip::SetTabSize(int tabSz) {$/;"	f	class:CallTip	typeref:typename:void	signature:(int tabSz)
SetText	..\\scintilla\\src\\PerLine.cxx	/^void LineAnnotation::SetText(Sci::Line line, const char *text) {$/;"	f	class:LineAnnotation	typeref:typename:void	signature:(Sci::Line line,const char * text)
SetText	..\\scite\\gtk\\Widget.cxx	/^void WComboBoxEntry::SetText(const GUI::gui_char *text) {$/;"	f	class:WComboBoxEntry	typeref:typename:void	signature:(const GUI::gui_char * text)
SetText	..\\scite\\gtk\\Widget.cxx	/^void WEntry::SetText(const GUI::gui_char *text) {$/;"	f	class:WEntry	typeref:typename:void	signature:(const GUI::gui_char * text)
SetTextContents	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::SetTextContents(AtkEditableText *text, const /;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(AtkEditableText * text,const gchar * contents)
SetTextContents	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::SetTextContents(const gchar *contents) {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:(const gchar * contents)
SetTextProperties	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetTextProperties($/;"	f	class:SciTEBase	typeref:typename:void	signature:(PropSetFile & ps)
SetTheme	..\\scite\\win32\\Strips.cxx	/^void Strip::SetTheme() {$/;"	f	class:Strip	typeref:typename:void	signature:()
SetTimeFromFile	..\\scite\\src\\SciTEBase.h	/^	void SetTimeFromFile() {$/;"	f	class:Buffer	typeref:typename:void	access:public	signature:()
SetTitle	..\\scite\\gtk\\GUIGTK.cxx	/^void Window::SetTitle(const char *s) {$/;"	f	class:GUI::Window	typeref:typename:void	signature:(const char * s)
SetTitle	..\\scite\\win32\\GUIWin.cxx	/^void Window::SetTitle(const gui_char *s) {$/;"	f	class:GUI::Window	typeref:typename:void	signature:(const gui_char * s)
SetToggles	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::SetToggles() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
SetToggles	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::SetToggles() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
SetToolBar	..\\scite\\gtk\\SciTEGTK.cxx	/^	void SetToolBar() {} $/;"	f	class:SciTEGTK	typeref:typename:void	file:	access:protected	signature:()
SetToolBar	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SetToolBar() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SetToolsMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SetToolsMenu() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetTopLine	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetTopLine(Sci::Line topLineNew) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Line topLineNew)
SetTrackMouseLeaveEvent	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SetTrackMouseLeaveEvent(bool on) {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:(bool on)
SetTranslation	..\\scintilla\\src\\CaseFolder.cxx	/^void CaseFolderTable::SetTranslation(char ch, char chTranslation) {$/;"	f	class:CaseFolderTable	typeref:typename:void	signature:(char ch,char chTranslation)
SetTwoPhaseDraw	..\\scintilla\\src\\EditView.cxx	/^bool EditView::SetTwoPhaseDraw(bool twoPhaseDraw) {$/;"	f	class:EditView	typeref:typename:bool	signature:(bool twoPhaseDraw)
SetTypesep	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::SetTypesep(char separator_) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(char separator_)
SetUndoCollection	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::SetUndoCollection(bool collectUndo) {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:(bool collectUndo)
SetUndoCollection	..\\scintilla\\src\\Document.h	/^	bool SetUndoCollection(bool collectUndo) {$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:(bool collectUndo)
SetUnicodeMode	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetUnicodeMode(bool unicodeMode_) {}$/;"	f	class:SurfaceImpl	typeref:typename:void	file:	access:public	signature:(bool unicodeMode_)
SetUnicodeMode	..\\scintilla\\gtk\\PlatGTK.cxx	/^void SurfaceImpl::SetUnicodeMode(bool unicodeMode_) {$/;"	f	class:SurfaceImpl	typeref:typename:void	signature:(bool unicodeMode_)
SetUnicodeMode	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void SurfaceImpl::SetUnicodeMode(bool unicodeMode_)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:void	signature:(bool unicodeMode_)
SetUnicodeMode	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceD2D::SetUnicodeMode(bool unicodeMode_) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:void	signature:(bool unicodeMode_)
SetUnicodeMode	..\\scintilla\\win32\\PlatWin.cxx	/^void SurfaceGDI::SetUnicodeMode(bool unicodeMode_) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:void	signature:(bool unicodeMode_)
SetValid	..\\scite\\gtk\\Widget.cxx	/^void WEntry::SetValid(GtkEntry *entry, bool valid) {$/;"	f	class:WEntry	typeref:typename:void	signature:(GtkEntry * entry,bool valid)
SetValueAt	..\\scintilla\\src\\RunStyles.cxx	/^void RunStyles<DISTANCE, STYLE>::SetValueAt(DISTANCE position, STYLE value) {$/;"	f	class:RunStyles	typeref:typename:void	signature:(DISTANCE position,STYLE value)
SetValueAt	..\\scintilla\\src\\SparseVector.h	/^	void SetValueAt(Sci::Position position, ParamType &&value) {$/;"	f	class:Scintilla::SparseVector	typeref:typename:void	access:public	signature:(Sci::Position position,ParamType && value)
SetValueAt	..\\scintilla\\src\\SplitVector.h	/^	void SetValueAt(ptrdiff_t position, ParamType&& v) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:void	access:public	signature:(ptrdiff_t position,ParamType && v)
SetVerticalScrollPos	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetVerticalScrollPos() {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
SetVerticalScrollPos	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SetVerticalScrollPos() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
SetVerticalScrollPos	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::SetVerticalScrollPos()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
SetVerticalScrollPos	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::SetVerticalScrollPos() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
SetView	..\\scintilla\\src\\Decoration.cxx	/^void DecorationList::SetView() {$/;"	f	class:DecorationList	typeref:typename:void	signature:()
SetVirtualSpace	..\\scintilla\\src\\Selection.h	/^	void SetVirtualSpace(Sci::Position virtualSpace_) {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:void	access:public	signature:(Sci::Position virtualSpace_)
SetVisible	..\\scintilla\\src\\ContractionState.cxx	/^bool ContractionState::SetVisible(Sci::Line lineDocStart, Sci::Line lineDocEnd, bool isVisible) /;"	f	class:ContractionState	typeref:typename:bool	signature:(Sci::Line lineDocStart,Sci::Line lineDocEnd,bool isVisible)
SetVisible	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::SetVisible(int index, bool visible) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int index,bool visible)
SetVisibleRows	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void SetVisibleRows(int rows) {$/;"	f	class:ListBoxImpl	typeref:typename:void	file:	access:public	signature:(int rows)
SetVisibleRows	..\\scintilla\\gtk\\PlatGTK.cxx	/^void ListBoxX::SetVisibleRows(int rows) {$/;"	f	class:ListBoxX	typeref:typename:void	signature:(int rows)
SetVisibleRows	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListBoxImpl::SetVisibleRows(int rows)$/;"	f	class:Scintilla::ListBoxImpl	typeref:typename:void	signature:(int rows)
SetVisibleRows	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::SetVisibleRows(int rows) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(int rows)
SetWindowID	..\\scintilla\\win32\\ScintillaWin.cxx	/^static void SetWindowID(HWND hWnd, int identifier) {$/;"	f	typeref:typename:void	file:	signature:(HWND hWnd,int identifier)
SetWindowName	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetWindowName() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SetWindowName	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::SetWindowName() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SetWindowPointer	..\\scintilla\\win32\\PlatWin.cxx	/^static void SetWindowPointer(HWND hWnd, void *ptr) {$/;"	f	typeref:typename:void	file:	signature:(HWND hWnd,void * ptr)
SetWindowPointer	..\\scintilla\\win32\\ScintillaWin.cxx	/^static void SetWindowPointer(HWND hWnd, void *ptr) {$/;"	f	typeref:typename:void	file:	signature:(HWND hWnd,void * ptr)
SetWindowPointer	..\\scite\\win32\\Strips.cxx	/^void SetWindowPointer(HWND hWnd, void *ptr) {$/;"	f	typeref:typename:void	signature:(HWND hWnd,void * ptr)
SetWordList	..\\scintilla\\src\\ScintillaBase.cxx	/^void LexState::SetWordList(int n, const char *wl) {$/;"	f	class:LexState	typeref:typename:void	signature:(int n,const char * wl)
SetWords	..\\scintilla\\win32\\PlatWin.cxx	/^	char *SetWords(const char *s) {$/;"	f	class:Scintilla::LineToItem	typeref:typename:char *	file:	access:public	signature:(const char * s)
SetWorkingDirectory	..\\scite\\src\\FilePath.cxx	/^bool FilePath::SetWorkingDirectory() const {$/;"	f	class:FilePath	typeref:typename:bool	signature:() const
SetWrapIndentMode	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::SetWrapIndentMode(int wrapIndentMode_) {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(int wrapIndentMode_)
SetWrapState	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::SetWrapState(int wrapState_) {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(int wrapState_)
SetWrapVisualFlags	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::SetWrapVisualFlags(int wrapVisualFlags_) {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(int wrapVisualFlags_)
SetWrapVisualFlagsLocation	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::SetWrapVisualFlagsLocation(int wrapVisualFlagsLocation_) {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(int wrapVisualFlagsLocation_)
SetWrapVisualStartIndent	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::SetWrapVisualStartIndent(int wrapVisualStartIndent_) {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(int wrapVisualStartIndent_)
SetXPM	..\\scintilla\\src\\LineMarker.cxx	/^void LineMarker::SetXPM(const char *const *linesForm) {$/;"	f	class:LineMarker	typeref:typename:void	signature:(const char * const * linesForm)
SetXPM	..\\scintilla\\src\\LineMarker.cxx	/^void LineMarker::SetXPM(const char *textForm) {$/;"	f	class:LineMarker	typeref:typename:void	signature:(const char * textForm)
SetXYScroll	..\\scintilla\\src\\Editor.cxx	/^void Editor::SetXYScroll(XYScrollPosition newXY) {$/;"	f	class:Editor	typeref:typename:void	signature:(XYScrollPosition newXY)
SetterFunction	..\\scite\\src\\IFaceTable.h	/^	IFaceFunction SetterFunction() const {$/;"	f	struct:IFaceProperty	typeref:typename:IFaceFunction	access:public	signature:() const
SetupChild	..\\scite\\gtk\\SciTEGTK.cxx	/^static void SetupChild(gpointer) {$/;"	f	typeref:typename:void	file:	signature:(gpointer)
SetupConversions	..\\scintilla\\src\\CaseConvert.cxx	/^void SetupConversions(enum CaseConversion conversion) {$/;"	f	namespace:__anon1fb76d660111	typeref:typename:void	signature:(enum CaseConversion conversion)
SetupFormat	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SetupFormat(Sci_RangeToFormat &frPrint, GtkPrintContext *context) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(Sci_RangeToFormat & frPrint,GtkPrintContext * context)
ShellEscape	..\\scite\\src\\PropSetFile.cxx	/^static std::string ShellEscape(const char *toEscape) {$/;"	f	typeref:typename:std::string	file:	signature:(const char * toEscape)
ShellExec	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::ShellExec(const std::string &cmd, const char *dir) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const std::string & cmd,const char * dir)
ShiftTab	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::ShiftTab(int indexFrom, int indexTo) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int indexFrom,int indexTo)
ShiftTo	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::ShiftTo(int indexFrom, int indexTo) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int indexFrom,int indexTo)
ShortcutItem	..\\scite\\src\\SciTEBase.h	/^class ShortcutItem {$/;"	c
ShouldClose	..\\scite\\src\\SciTEBase.h	/^	bool ShouldClose(bool found) const {$/;"	f	class:Searcher	typeref:typename:bool	access:public	signature:(bool found) const
ShouldDisplayPopup	..\\scintilla\\src\\ScintillaBase.cxx	/^bool ScintillaBase::ShouldDisplayPopup(Point ptInWindowCoordinates) const {$/;"	f	class:ScintillaBase	typeref:typename:bool	signature:(Point ptInWindowCoordinates) const
ShouldNotSave	..\\scite\\src\\SciTEBase.h	/^	bool ShouldNotSave() const {$/;"	f	class:Buffer	typeref:typename:bool	access:public	signature:() const
Show	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Menu::Show(Point pt, Window &w) {}$/;"	f	class:Menu	typeref:typename:void	signature:(Point pt,Window & w)
Show	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void Window::Show(bool show) { \/* TODO: *\/ }$/;"	f	class:Window	typeref:typename:void	signature:(bool show)
Show	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Menu::Show(Point pt, Window &w) {$/;"	f	class:Menu	typeref:typename:void	signature:(Point pt,Window & w)
Show	..\\scintilla\\gtk\\PlatGTK.cxx	/^void Window::Show(bool show) {$/;"	f	class:Window	typeref:typename:void	signature:(bool show)
Show	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Menu::Show(Point pt, Window & \/*w*\/)$/;"	f	class:Scintilla::Menu	typeref:typename:void	signature:(Point pt,Window &)
Show	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void Window::Show(bool show)$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(bool show)
Show	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::Show(bool show) {$/;"	f	class:AutoComplete	typeref:typename:void	signature:(bool show)
Show	..\\scintilla\\win32\\PlatWin.cxx	/^void Menu::Show(Point pt, Window &w) {$/;"	f	class:Scintilla::Menu	typeref:typename:void	signature:(Point pt,Window & w)
Show	..\\scintilla\\win32\\PlatWin.cxx	/^void Window::Show(bool show) {$/;"	f	class:Scintilla::Window	typeref:typename:void	signature:(bool show)
Show	..\\scite\\gtk\\GUIGTK.cxx	/^void Menu::Show(Point pt, Window &) {$/;"	f	class:GUI::Menu	typeref:typename:void	signature:(Point pt,Window &)
Show	..\\scite\\gtk\\GUIGTK.cxx	/^void Window::Show(bool show) {$/;"	f	class:GUI::Window	typeref:typename:void	signature:(bool show)
Show	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::Show(int buttonHeight) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(int buttonHeight)
Show	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::Show(int buttonHeight) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(int buttonHeight)
Show	..\\scite\\gtk\\SciTEGTK.cxx	/^void UserStrip::Show(int buttonHeight) {$/;"	f	class:UserStrip	typeref:typename:void	signature:(int buttonHeight)
Show	..\\scite\\gtk\\Widget.cxx	/^void Strip::Show(int) {$/;"	f	class:Strip	typeref:typename:void	signature:(int)
Show	..\\scite\\win32\\GUIWin.cxx	/^void Menu::Show(Point pt, Window &w) {$/;"	f	class:GUI::Menu	typeref:typename:void	signature:(Point pt,Window & w)
Show	..\\scite\\win32\\GUIWin.cxx	/^void Window::Show(bool show) {$/;"	f	class:GUI::Window	typeref:typename:void	signature:(bool show)
Show	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Show() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Show	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::Show() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
ShowAll	..\\scintilla\\src\\ContractionState.cxx	/^void ContractionState::ShowAll() {$/;"	f	class:ContractionState	typeref:typename:void	signature:()
ShowAssertionPopUps	..\\scintilla\\gtk\\PlatGTK.cxx	/^bool Platform::ShowAssertionPopUps(bool assertionPopUps_) {$/;"	f	class:Platform	typeref:typename:bool	signature:(bool assertionPopUps_)
ShowAssertionPopUps	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^bool Platform::ShowAssertionPopUps(bool \/*assertionPopUps*\/)$/;"	f	class:Scintilla::Platform	typeref:typename:bool	signature:(bool)
ShowAssertionPopUps	..\\scintilla\\win32\\PlatWin.cxx	/^bool Platform::ShowAssertionPopUps(bool assertionPopUps_) {$/;"	f	class:Scintilla::Platform	typeref:typename:bool	signature:(bool assertionPopUps_)
ShowBackgroundProgress	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ShowBackgroundProgress(const GUI::gui_string &explanation, int size, int progress/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const GUI::gui_string & explanation,int size,int progress)
ShowBackgroundProgress	..\\scite\\src\\SciTEBase.h	/^	virtual void ShowBackgroundProgress(const GUI::gui_string & \/* explanation *\/, int \/* size */;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:(const GUI::gui_string &,int,int)
ShowBackgroundProgress	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::ShowBackgroundProgress(const GUI::gui_string &explanation, int size, int progress/;"	f	class:SciTEWin	typeref:typename:void	signature:(const GUI::gui_string & explanation,int size,int progress)
ShowCaretAtCurrentPosition	..\\scintilla\\src\\Editor.cxx	/^void Editor::ShowCaretAtCurrentPosition() {$/;"	f	class:Editor	typeref:typename:void	signature:()
ShowFileInStatus	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ShowFileInStatus() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ShowMessages	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::ShowMessages(int line) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line)
ShowOutputOnMainThread	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ShowOutputOnMainThread() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
ShowOutputOnMainThread	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::ShowOutputOnMainThread() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ShowOutputPane	..\\scite\\src\\JobQueue.h	/^	bool ShowOutputPane() const {$/;"	f	class:JobQueue	typeref:typename:bool	access:public	signature:() const
ShowPopup	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::ShowPopup() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
ShowPopup	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ShowPopup() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
ShowPopup	..\\scite\\gtk\\Widget.h	/^	virtual void ShowPopup() {}$/;"	f	class:Strip	typeref:typename:void	access:public	signature:()
ShowPopup	..\\scite\\win32\\Strips.cxx	/^void FindStrip::ShowPopup() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
ShowPopup	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::ShowPopup() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
ShowPopup	..\\scite\\win32\\Strips.cxx	/^void Strip::ShowPopup() {$/;"	f	class:Strip	typeref:typename:void	signature:()
ShowStatusBar	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ShowStatusBar() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ShowStatusBar	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::ShowStatusBar() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ShowTabBar	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ShowTabBar() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ShowTabBar	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::ShowTabBar() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ShowToolBar	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::ShowToolBar() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
ShowToolBar	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::ShowToolBar() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
ShutDown	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ShutDown() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
SigFunction	..\\scite\\gtk\\SciTEGTK.cxx	/^typedef void (*SigFunction)(GtkWidget *w, SciTEGTK *app);$/;"	t	typeref:typename:void (*)(GtkWidget * w,SciTEGTK * app)	file:
Signal	..\\scite\\gtk\\SciTEGTK.cxx	/^class Signal {$/;"	c	file:
SignalDestroy	..\\scite\\gtk\\Widget.cxx	/^void Dialog::SignalDestroy(GtkWidget *, Dialog *d) {$/;"	f	class:Dialog	typeref:typename:void	signature:(GtkWidget *,Dialog * d)
SimpleAlphaRectangle	..\\scintilla\\src\\EditView.cxx	/^static void SimpleAlphaRectangle(Surface *surface, PRectangle rc, ColourDesired fill, int alpha)/;"	f	typeref:typename:void	file:	signature:(Surface * surface,PRectangle rc,ColourDesired fill,int alpha)
SingleBuffer	..\\scite\\src\\SciTEBuffers.cxx	/^bool BufferList::SingleBuffer() const {$/;"	f	class:BufferList	typeref:typename:bool	signature:() const
Size	..\\scintilla\\win32\\ScintillaWin.cxx	/^	SIZE_T Size() {$/;"	f	class:GlobalMemory	typeref:typename:SIZE_T	file:	access:public	signature:()
Size	..\\scite\\win32\\Strips.cxx	/^void BackgroundStrip::Size() {$/;"	f	class:BackgroundStrip	typeref:typename:void	signature:()
Size	..\\scite\\win32\\Strips.cxx	/^void FindStrip::Size() {$/;"	f	class:FindStrip	typeref:typename:void	signature:()
Size	..\\scite\\win32\\Strips.cxx	/^void ReplaceStrip::Size() {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:()
Size	..\\scite\\win32\\Strips.cxx	/^void SearchStrip::Size() {$/;"	f	class:SearchStrip	typeref:typename:void	signature:()
Size	..\\scite\\win32\\Strips.cxx	/^void Strip::Size() {$/;"	f	class:Strip	typeref:typename:void	signature:()
Size	..\\scite\\win32\\Strips.cxx	/^void UserStrip::Size() {$/;"	f	class:UserStrip	typeref:typename:void	signature:()
SizeAllocate	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SizeAllocate(GtkWidget *widget, GtkAllocation *allocation) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GtkAllocation * allocation)
SizeButton	..\\scite\\win32\\Strips.cxx	/^static SIZE SizeButton(const GUI::Window &wButton) {$/;"	f	typeref:typename:SIZE	file:	signature:(const GUI::Window & wButton)
SizeContentWindows	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SizeContentWindows() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SizeContentWindows	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SizeContentWindows() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
SizeJob	..\\scite\\src\\Worker.h	/^	int SizeJob() const {$/;"	f	struct:Worker	typeref:typename:int	access:public	signature:() const
SizeRequest	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::SizeRequest(GtkWidget *widget, GtkRequisition *requisition) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GtkRequisition * requisition)
SizeSubWindows	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::SizeSubWindows() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
SizeSubWindows	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::SizeSubWindows() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
Sizeof	..\\scintilla\\lua\\src\\print.c	/^#define Sizeof(/;"	d	file:	signature:(x)
Slash	..\\scite\\src\\StringHelpers.cxx	/^std::string Slash(const std::string &s, bool quoteQuotes) {$/;"	f	typeref:typename:std::string	signature:(const std::string & s,bool quoteQuotes)
Smain	..\\scintilla\\lua\\src\\lua.c	/^struct Smain {$/;"	s	file:
Smain	..\\scintilla\\lua\\src\\luac.c	/^struct Smain {$/;"	s	file:
SmallScroller	..\\scintilla\\gtk\\PlatGTK.cxx	/^} SmallScroller;$/;"	t	typeref:struct:__anon0ae033de0308	file:
SmallScrollerClass	..\\scintilla\\gtk\\PlatGTK.cxx	/^typedef GtkScrolledWindowClass SmallScrollerClass;$/;"	t	typeref:typename:GtkScrolledWindowClass	file:
SortIfNeeded	..\\scite\\src\\StringList.cxx	/^void StringList::SortIfNeeded(bool ignoreCase) {$/;"	f	class:StringList	typeref:typename:void	signature:(bool ignoreCase)
SortListInsensitive	..\\scintilla\\scripts\\HeaderCheck.py	/^def SortListInsensitive(l):$/;"	f	access:public	signature:(l)
SortListInsensitive	..\\scintilla\\scripts\\ScintillaData.py	/^def SortListInsensitive(l):$/;"	f	access:public	signature:(l)
SortWordList	..\\scintilla\\lexlib\\WordList.cxx	/^static void SortWordList(char **words, unsigned int len) {$/;"	f	typeref:typename:void	file:	signature:(char ** words,unsigned int len)
Sorter	..\\scintilla\\src\\AutoComplete.cxx	/^	Sorter(AutoComplete *ac_, const char *list_) : ac(ac_), list(list_) {$/;"	f	struct:Sorter	file:	access:public	signature:(AutoComplete * ac_,const char * list_)
Sorter	..\\scintilla\\src\\AutoComplete.cxx	/^struct Sorter {$/;"	s	file:
SparseState	..\\scintilla\\lexlib\\SparseState.h	/^	explicit SparseState(Sci_Position positionFirst_=-1) {$/;"	f	class:Scintilla::SparseState	access:public	signature:(Sci_Position positionFirst_=-1)
SparseState	..\\scintilla\\lexlib\\SparseState.h	/^class SparseState {$/;"	c	namespace:Scintilla
SparseVector	..\\scintilla\\src\\SparseVector.h	/^	SparseVector() : empty() {$/;"	f	class:Scintilla::SparseVector	access:public	signature:()
SparseVector	..\\scintilla\\src\\SparseVector.h	/^class SparseVector {$/;"	c	namespace:Scintilla
SpecialRepresentations	..\\scintilla\\src\\PositionCache.cxx	/^SpecialRepresentations::SpecialRepresentations() {$/;"	f	class:SpecialRepresentations	signature:()
SpecialRepresentations	..\\scintilla\\src\\PositionCache.h	/^class SpecialRepresentations {$/;"	c	namespace:Scintilla
SplitRun	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::SplitRun(DISTANCE position) {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:(DISTANCE position)
SplitVector	..\\scintilla\\src\\SplitVector.h	/^	SplitVector() : empty() {$/;"	f	class:Scintilla::SplitVector	access:public	signature:()
SplitVector	..\\scintilla\\src\\SplitVector.h	/^class SplitVector {$/;"	c	namespace:Scintilla
SplitVectorWithRangeAdd	..\\scintilla\\src\\Partitioning.h	/^	explicit SplitVectorWithRangeAdd(ptrdiff_t growSize_) {$/;"	f	class:Scintilla::SplitVectorWithRangeAdd	access:public	signature:(ptrdiff_t growSize_)
SplitVectorWithRangeAdd	..\\scintilla\\src\\Partitioning.h	/^class SplitVectorWithRangeAdd : public SplitVector<T> {$/;"	c	namespace:Scintilla	inherits:SplitVector<T>
SptrFromPointer	..\\scite\\src\\Extender.h	/^inline sptr_t SptrFromPointer(void *p) {$/;"	f	typeref:typename:sptr_t	signature:(void * p)
SptrFromString	..\\scite\\src\\Extender.h	/^inline sptr_t SptrFromString(const char *cp) {$/;"	f	typeref:typename:sptr_t	signature:(const char * cp)
StWndProc	..\\scite\\win32\\Strips.cxx	/^LRESULT PASCAL BaseWin::StWndProc($/;"	f	class:BaseWin	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
Stack	..\\scintilla\\lua\\src\\lpvm.c	/^typedef struct Stack {$/;"	s	file:
Stack	..\\scintilla\\lua\\src\\lpvm.c	/^} Stack;$/;"	t	typeref:struct:Stack	file:
StackMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::StackMenu(int pos) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int pos)
StackMenuNext	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::StackMenuNext() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
StackMenuPrev	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::StackMenuPrev() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
StackNext	..\\scite\\src\\SciTEBuffers.cxx	/^int BufferList::StackNext() {$/;"	f	class:BufferList	typeref:typename:int	signature:()
StackPrev	..\\scite\\src\\SciTEBuffers.cxx	/^int BufferList::StackPrev() {$/;"	f	class:BufferList	typeref:typename:int	signature:()
StandardASCII	..\\scintilla\\src\\CaseFolder.cxx	/^void CaseFolderTable::StandardASCII() {$/;"	f	class:CaseFolderTable	typeref:typename:void	signature:()
Start	..\\scintilla\\lexlib\\SubStyles.h	/^	int Start() const {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:int	access:public	signature:() const
Start	..\\scintilla\\lexlib\\SubStyles.h	/^	int Start(int styleBase) {$/;"	f	class:Scintilla::SubStyles	typeref:typename:int	access:public	signature:(int styleBase)
Start	..\\scintilla\\src\\AutoComplete.cxx	/^void AutoComplete::Start(Window &parent, int ctrlID,$/;"	f	class:AutoComplete	typeref:typename:void	signature:(Window & parent,int ctrlID,Sci::Position position,Point location,Sci::Position startLen_,int lineHeight,bool unicodeMode,int technology,bool useThickFrame)
Start	..\\scintilla\\src\\Decoration.cxx	/^Sci::Position DecorationList::Start(int indicator, Sci::Position position) {$/;"	f	class:DecorationList	typeref:typename:Sci::Position	signature:(int indicator,Sci::Position position)
Start	..\\scintilla\\src\\Selection.cxx	/^SelectionPosition Selection::Start() const {$/;"	f	class:Selection	typeref:typename:SelectionPosition	signature:() const
Start	..\\scintilla\\src\\Selection.h	/^	SelectionPosition Start() const {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:SelectionPosition	access:public	signature:() const
StartAt	..\\scintilla\\lexlib\\LexAccessor.h	/^	void StartAt(Sci_PositionU start) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:(Sci_PositionU start)
StartAt	..\\scite\\src\\StyleWriter.cxx	/^void StyleWriter::StartAt(unsigned int start, char chMask) {$/;"	f	class:StyleWriter	typeref:typename:void	signature:(unsigned int start,char chMask)
StartAutoComplete	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartAutoComplete() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartAutoCompleteWord	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartAutoCompleteWord(bool onlyOneWord) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(bool onlyOneWord)
StartBlockComment	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartBlockComment() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartBoxComment	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartBoxComment() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartCallTip	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartCallTip() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartDrag	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void StartDrag() {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:public	signature:()
StartDrag	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::StartDrag() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
StartDrag	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::StartDrag()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
StartDrag	..\\scintilla\\src\\Editor.cxx	/^void Editor::StartDrag() {$/;"	f	class:Editor	typeref:typename:void	signature:()
StartDrag	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::StartDrag() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
StartEndDisplayLine	..\\scintilla\\src\\EditView.cxx	/^Sci::Position EditView::StartEndDisplayLine(Surface *surface, const EditModel &model, Sci::Posit/;"	f	class:EditView	typeref:typename:Sci::Position	signature:(Surface * surface,const EditModel & model,Sci::Position pos,bool start,const ViewStyle & vs)
StartEndDisplayLine	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::StartEndDisplayLine(Sci::Position pos, bool start) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position pos,bool start)
StartExpandAbbreviation	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartExpandAbbreviation() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartIdleStyling	..\\scintilla\\src\\Editor.cxx	/^void Editor::StartIdleStyling(bool truncatedLastStyling) {$/;"	f	class:Editor	typeref:typename:void	signature:(bool truncatedLastStyling)
StartInsertAbbreviation	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartInsertAbbreviation() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartMacroList	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartMacroList(const char *words) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(const char * words)
StartMatch	..\\scite\\src\\MatchMarker.cxx	/^void MatchMarker::StartMatch(GUI::ScintillaWindow *pSci_,$/;"	f	class:MatchMarker	typeref:typename:void	signature:(GUI::ScintillaWindow * pSci_,const std::string & textMatch_,int flagsMatch_,int styleMatch_,int indicator_,int bookMark_)
StartPlayMacro	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::StartPlayMacro() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
StartRecordMacro	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::StartRecordMacro() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
StartRedo	..\\scintilla\\src\\CellBuffer.cxx	/^int CellBuffer::StartRedo() {$/;"	f	class:CellBuffer	typeref:typename:int	signature:()
StartRedo	..\\scintilla\\src\\CellBuffer.cxx	/^int UndoHistory::StartRedo() {$/;"	f	class:UndoHistory	typeref:typename:int	signature:()
StartResize	..\\scintilla\\win32\\PlatWin.cxx	/^void ListBoxX::StartResize(WPARAM hitCode) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:void	signature:(WPARAM hitCode)
StartRun	..\\scintilla\\src\\RunStyles.cxx	/^DISTANCE RunStyles<DISTANCE, STYLE>::StartRun(DISTANCE position) const {$/;"	f	class:RunStyles	typeref:typename:DISTANCE	signature:(DISTANCE position) const
StartSegment	..\\scintilla\\lexlib\\LexAccessor.h	/^	void StartSegment(Sci_PositionU pos) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:void	access:public	signature:(Sci_PositionU pos)
StartSegment	..\\scite\\src\\StyleWriter.cxx	/^void StyleWriter::StartSegment(unsigned int pos) {$/;"	f	class:StyleWriter	typeref:typename:void	signature:(unsigned int pos)
StartStreamComment	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::StartStreamComment() {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:()
StartStyling	..\\scintilla\\src\\Document.cxx	/^void SCI_METHOD Document::StartStyling(Sci_Position position, char) {$/;"	f	class:Document	typeref:typename:void SCI_METHOD	signature:(Sci_Position position,char)
StartStyling	..\\scite\\src\\LuaExtension.cxx	/^	static int StartStyling(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
StartStyling	..\\scite\\src\\LuaExtension.cxx	/^	void StartStyling(unsigned int startPos_, unsigned int length, int initStyle_) {$/;"	f	struct:StylingContext	typeref:typename:void	file:	access:public	signature:(unsigned int startPos_,unsigned int length,int initStyle_)
StartUndo	..\\scintilla\\src\\CellBuffer.cxx	/^int CellBuffer::StartUndo() {$/;"	f	class:CellBuffer	typeref:typename:int	signature:()
StartUndo	..\\scintilla\\src\\CellBuffer.cxx	/^int UndoHistory::StartUndo() {$/;"	f	class:UndoHistory	typeref:typename:int	signature:()
StartsWith	..\\scite\\scripts\\IFaceTableGen.py	/^def StartsWith(s, prefix):$/;"	f	access:public	signature:(s, prefix)
StartsWith	..\\scite\\src\\StringHelpers.cxx	/^bool StartsWith(GUI::gui_string const &s, GUI::gui_string const &start) {$/;"	f	typeref:typename:bool	signature:(GUI::gui_string const & s,GUI::gui_string const & start)
StartsWith	..\\scite\\src\\StringHelpers.cxx	/^bool StartsWith(std::string const &s, const char *start) {$/;"	f	typeref:typename:bool	signature:(std::string const & s,const char * start)
State	..\\scintilla\\lexlib\\SparseState.h	/^		State(Sci_Position position_, T value_) : position(position_), value(value_) {$/;"	f	struct:Scintilla::SparseState::State	access:public	signature:(Sci_Position position_,T value_)
State	..\\scintilla\\lexlib\\SparseState.h	/^	struct State {$/;"	s	class:Scintilla::SparseState	access:private
State	..\\scite\\src\\LuaExtension.cxx	/^	static int State(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
States	..\\scintilla\\src\\Document.cxx	/^LineState *Document::States() const {$/;"	f	class:Document	typeref:typename:LineState *	signature:() const
StaticWndProc	..\\scintilla\\win32\\PlatWin.cxx	/^LRESULT PASCAL ListBoxX::StaticWndProc($/;"	f	class:Scintilla::ListBoxX	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
StdStringFromDouble	..\\scite\\src\\StringHelpers.cxx	/^std::string StdStringFromDouble(double d, int precision) {$/;"	f	typeref:typename:std::string	signature:(double d,int precision)
StdStringFromInteger	..\\scite\\src\\StringHelpers.cxx	/^std::string StdStringFromInteger(int i) {$/;"	f	typeref:typename:std::string	signature:(int i)
StdStringFromSizeT	..\\scite\\src\\StringHelpers.cxx	/^std::string StdStringFromSizeT(size_t i) {$/;"	f	typeref:typename:std::string	signature:(size_t i)
StkId	..\\scintilla\\lua\\src\\lobject.h	/^typedef TValue *StkId;  \/* index to stack elements *\/$/;"	t	typeref:typename:TValue *
Stop	..\\scite\\src\\MatchMarker.cxx	/^void MatchMarker::Stop() {$/;"	f	class:MatchMarker	typeref:typename:void	signature:()
StopExecute	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::StopExecute() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
StopExecute	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::StopExecute() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
StopRecordMacro	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::StopRecordMacro() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
StoreOnClipboard	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::StoreOnClipboard(SelectionText *clipText) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(SelectionText * clipText)
StrAux	..\\scintilla\\lua\\src\\lpcap.c	/^typedef struct StrAux {$/;"	s	file:
StrAux	..\\scintilla\\lua\\src\\lpcap.c	/^} StrAux;$/;"	t	typeref:struct:StrAux	file:
StringCopy	..\\scintilla\\lexlib\\StringCopy.h	/^void StringCopy(T (&dest)[count], const T* source) {$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(T (& dest)[count],const T * source)
StringCopy	..\\scite\\src\\StringHelpers.h	/^void StringCopy(T (&dest)[count], const T* source) {$/;"	f	typeref:typename:void	signature:(T (& dest)[count],const T * source)
StringDecode	..\\scintilla\\win32\\ScintillaWin.cxx	/^static std::wstring StringDecode(const std::string &s, int codePage) {$/;"	f	typeref:typename:std::wstring	file:	signature:(const std::string & s,int codePage)
StringDecode	..\\scite\\win32\\SciTEWin.cxx	/^static std::wstring StringDecode(std::string s, int codePage) {$/;"	f	typeref:typename:std::wstring	file:	signature:(std::string s,int codePage)
StringEncode	..\\scintilla\\win32\\ScintillaWin.cxx	/^static std::string StringEncode(const std::wstring &s, int codePage) {$/;"	f	typeref:typename:std::string	file:	signature:(const std::wstring & s,int codePage)
StringEncode	..\\scite\\win32\\SciTEWin.cxx	/^static std::string StringEncode(std::wstring s, int codePage) {$/;"	f	typeref:typename:std::string	file:	signature:(std::wstring s,int codePage)
StringEqual	..\\scite\\src\\PropSetFile.cxx	/^static bool StringEqual(const char *a, const char *b, size_t len, bool caseSensitive) {$/;"	f	typeref:typename:bool	file:	signature:(const char * a,const char * b,size_t len,bool caseSensitive)
StringFromDocument	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^QString ScintillaQt::StringFromDocument(const char *s) const$/;"	f	class:ScintillaQt	typeref:typename:QString	signature:(const char * s) const
StringFromEOLMode	..\\scintilla\\src\\Editor.cxx	/^const char *Editor::StringFromEOLMode(int eolMode) {$/;"	f	class:Editor	typeref:typename:const char *	signature:(int eolMode)
StringFromInteger	..\\scite\\gtk\\GUIGTK.cxx	/^gui_string StringFromInteger(long i) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(long i)
StringFromInteger	..\\scite\\win32\\GUIWin.cxx	/^gui_string StringFromInteger(long i) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(long i)
StringFromSelectedText	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static QString StringFromSelectedText(const SelectionText &selectedText)$/;"	f	typeref:typename:QString	file:	signature:(const SelectionText & selectedText)
StringFromUTF8	..\\scite\\gtk\\GUIGTK.cxx	/^gui_string StringFromUTF8(const char *s) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(const char * s)
StringFromUTF8	..\\scite\\gtk\\GUIGTK.cxx	/^gui_string StringFromUTF8(const std::string &s) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(const std::string & s)
StringFromUTF8	..\\scite\\win32\\GUIWin.cxx	/^gui_string StringFromUTF8(const char *s) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(const char * s)
StringFromUTF8	..\\scite\\win32\\GUIWin.cxx	/^gui_string StringFromUTF8(const std::string &s) {$/;"	f	namespace:GUI	typeref:typename:gui_string	signature:(const std::string & s)
StringList	..\\scite\\src\\StringList.h	/^	explicit StringList(bool onlyLineEnds_ = false) :$/;"	f	class:StringList	access:public	signature:(bool onlyLineEnds_=false)
StringList	..\\scite\\src\\StringList.h	/^class StringList {$/;"	c
StringMapCase	..\\scintilla\\win32\\ScintillaWin.cxx	/^static std::wstring StringMapCase(const std::wstring &ws, DWORD mapFlags) {$/;"	f	typeref:typename:std::wstring	file:	signature:(const std::wstring & ws,DWORD mapFlags)
StringResult	..\\scintilla\\src\\Editor.cxx	/^sptr_t Editor::StringResult(sptr_t lParam, const char *val) {$/;"	f	class:Editor	typeref:typename:sptr_t	signature:(sptr_t lParam,const char * val)
StringSplit	..\\scite\\src\\StringHelpers.h	/^std::vector<T> StringSplit(const T &text, int separator) {$/;"	f	typeref:typename:std::vector<T>	signature:(const T & text,int separator)
Strip	..\\scite\\gtk\\Widget.h	/^	Strip() : allowMenuActions(false), childHasFocus(false), visible(false) {$/;"	f	class:Strip	access:public	signature:()
Strip	..\\scite\\gtk\\Widget.h	/^class Strip : public BaseWin {$/;"	c	inherits:BaseWin
Strip	..\\scite\\win32\\Strips.h	/^	Strip() : fontText(0), hTheme(0), scale(96), space(2), capturedMouse(false), closeState(csNone)/;"	f	class:Strip	access:public	signature:()
Strip	..\\scite\\win32\\Strips.h	/^class Strip : public BaseWin {$/;"	c	inherits:BaseWin
StripCommand	..\\scite\\src\\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	g
StripDefinition	..\\scite\\src\\StripDefinition.h	/^	explicit StripDefinition(GUI::gui_string definition) {$/;"	f	class:StripDefinition	access:public	signature:(GUI::gui_string definition)
StripDefinition	..\\scite\\src\\StripDefinition.h	/^class StripDefinition {$/;"	c
StripHasFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::StripHasFocus() {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:()
StripTrailingSpaces	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::StripTrailingSpaces() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Style	..\\scintilla\\src\\PerLine.cxx	/^int LineAnnotation::Style(Sci::Line line) const {$/;"	f	class:LineAnnotation	typeref:typename:int	signature:(Sci::Line line) const
Style	..\\scintilla\\src\\Style.cxx	/^Style::Style() : FontSpecification() {$/;"	f	class:Style	signature:()
Style	..\\scintilla\\src\\Style.cxx	/^Style::Style(const Style &source) : FontSpecification(), FontMeasurements() {$/;"	f	class:Style	signature:(const Style & source)
Style	..\\scintilla\\src\\Style.h	/^class Style : public FontSpecification, public FontMeasurements {$/;"	c	namespace:Scintilla	inherits:FontSpecification,FontMeasurements
StyleAndColour	..\\scintilla\\src\\Indicator.h	/^	StyleAndColour() : style(INDIC_PLAIN), fore(0, 0, 0) {$/;"	f	struct:Scintilla::StyleAndColour	access:public	signature:()
StyleAndColour	..\\scintilla\\src\\Indicator.h	/^	StyleAndColour(int style_, ColourDesired fore_ = ColourDesired(0, 0, 0)) : style(style_), fore(/;"	f	struct:Scintilla::StyleAndColour	access:public	signature:(int style_,ColourDesired fore_=ColourDesired (0,0,0))
StyleAndColour	..\\scintilla\\src\\Indicator.h	/^struct StyleAndColour {$/;"	s	namespace:Scintilla
StyleAndWords	..\\scite\\src\\SciTEBase.h	/^	StyleAndWords() : styleNumber(0) {$/;"	f	struct:StyleAndWords	access:public	signature:()
StyleAndWords	..\\scite\\src\\SciTEBase.h	/^struct StyleAndWords {$/;"	s
StyleAreaBounded	..\\scintilla\\src\\Editor.cxx	/^void Editor::StyleAreaBounded(PRectangle rcArea, bool scrolling) {$/;"	f	class:Editor	typeref:typename:void	signature:(PRectangle rcArea,bool scrolling)
StyleAt	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	int StyleAt(Sci::Position position, bool ensureStyle = false) {$/;"	f	class:Scintilla::ScintillaGTKAccessible	typeref:typename:int	access:private	signature:(Sci::Position position,bool ensureStyle=false)
StyleAt	..\\scintilla\\lexlib\\LexAccessor.h	/^	char StyleAt(Sci_Position position) const {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:char	access:public	signature:(Sci_Position position) const
StyleAt	..\\scintilla\\src\\CellBuffer.cxx	/^char CellBuffer::StyleAt(Sci::Position position) const {$/;"	f	class:CellBuffer	typeref:typename:char	signature:(Sci::Position position) const
StyleAt	..\\scintilla\\src\\Document.h	/^	char SCI_METHOD StyleAt(Sci_Position position) const { return cb.StyleAt(static_cast<Sci::Posit/;"	f	class:Scintilla::Document	typeref:typename:char SCI_METHOD	access:public	signature:(Sci_Position position) const
StyleAt	..\\scintilla\\src\\Document.h	/^	size_t StyleAt(size_t i) const {$/;"	f	struct:Scintilla::StyledText	typeref:typename:size_t	access:public	signature:(size_t i) const
StyleAt	..\\scite\\src\\LuaExtension.cxx	/^	static int StyleAt(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
StyleAt	..\\scite\\src\\StyleWriter.cxx	/^int TextReader::StyleAt(int position) {$/;"	f	class:TextReader	typeref:typename:int	signature:(int position)
StyleContext	..\\scintilla\\lexlib\\StyleContext.h	/^	StyleContext(Sci_PositionU startPos, Sci_PositionU length,$/;"	f	class:Scintilla::StyleContext	access:public	signature:(Sci_PositionU startPos,Sci_PositionU length,int initStyle,LexAccessor & styler_,char chMask='\\377')
StyleContext	..\\scintilla\\lexlib\\StyleContext.h	/^class StyleContext {$/;"	c	namespace:Scintilla
StyleDefinition	..\\scite\\src\\StyleDefinition.cxx	/^StyleDefinition::StyleDefinition(const char *definition) :$/;"	f	class:StyleDefinition	signature:(const char * definition)
StyleDefinition	..\\scite\\src\\StyleDefinition.h	/^class StyleDefinition {$/;"	c
StyleDefinitionFor	..\\scite\\src\\SciTEProps.cxx	/^StyleDefinition SciTEBase::StyleDefinitionFor(int style) {$/;"	f	class:SciTEBase	typeref:typename:StyleDefinition	signature:(int style)
StyleFromSubStyle	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::StyleFromSubStyle(int subStyle) {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:(int subStyle)
StyleFromSubStyle	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::StyleFromSubStyle(int subStyle) {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:(int subStyle)
StyleFromSubStyle	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::StyleFromSubStyle(int subStyle) {$/;"	f	class:LexState	typeref:typename:int	signature:(int subStyle)
StyleGetMessage	..\\scintilla\\src\\Editor.cxx	/^sptr_t Editor::StyleGetMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:Editor	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
StyleIdle	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gboolean ScintillaGTK::StyleIdle(gpointer pSci) {$/;"	f	class:ScintillaGTK	typeref:typename:gboolean	signature:(gpointer pSci)
StyleIndexAt	..\\scintilla\\src\\Document.h	/^	int StyleIndexAt(Sci_Position position) const { return static_cast<unsigned char>(cb.StyleAt(st/;"	f	class:Scintilla::Document	typeref:typename:int	access:public	signature:(Sci_Position position) const
StyleSet	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void StyleSet(GtkWidget *w, GtkStyle*, void*) {$/;"	f	typeref:typename:void	file:	signature:(GtkWidget * w,GtkStyle *,void *)
StyleSetMessage	..\\scintilla\\src\\Editor.cxx	/^void Editor::StyleSetMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:Editor	typeref:typename:void	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
StyleSetText	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::StyleSetText(GtkWidget *widget, GtkStyle *, void*) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget,GtkStyle *,void *)
StyleString	..\\scite\\src\\SciTEProps.cxx	/^std::string SciTEBase::StyleString(const char *lang, int style) const {$/;"	f	class:SciTEBase	typeref:typename:std::string	signature:(const char * lang,int style) const
StyleToAdjustingLineDuration	..\\scintilla\\src\\Document.cxx	/^void Document::StyleToAdjustingLineDuration(Sci::Position pos) {$/;"	f	class:Document	typeref:typename:void	signature:(Sci::Position pos)
StyleToPositionInView	..\\scintilla\\src\\Editor.cxx	/^void Editor::StyleToPositionInView(Sci::Position pos) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position pos)
StyleWriter	..\\scite\\src\\StyleWriter.cxx	/^StyleWriter::StyleWriter(GUI::ScintillaWindow &sw_) :$/;"	f	class:StyleWriter	signature:(GUI::ScintillaWindow & sw_)
StyleWriter	..\\scite\\src\\StyleWriter.h	/^class StyleWriter : public TextReader {$/;"	c	inherits:TextReader
StyledText	..\\scintilla\\src\\Document.h	/^	StyledText(size_t length_, const char *text_, bool multipleStyles_, int style_, const unsigned /;"	f	struct:Scintilla::StyledText	access:public	signature:(size_t length_,const char * text_,bool multipleStyles_,int style_,const unsigned char * styles_)
StyledText	..\\scintilla\\src\\Document.h	/^struct StyledText {$/;"	s	namespace:Scintilla
Styles	..\\scintilla\\src\\PerLine.cxx	/^const unsigned char *LineAnnotation::Styles(Sci::Line line) const {$/;"	f	class:LineAnnotation	typeref:typename:const unsigned char *	signature:(Sci::Line line) const
StylingContext	..\\scite\\src\\LuaExtension.cxx	/^struct StylingContext {$/;"	s	file:
SubLineRange	..\\scintilla\\src\\PositionCache.cxx	/^Range LineLayout::SubLineRange(int subLine) const {$/;"	f	class:LineLayout	typeref:typename:Range	signature:(int subLine) const
SubStyles	..\\scintilla\\lexlib\\SubStyles.h	/^	SubStyles(const char *baseStyles_, int styleFirst_, int stylesAvailable_, int secondaryDistance/;"	f	class:Scintilla::SubStyles	access:public	signature:(const char * baseStyles_,int styleFirst_,int stylesAvailable_,int secondaryDistance_)
SubStyles	..\\scintilla\\lexlib\\SubStyles.h	/^class SubStyles {$/;"	c	namespace:Scintilla
SubStylesLength	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::SubStylesLength(int) {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:(int)
SubStylesLength	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::SubStylesLength(int) {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:(int)
SubStylesLength	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::SubStylesLength(int styleBase) {$/;"	f	class:LexState	typeref:typename:int	signature:(int styleBase)
SubStylesStart	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::SubStylesStart(int) {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:(int)
SubStylesStart	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::SubStylesStart(int) {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:(int)
SubStylesStart	..\\scintilla\\src\\ScintillaBase.cxx	/^int LexState::SubStylesStart(int styleBase) {$/;"	f	class:LexState	typeref:typename:int	signature:(int styleBase)
Substitute	..\\scite\\src\\StringHelpers.cxx	/^int Substitute(std::string &s, const std::string &sFind, const std::string &sReplace) {$/;"	f	typeref:typename:int	signature:(std::string & s,const std::string & sFind,const std::string & sReplace)
Substitute	..\\scite\\src\\StringHelpers.cxx	/^int Substitute(std::wstring &s, const std::wstring &sFind, const std::wstring &sReplace) {$/;"	f	typeref:typename:int	signature:(std::wstring & s,const std::wstring & sFind,const std::wstring & sReplace)
SubstituteByPosition	..\\scintilla\\src\\Document.cxx	/^const char *BuiltinRegex::SubstituteByPosition(Document *doc, const char *text, Sci::Position *l/;"	f	class:BuiltinRegex	typeref:typename:const char *	signature:(Document * doc,const char * text,Sci::Position * length)
SubstituteByPosition	..\\scintilla\\src\\Document.cxx	/^const char *Document::SubstituteByPosition(const char *text, Sci::Position *length) {$/;"	f	class:Document	typeref:typename:const char *	signature:(const char * text,Sci::Position * length)
SubstituteMarkerIfEmpty	..\\scintilla\\src\\MarginView.cxx	/^static int SubstituteMarkerIfEmpty(int markerCheck, int markerDefault, const ViewStyle &vs) {$/;"	f	namespace:Scintilla	typeref:typename:int	file:	signature:(int markerCheck,int markerDefault,const ViewStyle & vs)
SubsystemFromChar	..\\scite\\src\\JobQueue.cxx	/^JobSubsystem SubsystemFromChar(char c) {$/;"	f	typeref:typename:JobSubsystem	signature:(char c)
SubsystemType	..\\scite\\src\\SciTEBuffers.cxx	/^JobSubsystem SciTEBase::SubsystemType(const char *cmd) {$/;"	f	class:SciTEBase	typeref:typename:JobSubsystem	signature:(const char * cmd)
Succeeded	..\\scintilla\\gtk\\Converter.h	/^	bool Succeeded() const {$/;"	f	class:Scintilla::Converter	typeref:typename:bool	access:private	signature:() const
Surface	..\\scintilla\\include\\Platform.h	/^	Surface() {}$/;"	f	class:Scintilla::Surface	access:public	signature:()
Surface	..\\scintilla\\include\\Platform.h	/^	Surface(const Surface &) {}$/;"	f	class:Scintilla::Surface	access:private	signature:(const Surface &)
Surface	..\\scintilla\\include\\Platform.h	/^class Surface {$/;"	c	namespace:Scintilla
SurfaceD2D	..\\scintilla\\win32\\PlatWin.cxx	/^SurfaceD2D::SurfaceD2D() :$/;"	f	class:Scintilla::SurfaceD2D	signature:()
SurfaceD2D	..\\scintilla\\win32\\PlatWin.cxx	/^class SurfaceD2D : public Surface {$/;"	c	namespace:Scintilla	file:	inherits:Surface
SurfaceGDI	..\\scintilla\\win32\\PlatWin.cxx	/^SurfaceGDI::SurfaceGDI() :$/;"	f	class:Scintilla::SurfaceGDI	signature:()
SurfaceGDI	..\\scintilla\\win32\\PlatWin.cxx	/^class SurfaceGDI : public Surface {$/;"	c	namespace:Scintilla	file:	inherits:Surface
SurfaceID	..\\scintilla\\include\\Platform.h	/^typedef void *SurfaceID;$/;"	t	namespace:Scintilla	typeref:typename:void *
SurfaceImpl	..\\scintilla\\cocoa\\PlatCocoa.h	/^class SurfaceImpl : public Surface$/;"	c	namespace:Scintilla	inherits:Surface
SurfaceImpl	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  SurfaceImpl() : win(0) {}$/;"	f	class:SurfaceImpl	file:	access:public	signature:()
SurfaceImpl	..\\scintilla\\curses\\ScintillaCurses.cxx	/^class SurfaceImpl : public Surface {$/;"	c	file:	inherits:Surface
SurfaceImpl	..\\scintilla\\gtk\\PlatGTK.cxx	/^SurfaceImpl::SurfaceImpl() : et(singleByte),$/;"	f	class:SurfaceImpl	signature:()
SurfaceImpl	..\\scintilla\\gtk\\PlatGTK.cxx	/^class SurfaceImpl : public Surface {$/;"	c	namespace:Scintilla	file:	inherits:Surface
SurfaceImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^SurfaceImpl::SurfaceImpl()$/;"	f	class:Scintilla::SurfaceImpl	signature:()
SurfaceImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^class SurfaceImpl : public Surface {$/;"	c	namespace:Scintilla	inherits:Surface
Swap	..\\scintilla\\src\\Selection.cxx	/^void SelectionRange::Swap() {$/;"	f	class:SelectionRange	typeref:typename:void	signature:()
Swap	..\\scite\\src\\SciTEBuffers.cxx	/^void BufferList::Swap(int indexA, int indexB) {$/;"	f	class:BufferList	typeref:typename:void	signature:(int indexA,int indexB)
SwitchDocumentAt	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::SwitchDocumentAt(int index, sptr_t pdoc) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int index,sptr_t pdoc)
TARGET_COMPOUND_TEXT	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    TARGET_COMPOUND_TEXT,$/;"	e	enum:__anon9c9cef500203	file:	access:public
TARGET_STRING	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    TARGET_STRING,$/;"	e	enum:__anon9c9cef500203	file:	access:public
TARGET_TEXT	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    TARGET_TEXT,$/;"	e	enum:__anon9c9cef500203	file:	access:public
TARGET_URI	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    TARGET_URI$/;"	e	enum:__anon9c9cef500203	file:	access:public
TARGET_UTF8_STRING	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^    TARGET_UTF8_STRING,$/;"	e	enum:__anon9c9cef500203	file:	access:public
TAnd	..\\scintilla\\lua\\src\\lptree.h	/^  TNot, TAnd,$/;"	e	enum:TTag	access:public
TAny	..\\scintilla\\lua\\src\\lptree.h	/^  TChar = 0, TSet, TAny,  \/* standard PEG elements *\/$/;"	e	enum:TTag	access:public
TArray	..\\scite\\src\\Containers.h	/^	TArray() {};$/;"	f	class:TArray	access:public	signature:()
TArray	..\\scite\\src\\Containers.h	/^class TArray$/;"	c
TBehind	..\\scintilla\\lua\\src\\lptree.h	/^  TBehind,  \/* match behind *\/$/;"	e	enum:TTag	access:public
TCall	..\\scintilla\\lua\\src\\lptree.h	/^  TCall,$/;"	e	enum:TTag	access:public
TCapture	..\\scintilla\\lua\\src\\lptree.h	/^  TCapture,  \/* regular capture *\/$/;"	e	enum:TTag	access:public
TChar	..\\scintilla\\lua\\src\\lptree.h	/^  TChar = 0, TSet, TAny,  \/* standard PEG elements *\/$/;"	e	enum:TTag	access:public
TChoice	..\\scintilla\\lua\\src\\lptree.h	/^  TSeq, TChoice,$/;"	e	enum:TTag	access:public
TEXT_COLUMN	..\\scintilla\\gtk\\PlatGTK.cxx	/^	TEXT_COLUMN,$/;"	e	enum:__anon0ae033de0203	file:	access:public
TFalse	..\\scintilla\\lua\\src\\lptree.h	/^  TTrue, TFalse,$/;"	e	enum:TTag	access:public
TGrammar	..\\scintilla\\lua\\src\\lptree.h	/^  TGrammar,  \/* sib1 is initial (and first) rule *\/$/;"	e	enum:TTag	access:public
THEME_AVAILABLE	..\\scite\\win32\\SciTEWin.h	/^#define THEME_AVAILABLE$/;"	d
TK_AND	..\\scintilla\\lua\\src\\llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED	access:public
TK_BREAK	..\\scintilla\\lua\\src\\llex.h	/^  TK_AND = FIRST_RESERVED, TK_BREAK,$/;"	e	enum:RESERVED	access:public
TK_CONCAT	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_DO	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_DOTS	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_ELSE	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_ELSEIF	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_END	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_EOS	..\\scintilla\\lua\\src\\llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED	access:public
TK_EQ	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_FALSE	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_FOR	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_FUNCTION	..\\scintilla\\lua\\src\\llex.h	/^  TK_DO, TK_ELSE, TK_ELSEIF, TK_END, TK_FALSE, TK_FOR, TK_FUNCTION,$/;"	e	enum:RESERVED	access:public
TK_GE	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_IF	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_IN	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_LE	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_LOCAL	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_NAME	..\\scintilla\\lua\\src\\llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED	access:public
TK_NE	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_NIL	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_NOT	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_NUMBER	..\\scintilla\\lua\\src\\llex.h	/^  TK_CONCAT, TK_DOTS, TK_EQ, TK_GE, TK_LE, TK_NE, TK_NUMBER,$/;"	e	enum:RESERVED	access:public
TK_OR	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_REPEAT	..\\scintilla\\lua\\src\\llex.h	/^  TK_IF, TK_IN, TK_LOCAL, TK_NIL, TK_NOT, TK_OR, TK_REPEAT,$/;"	e	enum:RESERVED	access:public
TK_RETURN	..\\scintilla\\lua\\src\\llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED	access:public
TK_STRING	..\\scintilla\\lua\\src\\llex.h	/^  TK_NAME, TK_STRING, TK_EOS$/;"	e	enum:RESERVED	access:public
TK_THEN	..\\scintilla\\lua\\src\\llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED	access:public
TK_TRUE	..\\scintilla\\lua\\src\\llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED	access:public
TK_UNTIL	..\\scintilla\\lua\\src\\llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED	access:public
TK_WHILE	..\\scintilla\\lua\\src\\llex.h	/^  TK_RETURN, TK_THEN, TK_TRUE, TK_UNTIL, TK_WHILE,$/;"	e	enum:RESERVED	access:public
TKey	..\\scintilla\\lua\\src\\lobject.h	/^typedef union TKey {$/;"	u
TKey	..\\scintilla\\lua\\src\\lobject.h	/^} TKey;$/;"	t	typeref:union:TKey
TList	..\\scite\\src\\Containers.h	/^	TList() {$/;"	f	class:TList	access:public	signature:()
TList	..\\scite\\src\\Containers.h	/^class TList$/;"	c
TMS	..\\scintilla\\lua\\src\\ltm.h	/^} TMS;$/;"	t	typeref:enum:__anon82708b090103
TM_ADD	..\\scintilla\\lua\\src\\ltm.h	/^  TM_ADD,$/;"	e	enum:__anon82708b090103	access:public
TM_CALL	..\\scintilla\\lua\\src\\ltm.h	/^  TM_CALL,$/;"	e	enum:__anon82708b090103	access:public
TM_CONCAT	..\\scintilla\\lua\\src\\ltm.h	/^  TM_CONCAT,$/;"	e	enum:__anon82708b090103	access:public
TM_DIV	..\\scintilla\\lua\\src\\ltm.h	/^  TM_DIV,$/;"	e	enum:__anon82708b090103	access:public
TM_EQ	..\\scintilla\\lua\\src\\ltm.h	/^  TM_EQ,  \/* last tag method with `fast' access *\/$/;"	e	enum:__anon82708b090103	access:public
TM_GC	..\\scintilla\\lua\\src\\ltm.h	/^  TM_GC,$/;"	e	enum:__anon82708b090103	access:public
TM_INDEX	..\\scintilla\\lua\\src\\ltm.h	/^  TM_INDEX,$/;"	e	enum:__anon82708b090103	access:public
TM_LE	..\\scintilla\\lua\\src\\ltm.h	/^  TM_LE,$/;"	e	enum:__anon82708b090103	access:public
TM_LEN	..\\scintilla\\lua\\src\\ltm.h	/^  TM_LEN,$/;"	e	enum:__anon82708b090103	access:public
TM_LT	..\\scintilla\\lua\\src\\ltm.h	/^  TM_LT,$/;"	e	enum:__anon82708b090103	access:public
TM_MOD	..\\scintilla\\lua\\src\\ltm.h	/^  TM_MOD,$/;"	e	enum:__anon82708b090103	access:public
TM_MODE	..\\scintilla\\lua\\src\\ltm.h	/^  TM_MODE,$/;"	e	enum:__anon82708b090103	access:public
TM_MUL	..\\scintilla\\lua\\src\\ltm.h	/^  TM_MUL,$/;"	e	enum:__anon82708b090103	access:public
TM_N	..\\scintilla\\lua\\src\\ltm.h	/^  TM_N		\/* number of elements in the enum *\/$/;"	e	enum:__anon82708b090103	access:public
TM_NEWINDEX	..\\scintilla\\lua\\src\\ltm.h	/^  TM_NEWINDEX,$/;"	e	enum:__anon82708b090103	access:public
TM_POW	..\\scintilla\\lua\\src\\ltm.h	/^  TM_POW,$/;"	e	enum:__anon82708b090103	access:public
TM_SUB	..\\scintilla\\lua\\src\\ltm.h	/^  TM_SUB,$/;"	e	enum:__anon82708b090103	access:public
TM_UNM	..\\scintilla\\lua\\src\\ltm.h	/^  TM_UNM,$/;"	e	enum:__anon82708b090103	access:public
TMap	..\\scite\\src\\Containers.h	/^	TMap() {$/;"	f	class:TMap	access:public	signature:()
TMap	..\\scite\\src\\Containers.h	/^class TMap$/;"	c
TNot	..\\scintilla\\lua\\src\\lptree.h	/^  TNot, TAnd,$/;"	e	enum:TTag	access:public
TOKEN_LEN	..\\scintilla\\lua\\src\\llex.h	/^#define TOKEN_LEN	/;"	d
TOOLS_START	..\\scite\\src\\SciTE.h	/^#define TOOLS_START /;"	d
TOpenCall	..\\scintilla\\lua\\src\\lptree.h	/^  TOpenCall,$/;"	e	enum:TTag	access:public
TP_BUTTON	..\\scite\\win32\\SciTEWin.h	/^#define TP_BUTTON /;"	d
TRep	..\\scintilla\\lua\\src\\lptree.h	/^  TRep,$/;"	e	enum:TTag	access:public
TRule	..\\scintilla\\lua\\src\\lptree.h	/^  TRule,  \/* sib1 is rule's pattern, sib2 is 'next' rule *\/$/;"	e	enum:TTag	access:public
TRunTime	..\\scintilla\\lua\\src\\lptree.h	/^  TRunTime  \/* run-time capture *\/$/;"	e	enum:TTag	access:public
TS_CHECKED	..\\scite\\win32\\SciTEWin.h	/^#define TS_CHECKED /;"	d
TS_HOT	..\\scite\\win32\\SciTEWin.h	/^#define TS_HOT /;"	d
TS_HOTCHECKED	..\\scite\\win32\\SciTEWin.h	/^#define TS_HOTCHECKED /;"	d
TS_NORMAL	..\\scite\\win32\\SciTEWin.h	/^#define TS_NORMAL /;"	d
TS_PRESSED	..\\scite\\win32\\SciTEWin.h	/^#define TS_PRESSED /;"	d
TSeq	..\\scintilla\\lua\\src\\lptree.h	/^  TSeq, TChoice,$/;"	e	enum:TTag	access:public
TSet	..\\scintilla\\lua\\src\\lptree.h	/^  TChar = 0, TSet, TAny,  \/* standard PEG elements *\/$/;"	e	enum:TTag	access:public
TString	..\\scintilla\\lua\\src\\lobject.h	/^typedef union TString {$/;"	u
TString	..\\scintilla\\lua\\src\\lobject.h	/^} TString;$/;"	t	typeref:union:TString
TTag	..\\scintilla\\lua\\src\\lptree.h	/^typedef enum TTag {$/;"	g
TTag	..\\scintilla\\lua\\src\\lptree.h	/^} TTag;$/;"	t	typeref:enum:TTag
TTree	..\\scintilla\\lua\\src\\lptree.h	/^typedef struct TTree {$/;"	s
TTree	..\\scintilla\\lua\\src\\lptree.h	/^} TTree;$/;"	t	typeref:struct:TTree
TTrue	..\\scintilla\\lua\\src\\lptree.h	/^  TTrue, TFalse,$/;"	e	enum:TTag	access:public
TValue	..\\scintilla\\lua\\src\\lobject.h	/^} TValue;$/;"	t	typeref:struct:lua_TValue
TValuefields	..\\scintilla\\lua\\src\\lobject.h	/^#define TValuefields	/;"	d
TWndProc	..\\scite\\win32\\SciTEWin.cxx	/^LRESULT PASCAL SciTEWin::TWndProc($/;"	f	class:SciTEWin	typeref:typename:LRESULT PASCAL	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
T_CONTAINERS_POSITION	..\\scite\\src\\Containers.h	/^struct T_CONTAINERS_POSITION { };$/;"	s
T_POSITION	..\\scite\\src\\Containers.h	/^typedef T_CONTAINERS_POSITION* T_POSITION;$/;"	t	typeref:typename:T_CONTAINERS_POSITION *
Tab	..\\scite\\win32\\Strips.cxx	/^void Strip::Tab(bool forwards) {$/;"	f	class:Strip	typeref:typename:void	signature:(bool forwards)
TabAtPoint	..\\scite\\win32\\SciTEWinBar.cxx	/^int TabAtPoint(HWND hWnd, GUI::Point pt) {$/;"	f	namespace:__anon9c574aa40111	typeref:typename:int	signature:(HWND hWnd,GUI::Point pt)
TabBarRelease	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::TabBarRelease(GtkNotebook *notebook, GdkEventButton *event) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GtkNotebook * notebook,GdkEventButton * event)
TabBarReleaseSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^	static gint TabBarReleaseSignal(GtkNotebook *notebook, GdkEventButton *event, SciTEGTK *scitew)/;"	f	class:SciTEGTK	typeref:typename:gint	file:	access:protected	signature:(GtkNotebook * notebook,GdkEventButton * event,SciTEGTK * scitew)
TabBarScroll	..\\scite\\gtk\\SciTEGTK.cxx	/^gint SciTEGTK::TabBarScroll(GdkEventScroll *event) {$/;"	f	class:SciTEGTK	typeref:typename:gint	signature:(GdkEventScroll * event)
TabBarScrollSignal	..\\scite\\gtk\\SciTEGTK.cxx	/^	static gint TabBarScrollSignal(GtkNotebook *, GdkEventScroll *event, SciTEGTK *scitew) {$/;"	f	class:SciTEGTK	typeref:typename:gint	file:	access:protected	signature:(GtkNotebook *,GdkEventScroll * event,SciTEGTK * scitew)
TabDrawMode	..\\scintilla\\src\\ViewStyle.h	/^enum TabDrawMode {tdLongArrow=0, tdStrikeOut=1};$/;"	g	namespace:Scintilla
TabInsert	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabInsert(int index, const GUI::gui_char *title) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int index,const GUI::gui_char * title)
TabInsert	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::TabInsert(int index, const GUI::gui_char *title) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int index,const GUI::gui_char * title)
TabSelect	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabSelect(int index) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int index)
TabSelect	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::TabSelect(int index) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int index)
TabSizeCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabSizeCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
TabSizeConvertCmd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabSizeConvertCmd() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
TabSizeDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabSizeDialog() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
TabSizeDialog	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::TabSizeDialog() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
TabSizeDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^INT_PTR CALLBACK SciTEWin::TabSizeDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:INT_PTR CALLBACK	signature:(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam)
TabSizeMessage	..\\scite\\win32\\SciTEWinDlg.cxx	/^BOOL SciTEWin::TabSizeMessage(HWND hDlg, UINT message, WPARAM wParam) {$/;"	f	class:SciTEWin	typeref:typename:BOOL	signature:(HWND hDlg,UINT message,WPARAM wParam)
TabSizeResponse	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabSizeResponse(int responseID) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int responseID)
TabSizeSet	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TabSizeSet(int &tabSize, bool &useTabs) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int & tabSize,bool & useTabs)
TabWndProc	..\\scite\\win32\\SciTEWinBar.cxx	/^static LRESULT PASCAL TabWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	typeref:typename:LRESULT PASCAL	file:	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
Table	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct Table {$/;"	s
Table	..\\scintilla\\lua\\src\\lobject.h	/^} Table;$/;"	t	typeref:struct:Table
TabstopList	..\\scintilla\\src\\PerLine.h	/^typedef std::vector<int> TabstopList;$/;"	t	namespace:Scintilla	typeref:typename:std::vector<int>
TagsOfStyle	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^const char * SCI_METHOD DefaultLexer::TagsOfStyle(int style) {$/;"	f	class:DefaultLexer	typeref:typename:const char * SCI_METHOD	signature:(int style)
TagsOfStyle	..\\scintilla\\lexlib\\LexerBase.cxx	/^const char * SCI_METHOD LexerBase::TagsOfStyle(int style) {$/;"	f	class:LexerBase	typeref:typename:const char * SCI_METHOD	signature:(int style)
TagsOfStyle	..\\scintilla\\src\\ScintillaBase.cxx	/^const char *LexState::TagsOfStyle(int style) {$/;"	f	class:LexState	typeref:typename:const char *	signature:(int style)
Target	..\\scintilla\\lexlib\\OptionSet.h	/^	typedef T Target;$/;"	t	class:Scintilla::OptionSet	typeref:typename:T	access:private
TargetAsUTF8	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^int ScintillaGTK::TargetAsUTF8(char *text) {$/;"	f	class:ScintillaGTK	typeref:typename:int	signature:(char * text)
TargetAsUTF8	..\\scintilla\\win32\\ScintillaWin.cxx	/^Sci::Position ScintillaWin::TargetAsUTF8(char *text) {$/;"	f	class:ScintillaWin	typeref:typename:Sci::Position	signature:(char * text)
Tentative	..\\scintilla\\src\\Selection.h	/^	bool Tentative() const { return tentativeMain; }$/;"	f	class:Scintilla::Selection	typeref:typename:bool	access:public	signature:() const
TentativeActive	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::TentativeActive() const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:() const
TentativeActive	..\\scintilla\\src\\CellBuffer.h	/^	bool TentativeActive() const { return tentativePoint >= 0; }$/;"	f	class:Scintilla::UndoHistory	typeref:typename:bool	access:public	signature:() const
TentativeActive	..\\scintilla\\src\\Document.h	/^	bool TentativeActive() const { return cb.TentativeActive(); }$/;"	f	class:Scintilla::Document	typeref:typename:bool	access:public	signature:() const
TentativeCommit	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::TentativeCommit() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
TentativeCommit	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::TentativeCommit() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
TentativeCommit	..\\scintilla\\src\\Document.h	/^	void TentativeCommit() { cb.TentativeCommit(); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:()
TentativeSelection	..\\scintilla\\src\\Selection.cxx	/^void Selection::TentativeSelection(SelectionRange range) {$/;"	f	class:Selection	typeref:typename:void	signature:(SelectionRange range)
TentativeStart	..\\scintilla\\src\\CellBuffer.cxx	/^void CellBuffer::TentativeStart() {$/;"	f	class:CellBuffer	typeref:typename:void	signature:()
TentativeStart	..\\scintilla\\src\\CellBuffer.cxx	/^void UndoHistory::TentativeStart() {$/;"	f	class:UndoHistory	typeref:typename:void	signature:()
TentativeStart	..\\scintilla\\src\\Document.h	/^	void TentativeStart() { cb.TentativeStart(); }$/;"	f	class:Scintilla::Document	typeref:typename:void	access:public	signature:()
TentativeSteps	..\\scintilla\\src\\CellBuffer.cxx	/^int CellBuffer::TentativeSteps() {$/;"	f	class:CellBuffer	typeref:typename:int	signature:()
TentativeSteps	..\\scintilla\\src\\CellBuffer.cxx	/^int UndoHistory::TentativeSteps() {$/;"	f	class:UndoHistory	typeref:typename:int	signature:()
TentativeUndo	..\\scintilla\\src\\Document.cxx	/^void Document::TentativeUndo() {$/;"	f	class:Document	typeref:typename:void	signature:()
Text	..\\scintilla\\src\\PerLine.cxx	/^const char *LineAnnotation::Text(Sci::Line line) const {$/;"	f	class:LineAnnotation	typeref:typename:const char *	signature:(Sci::Line line) const
Text	..\\scite\\gtk\\Widget.cxx	/^const GUI::gui_char *WComboBoxEntry::Text() {$/;"	f	class:WComboBoxEntry	typeref:typename:const GUI::gui_char *	signature:()
Text	..\\scite\\gtk\\Widget.cxx	/^const GUI::gui_char *WEntry::Text() {$/;"	f	class:WEntry	typeref:typename:const GUI::gui_char *	signature:()
Text	..\\scite\\src\\SciTEProps.cxx	/^GUI::gui_string Localization::Text(const char *s, bool retainIfNotFound) {$/;"	f	class:Localization	typeref:typename:GUI::gui_string	signature:(const char * s,bool retainIfNotFound)
TextBackground	..\\scintilla\\src\\EditView.cxx	/^static ColourDesired TextBackground(const EditModel &model, const ViewStyle &vsDraw, const LineL/;"	f	typeref:typename:ColourDesired	file:	signature:(const EditModel & model,const ViewStyle & vsDraw,const LineLayout * ll,ColourOptional background,int inSelection,bool inHotspot,int styleMain,Sci::Position i)
TextInset	..\\scintilla\\win32\\PlatWin.cxx	/^	static const Point TextInset;	\/\/ Padding around text$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const Point	file:	access:private
TextInset	..\\scintilla\\win32\\PlatWin.cxx	/^const Point ListBoxX::TextInset(2, 2); \/\/ .y gets multiplied in ItemHeight$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const Point
TextOfWindow	..\\scite\\win32\\Strips.cxx	/^GUI::gui_string TextOfWindow(HWND hWnd) {$/;"	f	typeref:typename:GUI::gui_string	signature:(HWND hWnd)
TextOffset	..\\scintilla\\win32\\PlatWin.cxx	/^int ListBoxX::TextOffset() const {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:int	signature:() const
TextPositions	..\\scintilla\\win32\\PlatWin.cxx	/^typedef VarBuffer<XYPOSITION, stackBufferLength> TextPositions;$/;"	t	namespace:Scintilla	typeref:typename:VarBuffer<XYPOSITION,stackBufferLength>	file:
TextPositionsI	..\\scintilla\\win32\\PlatWin.cxx	/^typedef VarBuffer<int, stackBufferLength> TextPositionsI;$/;"	t	namespace:Scintilla	typeref:typename:VarBuffer<int,stackBufferLength>	file:
TextRange	..\\scintilla\\include\\Scintilla.h	/^#define TextRange /;"	d
TextRead	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::TextRead(FileWorker *pFileWorker) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FileWorker * pFileWorker)
TextReader	..\\scite\\src\\StyleWriter.cxx	/^TextReader::TextReader(GUI::ScintillaWindow &sw_) :$/;"	f	class:TextReader	signature:(GUI::ScintillaWindow & sw_)
TextReader	..\\scite\\src\\StyleWriter.h	/^class TextReader {$/;"	c
TextReceived	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^		void TextReceived(GtkClipboard *, const gchar *text) {$/;"	f	struct:ScintillaGTKAccessible::PasteText::Helper	typeref:typename:void	file:	access:public	signature:(GtkClipboard *,const gchar * text)
TextReceivedCallback	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^		static void TextReceivedCallback(GtkClipboard *clipboard, const gchar *text, gpointer data) {$/;"	f	struct:ScintillaGTKAccessible::PasteText::Helper	typeref:typename:void	file:	access:public	signature:(GtkClipboard * clipboard,const gchar * text,gpointer data)
TextSegment	..\\scintilla\\src\\PositionCache.h	/^	TextSegment(int start_=0, int length_=0, const Representation *representation_=0) :$/;"	f	struct:Scintilla::TextSegment	access:public	signature:(int start_=0,int length_=0,const Representation * representation_=0)
TextSegment	..\\scintilla\\src\\PositionCache.h	/^struct TextSegment {$/;"	s	namespace:Scintilla
TextToFind	..\\scintilla\\include\\Scintilla.h	/^#define TextToFind /;"	d
TextWide	..\\scintilla\\win32\\PlatWin.cxx	/^	TextWide(const char *s, int len, bool unicodeMode, int codePage=0) :$/;"	f	class:Scintilla::TextWide	file:	access:public	signature:(const char * s,int len,bool unicodeMode,int codePage=0)
TextWide	..\\scintilla\\win32\\PlatWin.cxx	/^class TextWide : public VarBuffer<wchar_t, stackBufferLength> {$/;"	c	namespace:Scintilla	file:	inherits:VarBuffer<wchar_t,stackBufferLength>
TextWidth	..\\scintilla\\src\\Editor.cxx	/^int Editor::TextWidth(int style, const char *text) {$/;"	f	class:Editor	typeref:typename:int	signature:(int style,const char * text)
TextWritten	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::TextWritten(FileWorker *pFileWorker) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(FileWorker * pFileWorker)
ThinRectangularRange	..\\scintilla\\src\\Editor.cxx	/^void Editor::ThinRectangularRange() {$/;"	f	class:Editor	typeref:typename:void	signature:()
ThreadLockMinder	..\\scite\\gtk\\SciTEGTK.cxx	/^	ThreadLockMinder() {$/;"	f	class:ThreadLockMinder	file:	access:public	signature:()
ThreadLockMinder	..\\scite\\gtk\\SciTEGTK.cxx	/^class ThreadLockMinder {$/;"	c	file:
TickFor	..\\scintilla\\src\\Editor.cxx	/^void Editor::TickFor(TickReason reason) {$/;"	f	class:Editor	typeref:typename:void	signature:(TickReason reason)
TickReason	..\\scintilla\\src\\Editor.h	/^	enum TickReason { tickCaret, tickScroll, tickWiden, tickDwell, tickPlatform };$/;"	g	class:Scintilla::Editor	access:protected
TickerID	..\\scintilla\\include\\Platform.h	/^typedef void *TickerID;$/;"	t	namespace:Scintilla	typeref:typename:void *
TimeCommands	..\\scite\\src\\JobQueue.h	/^	bool TimeCommands() const {$/;"	f	class:JobQueue	typeref:typename:bool	access:public	signature:() const
TimeOut	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^int ScintillaGTK::TimeOut(gpointer ptt) {$/;"	f	class:ScintillaGTK	typeref:typename:int	signature:(gpointer ptt)
TimeThunk	..\\scintilla\\gtk\\ScintillaGTK.h	/^		TimeThunk() : reason(tickCaret), scintilla(NULL), timer(0) {}$/;"	f	struct:Scintilla::ScintillaGTK::TimeThunk	access:public	signature:()
TimeThunk	..\\scintilla\\gtk\\ScintillaGTK.h	/^	struct TimeThunk {$/;"	s	class:Scintilla::ScintillaGTK	access:private
Timer	..\\scintilla\\src\\Editor.cxx	/^Timer::Timer() :$/;"	f	class:Timer	signature:()
Timer	..\\scintilla\\src\\Editor.h	/^class Timer {$/;"	c	namespace:Scintilla
TimerEnd	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TimerEnd(int mask) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int mask)
TimerEnd	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::TimerEnd(int \/* mask *\/) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int)
TimerEnd	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::TimerEnd(int mask) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int mask)
TimerStart	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::TimerStart(int mask) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int mask)
TimerStart	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::TimerStart(int \/* mask *\/) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int)
TimerStart	..\\scite\\win32\\SciTEWinBar.cxx	/^void SciTEWin::TimerStart(int mask) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int mask)
TimerTick	..\\scite\\gtk\\SciTEGTK.cxx	/^gboolean SciTEGTK::TimerTick(gpointer pSciTE) {$/;"	f	class:SciTEGTK	typeref:typename:gboolean	signature:(gpointer pSciTE)
Toggle	..\\scite\\gtk\\Widget.cxx	/^void WCheckDraw::Toggle() {$/;"	f	class:WCheckDraw	typeref:typename:void	signature:()
ToggleButton	..\\scite\\gtk\\Widget.cxx	/^GtkToggleButton *WCheckDraw::ToggleButton() {$/;"	f	class:WCheckDraw	typeref:typename:GtkToggleButton *	signature:()
ToggleChanged	..\\scite\\gtk\\SciTEGTK.cxx	/^void FindStrip::ToggleChanged(WCheckDraw *, void *user) {$/;"	f	class:FindStrip	typeref:typename:void	signature:(WCheckDraw *,void * user)
ToggleChanged	..\\scite\\gtk\\SciTEGTK.cxx	/^void ReplaceStrip::ToggleChanged(WCheckDraw *, void *user) {$/;"	f	class:ReplaceStrip	typeref:typename:void	signature:(WCheckDraw *,void * user)
ToggleFoldRecursive	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ToggleFoldRecursive(int line, int level) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int line,int level)
ToggleHanja	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::ToggleHanja() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
ToggleOpenFilesHere	..\\scite\\win32\\UniqueInstance.cxx	/^void UniqueInstance::ToggleOpenFilesHere() {$/;"	f	class:UniqueInstance	typeref:typename:void	signature:()
ToggleOutputVisible	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ToggleOutputVisible() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
Toggled	..\\scite\\gtk\\Widget.cxx	/^void WCheckDraw::Toggled(GtkWidget *, WCheckDraw *pcd) {$/;"	f	class:WCheckDraw	typeref:typename:void	signature:(GtkWidget *,WCheckDraw * pcd)
Token	..\\scintilla\\lua\\src\\llex.h	/^typedef struct Token {$/;"	s
Token	..\\scintilla\\lua\\src\\llex.h	/^} Token;$/;"	t	typeref:struct:Token
Token	..\\scite\\src\\LuaExtension.cxx	/^	static int Token(lua_State *L) {$/;"	f	struct:StylingContext	typeref:typename:int	file:	access:public	signature:(lua_State * L)
ToolBarTips	..\\scite\\win32\\SciTEWin.h	/^	TMap<int,int, std::string, const char *> ToolBarTips;$/;"	m	class:SciTEWin	typeref:typename:TMap<int,int,std::string,const char * >	access:protected
ToolIsImmediate	..\\scite\\src\\SciTEBuffers.cxx	/^bool SciTEBase::ToolIsImmediate(int item) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(int item)
ToolsMenu	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::ToolsMenu(int item) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int item)
TopLineOfMain	..\\scintilla\\src\\Editor.cxx	/^Sci::Line Editor::TopLineOfMain() const {$/;"	f	class:Editor	typeref:typename:Sci::Line	signature:() const
Trace	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::Trace(const char *s) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * s)
TrackMouse	..\\scite\\win32\\Strips.cxx	/^void Strip::TrackMouse(GUI::Point pt) {$/;"	f	class:Strip	typeref:typename:void	signature:(GUI::Point pt)
TrackMouseEventSig	..\\scintilla\\win32\\ScintillaWin.cxx	/^typedef BOOL (WINAPI *TrackMouseEventSig)(LPTRACKMOUSEEVENT);$/;"	t	typeref:typename:BOOL (WINAPI *)(LPTRACKMOUSEEVENT)	file:
TrailByteValue	..\\scintilla\\src\\UniConversion.cxx	/^constexpr unsigned char TrailByteValue(unsigned char c) {$/;"	f	namespace:Scintilla	typeref:typename:unsigned char	signature:(unsigned char c)
TransformLineEnds	..\\scintilla\\src\\Document.cxx	/^std::string Document::TransformLineEnds(const char *s, size_t len, int eolModeWanted) {$/;"	f	class:Document	typeref:typename:std::string	signature:(const char * s,size_t len,int eolModeWanted)
TranslatePath	..\\scite\\gtk\\SciTEGTK.cxx	/^std::string SciTEGTK::TranslatePath(const char *path) {$/;"	f	class:SciTEGTK	typeref:typename:std::string	signature:(const char * path)
TranslatedLabel	..\\scite\\gtk\\SciTEGTK.cxx	/^GtkWidget *SciTEGTK::TranslatedLabel(const char *original) {$/;"	f	class:SciTEGTK	typeref:typename:GtkWidget *	signature:(const char * original)
Trim	..\\scintilla\\src\\Selection.cxx	/^bool SelectionRange::Trim(SelectionRange range) {$/;"	f	class:SelectionRange	typeref:typename:bool	signature:(SelectionRange range)
TrimAndSetSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::TrimAndSetSelection(Sci::Position currentPos_, Sci::Position anchor_) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position currentPos_,Sci::Position anchor_)
TrimOtherSelections	..\\scintilla\\src\\Selection.cxx	/^void Selection::TrimOtherSelections(size_t r, SelectionRange range) {$/;"	f	class:Selection	typeref:typename:void	signature:(size_t r,SelectionRange range)
TrimSelection	..\\scintilla\\src\\Selection.cxx	/^void Selection::TrimSelection(SelectionRange range) {$/;"	f	class:Selection	typeref:typename:void	signature:(SelectionRange range)
TypeOfGSD	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static GdkAtom TypeOfGSD(GtkSelectionData *sd) { return gtk_selection_data_get_data_type(sd); }$/;"	f	typeref:typename:GdkAtom	file:	signature:(GtkSelectionData * sd)
UCControlType	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	g	class:UserControl	access:public
UIAvailable	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::UIAvailable() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
UIClosed	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UIClosed() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
UIClosed	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::UIClosed() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
UIClosed	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::UIClosed() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
UIHasFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UIHasFocus() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
UIHasFocus	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::UIHasFocus() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
UISF_HIDEACCEL	..\\scite\\win32\\Strips.h	/^#define UISF_HIDEACCEL /;"	d
UISF_HIDEFOCUS	..\\scite\\win32\\Strips.h	/^#define UISF_HIDEFOCUS /;"	d
UIS_CLEAR	..\\scite\\win32\\Strips.h	/^#define UIS_CLEAR /;"	d
UIS_SET	..\\scite\\win32\\Strips.h	/^#define UIS_SET /;"	d
UNARY_PRIORITY	..\\scintilla\\lua\\src\\lparser.c	/^#define UNARY_PRIORITY	/;"	d	file:
UNDO_MAY_COALESCE	..\\scintilla\\include\\Scintilla.h	/^#define UNDO_MAY_COALESCE /;"	d
UNICODEFROMUTF8_H	..\\scintilla\\src\\UnicodeFromUTF8.h	/^#define UNICODEFROMUTF8_H$/;"	d
UNICODE_NOCHAR	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define UNICODE_NOCHAR /;"	d	file:
UNICONVERSION_H	..\\scintilla\\src\\UniConversion.h	/^#define UNICONVERSION_H$/;"	d
UNIQUESTRING_H	..\\scintilla\\src\\UniqueString.h	/^#define UNIQUESTRING_H$/;"	d
UNUSED	..\\scintilla\\lua\\src\\llimits.h	/^#define UNUSED(/;"	d	signature:(x)
USE_D2D	..\\scintilla\\win32\\PlatWin.cxx	/^#define USE_D2D /;"	d	file:
USE_D2D	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define USE_D2D /;"	d	file:
USE_GRID	..\\scite\\gtk\\Widget.cxx	/^#define USE_GRID /;"	d	file:
UTF16CharLength	..\\scintilla\\src\\UniConversion.h	/^inline unsigned int UTF16CharLength(wchar_t uch) {$/;"	f	namespace:Scintilla	typeref:typename:unsigned int	signature:(wchar_t uch)
UTF16FromUTF32Character	..\\scintilla\\src\\UniConversion.cxx	/^unsigned int UTF16FromUTF32Character(unsigned int val, wchar_t *tbuf) {$/;"	f	namespace:Scintilla	typeref:typename:unsigned int	signature:(unsigned int val,wchar_t * tbuf)
UTF16FromUTF8	..\\scintilla\\src\\UniConversion.cxx	/^size_t UTF16FromUTF8(const char *s, size_t len, wchar_t *tbuf, size_t tlen) {$/;"	f	namespace:Scintilla	typeref:typename:size_t	signature:(const char * s,size_t len,wchar_t * tbuf,size_t tlen)
UTF16FromUTF8	..\\scite\\win32\\GUIWin.cxx	/^static size_t UTF16FromUTF8(const char *s, size_t len, gui_char *tbuf, size_t tlen) {$/;"	f	namespace:GUI	typeref:typename:size_t	file:	signature:(const char * s,size_t len,gui_char * tbuf,size_t tlen)
UTF16Length	..\\scintilla\\src\\UniConversion.cxx	/^size_t UTF16Length(const char *s, size_t len) {$/;"	f	namespace:Scintilla	typeref:typename:size_t	signature:(const char * s,size_t len)
UTF16Length	..\\scite\\win32\\GUIWin.cxx	/^static size_t UTF16Length(const char *s, unsigned int len) {$/;"	f	namespace:GUI	typeref:typename:size_t	file:	signature:(const char * s,unsigned int len)
UTF32Character	..\\scite\\src\\StringHelpers.cxx	/^unsigned int UTF32Character(const unsigned char *utf8) {$/;"	f	typeref:typename:unsigned int	signature:(const unsigned char * utf8)
UTF32FromUTF8	..\\scintilla\\src\\UniConversion.cxx	/^size_t UTF32FromUTF8(const char *s, size_t len, unsigned int *tbuf, size_t tlen) {$/;"	f	namespace:Scintilla	typeref:typename:size_t	signature:(const char * s,size_t len,unsigned int * tbuf,size_t tlen)
UTF8	..\\scintilla\\gtk\\PlatGTK.cxx	/^enum encodingType { singleByte, UTF8, dbcs};$/;"	e	enum:encodingType	file:	access:public
UTF8BytesOfLead	..\\scintilla\\src\\UniConversion.cxx	/^int UTF8BytesOfLead[256];$/;"	v	namespace:Scintilla	typeref:typename:int[256]
UTF8BytesOfLeadInitialise	..\\scintilla\\src\\UniConversion.cxx	/^void UTF8BytesOfLeadInitialise() {$/;"	f	namespace:Scintilla	typeref:typename:void	signature:()
UTF8CharLength	..\\scintilla\\src\\UniConversion.cxx	/^unsigned int UTF8CharLength(unsigned char ch) {$/;"	f	namespace:Scintilla	typeref:typename:unsigned int	signature:(unsigned char ch)
UTF8Classify	..\\scintilla\\src\\UniConversion.cxx	/^int UTF8Classify(const unsigned char *us, int len) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(const unsigned char * us,int len)
UTF8DrawBytes	..\\scintilla\\src\\UniConversion.cxx	/^int UTF8DrawBytes(const unsigned char *us, int len) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(const unsigned char * us,int len)
UTF8FromIconv	..\\scintilla\\gtk\\PlatGTK.cxx	/^static std::string UTF8FromIconv(const Converter &conv, const char *s, int len) {$/;"	f	typeref:typename:std::string	file:	signature:(const Converter & conv,const char * s,int len)
UTF8FromLatin1	..\\scintilla\\gtk\\PlatGTK.cxx	/^std::string UTF8FromLatin1(const char *s, int len) {$/;"	f	typeref:typename:std::string	signature:(const char * s,int len)
UTF8FromString	..\\scite\\gtk\\GUIGTK.cxx	/^std::string UTF8FromString(const gui_string &s) {$/;"	f	namespace:GUI	typeref:typename:std::string	signature:(const gui_string & s)
UTF8FromString	..\\scite\\win32\\GUIWin.cxx	/^std::string UTF8FromString(const gui_string &s) {$/;"	f	namespace:GUI	typeref:typename:std::string	signature:(const gui_string & s)
UTF8FromUTF16	..\\scintilla\\src\\UniConversion.cxx	/^void UTF8FromUTF16(const wchar_t *uptr, size_t tlen, char *putf, size_t len) {$/;"	f	namespace:Scintilla	typeref:typename:void	signature:(const wchar_t * uptr,size_t tlen,char * putf,size_t len)
UTF8FromUTF16	..\\scite\\win32\\GUIWin.cxx	/^static void UTF8FromUTF16(const wchar_t *uptr, size_t tlen, char *putf, size_t len) {$/;"	f	namespace:GUI	typeref:typename:void	file:	signature:(const wchar_t * uptr,size_t tlen,char * putf,size_t len)
UTF8FromUTF32Character	..\\scintilla\\src\\CaseConvert.cxx	/^void UTF8FromUTF32Character(int uch, char *putf) {$/;"	f	namespace:__anon1fb76d660111	typeref:typename:void	signature:(int uch,char * putf)
UTF8IsAscii	..\\scintilla\\src\\UniConversion.h	/^inline bool UTF8IsAscii(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
UTF8IsNEL	..\\scintilla\\src\\UniConversion.h	/^inline bool UTF8IsNEL(const unsigned char *us) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(const unsigned char * us)
UTF8IsSeparator	..\\scintilla\\src\\UniConversion.h	/^inline bool UTF8IsSeparator(const unsigned char *us) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(const unsigned char * us)
UTF8IsTrailByte	..\\scintilla\\src\\UniConversion.h	/^inline bool UTF8IsTrailByte(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
UTF8Iterator	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator(const Document *doc_ = 0, Sci::Position position_ = 0) :$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	file:	access:public	signature:(const Document * doc_=0,Sci::Position position_=0)
UTF8Iterator	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator(const Document *doc_=0, Sci::Position position_=0) : doc(doc_), position(position_/;"	f	class:__anon1ef09aa80111::UTF8Iterator	file:	access:public	signature:(const Document * doc_=0,Sci::Position position_=0)
UTF8Iterator	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator(const UTF8Iterator &other) NOEXCEPT {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	file:	access:public	signature:(const UTF8Iterator & other)
UTF8Iterator	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator(const UTF8Iterator &other) {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	file:	access:public	signature:(const UTF8Iterator & other)
UTF8Iterator	..\\scintilla\\src\\Document.cxx	/^class UTF8Iterator {$/;"	c	namespace:__anon1ef09aa80111	file:
UTF8Length	..\\scintilla\\src\\UniConversion.cxx	/^size_t UTF8Length(const wchar_t *uptr, size_t tlen) {$/;"	f	namespace:Scintilla	typeref:typename:size_t	signature:(const wchar_t * uptr,size_t tlen)
UTF8Length	..\\scite\\win32\\GUIWin.cxx	/^static unsigned int UTF8Length(const wchar_t *uptr, size_t tlen) {$/;"	f	namespace:GUI	typeref:typename:unsigned int	file:	signature:(const wchar_t * uptr,size_t tlen)
UTF8LineEndOverlaps	..\\scintilla\\src\\CellBuffer.cxx	/^bool CellBuffer::UTF8LineEndOverlaps(Sci::Position position) const {$/;"	f	class:CellBuffer	typeref:typename:bool	signature:(Sci::Position position) const
UTF8MaskInvalid	..\\scintilla\\src\\UniConversion.h	/^enum { UTF8MaskWidth=0x7, UTF8MaskInvalid=0x8 };$/;"	e	enum:Scintilla::__anonc8c742100103	access:public
UTF8MaskWidth	..\\scintilla\\src\\UniConversion.h	/^enum { UTF8MaskWidth=0x7, UTF8MaskInvalid=0x8 };$/;"	e	enum:Scintilla::__anonc8c742100103	access:public
UTF8MaxBytes	..\\scintilla\\src\\UniConversion.h	/^const int UTF8MaxBytes = 4;$/;"	v	namespace:Scintilla	typeref:typename:const int
UTF8NELLength	..\\scintilla\\src\\UniConversion.h	/^const int UTF8NELLength = 2;$/;"	v	namespace:Scintilla	typeref:typename:const int
UTF8SeparatorLength	..\\scintilla\\src\\UniConversion.h	/^const int UTF8SeparatorLength = 3;$/;"	v	namespace:Scintilla	typeref:typename:const int
Udata	..\\scintilla\\lua\\src\\lobject.h	/^typedef union Udata {$/;"	u
Udata	..\\scintilla\\lua\\src\\lobject.h	/^} Udata;$/;"	t	typeref:union:Udata
UnMap	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::UnMap(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget)
UnMapThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::UnMapThis() {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:()
UnOpr	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	g
UnOpr	..\\scintilla\\lua\\src\\lcode.h	/^typedef enum UnOpr { OPR_MINUS, OPR_NOT, OPR_LEN, OPR_NOUNOPR } UnOpr;$/;"	t	typeref:enum:UnOpr
UnRealize	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::UnRealize(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget)
UnRealizeThis	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::UnRealizeThis(GtkWidget *widget) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GtkWidget * widget)
UnRefCursor	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void UnRefCursor(GdkCursor *cursor) {$/;"	f	typeref:typename:void	file:	signature:(GdkCursor * cursor)
UnSlash	..\\scite\\src\\StringHelpers.cxx	/^unsigned int UnSlash(char *s) {$/;"	f	typeref:typename:unsigned int	signature:(char * s)
UnSlashAsNeeded	..\\scite\\src\\SciTEBase.cxx	/^static std::string UnSlashAsNeeded(const std::string &s, bool escapes, bool regularExpression) {$/;"	f	typeref:typename:std::string	file:	signature:(const std::string & s,bool escapes,bool regularExpression)
UnSlashLowOctal	..\\scite\\src\\StringHelpers.cxx	/^static unsigned int UnSlashLowOctal(char *s) {$/;"	f	typeref:typename:unsigned int	file:	signature:(char * s)
UnSlashLowOctalString	..\\scite\\src\\StringHelpers.cxx	/^std::string UnSlashLowOctalString(const char *s) {$/;"	f	typeref:typename:std::string	signature:(const char * s)
UnSlashString	..\\scite\\src\\StringHelpers.cxx	/^std::string UnSlashString(const char *s) {$/;"	f	typeref:typename:std::string	signature:(const char * s)
UnclaimSelection	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void ScintillaGTK::UnclaimSelection(GdkEventSelection *selection_event) {$/;"	f	class:ScintillaGTK	typeref:typename:void	signature:(GdkEventSelection * selection_event)
Undo	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::Undo() {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:()
Undo	..\\scintilla\\src\\Editor.cxx	/^void Editor::Undo() {$/;"	f	class:Editor	typeref:typename:void	signature:()
UndoGroup	..\\scintilla\\src\\Document.h	/^	UndoGroup(Document *pdoc_, bool groupNeeded_=true) :$/;"	f	class:Scintilla::UndoGroup	access:public	signature:(Document * pdoc_,bool groupNeeded_=true)
UndoGroup	..\\scintilla\\src\\Document.h	/^class UndoGroup {$/;"	c	namespace:Scintilla
UndoHistory	..\\scintilla\\src\\CellBuffer.cxx	/^UndoHistory::UndoHistory() {$/;"	f	class:UndoHistory	signature:()
UndoHistory	..\\scintilla\\src\\CellBuffer.h	/^class UndoHistory {$/;"	c	namespace:Scintilla
UniMode	..\\scite\\src\\Cookie.h	/^enum UniMode {$/;"	g
UnicodeFromUTF8	..\\scintilla\\src\\UnicodeFromUTF8.h	/^inline int UnicodeFromUTF8(const unsigned char *us) {$/;"	f	namespace:Scintilla	typeref:typename:int	signature:(const unsigned char * us)
UniqueInstance	..\\scite\\win32\\UniqueInstance.cxx	/^UniqueInstance::UniqueInstance() {$/;"	f	class:UniqueInstance	signature:()
UniqueInstance	..\\scite\\win32\\UniqueInstance.h	/^class UniqueInstance {$/;"	c
UniqueString	..\\scintilla\\src\\UniqueString.h	/^using UniqueString = std::unique_ptr<const char[]>;$/;"	t	namespace:Scintilla	typeref:typename:std::unique_ptr<const char[]>
UniqueStringCopy	..\\scintilla\\src\\UniqueString.h	/^inline UniqueString UniqueStringCopy(const char *text) {$/;"	f	namespace:Scintilla	typeref:typename:UniqueString	signature:(const char * text)
Unlock	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HGLOBAL Unlock() {$/;"	f	class:GlobalMemory	typeref:typename:HGLOBAL	file:	access:public	signature:()
Unlock	..\\scite\\gtk\\GTKMutex.cxx	/^	virtual void Unlock() {$/;"	f	class:GTKMutex	typeref:typename:void	file:	access:private	signature:()
Unlock	..\\scite\\win32\\WinMutex.cxx	/^	virtual void Unlock() { ::LeaveCriticalSection(&cs); }$/;"	f	class:WinMutex	typeref:typename:void	file:	access:private	signature:()
Unregister	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::Unregister() {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:()
Unset	..\\scite\\src\\PropSetFile.cxx	/^void PropSetFile::Unset(const char *key, int lenKey) {$/;"	f	class:PropSetFile	typeref:typename:void	signature:(const char * key,int lenKey)
UnsetProperty	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::UnsetProperty(const char *key) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(const char * key)
UpVal	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct UpVal {$/;"	s
UpVal	..\\scintilla\\lua\\src\\lobject.h	/^} UpVal;$/;"	t	typeref:struct:UpVal
UpdateBuffersCurrent	..\\scite\\src\\SciTEBuffers.cxx	/^void SciTEBase::UpdateBuffersCurrent() {$/;"	f	class:SciTEBase	typeref:typename:void	signature:()
UpdateCursor	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::UpdateCursor() {$/;"	f	class:ScintillaGTKAccessible	typeref:typename:void	signature:()
UpdateEmbedded	..\\scite\\scripts\\RegenerateSource.py	/^def UpdateEmbedded(root, propFiles):$/;"	f	access:public	signature:(root, propFiles)
UpdateFile	..\\scintilla\\scripts\\FileGenerator.py	/^def UpdateFile(filename, updated):$/;"	f	access:public	signature:(filename, updated)
UpdateFileFromLines	..\\scintilla\\scripts\\FileGenerator.py	/^def UpdateFileFromLines(path, lines, lineEndToUse):$/;"	f	access:public	signature:(path, lines, lineEndToUse)
UpdateLineInFile	..\\scintilla\\scripts\\FileGenerator.py	/^def UpdateLineInFile(path, linePrefix, lineReplace):$/;"	f	access:public	signature:(path, linePrefix, lineReplace)
UpdateLineInPlistFile	..\\scintilla\\scripts\\FileGenerator.py	/^def UpdateLineInPlistFile(path, key, value):$/;"	f	access:public	signature:(path, key, value)
UpdateOutputSize	..\\scite\\gtk\\SciTEGTK.cxx	/^bool SciTEGTK::UpdateOutputSize() {$/;"	f	class:SciTEGTK	typeref:typename:bool	signature:()
UpdateProgress	..\\scite\\src\\SciTEIO.cxx	/^void SciTEBase::UpdateProgress(Worker *) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(Worker *)
UpdateStatusBar	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UpdateStatusBar(bool bUpdateSlowData) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(bool bUpdateSlowData)
UpdateStatusBar	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::UpdateStatusBar(bool bUpdateSlowData) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool bUpdateSlowData)
UpdateSystemCaret	..\\scintilla\\src\\Editor.cxx	/^void Editor::UpdateSystemCaret() {$/;"	f	class:Editor	typeref:typename:void	signature:()
UpdateSystemCaret	..\\scintilla\\win32\\ScintillaWin.cxx	/^void ScintillaWin::UpdateSystemCaret() {$/;"	f	class:ScintillaWin	typeref:typename:void	signature:()
UpdateVersionNumbers	..\\scintilla\\scripts\\LexGen.py	/^def UpdateVersionNumbers(sci, root):$/;"	f	access:public	signature:(sci, root)
UpdateVersionNumbers	..\\scite\\scripts\\RegenerateSource.py	/^def UpdateVersionNumbers(sci, root):$/;"	f	access:public	signature:(sci, root)
UptrFromString	..\\scite\\src\\Extender.h	/^inline uptr_t UptrFromString(const char *cp) {$/;"	f	typeref:typename:uptr_t	signature:(const char * cp)
UseContainerLexing	..\\scintilla\\src\\Document.h	/^	bool UseContainerLexing() const {$/;"	f	class:Scintilla::LexInterface	typeref:typename:bool	access:public	signature:() const
UseStyleCallTip	..\\scintilla\\src\\CallTip.h	/^	bool UseStyleCallTip() const { return useStyleCallTip;}$/;"	f	class:Scintilla::CallTip	typeref:typename:bool	access:public	signature:() const
UserControl	..\\scite\\src\\StripDefinition.h	/^	UserControl(UCControlType controlType_, GUI::gui_string text_, int item_) : $/;"	f	class:UserControl	access:public	signature:(UCControlType controlType_,GUI::gui_string text_,int item_)
UserControl	..\\scite\\src\\StripDefinition.h	/^class UserControl {$/;"	c
UserFilePath	..\\scite\\src\\SciTEBuffers.cxx	/^FilePath SciTEBase::UserFilePath(const GUI::gui_char *name) {$/;"	f	class:SciTEBase	typeref:typename:FilePath	signature:(const GUI::gui_char * name)
UserStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	UserStrip() : psd(0), extender(0), pSciTEGTK(0), tableUser(1, 1){$/;"	f	class:UserStrip	file:	access:public	signature:()
UserStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^class UserStrip : public Strip {$/;"	c	file:	inherits:Strip
UserStrip	..\\scite\\win32\\Strips.h	/^	UserStrip() : extender(nullptr), pSciTEWin(nullptr) {$/;"	f	class:UserStrip	access:public	signature:()
UserStrip	..\\scite\\win32\\Strips.h	/^class UserStrip : public Strip {$/;"	c	inherits:Strip
UserStripClosed	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UserStripClosed() {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:()
UserStripClosed	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::UserStripClosed() {$/;"	f	class:SciTEWin	typeref:typename:void	signature:()
UserStripSet	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UserStripSet(int control, const char *value) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int control,const char * value)
UserStripSet	..\\scite\\src\\SciTEBase.h	/^	virtual void UserStripSet(int \/* control *\/, const char * \/* value *\/) {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:(int,const char *)
UserStripSet	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::UserStripSet(int control, const char *value) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int control,const char * value)
UserStripSetList	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UserStripSetList(int control, const char *value) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int control,const char * value)
UserStripSetList	..\\scite\\src\\SciTEBase.h	/^	virtual void UserStripSetList(int \/* control *\/, const char * \/* value *\/) {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:(int,const char *)
UserStripSetList	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::UserStripSetList(int control, const char *value) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int control,const char * value)
UserStripShow	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::UserStripShow(const char *description) {$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(const char * description)
UserStripShow	..\\scite\\src\\SciTEBase.h	/^	virtual void UserStripShow(const char * \/* description *\/) {}$/;"	f	class:SciTEBase	typeref:typename:void	access:protected	signature:(const char *)
UserStripShow	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::UserStripShow(const char *description) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(const char * description)
UserStripValue	..\\scite\\gtk\\SciTEGTK.cxx	/^const char *SciTEGTK::UserStripValue(int control) {$/;"	f	class:SciTEGTK	typeref:typename:const char *	signature:(int control)
UserStripValue	..\\scite\\src\\SciTEBase.h	/^	virtual const char *UserStripValue(int \/* control *\/) { return 0; }$/;"	f	class:SciTEBase	typeref:typename:const char *	access:protected	signature:(int)
UserStripValue	..\\scite\\win32\\SciTEWinDlg.cxx	/^const char *SciTEWin::UserStripValue(int control) {$/;"	f	class:SciTEWin	typeref:typename:const char *	signature:(int control)
UserVirtualSpace	..\\scintilla\\src\\Editor.h	/^	bool UserVirtualSpace() const {$/;"	f	class:Scintilla::Editor	typeref:typename:bool	access:protected	signature:() const
Utf16_Iter	..\\scite\\src\\Utf8_16.cxx	/^Utf16_Iter::Utf16_Iter() {$/;"	f	class:Utf16_Iter	signature:()
Utf16_Iter	..\\scite\\src\\Utf8_16.h	/^class Utf16_Iter : public Utf8_16 {$/;"	c	inherits:Utf8_16
Utf8_16	..\\scite\\src\\Utf8_16.h	/^class Utf8_16 {$/;"	c
Utf8_16_Read	..\\scite\\src\\Utf8_16.cxx	/^Utf8_16_Read::Utf8_16_Read() {$/;"	f	class:Utf8_16_Read	signature:()
Utf8_16_Read	..\\scite\\src\\Utf8_16.h	/^class Utf8_16_Read : public Utf8_16 {$/;"	c	inherits:Utf8_16
Utf8_16_Write	..\\scite\\src\\Utf8_16.cxx	/^Utf8_16_Write::Utf8_16_Write() {$/;"	f	class:Utf8_16_Write	signature:()
Utf8_16_Write	..\\scite\\src\\Utf8_16.h	/^class Utf8_16_Write : public Utf8_16 {$/;"	c	inherits:Utf8_16
Utf8_Iter	..\\scite\\src\\Utf8_16.cxx	/^Utf8_Iter::Utf8_Iter() {$/;"	f	class:Utf8_Iter	signature:()
Utf8_Iter	..\\scite\\src\\Utf8_16.h	/^class Utf8_Iter : public Utf8_16 {$/;"	c	inherits:Utf8_16
VALUEWEAK	..\\scintilla\\lua\\src\\lgc.c	/^#define VALUEWEAK /;"	d	file:
VALUEWEAKBIT	..\\scintilla\\lua\\src\\lgc.h	/^#define VALUEWEAKBIT	/;"	d
VARARG_HASARG	..\\scintilla\\lua\\src\\lobject.h	/^#define VARARG_HASARG	/;"	d
VARARG_ISVARARG	..\\scintilla\\lua\\src\\lobject.h	/^#define VARARG_ISVARARG	/;"	d
VARARG_NEEDSARG	..\\scintilla\\lua\\src\\lobject.h	/^#define VARARG_NEEDSARG	/;"	d
VCALL	..\\scintilla\\lua\\src\\lparser.h	/^  VCALL,	\/* info = instruction pc *\/$/;"	e	enum:__anon613de0d50103	access:public
VCHomeDisplayPosition	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::VCHomeDisplayPosition(Sci::Position position) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position position)
VCHomePosition	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::VCHomePosition(Sci::Position position) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position position) const
VCHomeWrapPosition	..\\scintilla\\src\\Editor.cxx	/^Sci::Position Editor::VCHomeWrapPosition(Sci::Position position) {$/;"	f	class:Editor	typeref:typename:Sci::Position	signature:(Sci::Position position)
VERSION	..\\scintilla\\lua\\src\\lptypes.h	/^#define VERSION /;"	d
VERSION_SCITE	..\\scite\\src\\SciTE.h	/^#define VERSION_SCITE /;"	d
VERSION_WORDS	..\\scite\\src\\SciTE.h	/^#define VERSION_WORDS /;"	d
VFALSE	..\\scintilla\\lua\\src\\lparser.h	/^  VFALSE,$/;"	e	enum:__anon613de0d50103	access:public
VGLOBAL	..\\scintilla\\lua\\src\\lparser.h	/^  VGLOBAL,	\/* info = index of table; aux = index of global name in `k' *\/$/;"	e	enum:__anon613de0d50103	access:public
VIEWSTYLE_H	..\\scintilla\\src\\ViewStyle.h	/^#define VIEWSTYLE_H$/;"	d
VINDEXED	..\\scintilla\\lua\\src\\lparser.h	/^  VINDEXED,	\/* info = table register; aux = index register (or `k') *\/$/;"	e	enum:__anon613de0d50103	access:public
VISIBLE_SLOP	..\\scintilla\\include\\Scintilla.h	/^#define VISIBLE_SLOP /;"	d
VISIBLE_STRICT	..\\scintilla\\include\\Scintilla.h	/^#define VISIBLE_STRICT /;"	d
VJMP	..\\scintilla\\lua\\src\\lparser.h	/^  VJMP,		\/* info = instruction pc *\/$/;"	e	enum:__anon613de0d50103	access:public
VK	..\\scintilla\\lua\\src\\lparser.h	/^  VK,		\/* info = index of constant in `k' *\/$/;"	e	enum:__anon613de0d50103	access:public
VKNUM	..\\scintilla\\lua\\src\\lparser.h	/^  VKNUM,	\/* nval = numerical value *\/$/;"	e	enum:__anon613de0d50103	access:public
VK_OEM_2	..\\scite\\win32\\SciTEWin.cxx	/^static const int VK_OEM_2=0xbf;$/;"	v	typeref:typename:const int	file:
VK_OEM_3	..\\scite\\win32\\SciTEWin.cxx	/^static const int VK_OEM_3=0xc0;$/;"	v	typeref:typename:const int	file:
VK_OEM_4	..\\scite\\win32\\SciTEWin.cxx	/^static const int VK_OEM_4=0xdb;$/;"	v	typeref:typename:const int	file:
VK_OEM_5	..\\scite\\win32\\SciTEWin.cxx	/^static const int VK_OEM_5=0xdc;$/;"	v	typeref:typename:const int	file:
VK_OEM_6	..\\scite\\win32\\SciTEWin.cxx	/^static const int VK_OEM_6=0xdd;$/;"	v	typeref:typename:const int	file:
VK_OEM_PLUS	..\\scite\\win32\\SciTEWin.cxx	/^static const int VK_OEM_PLUS=0xbb;$/;"	v	typeref:typename:const int	file:
VLOCAL	..\\scintilla\\lua\\src\\lparser.h	/^  VLOCAL,	\/* info = local register *\/$/;"	e	enum:__anon613de0d50103	access:public
VNIL	..\\scintilla\\lua\\src\\lparser.h	/^  VNIL,$/;"	e	enum:__anon613de0d50103	access:public
VNONRELOC	..\\scintilla\\lua\\src\\lparser.h	/^  VNONRELOC,	\/* info = result register *\/$/;"	e	enum:__anon613de0d50103	access:public
VOID	..\\scintilla\\lua\\src\\print.c	/^#define VOID(/;"	d	file:	signature:(p)
VRELOCABLE	..\\scintilla\\lua\\src\\lparser.h	/^  VRELOCABLE,	\/* info = instruction pc *\/$/;"	e	enum:__anon613de0d50103	access:public
VTRUE	..\\scintilla\\lua\\src\\lparser.h	/^  VTRUE,$/;"	e	enum:__anon613de0d50103	access:public
VUPVAL	..\\scintilla\\lua\\src\\lparser.h	/^  VUPVAL,       \/* info = index of upvalue in `upvalues' *\/$/;"	e	enum:__anon613de0d50103	access:public
VVARARG	..\\scintilla\\lua\\src\\lparser.h	/^  VVARARG	\/* info = instruction pc *\/$/;"	e	enum:__anon613de0d50103	access:public
VVOID	..\\scintilla\\lua\\src\\lparser.h	/^  VVOID,	\/* no value *\/$/;"	e	enum:__anon613de0d50103	access:public
Valid	..\\scintilla\\src\\Document.h	/^	bool Valid() const {$/;"	f	class:Scintilla::Range	typeref:typename:bool	access:public	signature:() const
ValidCodePage	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^bool ScintillaGTK::ValidCodePage(int codePage) const {$/;"	f	class:ScintillaGTK	typeref:typename:bool	signature:(int codePage) const
ValidCodePage	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^bool ScintillaQt::ValidCodePage(int codePage) const$/;"	f	class:ScintillaQt	typeref:typename:bool	signature:(int codePage) const
ValidCodePage	..\\scintilla\\src\\Editor.h	/^	virtual bool ValidCodePage(int \/* codePage *\/) const { return true; }$/;"	f	class:Scintilla::Editor	typeref:typename:bool	access:protected	signature:(int) const
ValidCodePage	..\\scintilla\\win32\\ScintillaWin.cxx	/^bool ScintillaWin::ValidCodePage(int codePage) const {$/;"	f	class:ScintillaWin	typeref:typename:bool	signature:(int codePage) const
ValidMargin	..\\scintilla\\src\\Editor.cxx	/^bool Editor::ValidMargin(uptr_t wParam) const {$/;"	f	class:Editor	typeref:typename:bool	signature:(uptr_t wParam) const
ValidStyle	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::ValidStyle(size_t styleIndex) const {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(size_t styleIndex) const
ValidStyledText	..\\scintilla\\src\\EditView.cxx	/^bool ValidStyledText(const ViewStyle &vs, size_t styleOffset, const StyledText &st) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(const ViewStyle & vs,size_t styleOffset,const StyledText & st)
Value	..\\scintilla\\lua\\src\\lobject.h	/^} Value;$/;"	t	typeref:union:__anonae4e9c5f010a
Value	..\\scite\\gtk\\Widget.cxx	/^int WEntry::Value() {$/;"	f	class:WEntry	typeref:typename:int	signature:()
ValueAt	..\\scintilla\\lexlib\\SparseState.h	/^	T ValueAt(Sci_Position position) {$/;"	f	class:Scintilla::SparseState	typeref:typename:T	access:public	signature:(Sci_Position position)
ValueAt	..\\scintilla\\src\\Decoration.cxx	/^int DecorationList::ValueAt(int indicator, Sci::Position position) {$/;"	f	class:DecorationList	typeref:typename:int	signature:(int indicator,Sci::Position position)
ValueAt	..\\scintilla\\src\\RunStyles.cxx	/^STYLE RunStyles<DISTANCE, STYLE>::ValueAt(DISTANCE position) const {$/;"	f	class:RunStyles	typeref:typename:STYLE	signature:(DISTANCE position) const
ValueAt	..\\scintilla\\src\\SparseVector.h	/^	const T& ValueAt(Sci::Position position) const {$/;"	f	class:Scintilla::SparseVector	typeref:typename:const T &	access:public	signature:(Sci::Position position) const
ValueAt	..\\scintilla\\src\\SplitVector.h	/^	const T& ValueAt(ptrdiff_t position) const {$/;"	f	class:Scintilla::SplitVector	typeref:typename:const T &	access:public	signature:(ptrdiff_t position) const
ValueFor	..\\scintilla\\lexlib\\SubStyles.h	/^	int ValueFor(const std::string &s) const {$/;"	f	class:Scintilla::WordClassifier	typeref:typename:int	access:public	signature:(const std::string & s) const
ValueOfHex	..\\scintilla\\include\\Platform.h	/^	static inline unsigned int ValueOfHex(const char ch) {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:unsigned int	access:public	signature:(const char ch)
VarBuffer	..\\scintilla\\win32\\PlatWin.cxx	/^	explicit VarBuffer(size_t length) : buffer(0) {$/;"	f	class:Scintilla::VarBuffer	file:	access:public	signature:(size_t length)
VarBuffer	..\\scintilla\\win32\\PlatWin.cxx	/^class VarBuffer {$/;"	c	namespace:Scintilla	file:
VarChain	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^	VarChain(const char *var_=NULL, const VarChain *link_=NULL): var(var_), link(link_) {}$/;"	f	struct:VarChain	file:	access:public	signature:(const char * var_=NULL,const VarChain * link_=NULL)
VarChain	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^struct VarChain {$/;"	s	file:
VarChain	..\\scite\\src\\PropSetFile.cxx	/^	VarChain(const char*var_=NULL, const VarChain *link_=NULL): var(var_), link(link_) {}$/;"	f	struct:VarChain	file:	access:public	signature:(const char * var_=NULL,const VarChain * link_=NULL)
VarChain	..\\scite\\src\\PropSetFile.cxx	/^struct VarChain {$/;"	s	file:
Version	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^int SCI_METHOD DefaultLexer::Version() const {$/;"	f	class:DefaultLexer	typeref:typename:int SCI_METHOD	signature:() const
Version	..\\scintilla\\lexlib\\LexerBase.cxx	/^int SCI_METHOD LexerBase::Version() const {$/;"	f	class:LexerBase	typeref:typename:int SCI_METHOD	signature:() const
Version	..\\scintilla\\src\\Document.h	/^	int SCI_METHOD Version() const {$/;"	f	class:Scintilla::Document	typeref:typename:int SCI_METHOD	access:public	signature:() const
VerticalCentreCaret	..\\scintilla\\src\\Editor.cxx	/^void Editor::VerticalCentreCaret() {$/;"	f	class:Editor	typeref:typename:void	signature:()
View	..\\scintilla\\src\\Decoration.h	/^	const std::vector<const Decoration*> &View() const { return decorationView; }$/;"	f	class:Scintilla::DecorationList	typeref:typename:const std::vector<const Decoration * > &	access:public	signature:() const
ViewStyle	..\\scintilla\\src\\ViewStyle.cxx	/^ViewStyle::ViewStyle() : markers(MARKER_MAX + 1), indicators(INDIC_MAX + 1) {$/;"	f	class:ViewStyle	signature:()
ViewStyle	..\\scintilla\\src\\ViewStyle.cxx	/^ViewStyle::ViewStyle(const ViewStyle &source) : markers(MARKER_MAX + 1), indicators(INDIC_MAX + /;"	f	class:ViewStyle	signature:(const ViewStyle & source)
ViewStyle	..\\scintilla\\src\\ViewStyle.h	/^class ViewStyle {$/;"	c	namespace:Scintilla
ViewWhitespace	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::ViewWhitespace(bool view) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(bool view)
VirtualSpace	..\\scintilla\\src\\Selection.h	/^	Sci::Position VirtualSpace() const {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:Sci::Position	access:public	signature:() const
VirtualSpaceFor	..\\scintilla\\src\\Selection.cxx	/^Sci::Position Selection::VirtualSpaceFor(Sci::Position pos) const {$/;"	f	class:Selection	typeref:typename:Sci::Position	signature:(Sci::Position pos) const
VisibleHasFocus	..\\scite\\gtk\\Widget.cxx	/^bool Strip::VisibleHasFocus() const {$/;"	f	class:Strip	typeref:typename:bool	signature:() const
WBase	..\\scite\\gtk\\Widget.h	/^class WBase : public GUI::Window {$/;"	c	inherits:GUI::Window
WButton	..\\scite\\gtk\\Widget.h	/^class WButton : public WBase {$/;"	c	inherits:WBase
WCHAR_T_IS_16	..\\scintilla\\src\\Document.cxx	/^#define WCHAR_T_IS_16 /;"	d	file:
WCheckDraw	..\\scite\\gtk\\Widget.cxx	/^WCheckDraw::WCheckDraw() : cdfn(NULL), user(NULL) {$/;"	f	class:WCheckDraw	signature:()
WCheckDraw	..\\scite\\gtk\\Widget.h	/^class WCheckDraw : public WBase {$/;"	c	inherits:WBase
WComboBoxEntry	..\\scite\\gtk\\Widget.h	/^class WComboBoxEntry : public WBase {$/;"	c	inherits:WBase
WEntry	..\\scite\\gtk\\Widget.h	/^class WEntry : public WBase {$/;"	c	inherits:WBase
WHITE	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired WHITE(0xC0, 0xC0, 0xC0);$/;"	v	typeref:typename:ColourDesired	file:
WHITE0BIT	..\\scintilla\\lua\\src\\lgc.h	/^#define WHITE0BIT	/;"	d
WHITE1BIT	..\\scintilla\\lua\\src\\lgc.h	/^#define WHITE1BIT	/;"	d
WHITEBITS	..\\scintilla\\lua\\src\\lgc.h	/^#define WHITEBITS	/;"	d
WINVER	..\\scintilla\\win32\\PlatWin.cxx	/^#define WINVER /;"	d	file:
WINVER	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define WINVER /;"	d	file:
WINVER	..\\scite\\win32\\SciTEWin.h	/^#define WINVER /;"	d
WM_COMMAND	..\\scintilla\\cocoa\\ScintillaView.h	/^#define WM_COMMAND /;"	d
WM_DPICHANGED	..\\scite\\win32\\SciTEWin.h	/^#define WM_DPICHANGED /;"	d
WM_NOTIFY	..\\scintilla\\cocoa\\ScintillaView.h	/^#define WM_NOTIFY /;"	d
WM_UNICHAR	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define WM_UNICHAR /;"	d	file:
WM_UPDATEUISTATE	..\\scite\\win32\\SciTEWin.h	/^#define WM_UPDATEUISTATE /;"	d
WORDLIST_H	..\\scintilla\\lexlib\\WordList.h	/^#define WORDLIST_H$/;"	d
WORK_EXECUTE	..\\scite\\win32\\SciTEWin.h	/^	WORK_EXECUTE = WORK_PLATFORM + 1$/;"	e	enum:__anon51edbd840103	access:public
WORK_FILEPROGRESS	..\\scite\\src\\FileWorker.h	/^	WORK_FILEPROGRESS = 3,$/;"	e	enum:__anondbeefa0d0103	access:public
WORK_FILEREAD	..\\scite\\src\\FileWorker.h	/^	WORK_FILEREAD = 1,$/;"	e	enum:__anondbeefa0d0103	access:public
WORK_FILEWRITTEN	..\\scite\\src\\FileWorker.h	/^	WORK_FILEWRITTEN = 2,$/;"	e	enum:__anondbeefa0d0103	access:public
WORK_PLATFORM	..\\scite\\src\\FileWorker.h	/^	WORK_PLATFORM = 100$/;"	e	enum:__anondbeefa0d0103	access:public
WP_SMALLCLOSEBUTTON	..\\scite\\win32\\SciTEWin.h	/^#define WP_SMALLCLOSEBUTTON /;"	d
WProgress	..\\scite\\gtk\\Widget.h	/^class WProgress : public WBase {$/;"	c	inherits:WBase
WRAPPER_METHOD_BODY	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^#define WRAPPER_METHOD_BODY(/;"	d	file:	signature:(accessible,call,defret)
WStatic	..\\scite\\gtk\\Widget.h	/^class WStatic : public WBase {$/;"	c	inherits:WBase
WTable	..\\scite\\gtk\\Widget.cxx	/^WTable::WTable(int rows_, int columns_) :$/;"	f	class:WTable	signature:(int rows_,int columns_)
WTable	..\\scite\\gtk\\Widget.h	/^class WTable : public WBase {$/;"	c	inherits:WBase
WToggle	..\\scite\\gtk\\Widget.h	/^class WToggle : public WBase {$/;"	c	inherits:WBase
WarnUser	..\\scite\\gtk\\SciTEGTK.cxx	/^void SciTEGTK::WarnUser(int) {}$/;"	f	class:SciTEGTK	typeref:typename:void	signature:(int)
WarnUser	..\\scite\\win32\\SciTEWinDlg.cxx	/^void SciTEWin::WarnUser(int warnID) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int warnID)
WatcherHelper	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^WatcherHelper::WatcherHelper(ScintillaDocument *owner_) : owner(owner_) {$/;"	f	class:WatcherHelper	signature:(ScintillaDocument * owner_)
WatcherHelper	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^class WatcherHelper : public DocWatcher {$/;"	c	file:	inherits:DocWatcher
WatcherWithUserData	..\\scintilla\\src\\Document.h	/^		WatcherWithUserData(DocWatcher *watcher_=0, void *userData_=0) :$/;"	f	struct:Scintilla::Document::WatcherWithUserData	access:public	signature:(DocWatcher * watcher_=0,void * userData_=0)
WatcherWithUserData	..\\scintilla\\src\\Document.h	/^	struct WatcherWithUserData {$/;"	s	class:Scintilla::Document	access:public
WeakNotify	..\\scintilla\\gtk\\ScintillaGTK.h	/^	static void WeakNotify(gpointer data, GObject *obj) {$/;"	f	class:Scintilla::GObjectWatcher	typeref:typename:void	access:private	signature:(gpointer data,GObject * obj)
WeakNotifyThis	..\\scintilla\\gtk\\ScintillaGTK.h	/^	void WeakNotifyThis(GObject *obj G_GNUC_UNUSED) {$/;"	f	class:Scintilla::GObjectWatcher	typeref:typename:void	access:private	signature:(GObject * obj G_GNUC_UNUSED)
WhiteSpaceVisibility	..\\scintilla\\src\\ViewStyle.h	/^enum WhiteSpaceVisibility {wsInvisible=0, wsVisibleAlways=1, wsVisibleAfterIndent=2, wsVisibleOn/;"	g	namespace:Scintilla
WhiteSpaceVisible	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::WhiteSpaceVisible(bool inIndent) const {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:(bool inIndent) const
WhitespaceBackgroundDrawn	..\\scintilla\\src\\ViewStyle.cxx	/^bool ViewStyle::WhitespaceBackgroundDrawn() const {$/;"	f	class:ViewStyle	typeref:typename:bool	signature:() const
WidestLineWidth	..\\scintilla\\src\\EditView.cxx	/^int WidestLineWidth(Surface *surface, const ViewStyle &vs, int styleOffset, const StyledText &st/;"	f	namespace:Scintilla	typeref:typename:int	signature:(Surface * surface,const ViewStyle & vs,int styleOffset,const StyledText & st)
Widget	..\\scite\\gtk\\Widget.h	/^inline GtkWidget *Widget(const GUI::Window &w) {$/;"	f	typeref:typename:GtkWidget *	signature:(const GUI::Window & w)
WidgetGetAccessibleImpl	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^AtkObject *ScintillaGTKAccessible::WidgetGetAccessibleImpl(GtkWidget *widget, AtkObject **cache,/;"	f	class:ScintillaGTKAccessible	typeref:typename:AtkObject *	signature:(GtkWidget * widget,AtkObject ** cache,gpointer widget_parent_class G_GNUC_UNUSED)
WidgetHasFocus	..\\scite\\gtk\\SciTEGTK.cxx	/^static bool WidgetHasFocus(UserControl *ctl) {$/;"	f	typeref:typename:bool	file:	signature:(UserControl * ctl)
Width	..\\scintilla\\include\\Platform.h	/^	XYPOSITION Width() const { return right - left; }$/;"	f	class:Scintilla::PRectangle	typeref:typename:XYPOSITION	access:public	signature:() const
Width	..\\scite\\src\\GUI.h	/^	int Width() const { return right - left; }$/;"	f	class:GUI::Rectangle	typeref:typename:int	access:public	signature:() const
WidthChar	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION WidthChar(Font &font_, char ch) { return 1; }$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_,char ch)
WidthChar	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::WidthChar(Font &font_, char ch) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font_,char ch)
WidthChar	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::WidthChar(Font &font, char ch)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font,char ch)
WidthChar	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::WidthChar(Font &font_, char ch) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_,char ch)
WidthChar	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::WidthChar(Font &font_, char ch) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_,char ch)
WidthControl	..\\scite\\win32\\Strips.cxx	/^static int WidthControl(GUI::Window &w) {$/;"	f	typeref:typename:int	file:	signature:(GUI::Window & w)
WidthStyledText	..\\scintilla\\src\\EditView.cxx	/^static int WidthStyledText(Surface *surface, const ViewStyle &vs, int styleOffset,$/;"	f	namespace:Scintilla	typeref:typename:int	file:	signature:(Surface * surface,const ViewStyle & vs,int styleOffset,const char * text,const unsigned char * styles,size_t len)
WidthText	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  XYPOSITION WidthText(Font &font_, const char *s, int len) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	file:	access:public	signature:(Font & font_,const char * s,int len)
WidthText	..\\scintilla\\gtk\\PlatGTK.cxx	/^XYPOSITION SurfaceImpl::WidthText(Font &font_, const char *s, int len) {$/;"	f	class:SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font_,const char * s,int len)
WidthText	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^XYPOSITION SurfaceImpl::WidthText(Font &font, const char *s, int len)$/;"	f	class:Scintilla::SurfaceImpl	typeref:typename:XYPOSITION	signature:(Font & font,const char * s,int len)
WidthText	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceD2D::WidthText(Font &font_, const char *s, int len) {$/;"	f	class:Scintilla::SurfaceD2D	typeref:typename:XYPOSITION	signature:(Font & font_,const char * s,int len)
WidthText	..\\scintilla\\win32\\PlatWin.cxx	/^XYPOSITION SurfaceGDI::WidthText(Font &font_, const char *s, int len) {$/;"	f	class:Scintilla::SurfaceGDI	typeref:typename:XYPOSITION	signature:(Font & font_,const char * s,int len)
WidthText	..\\scite\\win32\\Strips.cxx	/^static int WidthText(HFONT hfont, const GUI::gui_char *text) {$/;"	f	typeref:typename:int	file:	signature:(HFONT hfont,const GUI::gui_char * text)
Win32MapFontQuality	..\\scintilla\\win32\\PlatWin.cxx	/^static BYTE Win32MapFontQuality(int extraFontFlag) {$/;"	f	namespace:Scintilla	typeref:typename:BYTE	file:	signature:(int extraFontFlag)
WinMain	..\\scite\\win32\\SciTEWin.cxx	/^int PASCAL WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int) {$/;"	f	typeref:typename:int PASCAL	signature:(HINSTANCE hInstance,HINSTANCE,LPSTR,int)
WinMutex	..\\scite\\win32\\WinMutex.cxx	/^	WinMutex() { ::InitializeCriticalSection(&cs); }$/;"	f	class:WinMutex	file:	access:private	signature:()
WinMutex	..\\scite\\win32\\WinMutex.cxx	/^class WinMutex : public Mutex {$/;"	c	file:	inherits:Mutex
Window	..\\scintilla\\include\\Platform.h	/^	Window() : wid(0), cursorLast(cursorInvalid) {$/;"	f	class:Scintilla::Window	access:public	signature:()
Window	..\\scintilla\\include\\Platform.h	/^	Window(const Window &source) : wid(source.wid), cursorLast(cursorInvalid) {$/;"	f	class:Scintilla::Window	access:public	signature:(const Window & source)
Window	..\\scintilla\\include\\Platform.h	/^class Window {$/;"	c	namespace:Scintilla
Window	..\\scite\\src\\GUI.h	/^	Window() : wid(0) {$/;"	f	class:GUI::Window	access:public	signature:()
Window	..\\scite\\src\\GUI.h	/^class Window {$/;"	c	namespace:GUI
WindowCopyData	..\\scite\\win32\\UniqueInstance.cxx	/^void UniqueInstance::WindowCopyData(const char *s, size_t len) {$/;"	f	class:UniqueInstance	typeref:typename:void	signature:(const char * s,size_t len)
WindowFromWidget	..\\scintilla\\gtk\\PlatGTK.cxx	/^static GdkWindow *WindowFromWidget(GtkWidget *w) {$/;"	f	typeref:typename:GdkWindow *	file:	signature:(GtkWidget * w)
WindowFromWidget	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static GdkWindow *WindowFromWidget(GtkWidget *w) {$/;"	f	typeref:typename:GdkWindow *	file:	signature:(GtkWidget * w)
WindowFromWidget	..\\scite\\gtk\\SciTEGTK.cxx	/^static GdkWindow *WindowFromWidget(GtkWidget *w) {$/;"	f	typeref:typename:GdkWindow *	file:	signature:(GtkWidget * w)
WindowID	..\\scintilla\\include\\Platform.h	/^typedef void *WindowID;$/;"	t	namespace:Scintilla	typeref:typename:void *
WindowID	..\\scite\\src\\GUI.h	/^typedef void *WindowID;$/;"	t	namespace:GUI	typeref:typename:void *
WindowMessageBox	..\\scite\\gtk\\SciTEGTK.cxx	/^SciTEBase::MessageBoxChoice SciTEGTK::WindowMessageBox(GUI::Window &w, const GUI::gui_string &ms/;"	f	class:SciTEGTK	typeref:typename:SciTEBase::MessageBoxChoice	signature:(GUI::Window & w,const GUI::gui_string & msg,MessageBoxStyle style)
WindowMessageBox	..\\scite\\win32\\SciTEWinDlg.cxx	/^SciTEBase::MessageBoxChoice SciTEWin::WindowMessageBox(GUI::Window &w, const GUI::gui_string &ms/;"	f	class:SciTEWin	typeref:typename:SciTEBase::MessageBoxChoice	signature:(GUI::Window & w,const GUI::gui_string & msg,MessageBoxStyle style)
WindowSetFocus	..\\scite\\src\\SciTEBase.cxx	/^void WindowSetFocus(GUI::ScintillaWindow &w) {$/;"	f	typeref:typename:void	signature:(GUI::ScintillaWindow & w)
Window_SendMessage	..\\scintilla\\win32\\PlatWin.cxx	/^static LRESULT Window_SendMessage(Window *w, UINT msg, WPARAM wParam=0, LPARAM lParam=0) {$/;"	f	namespace:Scintilla	typeref:typename:LRESULT	file:	signature:(Window * w,UINT msg,WPARAM wParam=0,LPARAM lParam=0)
WithExtends	..\\scintilla\\src\\Editor.cxx	/^unsigned int WithExtends(unsigned int iMessage) {$/;"	f	namespace:__anon92132c300211	typeref:typename:unsigned int	signature:(unsigned int iMessage)
WithoutUnderscore	..\\scite\\gtk\\SciTEGTK.cxx	/^static std::string WithoutUnderscore(const char *s) {$/;"	f	typeref:typename:std::string	file:	signature:(const char * s)
WndPaint	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::WndPaint(uptr_t wParam) {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(uptr_t wParam)
WndProc	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  sptr_t WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaCurses	typeref:typename:sptr_t	file:	access:public	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
WndProc	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^sptr_t ScintillaGTK::WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaGTK	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
WndProc	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^sptr_t ScintillaQt::WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)$/;"	f	class:ScintillaQt	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
WndProc	..\\scintilla\\src\\Editor.cxx	/^sptr_t Editor::WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:Editor	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
WndProc	..\\scintilla\\src\\ScintillaBase.cxx	/^sptr_t ScintillaBase::WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaBase	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
WndProc	..\\scintilla\\win32\\PlatWin.cxx	/^LRESULT ListBoxX::WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:Scintilla::ListBoxX	typeref:typename:LRESULT	signature:(HWND hWnd,UINT iMessage,WPARAM wParam,LPARAM lParam)
WndProc	..\\scintilla\\win32\\ScintillaWin.cxx	/^sptr_t ScintillaWin::WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam) {$/;"	f	class:ScintillaWin	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam)
WndProc	..\\scite\\win32\\SciTEWin.cxx	/^LRESULT ContentWin::WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:ContentWin	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
WndProc	..\\scite\\win32\\SciTEWin.cxx	/^LRESULT SciTEWin::WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SciTEWin	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
WndProc	..\\scite\\win32\\Strips.cxx	/^LRESULT BackgroundStrip::WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:BackgroundStrip	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
WndProc	..\\scite\\win32\\Strips.cxx	/^LRESULT SearchStrip::WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:SearchStrip	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
WndProc	..\\scite\\win32\\Strips.cxx	/^LRESULT Strip::WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:Strip	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
WndProc	..\\scite\\win32\\Strips.cxx	/^LRESULT UserStrip::WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam) {$/;"	f	class:UserStrip	typeref:typename:LRESULT	signature:(UINT iMessage,WPARAM wParam,LPARAM lParam)
WordAt	..\\scintilla\\lexlib\\WordList.cxx	/^const char *WordList::WordAt(int n) const {$/;"	f	class:WordList	typeref:typename:const char *	signature:(int n) const
WordCharacterClass	..\\scintilla\\src\\Document.cxx	/^CharClassify::cc Document::WordCharacterClass(unsigned int ch) const {$/;"	f	class:Document	typeref:typename:CharClassify::cc	signature:(unsigned int ch) const
WordClassifier	..\\scintilla\\lexlib\\SubStyles.h	/^	explicit WordClassifier(int baseStyle_) : baseStyle(baseStyle_), firstStyle(0), lenStyles(0) {$/;"	f	class:Scintilla::WordClassifier	access:public	signature:(int baseStyle_)
WordClassifier	..\\scintilla\\lexlib\\SubStyles.h	/^class WordClassifier {$/;"	c	namespace:Scintilla
WordList	..\\scintilla\\lexlib\\WordList.cxx	/^WordList::WordList(bool onlyLineEnds_) :$/;"	f	class:WordList	signature:(bool onlyLineEnds_)
WordList	..\\scintilla\\lexlib\\WordList.h	/^class WordList {$/;"	c	namespace:Scintilla
WordListSet	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^Sci_Position SCI_METHOD DefaultLexer::WordListSet(int, const char *) {$/;"	f	class:DefaultLexer	typeref:typename:Sci_Position SCI_METHOD	signature:(int,const char *)
WordListSet	..\\scintilla\\lexlib\\LexerBase.cxx	/^Sci_Position SCI_METHOD LexerBase::WordListSet(int n, const char *wl) {$/;"	f	class:LexerBase	typeref:typename:Sci_Position SCI_METHOD	signature:(int n,const char * wl)
WordListSet	..\\scintilla\\lexlib\\LexerNoExceptions.cxx	/^Sci_Position SCI_METHOD LexerNoExceptions::WordListSet(int n, const char *wl) {$/;"	f	class:LexerNoExceptions	typeref:typename:Sci_Position SCI_METHOD	signature:(int n,const char * wl)
WordPartLeft	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::WordPartLeft(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos) const
WordPartRight	..\\scintilla\\src\\Document.cxx	/^Sci::Position Document::WordPartRight(Sci::Position pos) const {$/;"	f	class:Document	typeref:typename:Sci::Position	signature:(Sci::Position pos) const
WordSelection	..\\scintilla\\src\\Editor.cxx	/^void Editor::WordSelection(Sci::Position pos) {$/;"	f	class:Editor	typeref:typename:void	signature:(Sci::Position pos)
WorkNeeded	..\\scintilla\\src\\Editor.h	/^	WorkNeeded() : items(workNone), upTo(0) {}$/;"	f	class:Scintilla::WorkNeeded	access:public	signature:()
WorkNeeded	..\\scintilla\\src\\Editor.h	/^class WorkNeeded {$/;"	c	namespace:Scintilla
Worker	..\\scite\\src\\Worker.h	/^	Worker() : mutex(Mutex::Create()), completed(false), cancelling(false), jobSize(1), jobProgress/;"	f	struct:Worker	access:public	signature:()
Worker	..\\scite\\src\\Worker.h	/^struct Worker {$/;"	s
WorkerCommand	..\\scite\\src\\SciTEBase.cxx	/^void SciTEBase::WorkerCommand(int cmd, Worker *pWorker) {$/;"	f	class:SciTEBase	typeref:typename:void	signature:(int cmd,Worker * pWorker)
WorkerCommand	..\\scite\\win32\\SciTEWin.cxx	/^void SciTEWin::WorkerCommand(int cmd, Worker *pWorker) {$/;"	f	class:SciTEWin	typeref:typename:void	signature:(int cmd,Worker * pWorker)
WorkerListener	..\\scite\\src\\Worker.h	/^struct WorkerListener {$/;"	s
WorkerThread	..\\scite\\gtk\\SciTEGTK.cxx	/^static void *WorkerThread(void *ptr) {$/;"	f	typeref:typename:void *	file:	signature:(void * ptr)
WorkerThread	..\\scite\\win32\\SciTEWin.cxx	/^static void WorkerThread(void *ptr) {$/;"	f	typeref:typename:void	file:	signature:(void * ptr)
WrapColour	..\\scintilla\\src\\ViewStyle.cxx	/^ColourDesired ViewStyle::WrapColour() const {$/;"	f	class:ViewStyle	typeref:typename:ColourDesired	signature:() const
WrapCount	..\\scintilla\\src\\Editor.cxx	/^int Editor::WrapCount(int line) {$/;"	f	class:Editor	typeref:typename:int	signature:(int line)
WrapLines	..\\scintilla\\src\\Editor.cxx	/^bool Editor::WrapLines(WrapScope ws) {$/;"	f	class:Editor	typeref:typename:bool	signature:(WrapScope ws)
WrapMode	..\\scintilla\\src\\ViewStyle.h	/^enum WrapMode { eWrapNone, eWrapWord, eWrapChar, eWrapWhitespace };$/;"	g	namespace:Scintilla
WrapOneLine	..\\scintilla\\src\\Editor.cxx	/^bool Editor::WrapOneLine(Surface *surface, Sci::Line lineToWrap) {$/;"	f	class:Editor	typeref:typename:bool	signature:(Surface * surface,Sci::Line lineToWrap)
WrapPending	..\\scintilla\\src\\Editor.h	/^	WrapPending() {$/;"	f	struct:Scintilla::WrapPending	access:public	signature:()
WrapPending	..\\scintilla\\src\\Editor.h	/^struct WrapPending {$/;"	s	namespace:Scintilla
WrapScope	..\\scintilla\\src\\Editor.h	/^	enum class WrapScope {wsAll, wsVisible, wsIdle};$/;"	g	class:Scintilla::Editor	access:protected
Wrapped	..\\scintilla\\src\\Editor.h	/^	void Wrapped(Sci::Line line) {$/;"	f	struct:Scintilla::WrapPending	typeref:typename:void	access:public	signature:(Sci::Line line)
Wrapping	..\\scintilla\\src\\Editor.cxx	/^bool Editor::Wrapping() const {$/;"	f	class:Editor	typeref:typename:bool	signature:() const
XFromPosition	..\\scintilla\\src\\Editor.cxx	/^int Editor::XFromPosition(Sci::Position pos) {$/;"	f	class:Editor	typeref:typename:int	signature:(Sci::Position pos)
XFromPosition	..\\scintilla\\src\\Editor.cxx	/^int Editor::XFromPosition(SelectionPosition sp) {$/;"	f	class:Editor	typeref:typename:int	signature:(SelectionPosition sp)
XHH_AKLINK	..\\scite\\win32\\SciTEWin.cxx	/^struct XHH_AKLINK {$/;"	s	file:
XPM	..\\scintilla\\src\\XPM.cxx	/^XPM::XPM(const char *const *linesForm) {$/;"	f	class:XPM	signature:(const char * const * linesForm)
XPM	..\\scintilla\\src\\XPM.cxx	/^XPM::XPM(const char *textForm) {$/;"	f	class:XPM	signature:(const char * textForm)
XPM	..\\scintilla\\src\\XPM.h	/^class XPM {$/;"	c	namespace:Scintilla
XPM_H	..\\scintilla\\src\\XPM.h	/^#define XPM_H$/;"	d
XYACCUMULATOR	..\\scintilla\\include\\Platform.h	/^typedef double XYACCUMULATOR;$/;"	t	namespace:Scintilla	typeref:typename:double
XYMaximum	..\\scintilla\\win32\\PlatWin.cxx	/^static XYPOSITION XYMaximum(XYPOSITION a, XYPOSITION b) {$/;"	f	namespace:Scintilla	typeref:typename:XYPOSITION	file:	signature:(XYPOSITION a,XYPOSITION b)
XYMinimum	..\\scintilla\\win32\\PlatWin.cxx	/^static XYPOSITION XYMinimum(XYPOSITION a, XYPOSITION b) {$/;"	f	namespace:Scintilla	typeref:typename:XYPOSITION	file:	signature:(XYPOSITION a,XYPOSITION b)
XYPOSITION	..\\scintilla\\include\\Platform.h	/^typedef float XYPOSITION;$/;"	t	namespace:Scintilla	typeref:typename:float
XYScrollOptions	..\\scintilla\\src\\Editor.h	/^	enum XYScrollOptions {$/;"	g	class:Scintilla::Editor	access:protected
XYScrollPosition	..\\scintilla\\src\\Editor.h	/^		XYScrollPosition(int xOffset_, Sci::Line topLine_) : xOffset(xOffset_), topLine(topLine_) {}$/;"	f	struct:Scintilla::Editor::XYScrollPosition	access:public	signature:(int xOffset_,Sci::Line topLine_)
XYScrollPosition	..\\scintilla\\src\\Editor.h	/^	struct XYScrollPosition {$/;"	s	class:Scintilla::Editor	access:protected
XYScrollToMakeVisible	..\\scintilla\\src\\Editor.cxx	/^Editor::XYScrollPosition Editor::XYScrollToMakeVisible(const SelectionRange &range, const XYScro/;"	f	class:Editor	typeref:typename:Editor::XYScrollPosition	signature:(const SelectionRange & range,const XYScrollOptions options)
YELLOW	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static ColourDesired YELLOW(0x80, 0x80, 0);$/;"	v	typeref:typename:ColourDesired	file:
Z	..\\scintilla\\lua\\src\\lundump.c	/^ ZIO* Z;$/;"	m	struct:__anonc6bc71bc0108	typeref:typename:ZIO *	file:	access:public
ZIO	..\\scintilla\\lua\\src\\lzio.h	/^typedef struct Zio ZIO;$/;"	t	typeref:struct:Zio
Zio	..\\scintilla\\lua\\src\\lzio.h	/^struct Zio {$/;"	s
_QUARTZ_TEXT_LAYOUT_H	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^#define _QUARTZ_TEXT_LAYOUT_H$/;"	d
_QUARTZ_TEXT_STYLE_ATTRIBUTE_H	..\\scintilla\\cocoa\\QuartzTextStyleAttribute.h	/^#define _QUARTZ_TEXT_STYLE_ATTRIBUTE_H$/;"	d
_QUARTZ_TEXT_STYLE_H	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^#define _QUARTZ_TEXT_STYLE_H$/;"	d
_ScintillaClass	..\\scintilla\\include\\ScintillaWidget.h	/^struct _ScintillaClass {$/;"	s
_ScintillaObject	..\\scintilla\\include\\ScintillaWidget.h	/^struct _ScintillaObject {$/;"	s
_SetQtIncludeBase	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def _SetQtIncludeBase(self, base):$/;"	m	class:SepBuilder	access:protected	signature:(self, base)
_WIN32_IE	..\\scite\\win32\\GUIWin.cxx	/^#define _WIN32_IE	/;"	d	file:
_WIN32_IE	..\\scite\\win32\\SciTEWin.h	/^#define _WIN32_IE	/;"	d
_WIN32_WINNT	..\\scintilla\\win32\\PlatWin.cxx	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	..\\scintilla\\win32\\ScintillaWin.cxx	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	..\\scite\\src\\FilePath.cxx	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	..\\scite\\src\\FileWorker.cxx	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	..\\scite\\win32\\DirectorExtension.cxx	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	..\\scite\\win32\\GUIWin.cxx	/^#define _WIN32_WINNT /;"	d	file:
_WIN32_WINNT	..\\scite\\win32\\SciTEWin.h	/^#define _WIN32_WINNT /;"	d
_WINDOW	..\\scintilla\\curses\\ScintillaCurses.cxx	/^#define _WINDOW(/;"	d	file:	signature:(w)
__SCINTILLA_MARSHAL_MARSHAL_H__	..\\scintilla\\gtk\\scintilla-marshal.h	/^#define __SCINTILLA_MARSHAL_MARSHAL_H__$/;"	d
__anon0397dfc20103	..\\scintilla\\src\\MarginView.cxx	/^	enum { xa = 1 }; \/\/ gap before start$/;"	g	function:Scintilla::DrawWrapMarker	file:
__anon083e0eee0103	..\\scite\\src\\SciTEIO.cxx	/^	enum {bufLen = 64 * 1024};$/;"	g	class:BufferedFile	file:	access:private
__anon0ae033de0111	..\\scintilla\\gtk\\PlatGTK.cxx	/^namespace {$/;"	n	file:
__anon0ae033de0203	..\\scintilla\\gtk\\PlatGTK.cxx	/^enum {$/;"	g	file:
__anon0ae033de0308	..\\scintilla\\gtk\\PlatGTK.cxx	/^typedef struct {$/;"	s	file:
__anon0f68303c0103	..\\scintilla\\src\\ScintillaBase.h	/^	enum {$/;"	g	class:Scintilla::ScintillaBase	access:protected
__anon0f68303c0203	..\\scintilla\\src\\ScintillaBase.h	/^	enum { maxLenInputIME = 200 };$/;"	g	class:Scintilla::ScintillaBase	access:protected
__anon11b77dfa0103	..\\scite\\gtk\\SciTEGTK.cxx	/^enum { mbsAboutBox = 0x100000 };$/;"	g	file:
__anon11b77dfa0203	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum { checks = 6 };$/;"	g	class:FindStrip	file:	access:public
__anon11b77dfa0303	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum { checks = 5 };$/;"	g	class:ReplaceStrip	file:	access:public
__anon11b77dfa0403	..\\scite\\gtk\\SciTEGTK.cxx	/^enum {$/;"	g	file:
__anon1330b7ee0111	..\\scite\\win32\\Strips.cxx	/^namespace {$/;"	n	file:
__anon1b46962c0111	..\\scite\\src\\Credits.cxx	/^namespace {$/;"	n	file:
__anon1e21bbec0111	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^namespace {$/;"	n	namespace:Scintilla	file:
__anon1e21bbec020a	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^			union {$/;"	u	function:Scintilla::DynamicLibraryImpl::FindFunction	file:
__anon1ef09aa80111	..\\scintilla\\src\\Document.cxx	/^namespace {$/;"	n	file:
__anon1f5b7b9a0103	..\\scintilla\\src\\CharClassify.h	/^	enum { maxChar=256 };$/;"	g	class:Scintilla::CharClassify	access:private
__anon1fb76d660111	..\\scintilla\\src\\CaseConvert.cxx	/^namespace {$/;"	n	file:
__anon1fb76d660203	..\\scintilla\\src\\CaseConvert.cxx	/^	enum { maxConversionLength=6 };$/;"	g	class:__anon1fb76d660111::CaseConverter	file:	access:private
__anon357025aa0108	..\\scite\\src\\SciTEProps.cxx	/^	struct {$/;"	s	function:SciTEBase::ReadProperties	file:
__anon36caa6a60103	..\\scintilla\\src\\Indicator.cxx	/^		enum { alphaFull = 0xff, alphaSide = 0x2f, alphaSide2=0x5f };$/;"	g	function:Indicator::Draw	file:
__anon3a004e980108	..\\scite\\src\\StyleDefinition.cxx	/^	struct {$/;"	s	function:IndicatorDefinition::ParseIndicatorDefinition	file:
__anon3bafc3700103	..\\scintilla\\src\\AutoComplete.h	/^	enum { maxItemLen=1000 };$/;"	g	class:Scintilla::AutoComplete	access:private
__anon4e3bd5e60103	..\\scintilla\\win32\\HanjaDic.cxx	/^typedef enum { HANJA_UNKNOWN = 0, HANJA_K0 = 1, HANJA_K1 = 2, HANJA_OTHER = 3 } HANJA_TYPE;$/;"	g	namespace:Scintilla::HanjaDict	file:
__anon4f2d75860103	..\\scite\\win32\\SciTEWinDlg.cxx	/^	enum {maxBufferSize=2048};$/;"	g	function:SciTEWin::OpenDialog	file:
__anon51edbd840103	..\\scite\\win32\\SciTEWin.h	/^enum {$/;"	g
__anon51edbd840203	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	g	class:SciTEWin	access:protected
__anon5333cfc50111	..\\scintilla\\win32\\ScintillaWin.cxx	/^namespace {$/;"	n	file:
__anon5333cfc50203	..\\scintilla\\win32\\ScintillaWin.cxx	/^	enum { invalidTimerID, standardTimerID, idleTimerID, fineTimerStart };$/;"	g	class:ScintillaWin	file:	access:private
__anon5333cfc50311	..\\scintilla\\win32\\ScintillaWin.cxx	/^namespace {$/;"	n	file:
__anon6042b6d50103	..\\scintilla\\lua\\src\\lopcodes.h	/^typedef enum {$/;"	g
__anon613de0d00108	..\\scintilla\\lua\\src\\lparser.c	/^static const struct {$/;"	s	file:
__anon613de0d50103	..\\scintilla\\lua\\src\\lparser.h	/^typedef enum {$/;"	g
__anon613de0d5020a	..\\scintilla\\lua\\src\\lparser.h	/^  union {$/;"	u	struct:expdesc	access:public
__anon613de0d50308	..\\scintilla\\lua\\src\\lparser.h	/^    struct { int info, aux; } s;$/;"	s	union:expdesc::__anon613de0d5020a	access:public
__anon6836dfd10111	..\\scite\\src\\StringList.cxx	/^namespace {$/;"	n	file:
__anon76ce46bc0103	..\\scite\\win32\\GUIWin.cxx	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	g	namespace:GUI	file:
__anon76ce46bc0203	..\\scite\\win32\\GUIWin.cxx	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	g	namespace:GUI	file:
__anon76ce46bc0303	..\\scite\\win32\\GUIWin.cxx	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	g	namespace:GUI	file:
__anon78ea39b10102	..\\scintilla\\src\\Decoration.cxx	/^		[](const std::unique_ptr<Decoration> &a, const std::unique_ptr<Decoration> &b) {$/;"	f	function:DecorationList::Create	file:	signature:(const std::unique_ptr<Decoration> &a, const std::unique_ptr<Decoration> &b) 
__anon78ea39b10202	..\\scintilla\\src\\Decoration.cxx	/^		[=](const std::unique_ptr<Decoration> &deco) {$/;"	f	function:DecorationList::Delete	file:	signature:(const std::unique_ptr<Decoration> &deco) 
__anon78ea39b10302	..\\scintilla\\src\\Decoration.cxx	/^		[=](const std::unique_ptr<Decoration> &deco) {$/;"	f	function:DecorationList::DeleteLexerDecorations	file:	signature:(const std::unique_ptr<Decoration> &deco) 
__anon78ea39b10402	..\\scintilla\\src\\Decoration.cxx	/^			[=](const std::unique_ptr<Decoration> &deco) {$/;"	f	function:DecorationList::DeleteAnyEmpty	file:	signature:(const std::unique_ptr<Decoration> &deco) 
__anon7bc08eb10103	..\\scintilla\\lexlib\\LexerBase.h	/^	enum {numWordLists=KEYWORDSET_MAX+1};$/;"	g	class:Scintilla::LexerBase	access:protected
__anon7c5ac8350103	..\\scite\\gtk\\Widget.h	/^	enum {  checkIconWidth = 16, checkButtonWidth = 16 + 3 * 2 + 1};$/;"	g	class:WCheckDraw	access:public
__anon7c5ac8350203	..\\scite\\gtk\\Widget.h	/^	enum { heightButton=23, heightStatic=12, widthCombo=20};$/;"	g	class:Strip	access:protected
__anon82708b090103	..\\scintilla\\lua\\src\\ltm.h	/^typedef enum {$/;"	g
__anon82a12833010a	..\\scintilla\\win32\\PlatWin.cxx	/^	union {$/;"	u	function:Scintilla::dwordFromBGRA	file:
__anon82a12833020a	..\\scintilla\\win32\\PlatWin.cxx	/^			union {$/;"	u	function:Scintilla::DynamicLibraryImpl::FindFunction	file:
__anon8453292f0103	..\\scite\\win32\\SciTEWin.cxx	/^			enum { capSize = 2000 };$/;"	g	function:SciTEWin::Command	file:
__anon86eda4c30103	..\\scintilla\\include\\ILexer.h	/^enum { dvOriginal=0, dvLineEnd=1 };$/;"	g	namespace:Scintilla
__anon86eda4c30203	..\\scintilla\\include\\ILexer.h	/^enum { lvOriginal=0, lvSubStyles=1, lvMetaData=2 };$/;"	g	namespace:Scintilla
__anon8a9e19270103	..\\scintilla\\src\\PositionCache.h	/^	enum { wrapWidthInfinite = 0x7ffffff };$/;"	g	class:Scintilla::LineLayout	access:public
__anon8a9e19270203	..\\scintilla\\src\\PositionCache.h	/^	enum {$/;"	g	class:Scintilla::LineLayoutCache	access:public
__anon8a9e19270303	..\\scintilla\\src\\PositionCache.h	/^	enum { lengthStartSubdivision = 300 };$/;"	g	class:Scintilla::BreakFinder	access:public
__anon8a9e19270403	..\\scintilla\\src\\PositionCache.h	/^	enum { lengthEachSubdivision = 100 };$/;"	g	class:Scintilla::BreakFinder	access:public
__anon8e1f0c450103	..\\scintilla\\src\\Editor.h	/^	enum {tickSize = 100};$/;"	g	class:Scintilla::Timer	access:public
__anon8e1f0c450203	..\\scintilla\\src\\Editor.h	/^	enum { lineLarge = 0x7ffffff };$/;"	g	struct:Scintilla::WrapPending	access:public
__anon8e1f0c450303	..\\scintilla\\src\\Editor.h	/^	enum { autoScrollDelay = 200 };$/;"	g	class:Scintilla::Editor	access:protected
__anon8e1f0c450403	..\\scintilla\\src\\Editor.h	/^	enum { selChar, selWord, selSubLine, selWholeLine } selectionType;$/;"	g	class:Scintilla::Editor	access:protected
__anon8e1f0c450503	..\\scintilla\\src\\Editor.h	/^	enum { ddNone, ddInitial, ddDragging } inDragDrop;$/;"	g	class:Scintilla::Editor	access:protected
__anon8e1f0c450603	..\\scintilla\\src\\Editor.h	/^	enum { notPainting, painting, paintAbandoned } paintState;$/;"	g	class:Scintilla::Editor	access:protected
__anon8e1f0c450703	..\\scintilla\\src\\Editor.h	/^	enum { cmSame, cmUpper, cmLower };$/;"	g	class:Scintilla::Editor	access:protected
__anon92132c300102	..\\scintilla\\src\\Editor.cxx	/^			[](const SelectionRange *a, const SelectionRange *b) {return *a < *b;});$/;"	f	function:Editor::AddCharUTF	file:	signature:(const SelectionRange *a, const SelectionRange *b) 
__anon92132c300211	..\\scintilla\\src\\Editor.cxx	/^namespace {$/;"	n	file:
__anon931737210103	..\\scite\\src\\StyleWriter.h	/^	enum {extremePosition=0x7FFFFFFF};$/;"	g	class:TextReader	access:protected
__anon931737210203	..\\scite\\src\\StyleWriter.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	g	class:TextReader	access:protected
__anon960ffb3b010a	..\\scintilla\\lexlib\\OptionSet.h	/^		union {$/;"	u	struct:Scintilla::OptionSet::Option	access:public
__anon9c574aa40111	..\\scite\\win32\\SciTEWinBar.cxx	/^namespace {$/;"	n	file:
__anon9c574aa40203	..\\scite\\win32\\SciTEWinBar.cxx	/^enum { tickerID = 100 };$/;"	g	file:
__anon9c9cef500103	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^enum {$/;"	g	file:
__anon9c9cef500203	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^enum {$/;"	g	file:
__anon9c9cef500311	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^namespace {$/;"	n	file:
__anon9c9cef500411	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^namespace {$/;"	n	file:
__anonae4e9c5f010a	..\\scintilla\\lua\\src\\lobject.h	/^typedef union {$/;"	u
__anonae4e9c5f0208	..\\scintilla\\lua\\src\\lobject.h	/^  struct {$/;"	s	union:TString	access:public
__anonae4e9c5f0308	..\\scintilla\\lua\\src\\lobject.h	/^  struct {$/;"	s	union:Udata	access:public
__anonae4e9c5f040a	..\\scintilla\\lua\\src\\lobject.h	/^  union {$/;"	u	struct:UpVal	access:public
__anonae4e9c5f0508	..\\scintilla\\lua\\src\\lobject.h	/^    struct {  \/* double linked list (when open) *\/$/;"	s	union:UpVal::__anonae4e9c5f040a	access:public
__anonae4e9c5f0608	..\\scintilla\\lua\\src\\lobject.h	/^  struct {$/;"	s	union:TKey	access:public
__anonb2de87d20103	..\\scintilla\\lexlib\\LexAccessor.h	/^	enum {extremePosition=0x7FFFFFFF};$/;"	g	class:Scintilla::LexAccessor	access:private
__anonb2de87d20203	..\\scintilla\\lexlib\\LexAccessor.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	g	class:Scintilla::LexAccessor	access:private
__anonbaac78eb0103	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	g	file:
__anonbaac78eb0203	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_LEAD_LAST = 0xDBFF };$/;"	g	file:
__anonbaac78eb0303	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	g	file:
__anonbaac78eb0403	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	g	file:
__anonbaac78eb0503	..\\scite\\src\\Utf8_16.cxx	/^enum { SURROGATE_FIRST_VALUE = 0x10000 };$/;"	g	file:
__anonbaade40b0103	..\\scintilla\\src\\RESearch.h	/^	enum { MAXTAG=10 };$/;"	g	class:Scintilla::RESearch	access:public
__anonbaade40b0203	..\\scintilla\\src\\RESearch.h	/^	enum { MAXNFA=4096 };$/;"	g	class:Scintilla::RESearch	access:public
__anonbaade40b0303	..\\scintilla\\src\\RESearch.h	/^	enum { NOTFOUND=-1 };$/;"	g	class:Scintilla::RESearch	access:public
__anonbc205f790108	..\\scintilla\\lua\\src\\ldump.c	/^typedef struct {$/;"	s	file:
__anonc1e228550102	..\\scintilla\\src\\ViewStyle.cxx	/^		[](const Indicator &indicator) { return indicator.IsDynamic(); });$/;"	f	function:ViewStyle::Refresh	file:	signature:(const Indicator &indicator) 
__anonc1e228550202	..\\scintilla\\src\\ViewStyle.cxx	/^		[](const Indicator &indicator) { return indicator.OverridesTextFore(); });$/;"	f	function:ViewStyle::Refresh	file:	signature:(const Indicator &indicator) 
__anonc1e228550302	..\\scintilla\\src\\ViewStyle.cxx	/^		[](const Style &style) { return style.IsProtected(); });$/;"	f	function:ViewStyle::Refresh	file:	signature:(const Style &style) 
__anonc1e228550402	..\\scintilla\\src\\ViewStyle.cxx	/^		[](const Style &style) { return style.caseForce != Style::caseMixed; });$/;"	f	function:ViewStyle::Refresh	file:	signature:(const Style &style) 
__anonc6bc71bc0108	..\\scintilla\\lua\\src\\lundump.c	/^typedef struct {$/;"	s	file:
__anonc8c742100103	..\\scintilla\\src\\UniConversion.h	/^enum { UTF8MaskWidth=0x7, UTF8MaskInvalid=0x8 };$/;"	g	namespace:Scintilla
__anonc8c742100203	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	g	namespace:Scintilla
__anonc8c742100303	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_LEAD_LAST = 0xDBFF };$/;"	g	namespace:Scintilla
__anonc8c742100403	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	g	namespace:Scintilla
__anonc8c742100503	..\\scintilla\\src\\UniConversion.h	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	g	namespace:Scintilla
__anonc8c742100603	..\\scintilla\\src\\UniConversion.h	/^enum { SUPPLEMENTAL_PLANE_FIRST = 0x10000 };$/;"	g	namespace:Scintilla
__anoncfedf8d1010a	..\\scintilla\\lua\\src\\llex.h	/^typedef union {$/;"	u
__anond39dc6f30103	..\\scite\\src\\JobQueue.h	/^	enum { commandMax = 2 };$/;"	g	class:JobQueue	access:public
__anond6d1f967010a	..\\scintilla\\lua\\src\\lpcap.c	/^  union {$/;"	u	struct:StrAux	file:	access:public
__anond6d1f9670208	..\\scintilla\\lua\\src\\lpcap.c	/^    struct {  \/* if it is a string... *\/$/;"	s	union:StrAux::__anond6d1f967010a	file:	access:public
__anond9e754e8010a	..\\scintilla\\lua\\src\\lptree.h	/^  union {$/;"	u	struct:TTree	access:public
__anondbeefa0d0103	..\\scite\\src\\FileWorker.h	/^enum {$/;"	g
__anondc1923b30108	..\\scintilla\\lua\\src\\lstrlib.c	/^  struct {$/;"	s	struct:MatchState	file:	access:public
__anondfdb3b5e0103	..\\scite\\src\\IFaceTable.cxx	/^enum {$/;"	g	file:
__anone0534fc90103	..\\scintilla\\lexlib\\Accessor.h	/^enum { wsSpace=1, wsTab=2, wsSpaceTab=4, wsInconsistent=8 };$/;"	g	namespace:Scintilla
__anonee298eb80102	..\\scintilla\\src\\PerLine.cxx	/^	mhList.remove_if([=](const MarkerHandleNumber &mhn) { return mhn.handle == handle; });$/;"	f	function:MarkerHandleSet::RemoveHandle	file:	signature:(const MarkerHandleNumber &mhn) 
__anonee298eb80202	..\\scintilla\\src\\PerLine.cxx	/^	mhList.remove_if([&](const MarkerHandleNumber &mhn) {$/;"	f	function:MarkerHandleSet::RemoveNumber	file:	signature:(const MarkerHandleNumber &mhn) 
__anonf0c5a84c0111	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^namespace {$/;"	n	namespace:Scintilla	file:
__anonf0c5a84c0211	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^namespace {$/;"	n	namespace:Scintilla	file:
__anonf95580a60103	..\\scite\\src\\SciTEBase.h	/^enum {$/;"	g
__anonf95580a60203	..\\scite\\src\\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	g	class:Buffer	access:public
__anonf95580a60303	..\\scite\\src\\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	g	class:Buffer	access:public
__anonf95580a60403	..\\scite\\src\\SciTEBase.h	/^enum {$/;"	g
__anonf95580a60503	..\\scite\\src\\SciTEBase.h	/^enum {$/;"	g
__anonf95580a60603	..\\scite\\src\\SciTEBase.h	/^	enum {$/;"	g	struct:CurrentWordHighlight	access:public
__anonf95580a60703	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	g	struct:SearchOption	access:public
__anonf95580a60803	..\\scite\\src\\SciTEBase.h	/^	enum { fileStackMax = 10 };$/;"	g	class:SciTEBase	access:protected
__anonf95580a60903	..\\scite\\src\\SciTEBase.h	/^	enum { fileStackCmdID = IDM_MRUFILE, bufferCmdID = IDM_BUFFER };$/;"	g	class:SciTEBase	access:protected
__anonf95580a60a03	..\\scite\\src\\SciTEBase.h	/^	enum { importMax = 50 };$/;"	g	class:SciTEBase	access:protected
__anonf95580a60b03	..\\scite\\src\\SciTEBase.h	/^	enum { importCmdID = IDM_IMPORT };$/;"	g	class:SciTEBase	access:protected
__anonf95580a60c03	..\\scite\\src\\SciTEBase.h	/^	enum { indicatorMatch = INDIC_CONTAINER,$/;"	g	class:SciTEBase	access:protected
__anonf95580a60d03	..\\scite\\src\\SciTEBase.h	/^	enum { markerBookmark = 1 };$/;"	g	class:SciTEBase	access:protected
__anonf95580a60e03	..\\scite\\src\\SciTEBase.h	/^	enum { languageCmdID = IDM_LANGUAGE };$/;"	g	class:SciTEBase	access:protected
__anonf95580a60f03	..\\scite\\src\\SciTEBase.h	/^	enum { diagnosticStyles=4};$/;"	g	class:SciTEBase	access:protected
__anonf95580a61003	..\\scite\\src\\SciTEBase.h	/^	enum { toolMax = 50 };$/;"	g	class:SciTEBase	access:protected
__anonf95580a61103	..\\scite\\src\\SciTEBase.h	/^	enum { timerAutoSave=1 };$/;"	g	class:SciTEBase	access:protected
__anonf95580a61203	..\\scite\\src\\SciTEBase.h	/^	enum { marginWidthDefault = 20};$/;"	g	class:SciTEBase	access:protected
__anonf95580a61303	..\\scite\\src\\SciTEBase.h	/^	enum { foldMarginWidthDefault = 14};$/;"	g	class:SciTEBase	access:protected
__anonf95580a61403	..\\scite\\src\\SciTEBase.h	/^	enum { lineNumbersWidthDefault = 4 };$/;"	g	class:SciTEBase	access:protected
__anonf95580a61503	..\\scite\\src\\SciTEBase.h	/^	enum { bufferMax = IDM_IMPORT - IDM_BUFFER };$/;"	g	class:SciTEBase	access:protected
__anonf95580a61603	..\\scite\\src\\SciTEBase.h	/^	enum {$/;"	g	class:SciTEBase	access:protected
__anonf95580a61703	..\\scite\\src\\SciTEBase.h	/^	enum { maxParam = 4 };$/;"	g	class:SciTEBase	access:public
__init__	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def __init__(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
__init__	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^	def __init__(self, parent=None):$/;"	m	class:Form	access:public	signature:(self, parent=None)
__init__	..\\scintilla\\scripts\\Face.py	/^	def __init__(self):$/;"	m	class:Face	access:public	signature:(self)
__init__	..\\scintilla\\scripts\\ScintillaData.py	/^    def __init__(self, scintillaRoot):$/;"	m	class:ScintillaData	access:public	signature:(self, scintillaRoot)
__init__	..\\scite\\scripts\\tags2api.py	/^	def __init__(self):$/;"	m	class:FileCache	access:public	signature:(self)
_popen	..\\scite\\src\\scite_lua_win.h	/^#define _popen /;"	d
_setPySideBase	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def _setPySideBase(self, base):$/;"	m	class:SepBuilder	access:protected	signature:(self, base)
_try_pkgconfig	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^		def _try_pkgconfig(var, package, *relpath):$/;"	f	member:SepBuilder._setPySideBase	file:	access:private	signature:(var, package, *relpath)
abbrevInsert	..\\scite\\src\\SciTEBase.h	/^	std::string abbrevInsert;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
above	..\\scintilla\\src\\CallTip.h	/^	bool above;		\/\/ if true, display calltip above text$/;"	m	class:Scintilla::CallTip	typeref:typename:bool	access:private
abs_index	..\\scintilla\\lua\\src\\lauxlib.c	/^#define abs_index(/;"	d	file:	signature:(L,i)
absolute_index	..\\scite\\src\\LuaExtension.cxx	/^inline int absolute_index(lua_State *L, int index) {$/;"	f	typeref:typename:int	signature:(lua_State * L,int index)
ac	..\\scintilla\\src\\AutoComplete.cxx	/^	AutoComplete *ac;$/;"	m	struct:Sorter	typeref:typename:AutoComplete *	file:	access:public
ac	..\\scintilla\\src\\ScintillaBase.h	/^	AutoComplete ac;$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:AutoComplete	access:protected
accelGroup	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkAccelGroup *accelGroup;$/;"	m	class:SciTEGTK	typeref:typename:GtkAccelGroup *	file:	access:protected
accelerator	..\\scite\\gtk\\SciTEGTK.cxx	/^	const char *accelerator;$/;"	m	struct:SciTEItemFactoryEntry	typeref:typename:const char *	file:	access:public
access	..\\scite\\src\\FilePath.cxx	/^static int access(const wchar_t *path, int mode) {$/;"	f	typeref:typename:int	file:	signature:(const wchar_t * path,int mode)
accessibilityEnabled	..\\scintilla\\gtk\\ScintillaGTK.h	/^	int accessibilityEnabled;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:int	access:private
accessible	..\\scintilla\\gtk\\ScintillaGTK.h	/^	AtkObject *accessible;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:AtkObject *	access:private
accessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	GtkAccessible *accessible;$/;"	m	class:Scintilla::ScintillaGTKAccessible	typeref:typename:GtkAccessible *	access:private
actionType	..\\scintilla\\src\\CellBuffer.h	/^enum actionType { insertAction, removeAction, startAction, containerAction };$/;"	g	namespace:Scintilla
actions	..\\scintilla\\src\\CellBuffer.h	/^	std::vector<Action> actions;$/;"	m	class:Scintilla::UndoHistory	typeref:typename:std::vector<Action>	access:private
active	..\\scintilla\\src\\AutoComplete.h	/^	bool active;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:bool	access:private
active	..\\scintilla\\src\\EditModel.h	/^	bool active;$/;"	m	class:Scintilla::Caret	typeref:typename:bool	access:public
actualIndentInChars	..\\scintilla\\src\\Document.h	/^	int actualIndentInChars;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:public
actvar	..\\scintilla\\lua\\src\\lparser.h	/^  unsigned short actvar[LUAI_MAXVARS];  \/* declared-variable stack *\/$/;"	m	struct:FuncState	typeref:typename:unsigned short[]	access:public
add	..\\scite\\src\\ExportPDF.cxx	/^		int add(const char *objectData) {$/;"	f	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:int	file:	access:public	signature:(const char * objectData)
add	..\\scite\\src\\ExportPDF.cxx	/^		void add(char ch, int style_) {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:(char ch,int style_)
addEach	..\\scintilla\\src\\Editor.h	/^	enum AddNumber { addOne, addEach };$/;"	e	enum:Scintilla::Editor::AddNumber	access:public
addEach	..\\scite\\src\\SciTEBase.h	/^	enum AddSelection { addNext, addEach };$/;"	e	enum:SciTEBase::AddSelection	access:public
addNext	..\\scite\\src\\SciTEBase.h	/^	enum AddSelection { addNext, addEach };$/;"	e	enum:SciTEBase::AddSelection	access:public
addOne	..\\scintilla\\src\\Editor.h	/^	enum AddNumber { addOne, addEach };$/;"	e	enum:Scintilla::Editor::AddNumber	access:public
add_s	..\\scintilla\\lua\\src\\lstrlib.c	/^static void add_s (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	typeref:typename:void	file:	signature:(MatchState * ms,luaL_Buffer * b,const char * s,const char * e)
add_value	..\\scintilla\\lua\\src\\lstrlib.c	/^static void add_value (MatchState *ms, luaL_Buffer *b, const char *s,$/;"	f	typeref:typename:void	file:	signature:(MatchState * ms,luaL_Buffer * b,const char * s,const char * e)
addcharset	..\\scintilla\\lua\\src\\lpcode.c	/^static void addcharset (CompileState *compst, const byte *cs) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,const byte * cs)
adddyncaptures	..\\scintilla\\lua\\src\\lpvm.c	/^static void adddyncaptures (const char *s, Capture *base, int n, int fd) {$/;"	f	typeref:typename:void	file:	signature:(const char * s,Capture * base,int n,int fd)
addfield	..\\scintilla\\lua\\src\\ltablib.c	/^static void addfield (lua_State *L, luaL_Buffer *b, int i) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,luaL_Buffer * b,int i)
addinfo	..\\scintilla\\lua\\src\\ldebug.c	/^static void addinfo (lua_State *L, const char *msg) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * msg)
addinstcap	..\\scintilla\\lua\\src\\lpcode.c	/^static int addinstcap (CompileState *compst, Opcode op, int cap, int key,$/;"	f	typeref:typename:int	file:	signature:(CompileState * compst,Opcode op,int cap,int key,int aux)
addinstruction	..\\scintilla\\lua\\src\\lpcode.c	/^static int addinstruction (CompileState *compst, Opcode op, int aux) {$/;"	f	typeref:typename:int	file:	signature:(CompileState * compst,Opcode op,int aux)
addintlen	..\\scintilla\\lua\\src\\lstrlib.c	/^static void addintlen (char *form) {$/;"	f	typeref:typename:void	file:	signature:(char * form)
additionalCaretColour	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired additionalCaretColour;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
additionalCaretsBlink	..\\scintilla\\src\\EditView.h	/^	bool additionalCaretsBlink;$/;"	m	class:Scintilla::EditView	typeref:typename:bool	access:public
additionalCaretsVisible	..\\scintilla\\src\\EditView.h	/^	bool additionalCaretsVisible;$/;"	m	class:Scintilla::EditView	typeref:typename:bool	access:public
additionalSelectionTyping	..\\scintilla\\src\\Editor.h	/^	bool additionalSelectionTyping;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
addk	..\\scintilla\\lua\\src\\lcode.c	/^static int addk (FuncState *fs, TValue *k, TValue *v) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,TValue * k,TValue * v)
addoffsetinst	..\\scintilla\\lua\\src\\lpcode.c	/^static int addoffsetinst (CompileState *compst, Opcode op) {$/;"	f	typeref:typename:int	file:	signature:(CompileState * compst,Opcode op)
addonestring	..\\scintilla\\lua\\src\\lpcap.c	/^static int addonestring (luaL_Buffer *b, CapState *cs, const char *what) {$/;"	f	typeref:typename:int	file:	signature:(luaL_Buffer * b,CapState * cs,const char * what)
addquoted	..\\scintilla\\lua\\src\\lstrlib.c	/^static void addquoted (lua_State *L, luaL_Buffer *b, int arg) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,luaL_Buffer * b,int arg)
addtoktable	..\\scintilla\\lua\\src\\lptree.c	/^static int addtoktable (lua_State *L, int idx) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int idx)
adjust_assign	..\\scintilla\\lua\\src\\lparser.c	/^static void adjust_assign (LexState *ls, int nvars, int nexps, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int nvars,int nexps,expdesc * e)
adjust_varargs	..\\scintilla\\lua\\src\\ldo.c	/^static StkId adjust_varargs (lua_State *L, Proto *p, int actual) {$/;"	f	typeref:typename:StkId	file:	signature:(lua_State * L,Proto * p,int actual)
adjustlocalvars	..\\scintilla\\lua\\src\\lparser.c	/^static void adjustlocalvars (LexState *ls, int nvars) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int nvars)
adjustmenth	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GtkAdjustment *adjustmenth;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GtkAdjustment *	access:private
adjustmentv	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GtkAdjustment *adjustmentv;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GtkAdjustment *	access:private
adjustresults	..\\scintilla\\lua\\src\\lapi.c	/^#define adjustresults(/;"	d	file:	signature:(L,nres)
adjuststack	..\\scintilla\\lua\\src\\lauxlib.c	/^static void adjuststack (luaL_Buffer *B) {$/;"	f	typeref:typename:void	file:	signature:(luaL_Buffer * B)
advanced	..\\scite\\win32\\SciTEWinDlg.cxx	/^	bool advanced;$/;"	m	class:DialogFindReplace	typeref:typename:bool	file:	access:private
allClear	..\\scintilla\\src\\PositionCache.h	/^	bool allClear;$/;"	m	class:Scintilla::PositionCache	typeref:typename:bool	access:private
allInvalidated	..\\scintilla\\src\\PositionCache.h	/^	bool allInvalidated;$/;"	m	class:Scintilla::LineLayoutCache	typeref:typename:bool	access:private
allocated	..\\scintilla\\lexlib\\SubStyles.h	/^	int allocated;$/;"	m	class:Scintilla::SubStyles	typeref:typename:int	access:private
allowMenuActions	..\\scite\\gtk\\Widget.h	/^	bool allowMenuActions;$/;"	m	class:Strip	typeref:typename:bool	access:protected
allowMenuActions	..\\scite\\src\\SciTEBase.h	/^	bool allowMenuActions;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
allowhook	..\\scintilla\\lua\\src\\lstate.h	/^  lu_byte allowhook;$/;"	m	struct:lua_State	typeref:typename:lu_byte	access:public
alpha	..\\scintilla\\src\\LineMarker.h	/^	int alpha;$/;"	m	class:Scintilla::LineMarker	typeref:typename:int	access:public
alphaFull	..\\scintilla\\src\\Indicator.cxx	/^		enum { alphaFull = 0xff, alphaSide = 0x2f, alphaSide2=0x5f };$/;"	e	enum:Indicator::Draw::__anon36caa6a60103	file:	access:public
alphaIndicator	..\\scite\\src\\SciTEBase.h	/^	int alphaIndicator;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
alphaSide	..\\scintilla\\src\\Indicator.cxx	/^		enum { alphaFull = 0xff, alphaSide = 0x2f, alphaSide2=0x5f };$/;"	e	enum:Indicator::Draw::__anon36caa6a60103	file:	access:public
alphaSide2	..\\scintilla\\src\\Indicator.cxx	/^		enum { alphaFull = 0xff, alphaSide = 0x2f, alphaSide2=0x5f };$/;"	e	enum:Indicator::Draw::__anon36caa6a60103	file:	access:public
alwaysShowCaretLineBackground	..\\scintilla\\src\\ViewStyle.h	/^	bool alwaysShowCaretLineBackground;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
anchor	..\\scintilla\\src\\Selection.h	/^	SelectionPosition anchor;$/;"	m	struct:Scintilla::SelectionRange	typeref:typename:SelectionPosition	access:public
anchor	..\\scite\\src\\SciTEBase.h	/^	int anchor;$/;"	m	struct:SelectedRange	typeref:typename:int	access:public
anchor_token	..\\scintilla\\lua\\src\\lparser.c	/^static void anchor_token (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
annotationLinesAdded	..\\scintilla\\include\\Scintilla.h	/^	Sci_Position annotationLinesAdded;	\/* SCN_MODIFIED with SC_MOD_CHANGEANNOTATION *\/$/;"	m	struct:SCNotification	typeref:typename:Sci_Position	access:public
annotationLinesAdded	..\\scintilla\\src\\Document.h	/^	Sci::Line annotationLinesAdded;$/;"	m	class:Scintilla::DocModification	typeref:typename:Sci::Line	access:public
annotationStyleOffset	..\\scintilla\\src\\ViewStyle.h	/^	int annotationStyleOffset;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
annotationVisible	..\\scintilla\\src\\ViewStyle.h	/^	int annotationVisible;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
annotations	..\\scintilla\\src\\PerLine.h	/^	SplitVector<std::unique_ptr<char []>> annotations;$/;"	m	class:Scintilla::LineAnnotation	typeref:typename:SplitVector<std::unique_ptr<char[]>>	access:private
api_check	..\\scintilla\\lua\\src\\llimits.h	/^#define api_check	/;"	d
api_check	..\\scintilla\\lua\\src\\llimits.h	/^#define api_check(/;"	d	signature:(l,e)
api_checknelems	..\\scintilla\\lua\\src\\lapi.c	/^#define api_checknelems(/;"	d	file:	signature:(L,n)
api_checkvalidindex	..\\scintilla\\lua\\src\\lapi.c	/^#define api_checkvalidindex(/;"	d	file:	signature:(L,i)
api_incr_top	..\\scintilla\\lua\\src\\lapi.c	/^#define api_incr_top(/;"	d	file:	signature:(L)
apis	..\\scite\\scripts\\tags2api.py	/^apis = {}$/;"	v	access:public
apis	..\\scite\\src\\SciTEBase.h	/^	StringList apis;$/;"	m	class:SciTEBase	typeref:typename:StringList	access:protected
apisFileNames	..\\scite\\src\\SciTEBase.h	/^	std::string apisFileNames;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
apisKeys	..\\scite\\scripts\\tags2api.py	/^apisKeys = list(apis.keys())$/;"	v	access:public
app	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^    app = QApplication(sys.argv)$/;"	v	access:public
app	..\\scite\\win32\\SciTEWin.cxx	/^SciTEWin *SciTEWin::app = NULL;$/;"	m	class:SciTEWin	typeref:typename:SciTEWin *
app	..\\scite\\win32\\SciTEWin.h	/^	static SciTEWin *app;$/;"	m	class:SciTEWin	typeref:typename:SciTEWin *	access:protected
appName	..\\scite\\gtk\\SciTEGTK.cxx	/^const char appName[] = "SciTE";$/;"	v	typeref:typename:const char[]
appName	..\\scite\\win32\\SciTEWin.cxx	/^const GUI::gui_char appName[] = GUI_TEXT("Sc1");$/;"	v	typeref:typename:const GUI::gui_char[]
appName	..\\scite\\win32\\SciTEWin.cxx	/^const GUI::gui_char appName[] = GUI_TEXT("SciTE");$/;"	v	typeref:typename:const GUI::gui_char[]
argc	..\\scintilla\\lua\\src\\lua.c	/^  int argc;$/;"	m	struct:Smain	typeref:typename:int	file:	access:public
argc	..\\scintilla\\lua\\src\\luac.c	/^ int argc;$/;"	m	struct:Smain	typeref:typename:int	file:	access:public
arguments	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def arguments(v, stringResult, options):$/;"	f	access:public	signature:(v, stringResult, options)
argv	..\\scintilla\\lua\\src\\lua.c	/^  char **argv;$/;"	m	struct:Smain	typeref:typename:char **	file:	access:public
argv	..\\scintilla\\lua\\src\\luac.c	/^ char** argv;$/;"	m	struct:Smain	typeref:typename:char **	file:	access:public
arith_op	..\\scintilla\\lua\\src\\lvm.c	/^#define arith_op(/;"	d	file:	signature:(op,tm)
around_x_xpm	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char * around_x_xpm[] = {$/;"	v	typeref:typename:const char * []	file:
array	..\\scintilla\\lua\\src\\lobject.h	/^  TValue *array;  \/* array part *\/$/;"	m	struct:Table	typeref:typename:TValue *	access:public
arrayindex	..\\scintilla\\lua\\src\\ltable.c	/^static int arrayindex (const TValue *key) {$/;"	f	typeref:typename:int	file:	signature:(const TValue * key)
ascent	..\\scintilla\\src\\Style.h	/^	unsigned int ascent;$/;"	m	struct:Scintilla::FontMeasurements	typeref:typename:unsigned int	access:public
assertionPopUps	..\\scintilla\\gtk\\PlatGTK.cxx	/^static bool assertionPopUps = true;$/;"	v	typeref:typename:bool	file:
assertionPopUps	..\\scintilla\\win32\\PlatWin.cxx	/^static bool assertionPopUps = true;$/;"	v	namespace:Scintilla	typeref:typename:bool	file:
assignment	..\\scintilla\\lua\\src\\lparser.c	/^static void assignment (LexState *ls, struct LHS_assign *lh, int nvars) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,struct LHS_assign * lh,int nvars)
at	..\\scintilla\\src\\CellBuffer.h	/^	actionType at;$/;"	m	class:Scintilla::Action	typeref:typename:actionType	access:public
atLineEnd	..\\scintilla\\lexlib\\StyleContext.h	/^	bool atLineEnd;$/;"	m	class:Scintilla::StyleContext	typeref:typename:bool	access:public
atLineEnd	..\\scite\\src\\LuaExtension.cxx	/^	bool atLineEnd;$/;"	m	struct:StylingContext	typeref:typename:bool	file:	access:public
atLineStart	..\\scintilla\\lexlib\\StyleContext.h	/^	bool atLineStart;$/;"	m	class:Scintilla::StyleContext	typeref:typename:bool	access:public
atLineStart	..\\scite\\src\\LuaExtension.cxx	/^	bool atLineStart;$/;"	m	struct:StylingContext	typeref:typename:bool	file:	access:public
atomClipboard	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GdkAtom ScintillaGTK::atomClipboard = 0;$/;"	m	class:ScintillaGTK	typeref:typename:GdkAtom
atomClipboard	..\\scintilla\\gtk\\ScintillaGTK.h	/^	static GdkAtom atomClipboard;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkAtom	access:private
atomDROPFILES_DND	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GdkAtom ScintillaGTK::atomDROPFILES_DND = 0;$/;"	m	class:ScintillaGTK	typeref:typename:GdkAtom
atomDROPFILES_DND	..\\scintilla\\gtk\\ScintillaGTK.h	/^	static GdkAtom atomDROPFILES_DND;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkAtom	access:private
atomSought	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GdkAtom atomSought;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkAtom	access:private
atomString	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GdkAtom ScintillaGTK::atomString = 0;$/;"	m	class:ScintillaGTK	typeref:typename:GdkAtom
atomString	..\\scintilla\\gtk\\ScintillaGTK.h	/^	static GdkAtom atomString;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkAtom	access:private
atomUTF8	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GdkAtom ScintillaGTK::atomUTF8 = 0;$/;"	m	class:ScintillaGTK	typeref:typename:GdkAtom
atomUTF8	..\\scintilla\\gtk\\ScintillaGTK.h	/^	static GdkAtom atomUTF8;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkAtom	access:private
atomUriList	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GdkAtom ScintillaGTK::atomUriList = 0;$/;"	m	class:ScintillaGTK	typeref:typename:GdkAtom
atomUriList	..\\scintilla\\gtk\\ScintillaGTK.h	/^	static GdkAtom atomUriList;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkAtom	access:private
atomic	..\\scintilla\\lua\\src\\lgc.c	/^static void atomic (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
attributes	..\\scintilla\\src\\Indicator.h	/^	int attributes;$/;"	m	class:Scintilla::Indicator	typeref:typename:int	access:public
attrs	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	PangoAttrList *attrs;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:PangoAttrList *	file:	access:public
autoCCausedByOnlyOne	..\\scite\\src\\SciTEBase.h	/^	bool autoCCausedByOnlyOne;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
autoCompleteFillUpCharacters	..\\scite\\src\\SciTEBase.h	/^	std::string autoCompleteFillUpCharacters;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
autoCompleteIgnoreCase	..\\scite\\src\\SciTEBase.h	/^	bool autoCompleteIgnoreCase;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
autoCompleteLastClickTime	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  unsigned int autoCompleteLastClickTime; \/\/ last click time in the AC box$/;"	m	class:ScintillaCurses	typeref:typename:unsigned int	file:	access:private
autoCompleteStartCharacters	..\\scite\\src\\SciTEBase.h	/^	std::string autoCompleteStartCharacters;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
autoCompleteTypeSeparator	..\\scite\\src\\SciTEBase.h	/^	std::string autoCompleteTypeSeparator;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
autoHide	..\\scintilla\\src\\AutoComplete.h	/^	bool autoHide;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:bool	access:public
autoScrollDelay	..\\scintilla\\src\\Editor.h	/^	enum { autoScrollDelay = 200 };$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450303	access:public
autoScrollTimer	..\\scintilla\\src\\Editor.h	/^	Timer autoScrollTimer;$/;"	m	class:Scintilla::Editor	typeref:typename:Timer	access:protected
autoSort	..\\scintilla\\src\\AutoComplete.h	/^	int autoSort;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:int	access:public
aux	..\\scintilla\\lua\\src\\lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon613de0d5020a::__anon613de0d50308	typeref:typename:int	access:public
aux	..\\scintilla\\lua\\src\\lpvm.h	/^    byte aux;$/;"	m	struct:Instruction::Inst	typeref:typename:byte	access:public
aux_close	..\\scintilla\\lua\\src\\liolib.c	/^static int aux_close (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
aux_getn	..\\scintilla\\lua\\src\\ltablib.c	/^#define aux_getn(/;"	d	file:	signature:(L,n)
aux_lines	..\\scintilla\\lua\\src\\liolib.c	/^static void aux_lines (lua_State *L, int idx, int toclose) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int idx,int toclose)
aux_upvalue	..\\scintilla\\lua\\src\\lapi.c	/^static const char *aux_upvalue (StkId fi, int n, TValue **val) {$/;"	f	typeref:typename:const char *	file:	signature:(StkId fi,int n,TValue ** val)
auxemptycap	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *auxemptycap (lua_State *L, TTree *tree, int cap, int idx) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,TTree * tree,int cap,int idx)
auxgetinfo	..\\scintilla\\lua\\src\\ldebug.c	/^static int auxgetinfo (lua_State *L, const char *what, lua_Debug *ar,$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * what,lua_Debug * ar,Closure * f,CallInfo * ci)
auxopen	..\\scintilla\\lua\\src\\lbaselib.c	/^static void auxopen (lua_State *L, const char *name,$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * name,lua_CFunction f,lua_CFunction u)
auxresume	..\\scintilla\\lua\\src\\lbaselib.c	/^static int auxresume (lua_State *L, lua_State *co, int narg) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,lua_State * co,int narg)
auxsort	..\\scintilla\\lua\\src\\ltablib.c	/^static void auxsort (lua_State *L, int l, int u) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int l,int u)
auxupvalue	..\\scintilla\\lua\\src\\ldblib.c	/^static int auxupvalue (lua_State *L, int get) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int get)
aveCharWidth	..\\scintilla\\gtk\\PlatGTK.cxx	/^	unsigned int aveCharWidth;$/;"	m	class:ListBoxX	typeref:typename:unsigned int	file:	access:private
aveCharWidth	..\\scintilla\\src\\Style.h	/^	XYPOSITION aveCharWidth;$/;"	m	struct:Scintilla::FontMeasurements	typeref:typename:XYPOSITION	access:public
aveCharWidth	..\\scintilla\\src\\ViewStyle.h	/^	XYPOSITION aveCharWidth;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:XYPOSITION	access:public
aveCharWidth	..\\scintilla\\win32\\PlatWin.cxx	/^	unsigned int aveCharWidth;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:unsigned int	file:	access:private
b	..\\scintilla\\lua\\src\\ldo.c	/^  luai_jmpbuf b;$/;"	m	struct:lua_longjmp	typeref:typename:luai_jmpbuf	file:	access:public
b	..\\scintilla\\lua\\src\\lobject.h	/^  int b;$/;"	m	union:__anonae4e9c5f010a	typeref:typename:int	access:public
b	..\\scintilla\\lua\\src\\lundump.c	/^ Mbuffer* b;$/;"	m	struct:__anonc6bc71bc0108	typeref:typename:Mbuffer *	file:	access:public
b	..\\scite\\src\\Credits.cxx	/^	int b;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:public
bAlreadyRunning	..\\scite\\win32\\UniqueInstance.h	/^	bool bAlreadyRunning;	\/\/\/< true if another instance accepting files is found$/;"	m	class:UniqueInstance	typeref:typename:bool	access:private
back	..\\scintilla\\src\\LineMarker.h	/^	ColourDesired back;$/;"	m	class:Scintilla::LineMarker	typeref:typename:ColourDesired	access:public
back	..\\scintilla\\src\\Style.h	/^	ColourDesired back;$/;"	m	class:Scintilla::Style	typeref:typename:ColourDesired	access:public
back	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired back;$/;"	m	class:Scintilla::MarginStyle	typeref:typename:ColourDesired	access:public
back	..\\scintilla\\src\\ViewStyle.h	/^	ColourOptional back;$/;"	m	struct:Scintilla::ForeBackColours	typeref:typename:ColourOptional	access:public
back	..\\scite\\src\\StyleDefinition.h	/^	std::string back;$/;"	m	class:StyleDefinition	typeref:typename:std::string	access:public
backSelected	..\\scintilla\\src\\LineMarker.h	/^	ColourDesired backSelected;$/;"	m	class:Scintilla::LineMarker	typeref:typename:ColourDesired	access:public
backgroundStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	BackgroundStrip backgroundStrip;$/;"	m	class:SciTEGTK	typeref:typename:BackgroundStrip	file:	access:protected
backgroundStrip	..\\scite\\win32\\SciTEWin.h	/^	BackgroundStrip backgroundStrip;$/;"	m	class:SciTEWin	typeref:typename:BackgroundStrip	access:protected
backrefcap	..\\scintilla\\lua\\src\\lpcap.c	/^static int backrefcap (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
backslash_x_xpm	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char * backslash_x_xpm[] = {$/;"	v	typeref:typename:const char * []	file:
backspaceUnindents	..\\scintilla\\src\\Document.h	/^	bool backspaceUnindents;$/;"	m	class:Scintilla::Document	typeref:typename:bool	access:public
badpat	..\\scintilla\\src\\RESearch.cxx	/^#define badpat(/;"	d	file:	signature:(x)
bandBackground	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandContents	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandFind	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandReplace	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandSearch	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandStatus	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandTab	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandTool	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bandUser	..\\scite\\win32\\SciTEWin.h	/^	enum { bandTool, bandTab, bandContents, bandUser, bandBackground, bandSearch, bandFind, bandRep/;"	e	enum:SciTEWin::__anon51edbd840203	access:public
bands	..\\scite\\win32\\SciTEWin.h	/^	std::vector<Band> bands;$/;"	m	class:SciTEWin	typeref:typename:std::vector<Band>	access:protected
base	..\\scintilla\\lua\\src\\lstate.h	/^  StkId base;  \/* base for this function *\/$/;"	m	struct:CallInfo	typeref:typename:StkId	access:public
base	..\\scintilla\\lua\\src\\lstate.h	/^  StkId base;  \/* base of current function *\/$/;"	m	struct:lua_State	typeref:typename:StkId	access:public
base	..\\scite\\scripts\\CheckPropsDoc.py	/^	base = os.path.basename(propPath)$/;"	v	access:public
base	..\\scite\\scripts\\CheckPropsDoc.py	/^	base = propPath$/;"	v	access:public
baseCcalls	..\\scintilla\\lua\\src\\lstate.h	/^  unsigned short baseCcalls;  \/* nested C calls when resuming coroutine *\/$/;"	m	struct:lua_State	typeref:typename:unsigned short	access:public
baseStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	int baseStyle;$/;"	m	class:Scintilla::WordClassifier	typeref:typename:int	access:private
baseStyles	..\\scintilla\\lexlib\\SubStyles.h	/^	const char *baseStyles;$/;"	m	class:Scintilla::SubStyles	typeref:typename:const char *	access:private
base_ci	..\\scintilla\\lua\\src\\lstate.h	/^  CallInfo *base_ci;  \/* array of CallInfo's *\/$/;"	m	struct:lua_State	typeref:typename:CallInfo *	access:public
base_funcs	..\\scintilla\\lua\\src\\lbaselib.c	/^static const luaL_Reg base_funcs[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
base_open	..\\scintilla\\lua\\src\\lbaselib.c	/^static void base_open (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
basehookcount	..\\scintilla\\lua\\src\\lstate.h	/^  int basehookcount;$/;"	m	struct:lua_State	typeref:typename:int	access:public
beginFoldBlock	..\\scintilla\\src\\Document.h	/^	Sci::Line beginFoldBlock;	\/\/ Begin of current fold block$/;"	m	class:Scintilla::HighlightDelimiter	typeref:typename:Sci::Line	access:public
begin_undo_action	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::begin_undo_action() {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:()
bf	..\\scite\\src\\SciTEIO.cxx	/^	BufferedFile *bf;$/;"	m	class:FileReader	typeref:typename:BufferedFile *	file:	access:private
bigBit	..\\scintilla\\include\\Platform.h	/^	long bigBit;$/;"	m	class:Scintilla::ElapsedTime	typeref:typename:long	access:private
bigBit	..\\scite\\src\\GUI.h	/^	long bigBit;$/;"	m	class:GUI::ElapsedTime	typeref:typename:long	access:private
bit2mask	..\\scintilla\\lua\\src\\lgc.h	/^#define bit2mask(/;"	d	signature:(b1,b2)
bitarr	..\\scintilla\\src\\RESearch.cxx	/^static const char bitarr[] = { 1, 2, 4, 8, 16, 32, 64, '\\200' };$/;"	v	typeref:typename:const char[]	file:
bitmap	..\\scintilla\\win32\\PlatWin.cxx	/^	HBITMAP bitmap;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HBITMAP	file:	access:private
bitmapData	..\\scintilla\\cocoa\\PlatCocoa.h	/^  std::unique_ptr<uint8_t[]> bitmapData;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:std::unique_ptr<uint8_t[]>	access:private
bitmapHeight	..\\scintilla\\cocoa\\PlatCocoa.h	/^  int bitmapHeight;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	access:private
bitmapOld	..\\scintilla\\win32\\PlatWin.cxx	/^	HBITMAP bitmapOld;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HBITMAP	file:	access:private
bitmapWidth	..\\scintilla\\cocoa\\PlatCocoa.h	/^  int bitmapWidth;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	access:private
bitmask	..\\scintilla\\lua\\src\\lgc.h	/^#define bitmask(/;"	d	signature:(b)
bittab	..\\scintilla\\src\\RESearch.h	/^	unsigned char bittab[BITBLK]; \/* bit table for CCL pre-set bits *\/$/;"	m	class:Scintilla::RESearch	typeref:typename:unsigned char[]	access:private
bl	..\\scintilla\\lua\\src\\lparser.h	/^  struct BlockCnt *bl;  \/* chain of current blocks *\/$/;"	m	struct:FuncState	typeref:struct:BlockCnt *	access:public
black2gray	..\\scintilla\\lua\\src\\lgc.c	/^#define black2gray(/;"	d	file:	signature:(x)
block	..\\scintilla\\lua\\src\\lparser.c	/^static void block (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
blockEnd	..\\scite\\src\\SciTEBase.h	/^	StyleAndWords blockEnd;$/;"	m	class:SciTEBase	typeref:typename:StyleAndWords	access:protected
blockSize	..\\scite\\src\\FileWorker.h	/^const int blockSize = 131072;$/;"	v	typeref:typename:const int
blockStart	..\\scite\\src\\SciTEBase.h	/^	StyleAndWords blockStart;$/;"	m	class:SciTEBase	typeref:typename:StyleAndWords	access:protected
block_follow	..\\scintilla\\lua\\src\\lparser.c	/^static int block_follow (int token) {$/;"	f	typeref:typename:int	file:	signature:(int token)
body	..\\scintilla\\lua\\src\\lparser.c	/^static void body (LexState *ls, expdesc *e, int needself, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * e,int needself,int line)
body	..\\scintilla\\src\\LineMarker.h	/^	enum typeOfFold { undefined, head, body, tail, headWithTail };$/;"	e	enum:Scintilla::LineMarker::typeOfFold	access:public
body	..\\scintilla\\src\\Partitioning.h	/^	std::unique_ptr<SplitVectorWithRangeAdd<T>> body;$/;"	m	class:Scintilla::Partitioning	typeref:typename:std::unique_ptr<SplitVectorWithRangeAdd<T>>	access:private
body	..\\scintilla\\src\\SplitVector.h	/^	std::vector<T> body;$/;"	m	class:Scintilla::SplitVector	typeref:typename:std::vector<T>	access:protected
bol	..\\scintilla\\src\\RESearch.h	/^	Sci::Position bol;$/;"	m	class:Scintilla::RESearch	typeref:typename:Sci::Position	access:private
bookMark	..\\scite\\src\\MatchMarker.h	/^	int bookMark;$/;"	m	class:MatchMarker	typeref:typename:int	access:private
bookmarkBluegem	..\\scite\\src\\SciTEProps.cxx	/^static const char *bookmarkBluegem[] = {$/;"	v	typeref:typename:const char * []	file:
bookmarks	..\\scite\\src\\SciTEBase.h	/^	std::vector<int> bookmarks;$/;"	m	class:Buffer	typeref:typename:std::vector<int>	access:public
bookmarks	..\\scite\\src\\SciTEBase.h	/^	std::vector<int> bookmarks;$/;"	m	struct:BufferState	typeref:typename:std::vector<int>	access:public
boolK	..\\scintilla\\lua\\src\\lcode.c	/^static int boolK (FuncState *fs, int b) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,int b)
bopat	..\\scintilla\\src\\RESearch.h	/^	Sci::Position bopat[MAXTAG];$/;"	m	class:Scintilla::RESearch	typeref:typename:Sci::Position[]	access:public
borderHeight	..\\scintilla\\src\\CallTip.h	/^	int borderHeight;$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:public
bottom	..\\scintilla\\include\\Platform.h	/^	XYPOSITION bottom;$/;"	m	class:Scintilla::PRectangle	typeref:typename:XYPOSITION	access:public
bottom	..\\scintilla\\include\\Scintilla.h	/^	int bottom;$/;"	m	struct:Sci_Rectangle	typeref:typename:int	access:public
bottom	..\\scite\\src\\GUI.h	/^	int bottom;$/;"	m	class:GUI::Rectangle	typeref:typename:int	access:public
braceBadLightIndicator	..\\scintilla\\src\\ViewStyle.h	/^	int braceBadLightIndicator;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
braceBadLightIndicatorSet	..\\scintilla\\src\\ViewStyle.h	/^	bool braceBadLightIndicatorSet;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
braceCount	..\\scite\\src\\SciTEBase.h	/^	int braceCount;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
braceHighlightIndicator	..\\scintilla\\src\\ViewStyle.h	/^	int braceHighlightIndicator;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
braceHighlightIndicatorSet	..\\scintilla\\src\\ViewStyle.h	/^	bool braceHighlightIndicatorSet;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
bracePreviousStyles	..\\scintilla\\src\\PositionCache.h	/^	char bracePreviousStyles[2];$/;"	m	class:Scintilla::LineLayout	typeref:typename:char[2]	access:public
braces	..\\scintilla\\src\\EditModel.h	/^	Sci::Position braces[2];$/;"	m	class:Scintilla::EditModel	typeref:typename:Sci::Position[2]	access:public
braces	..\\scite\\scripts\\tags2api.py	/^						braces = braces + bracesDiff(contents[curLineNo])$/;"	v	access:public
bracesCheck	..\\scite\\src\\SciTEBase.h	/^	bool bracesCheck;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
bracesDiff	..\\scite\\scripts\\tags2api.py	/^def bracesDiff(s):$/;"	f	access:public	signature:(s)
bracesMatchStyle	..\\scintilla\\src\\EditModel.h	/^	int bracesMatchStyle;$/;"	m	class:Scintilla::EditModel	typeref:typename:int	access:public
bracesSloppy	..\\scite\\src\\SciTEBase.h	/^	bool bracesSloppy;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
bracesStyle	..\\scite\\src\\SciTEBase.h	/^	int bracesStyle;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
breaklist	..\\scintilla\\lua\\src\\lparser.c	/^  int breaklist;  \/* list of jumps out of this loop *\/$/;"	m	struct:BlockCnt	typeref:typename:int	file:	access:public
breakstat	..\\scintilla\\lua\\src\\lparser.c	/^static void breakstat (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
brush	..\\scintilla\\win32\\PlatWin.cxx	/^	HBRUSH brush;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HBRUSH	file:	access:private
brushOld	..\\scintilla\\win32\\PlatWin.cxx	/^	HBRUSH brushOld;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HBRUSH	file:	access:private
bset	..\\scintilla\\lexlib\\CharacterSet.h	/^	bool *bset;$/;"	m	class:Scintilla::CharacterSet	typeref:typename:bool *	access:private
btnBrowse	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton btnBrowse;$/;"	m	class:DialogFindInFiles	typeref:typename:WButton	file:	access:public
btnBuild	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *btnBuild;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
btnCompile	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *btnCompile;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
btnDotDot	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton btnDotDot;$/;"	m	class:DialogFindInFiles	typeref:typename:WButton	file:	access:public
btnStop	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *btnStop;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
buf	..\\scintilla\\lexlib\\LexAccessor.h	/^	char buf[bufferSize+1];$/;"	m	class:Scintilla::LexAccessor	typeref:typename:char[]	access:private
buf	..\\scite\\src\\StyleWriter.h	/^	char buf[bufferSize+1];$/;"	m	class:TextReader	typeref:typename:char[]	access:protected
bufLen	..\\scite\\src\\SciTEIO.cxx	/^	enum {bufLen = 64 * 1024};$/;"	e	enum:BufferedFile::__anon083e0eee0103	file:	access:public
buff	..\\scintilla\\lua\\src\\lauxlib.c	/^  char buff[LUAL_BUFFERSIZE];$/;"	m	struct:LoadF	typeref:typename:char[]	file:	access:public
buff	..\\scintilla\\lua\\src\\ldo.c	/^  Mbuffer buff;  \/* buffer to be used by the scanner *\/$/;"	m	struct:SParser	typeref:typename:Mbuffer	file:	access:public
buff	..\\scintilla\\lua\\src\\llex.h	/^  Mbuffer *buff;  \/* buffer for tokens *\/$/;"	m	struct:LexState	typeref:typename:Mbuffer *	access:public
buff	..\\scintilla\\lua\\src\\lpvm.h	/^  byte buff[1];$/;"	m	union:Instruction	typeref:typename:byte[1]	access:public
buff	..\\scintilla\\lua\\src\\lstate.h	/^  Mbuffer buff;  \/* temporary buffer for string concatentation *\/$/;"	m	struct:global_State	typeref:typename:Mbuffer	access:public
buffer	..\\scintilla\\lua\\src\\lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer	typeref:typename:char[]	access:public
buffer	..\\scintilla\\lua\\src\\lzio.h	/^  char *buffer;$/;"	m	struct:Mbuffer	typeref:typename:char *	access:public
buffer	..\\scintilla\\win32\\PlatWin.cxx	/^	T *buffer;$/;"	m	class:Scintilla::VarBuffer	typeref:typename:T *	file:	access:public
buffer	..\\scite\\lua\\include\\lauxlib.h	/^  char buffer[LUAL_BUFFERSIZE];$/;"	m	struct:luaL_Buffer	typeref:typename:char[]	access:public
buffer	..\\scite\\src\\ExportPDF.cxx	/^		char *buffer;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:char *	file:	access:private
buffer	..\\scite\\src\\SciTEIO.cxx	/^	char buffer[bufLen];$/;"	m	class:BufferedFile	typeref:typename:char[]	file:	access:private
bufferCmdID	..\\scite\\src\\SciTEBase.h	/^	enum { fileStackCmdID = IDM_MRUFILE, bufferCmdID = IDM_BUFFER };$/;"	e	enum:SciTEBase::__anonf95580a60903	access:public
bufferMax	..\\scite\\src\\SciTEBase.h	/^	enum { bufferMax = IDM_IMPORT - IDM_BUFFER };$/;"	e	enum:SciTEBase::__anonf95580a61503	access:public
bufferSize	..\\scintilla\\lexlib\\LexAccessor.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	e	enum:Scintilla::LexAccessor::__anonb2de87d20203	access:public
bufferSize	..\\scite\\src\\StyleWriter.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	e	enum:TextReader::__anon931737210203	access:public
bufferStandard	..\\scintilla\\win32\\PlatWin.cxx	/^	T bufferStandard[lengthStandard];$/;"	m	class:Scintilla::VarBuffer	typeref:typename:T[]	file:	access:private
buffered	..\\scintilla\\src\\Document.cxx	/^	wchar_t buffered[2];$/;"	m	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:wchar_t[2]	file:	access:private
bufferedDraw	..\\scintilla\\src\\EditView.h	/^	bool bufferedDraw;$/;"	m	class:Scintilla::EditView	typeref:typename:bool	access:public
bufferedDraw	..\\scite\\src\\SciTEBase.h	/^	bool bufferedDraw;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
buffers	..\\scite\\src\\SciTEBase.h	/^	Buffer *buffers;$/;"	m	class:BufferList	typeref:typename:Buffer *	access:public
buffers	..\\scite\\src\\SciTEBase.h	/^	BufferList buffers;$/;"	m	class:SciTEBase	typeref:typename:BufferList	access:protected
buffers	..\\scite\\src\\SciTEBase.h	/^	std::vector<BufferState> buffers;$/;"	m	class:Session	typeref:typename:std::vector<BufferState>	access:public
bufffree	..\\scintilla\\lua\\src\\lauxlib.c	/^#define bufffree(/;"	d	file:	signature:(B)
bufflen	..\\scintilla\\lua\\src\\lauxlib.c	/^#define bufflen(/;"	d	file:	signature:(B)
buffreplace	..\\scintilla\\lua\\src\\llex.c	/^static void buffreplace (LexState *ls, char from, char to) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,char from,char to)
buffsize	..\\scintilla\\lua\\src\\lzio.h	/^  size_t buffsize;$/;"	m	struct:Mbuffer	typeref:typename:size_t	access:public
buildEverything	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def buildEverything(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
build_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * build_xpm[] = {$/;"	v	typeref:typename:const char * []
buildgrammar	..\\scintilla\\lua\\src\\lptree.c	/^static void buildgrammar (lua_State *L, TTree *grammar, int frule, int n) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,TTree * grammar,int frule,int n)
bvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define bvalue(/;"	d	signature:(o)
byte	..\\scintilla\\lua\\src\\lptypes.h	/^typedef unsigned char byte;$/;"	t	typeref:typename:unsigned char
bytePosition	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^		Sci::Position bytePosition;$/;"	m	struct:ScintillaGTKAccessible::PasteText::Helper	typeref:typename:Sci::Position	file:	access:public
bytes2slots	..\\scintilla\\lua\\src\\lptypes.h	/^#define bytes2slots(/;"	d	signature:(n)
c	..\\scintilla\\lua\\src\\lobject.h	/^  CClosure c;$/;"	m	union:Closure	typeref:typename:CClosure	access:public
cache	..\\scintilla\\src\\PositionCache.h	/^	std::vector<std::unique_ptr<LineLayout>>cache;$/;"	m	class:Scintilla::LineLayoutCache	typeref:typename:std::vector<std::unique_ptr<LineLayout>>	access:private
callClassAtom	..\\scintilla\\win32\\ScintillaWin.cxx	/^	static ATOM callClassAtom;$/;"	m	class:ScintillaWin	typeref:typename:ATOM	file:	access:private
callClassAtom	..\\scintilla\\win32\\ScintillaWin.cxx	/^ATOM ScintillaWin::callClassAtom = 0;$/;"	m	class:ScintillaWin	typeref:typename:ATOM
callClassName	..\\scintilla\\win32\\ScintillaWin.cxx	/^const TCHAR callClassName[] = TEXT("CallTip");$/;"	v	typeref:typename:const TCHAR[]
callTM	..\\scintilla\\lua\\src\\lvm.c	/^static void callTM (lua_State *L, const TValue *f, const TValue *p1,$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const TValue * f,const TValue * p1,const TValue * p2,const TValue * p3)
callTMres	..\\scintilla\\lua\\src\\lvm.c	/^static void callTMres (lua_State *L, StkId res, const TValue *f,$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,StkId res,const TValue * f,const TValue * p1,const TValue * p2)
callTipIgnoreCase	..\\scite\\src\\SciTEBase.h	/^	bool callTipIgnoreCase;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
callTipUseEscapes	..\\scite\\src\\SciTEBase.h	/^	bool callTipUseEscapes;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
call_binTM	..\\scintilla\\lua\\src\\lvm.c	/^static int call_binTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const TValue * p1,const TValue * p2,StkId res,TMS event)
call_function	..\\scite\\src\\LuaExtension.cxx	/^static bool call_function(lua_State *L, int nargs, bool ignoreFunctionReturnValue=false) {$/;"	f	typeref:typename:bool	file:	signature:(lua_State * L,int nargs,bool ignoreFunctionReturnValue=false)
call_orderTM	..\\scintilla\\lua\\src\\lvm.c	/^static int call_orderTM (lua_State *L, const TValue *p1, const TValue *p2,$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const TValue * p1,const TValue * p2,TMS event)
callallgcTM	..\\scintilla\\lua\\src\\lstate.c	/^static void callallgcTM (lua_State *L, void *ud) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,void * ud)
callback	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void (*callback)(void *, int, void *, void *); \/\/ SCNotification callback$/;"	m	class:ScintillaCurses	typeref:typename:void (*)(void *,int,void *,void *)	file:	access:private
callback	..\\scite\\gtk\\SciTEGTK.cxx	/^	GCallback callback;$/;"	m	struct:SciTEItemFactoryEntry	typeref:typename:GCallback	file:	access:public
callback_action	..\\scite\\gtk\\SciTEGTK.cxx	/^	int callback_action;$/;"	m	struct:SciTEItemFactoryEntry	typeref:typename:int	file:	access:public
callrethooks	..\\scintilla\\lua\\src\\ldo.c	/^static StkId callrethooks (lua_State *L, StkId firstResult) {$/;"	f	typeref:typename:StkId	file:	signature:(lua_State * L,StkId firstResult)
calltipEndDefinition	..\\scite\\src\\SciTEBase.h	/^	std::string calltipEndDefinition;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
calltipParametersEnd	..\\scite\\src\\SciTEBase.h	/^	std::string calltipParametersEnd;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
calltipParametersSeparators	..\\scite\\src\\SciTEBase.h	/^	std::string calltipParametersSeparators;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
calltipParametersStart	..\\scite\\src\\SciTEBase.h	/^	std::string calltipParametersStart;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
calltipWordCharacters	..\\scite\\src\\SciTEBase.h	/^	std::string calltipWordCharacters;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
canConvert	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	bool canConvert(const QString &mime, QString flav) {$/;"	f	class:ScintillaRectangularMime	typeref:typename:bool	file:	access:public	signature:(const QString & mime,QString flav)
canGet	..\\scite\\src\\Utf8_16.h	/^	bool canGet() const { return m_eState == eStart; }$/;"	f	class:Utf8_Iter	typeref:typename:bool	access:public	signature:() const
can_redo	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::can_redo() {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:()
can_undo	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::can_undo() {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:()
cancelAtStartPos	..\\scintilla\\src\\AutoComplete.h	/^	bool cancelAtStartPos;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:bool	access:public
cancelFlag	..\\scite\\src\\JobQueue.h	/^	long cancelFlag;$/;"	m	class:JobQueue	typeref:typename:long	access:public
cancelling	..\\scite\\src\\Worker.h	/^	volatile bool cancelling;$/;"	m	struct:Worker	typeref:typename:volatile bool	access:private
cannot	..\\scintilla\\lua\\src\\luac.c	/^static void cannot(const char* what)$/;"	f	typeref:typename:void	file:	signature:(const char * what)
cap	..\\scintilla\\lua\\src\\lpcap.h	/^  Capture *cap;  \/* current capture *\/$/;"	m	struct:CapState	typeref:typename:Capture *	access:public
cap	..\\scintilla\\lua\\src\\lptree.h	/^  byte cap;  \/* kind of capture (if it is a capture) *\/$/;"	m	struct:TTree	typeref:typename:byte	access:public
capSize	..\\scite\\win32\\SciTEWin.cxx	/^			enum { capSize = 2000 };$/;"	e	enum:SciTEWin::Command::__anon8453292f0103	file:	access:public
capitalHeight	..\\scintilla\\src\\Style.h	/^	XYPOSITION capitalHeight;	\/\/ Top of capital letter to baseline: ascent - internal leading$/;"	m	struct:Scintilla::FontMeasurements	typeref:typename:XYPOSITION	access:public
caplevel	..\\scintilla\\lua\\src\\lpvm.c	/^  int caplevel;$/;"	m	struct:Stack	typeref:typename:int	file:	access:public
caplistidx	..\\scintilla\\lua\\src\\lptypes.h	/^#define caplistidx(/;"	d	signature:(ptop)
capture	..\\scintilla\\lua\\src\\lstrlib.c	/^  } capture[LUA_MAXCAPTURES];$/;"	m	struct:MatchState	typeref:struct:MatchState::__anondc1923b30108[]	file:	access:public
capture_aux	..\\scintilla\\lua\\src\\lptree.c	/^static int capture_aux (lua_State *L, int cap, int labelidx) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int cap,int labelidx)
capture_to_close	..\\scintilla\\lua\\src\\lstrlib.c	/^static int capture_to_close (MatchState *ms) {$/;"	f	typeref:typename:int	file:	signature:(MatchState * ms)
capturedMouse	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  bool capturedMouse;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:bool	access:private
capturedMouse	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool capturedMouse; \/\/ whether or not the mouse is currently captured$/;"	m	class:ScintillaCurses	typeref:typename:bool	file:	access:private
capturedMouse	..\\scintilla\\gtk\\ScintillaGTK.h	/^	bool capturedMouse;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:bool	access:private
capturedMouse	..\\scintilla\\win32\\ScintillaWin.cxx	/^	bool capturedMouse;$/;"	m	class:ScintillaWin	typeref:typename:bool	file:	access:private
capturedMouse	..\\scite\\src\\SciTEBase.h	/^	bool capturedMouse;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
capturedMouse	..\\scite\\win32\\SciTEWin.h	/^	bool capturedMouse;$/;"	m	class:ContentWin	typeref:typename:bool	access:private
capturedMouse	..\\scite\\win32\\Strips.h	/^	bool capturedMouse;$/;"	m	class:Strip	typeref:typename:bool	access:protected
captype	..\\scintilla\\lua\\src\\lpcap.c	/^#define captype(/;"	d	file:	signature:(cap)
caret	..\\scintilla\\src\\EditModel.h	/^	Caret caret;$/;"	m	class:Scintilla::EditModel	typeref:typename:Caret	access:public
caret	..\\scintilla\\src\\Selection.h	/^	SelectionPosition caret;$/;"	m	struct:Scintilla::SelectionRange	typeref:typename:SelectionPosition	access:public
caretLineAlpha	..\\scintilla\\src\\ViewStyle.h	/^	int caretLineAlpha;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
caretLineBackground	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired caretLineBackground;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
caretLineFrame	..\\scintilla\\src\\ViewStyle.h	/^	int caretLineFrame;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
caretSticky	..\\scintilla\\src\\Editor.h	/^	int caretSticky;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
caretStyle	..\\scintilla\\src\\ViewStyle.h	/^	int caretStyle;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
caretWidth	..\\scintilla\\src\\ViewStyle.h	/^	int caretWidth;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
caretXPolicy	..\\scintilla\\src\\Editor.h	/^	int caretXPolicy;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
caretXSlop	..\\scintilla\\src\\Editor.h	/^	int caretXSlop;	\/\/\/< Ensure this many pixels visible on both sides of caret$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
caretYPolicy	..\\scintilla\\src\\Editor.h	/^	int caretYPolicy;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
caretYSlop	..\\scintilla\\src\\Editor.h	/^	int caretYSlop;	\/\/\/< Ensure this many lines visible on both sides of caret$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
caretcolour	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired caretcolour;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
caseCamel	..\\scintilla\\src\\Style.h	/^	enum ecaseForced {caseMixed, caseUpper, caseLower, caseCamel};$/;"	e	enum:Scintilla::Style::ecaseForced	access:public
caseConvFold	..\\scintilla\\src\\CaseConvert.cxx	/^CaseConverter caseConvFold;$/;"	v	namespace:__anon1fb76d660111	typeref:typename:CaseConverter
caseConvLow	..\\scintilla\\src\\CaseConvert.cxx	/^CaseConverter caseConvLow;$/;"	v	namespace:__anon1fb76d660111	typeref:typename:CaseConverter
caseConvUp	..\\scintilla\\src\\CaseConvert.cxx	/^CaseConverter caseConvUp;$/;"	v	namespace:__anon1fb76d660111	typeref:typename:CaseConverter
caseForce	..\\scintilla\\src\\Style.h	/^	ecaseForced caseForce;$/;"	m	class:Scintilla::Style	typeref:typename:ecaseForced	access:public
caseForce	..\\scite\\src\\StyleDefinition.h	/^	int caseForce;$/;"	m	class:StyleDefinition	typeref:typename:int	access:public
caseLower	..\\scintilla\\src\\Style.h	/^	enum ecaseForced {caseMixed, caseUpper, caseLower, caseCamel};$/;"	e	enum:Scintilla::Style::ecaseForced	access:public
caseMixed	..\\scintilla\\src\\Style.h	/^	enum ecaseForced {caseMixed, caseUpper, caseLower, caseCamel};$/;"	e	enum:Scintilla::Style::ecaseForced	access:public
caseSensitive	..\\scite\\src\\SciTEIO.cxx	/^	bool caseSensitive;$/;"	m	class:FileReader	typeref:typename:bool	file:	access:private
caseSensitiveFilenames	..\\scite\\src\\PropSetFile.cxx	/^bool PropSetFile::caseSensitiveFilenames = false;$/;"	m	class:PropSetFile	typeref:typename:bool
caseSensitiveFilenames	..\\scite\\src\\PropSetFile.h	/^	static bool caseSensitiveFilenames;$/;"	m	class:PropSetFile	typeref:typename:bool	access:private
caseUpper	..\\scintilla\\src\\Style.h	/^	enum ecaseForced {caseMixed, caseUpper, caseLower, caseCamel};$/;"	e	enum:Scintilla::Style::ecaseForced	access:public
case_x_xpm	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char * case_x_xpm[] = {$/;"	v	typeref:typename:const char * []	file:
cast	..\\scintilla\\lua\\src\\llimits.h	/^#define cast(/;"	d	signature:(t,exp)
cast_byte	..\\scintilla\\lua\\src\\llimits.h	/^#define cast_byte(/;"	d	signature:(i)
cast_int	..\\scintilla\\lua\\src\\llimits.h	/^#define cast_int(/;"	d	signature:(i)
cast_num	..\\scintilla\\lua\\src\\llimits.h	/^#define cast_num(/;"	d	signature:(i)
catRanges	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^const int catRanges[] = {$/;"	v	namespace:Scintilla::__anonf0c5a84c0111	typeref:typename:const int[]
categories	..\\scintilla\\scripts\\GenerateCharacterCategory.py	/^categories = findCategories("..\/lexlib\/CharacterCategory.h")$/;"	v	access:public
cb	..\\scintilla\\src\\Document.h	/^	CellBuffer cb;$/;"	m	class:Scintilla::Document	typeref:typename:CellBuffer	access:private
cbStruct	..\\scite\\win32\\SciTEWin.cxx	/^	long cbStruct;$/;"	m	struct:XHH_AKLINK	typeref:typename:long	file:	access:public
cc	..\\scintilla\\src\\CharClassify.h	/^	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };$/;"	g	class:Scintilla::CharClassify	access:public
ccCc	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccCc, ccCf, ccCs, ccCo, ccCn$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccCf	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccCc, ccCf, ccCs, ccCo, ccCn$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccCn	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccCc, ccCf, ccCs, ccCo, ccCn$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccCo	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccCc, ccCf, ccCs, ccCo, ccCn$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccCs	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccCc, ccCf, ccCs, ccCo, ccCn$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccLl	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccLu, ccLl, ccLt, ccLm, ccLo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccLm	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccLu, ccLl, ccLt, ccLm, ccLo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccLo	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccLu, ccLl, ccLt, ccLm, ccLo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccLt	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccLu, ccLl, ccLt, ccLm, ccLo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccLu	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccLu, ccLl, ccLt, ccLm, ccLo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccMc	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccMn, ccMc, ccMe,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccMe	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccMn, ccMc, ccMe,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccMn	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccMn, ccMc, ccMe,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccNd	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccNd, ccNl, ccNo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccNewLine	..\\scintilla\\src\\CharClassify.h	/^	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };$/;"	e	enum:Scintilla::CharClassify::cc	access:public
ccNl	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccNd, ccNl, ccNo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccNo	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccNd, ccNl, ccNo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPc	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPd	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPe	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPf	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPi	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPo	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPs	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccPc, ccPd, ccPs, ccPe, ccPi, ccPf, ccPo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccPunctuation	..\\scintilla\\src\\CharClassify.h	/^	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };$/;"	e	enum:Scintilla::CharClassify::cc	access:public
ccSc	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccSm, ccSc, ccSk, ccSo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccSk	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccSm, ccSc, ccSk, ccSo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccSm	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccSm, ccSc, ccSk, ccSo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccSo	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccSm, ccSc, ccSk, ccSo,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccSpace	..\\scintilla\\src\\CharClassify.h	/^	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };$/;"	e	enum:Scintilla::CharClassify::cc	access:public
ccWord	..\\scintilla\\src\\CharClassify.h	/^	enum cc { ccSpace, ccNewLine, ccWord, ccPunctuation };$/;"	e	enum:Scintilla::CharClassify::cc	access:public
ccZl	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccZs, ccZl, ccZp,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccZp	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccZs, ccZl, ccZp,$/;"	e	enum:Scintilla::CharacterCategory	access:public
ccZs	..\\scintilla\\lexlib\\CharacterCategory.h	/^	ccZs, ccZl, ccZp,$/;"	e	enum:Scintilla::CharacterCategory	access:public
cdfn	..\\scite\\gtk\\Widget.h	/^	ChangeFunction cdfn;$/;"	m	class:WCheckDraw	typeref:typename:ChangeFunction	access:private
ceillog2	..\\scintilla\\lua\\src\\lobject.h	/^#define ceillog2(/;"	d	signature:(x)
cell	..\\scite\\scripts\\commandsdoc.py	/^def cell(s):$/;"	f	access:public	signature:(s)
cfBorlandIDEBlockType	..\\scintilla\\win32\\ScintillaWin.cxx	/^	CLIPFORMAT cfBorlandIDEBlockType;$/;"	m	class:ScintillaWin	typeref:typename:CLIPFORMAT	file:	access:private
cfColumnSelect	..\\scintilla\\gtk\\ScintillaGTK.h	/^	CLIPFORMAT cfColumnSelect;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:CLIPFORMAT	access:private
cfColumnSelect	..\\scintilla\\win32\\ScintillaWin.cxx	/^	CLIPFORMAT cfColumnSelect;$/;"	m	class:ScintillaWin	typeref:typename:CLIPFORMAT	file:	access:private
cfLineSelect	..\\scintilla\\win32\\ScintillaWin.cxx	/^	CLIPFORMAT cfLineSelect;$/;"	m	class:ScintillaWin	typeref:typename:CLIPFORMAT	file:	access:private
cfVSLineTag	..\\scintilla\\win32\\ScintillaWin.cxx	/^	CLIPFORMAT cfVSLineTag;$/;"	m	class:ScintillaWin	typeref:typename:CLIPFORMAT	file:	access:private
cf_global_dostring	..\\scite\\src\\LuaExtension.cxx	/^static int cf_global_dostring(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_global_metatable_index	..\\scite\\src\\LuaExtension.cxx	/^static int cf_global_metatable_index(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_global_print	..\\scite\\src\\LuaExtension.cxx	/^static int cf_global_print(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_global_trace	..\\scite\\src\\LuaExtension.cxx	/^static int cf_global_trace(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_ifaceprop_metatable_index	..\\scite\\src\\LuaExtension.cxx	/^static int cf_ifaceprop_metatable_index(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_ifaceprop_metatable_newindex	..\\scite\\src\\LuaExtension.cxx	/^static int cf_ifaceprop_metatable_newindex(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_match_metatable_index	..\\scite\\src\\LuaExtension.cxx	/^static int cf_match_metatable_index(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_match_metatable_tostring	..\\scite\\src\\LuaExtension.cxx	/^static int cf_match_metatable_tostring(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_match_replace	..\\scite\\src\\LuaExtension.cxx	/^static int cf_match_replace(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_append	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_append(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_findtext	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_findtext(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_iface_function	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_iface_function(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_insert	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_insert(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_match	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_match(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_match_generator	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_match_generator(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_metatable_index	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_metatable_index(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_metatable_newindex	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_metatable_newindex(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_remove	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_remove(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_pane_textrange	..\\scite\\src\\LuaExtension.cxx	/^static int cf_pane_textrange(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_props_metatable_index	..\\scite\\src\\LuaExtension.cxx	/^static int cf_props_metatable_index(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_props_metatable_newindex	..\\scite\\src\\LuaExtension.cxx	/^static int cf_props_metatable_newindex(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_apply_properties	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_apply_properties(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_constname	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_constname(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_menu_command	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_menu_command(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_open	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_open(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_send	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_send(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_strip_set	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_strip_set(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_strip_set_list	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_strip_set_list(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_strip_show	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_strip_show(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_strip_value	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_strip_value(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
cf_scite_update_status_bar	..\\scite\\src\\LuaExtension.cxx	/^static int cf_scite_update_status_bar(lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
ch	..\\scintilla\\include\\Scintilla.h	/^	int ch;$/;"	m	struct:SCNotification	typeref:typename:int	access:public
ch	..\\scintilla\\lexlib\\StyleContext.h	/^	int ch;$/;"	m	class:Scintilla::StyleContext	typeref:typename:int	access:public
chNext	..\\scintilla\\lexlib\\StyleContext.h	/^	int chNext;$/;"	m	class:Scintilla::StyleContext	typeref:typename:int	access:public
chPrev	..\\scintilla\\lexlib\\StyleContext.h	/^	int chPrev;$/;"	m	class:Scintilla::StyleContext	typeref:typename:int	access:public
changeable	..\\scintilla\\src\\Style.h	/^	bool changeable;$/;"	m	class:Scintilla::Style	typeref:typename:bool	access:public
changeable	..\\scite\\src\\StyleDefinition.h	/^	bool changeable;$/;"	m	class:StyleDefinition	typeref:typename:bool	access:public
changewhite	..\\scintilla\\lua\\src\\lgc.h	/^#define changewhite(/;"	d	signature:(x)
changingCombo	..\\scite\\win32\\Strips.h	/^	enum ChangingSource { changingEdit, changingCombo };$/;"	e	enum:FindReplaceStrip::ChangingSource	access:public
changingEdit	..\\scite\\win32\\Strips.h	/^	enum ChangingSource { changingEdit, changingCombo };$/;"	e	enum:FindReplaceStrip::ChangingSource	access:public
char2int	..\\scintilla\\lua\\src\\lzio.h	/^#define char2int(/;"	d	signature:(c)
charClass	..\\scintilla\\src\\CharClassify.h	/^	unsigned char charClass[maxChar];    \/\/ not type cc to save space$/;"	m	class:Scintilla::CharClassify	typeref:typename:unsigned char[]	access:private
charClass	..\\scintilla\\src\\Document.h	/^	CharClassify charClass;$/;"	m	class:Scintilla::Document	typeref:typename:CharClassify	access:private
charClass	..\\scintilla\\src\\RESearch.h	/^	CharClassify *charClass;$/;"	m	class:Scintilla::RESearch	typeref:typename:CharClassify *	access:private
charSet	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	const char *charSet;$/;"	m	class:CaseFolderDBCS	typeref:typename:const char *	file:	access:private
character	..\\scintilla\\src\\CaseConvert.cxx	/^		int character;$/;"	m	struct:__anon1fb76d660111::CaseConverter::CharacterConversion	typeref:typename:int	file:	access:public
character	..\\scintilla\\src\\Document.h	/^		unsigned int character;$/;"	m	struct:Scintilla::Document::CharacterExtracted	typeref:typename:unsigned int	access:public
characterIndex	..\\scintilla\\src\\Document.cxx	/^	size_t characterIndex;$/;"	m	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:size_t	file:	access:private
characterSet	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	int characterSet;$/;"	m	class:QuartzTextStyle	typeref:typename:int	access:private
characterSet	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int characterSet;$/;"	m	class:FontHandle	typeref:typename:int	file:	access:public
characterSet	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int characterSet;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	file:	access:private
characterSet	..\\scintilla\\include\\Platform.h	/^	int characterSet;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:int	access:public
characterSet	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	int characterSet;$/;"	m	class:Scintilla::FontAndCharacterSet	typeref:typename:int	file:	access:public
characterSet	..\\scintilla\\src\\Editor.h	/^	int characterSet;$/;"	m	class:Scintilla::SelectionText	typeref:typename:int	access:public
characterSet	..\\scintilla\\src\\Style.h	/^	int characterSet;$/;"	m	struct:Scintilla::FontSpecification	typeref:typename:int	access:public
characterSet	..\\scintilla\\win32\\PlatWin.cxx	/^	int characterSet;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:int	file:	access:public
characterSet	..\\scite\\src\\SciTEBase.h	/^	int characterSet;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
characterToConversion	..\\scintilla\\src\\CaseConvert.cxx	/^	CharacterToConversion characterToConversion;$/;"	m	class:__anon1fb76d660111::CaseConverter	typeref:typename:CharacterToConversion	file:	access:private
character_offsets	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	std::vector<Sci::Position> character_offsets;$/;"	m	class:Scintilla::ScintillaGTKAccessible	typeref:typename:std::vector<Sci::Position>	access:private
characters	..\\scintilla\\src\\CaseConvert.cxx	/^	std::vector<int> characters;$/;"	m	class:__anon1fb76d660111::CaseConverter	typeref:typename:std::vector<int>	file:	access:private
chars	..\\scintilla\\src\\PositionCache.h	/^	std::unique_ptr<char[]> chars;$/;"	m	class:Scintilla::LineLayout	typeref:typename:std::unique_ptr<char[]>	access:public
charsettype	..\\scintilla\\lua\\src\\lpcode.c	/^static Opcode charsettype (const byte *cs, int *c) {$/;"	f	typeref:typename:Opcode	file:	signature:(const byte * cs,int * c)
chdir	..\\scite\\src\\FilePath.cxx	/^static int chdir(const wchar_t *dirname) {$/;"	f	typeref:typename:int	file:	signature:(const wchar_t * dirname)
check	..\\scintilla\\lua\\src\\ldebug.c	/^#define check(/;"	d	file:	signature:(x)
check	..\\scintilla\\lua\\src\\lparser.c	/^static void check (LexState *ls, int c) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int c)
checkArgMode	..\\scintilla\\lua\\src\\ldebug.c	/^static int checkArgMode (const Proto *pt, int r, enum OpArgMask mode) {$/;"	f	typeref:typename:int	file:	signature:(const Proto * pt,int r,enum OpArgMask mode)
checkButtonWidth	..\\scite\\gtk\\Widget.h	/^	enum {  checkIconWidth = 16, checkButtonWidth = 16 + 3 * 2 + 1};$/;"	e	enum:WCheckDraw::__anon7c5ac8350103	access:public
checkDocumentation	..\\scite\\scripts\\CheckMentioned.py	/^def checkDocumentation():$/;"	f	access:public	signature:()
checkIconWidth	..\\scite\\gtk\\Widget.h	/^	enum {  checkIconWidth = 16, checkButtonWidth = 16 + 3 * 2 + 1};$/;"	e	enum:WCheckDraw::__anon7c5ac8350103	access:public
checkSizes	..\\scintilla\\lua\\src\\lgc.c	/^static void checkSizes (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
checkTypes	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def checkTypes(name, v):$/;"	f	access:public	signature:(name, v)
check_capture	..\\scintilla\\lua\\src\\lstrlib.c	/^static int check_capture (MatchState *ms, int l) {$/;"	f	typeref:typename:int	file:	signature:(MatchState * ms,int l)
check_condition	..\\scintilla\\lua\\src\\lparser.c	/^#define check_condition(/;"	d	file:	signature:(ls,c,msg)
check_conflict	..\\scintilla\\lua\\src\\lparser.c	/^static void check_conflict (LexState *ls, struct LHS_assign *lh, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,struct LHS_assign * lh,expdesc * v)
check_exp	..\\scintilla\\lua\\src\\llimits.h	/^#define check_exp(/;"	d	signature:(c,e)
check_match	..\\scintilla\\lua\\src\\lparser.c	/^static void check_match (LexState *ls, int what, int who, int where) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int what,int who,int where)
check_next	..\\scintilla\\lua\\src\\llex.c	/^static int check_next (LexState *ls, const char *set) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls,const char * set)
check_pane_object	..\\scite\\src\\LuaExtension.cxx	/^static ExtensionAPI::Pane check_pane_object(lua_State *L, int index) {$/;"	f	typeref:typename:ExtensionAPI::Pane	file:	signature:(lua_State * L,int index)
checkaux	..\\scintilla\\lua\\src\\lpcode.c	/^int checkaux (TTree *tree, int pred) {$/;"	f	typeref:typename:int	signature:(TTree * tree,int pred)
checkconsistency	..\\scintilla\\lua\\src\\lobject.h	/^#define checkconsistency(/;"	d	signature:(obj)
checkint	..\\scintilla\\lua\\src\\lauxlib.c	/^static int checkint (lua_State *L, int topop) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int topop)
checkjump	..\\scintilla\\lua\\src\\ldebug.c	/^#define checkjump(/;"	d	file:	signature:(pt,pc)
checkliveness	..\\scintilla\\lua\\src\\lobject.h	/^#define checkliveness(/;"	d	signature:(g,obj)
checkloops	..\\scintilla\\lua\\src\\lptree.c	/^static int checkloops (TTree *tree) {$/;"	f	typeref:typename:int	file:	signature:(TTree * tree)
checkname	..\\scintilla\\lua\\src\\lparser.c	/^static void checkname(LexState *ls, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * e)
checknext	..\\scintilla\\lua\\src\\lparser.c	/^static void checknext (LexState *ls, int c) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int c)
checkopenop	..\\scintilla\\lua\\src\\ldebug.c	/^#define checkopenop(/;"	d	file:	signature:(pt,pc)
checkreg	..\\scintilla\\lua\\src\\ldebug.c	/^#define checkreg(/;"	d	file:	signature:(pt,reg)
checkresults	..\\scintilla\\lua\\src\\lapi.c	/^#define checkresults(/;"	d	file:	signature:(L,na,nr)
checks	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum { checks = 5 };$/;"	e	enum:ReplaceStrip::__anon11b77dfa0303	file:	access:public
checks	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum { checks = 6 };$/;"	e	enum:FindStrip::__anon11b77dfa0203	file:	access:public
checkstacksizes	..\\scintilla\\lua\\src\\lgc.c	/^static void checkstacksizes (lua_State *L, StkId max) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,StkId max)
checkudata	..\\scite\\src\\LuaExtension.cxx	/^static void *checkudata(lua_State *L, int ud, const char *tname) {$/;"	f	typeref:typename:void *	file:	signature:(lua_State * L,int ud,const char * tname)
childHasFocus	..\\scite\\gtk\\Widget.h	/^	bool childHasFocus;$/;"	m	class:Strip	typeref:typename:bool	access:protected
chooseSingle	..\\scintilla\\src\\AutoComplete.h	/^	bool chooseSingle;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:bool	access:public
chrg	..\\scintilla\\include\\Scintilla.h	/^	struct Sci_CharacterRange chrg;$/;"	m	struct:Sci_RangeToFormat	typeref:struct:Sci_CharacterRange	access:public
chrg	..\\scintilla\\include\\Scintilla.h	/^	struct Sci_CharacterRange chrg;$/;"	m	struct:Sci_TextRange	typeref:struct:Sci_CharacterRange	access:public
chrg	..\\scintilla\\include\\Scintilla.h	/^	struct Sci_CharacterRange chrg;$/;"	m	struct:Sci_TextToFind	typeref:struct:Sci_CharacterRange	access:public
chrgText	..\\scintilla\\include\\Scintilla.h	/^	struct Sci_CharacterRange chrgText;$/;"	m	struct:Sci_TextToFind	typeref:struct:Sci_CharacterRange	access:public
chunk	..\\scintilla\\lua\\src\\lparser.c	/^static void chunk (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
ci	..\\scintilla\\lua\\src\\lstate.h	/^  CallInfo *ci;  \/* call info for current function *\/$/;"	m	struct:lua_State	typeref:typename:CallInfo *	access:public
ciCompare	..\\scintilla\\scripts\\HeaderCheck.py	/^def ciCompare(a,b):$/;"	f	access:public	signature:(a,b)
ciCompare	..\\scintilla\\scripts\\ScintillaData.py	/^def ciCompare(a,b):$/;"	f	access:public	signature:(a,b)
ciKey	..\\scintilla\\scripts\\HeaderCheck.py	/^def ciKey(a):$/;"	f	access:public	signature:(a)
ciKey	..\\scintilla\\scripts\\ScintillaData.py	/^def ciKey(a):$/;"	f	access:public	signature:(a)
ciLexerKey	..\\scintilla\\scripts\\LexGen.py	/^def ciLexerKey(a):$/;"	f	access:public	signature:(a)
ci_func	..\\scintilla\\lua\\src\\lstate.h	/^#define ci_func(/;"	d	signature:(ci)
cl	..\\scintilla\\lua\\src\\lstate.h	/^  union Closure cl;$/;"	m	union:GCObject	typeref:union:Closure	access:public
clamp	..\\scintilla\\src\\Position.h	/^inline constexpr T clamp(T val, T minVal, T maxVal) {$/;"	f	namespace:Sci	typeref:typename:T	signature:(T val,T minVal,T maxVal)
className	..\\scite\\win32\\SciTEWin.cxx	/^const TCHAR *SciTEWin::className = NULL;$/;"	m	class:SciTEWin	typeref:typename:const TCHAR *
className	..\\scite\\win32\\SciTEWin.h	/^	static const TCHAR *className;$/;"	m	class:SciTEWin	typeref:typename:const TCHAR *	access:protected
classNameInternal	..\\scite\\win32\\SciTEWin.cxx	/^const TCHAR *SciTEWin::classNameInternal = NULL;$/;"	m	class:SciTEWin	typeref:typename:const TCHAR *
classNameInternal	..\\scite\\win32\\SciTEWin.h	/^	static const TCHAR *classNameInternal;$/;"	m	class:SciTEWin	typeref:typename:const TCHAR *	access:protected
classend	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *classend (MatchState *ms, const char *p) {$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * p)
classifications	..\\scintilla\\lexlib\\SubStyles.h	/^	int classifications;$/;"	m	class:Scintilla::SubStyles	typeref:typename:int	access:private
classifiers	..\\scintilla\\lexlib\\SubStyles.h	/^	std::vector<WordClassifier> classifiers;$/;"	m	class:Scintilla::SubStyles	typeref:typename:std::vector<WordClassifier>	access:private
cleanEverything	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def cleanEverything(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
clearBeforeExecute	..\\scite\\src\\JobQueue.h	/^	bool clearBeforeExecute;$/;"	m	class:JobQueue	typeref:typename:bool	access:public
clear_table	..\\scite\\src\\LuaExtension.cxx	/^static void clear_table(lua_State *L, int tableIdx, bool clearMetatable = true) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int tableIdx,bool clearMetatable=true)
cleartable	..\\scintilla\\lua\\src\\lgc.c	/^static void cleartable (GCObject *l) {$/;"	f	typeref:typename:void	file:	signature:(GCObject * l)
clickNotified	..\\scintilla\\src\\Decoration.h	/^	bool clickNotified;$/;"	m	class:Scintilla::DecorationList	typeref:typename:bool	access:private
clickPlace	..\\scintilla\\src\\CallTip.h	/^	int clickPlace;$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:public
clip	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  PRectangle clip;$/;"	m	class:SurfaceImpl	typeref:typename:PRectangle	file:	access:private
clipboard	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  SelectionText clipboard; \/\/ current clipboard text$/;"	m	class:ScintillaCurses	typeref:typename:SelectionText	file:	access:private
clipboardCopyTargets	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static const GtkTargetEntry clipboardCopyTargets[] = {$/;"	v	typeref:typename:const GtkTargetEntry[]	file:
clipboardPasteTargets	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static const GtkTargetEntry clipboardPasteTargets[] = {$/;"	v	typeref:typename:const GtkTargetEntry[]	file:
clipsActive	..\\scintilla\\win32\\PlatWin.cxx	/^	int clipsActive;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:int	file:	access:private
clock	..\\scintilla\\src\\PositionCache.h	/^	unsigned int clock:16;$/;"	m	class:Scintilla::PositionCacheEntry	typeref:typename:unsigned int:16	access:private
clock	..\\scintilla\\src\\PositionCache.h	/^	unsigned int clock;$/;"	m	class:Scintilla::PositionCache	typeref:typename:unsigned int	access:private
clone_table	..\\scite\\src\\LuaExtension.cxx	/^static bool clone_table(lua_State *L, int srcTableIdx, bool copyMetatable = false) {$/;"	f	typeref:typename:bool	file:	signature:(lua_State * L,int srcTableIdx,bool copyMetatable=false)
closeAlways	..\\scite\\src\\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	e	enum:Searcher::CloseFind	access:public
closeFind	..\\scite\\src\\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	m	class:Searcher	typeref:enum:Searcher::CloseFind	access:public
closeOnMatch	..\\scite\\src\\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	e	enum:Searcher::CloseFind	access:public
closePrevent	..\\scite\\src\\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	e	enum:Searcher::CloseFind	access:public
closeSize	..\\scite\\win32\\Strips.h	/^	SIZE closeSize;$/;"	m	class:Strip	typeref:typename:SIZE	access:protected
closeState	..\\scite\\win32\\Strips.h	/^	enum stripCloseState { csNone, csOver, csClicked, csClickedOver } closeState;$/;"	m	class:Strip	typeref:enum:Strip::stripCloseState	access:protected
close_func	..\\scintilla\\lua\\src\\lparser.c	/^static void close_func (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
close_state	..\\scintilla\\lua\\src\\lstate.c	/^static void close_state (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
close_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * close_xpm[] = {$/;"	v	typeref:typename:const char * []
closeaddr	..\\scintilla\\lua\\src\\lpcap.c	/^#define closeaddr(/;"	d	file:	signature:(c)
closelistfield	..\\scintilla\\lua\\src\\lparser.c	/^static void closelistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,struct ConsControl * cc)
clvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define clvalue(/;"	d	signature:(o)
cmLower	..\\scintilla\\src\\Editor.h	/^	enum { cmSame, cmUpper, cmLower };$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450703	access:public
cmSame	..\\scintilla\\src\\Editor.h	/^	enum { cmSame, cmUpper, cmLower };$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450703	access:public
cmUpper	..\\scintilla\\src\\Editor.h	/^	enum { cmSame, cmUpper, cmLower };$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450703	access:public
cmd	..\\scite\\gtk\\SciTEGTK.cxx	/^	int cmd;$/;"	m	struct:CallbackData	typeref:typename:int	file:	access:public
cmd	..\\scite\\src\\SciTEBase.h	/^	int cmd;	\/\/ Menu item$/;"	m	struct:SearchOption	typeref:typename:int	access:public
cmd	..\\scite\\win32\\SciTEWinBar.cxx	/^	int cmd;$/;"	m	struct:BarButtonIn	typeref:typename:int	file:	access:public
cmdShow	..\\scite\\win32\\SciTEWin.h	/^	int cmdShow;$/;"	m	class:SciTEWin	typeref:typename:int	access:protected
cmdWorker	..\\scite\\win32\\SciTEWin.h	/^	CommandWorker cmdWorker;$/;"	m	class:SciTEWin	typeref:typename:CommandWorker	access:protected
cmpWords	..\\scintilla\\lexlib\\WordList.cxx	/^static bool cmpWords(const char *a, const char *b) {$/;"	f	typeref:typename:bool	file:	signature:(const char * a,const char * b)
cmpWords	..\\scintilla\\lexlib\\WordList.cxx	/^static int cmpWords(const void *a, const void *b) {$/;"	f	typeref:typename:int	file:	signature:(const void * a,const void * b)
co	..\\scintilla\\include\\Platform.h	/^	long co;$/;"	m	class:Scintilla::ColourDesired	typeref:typename:long	access:private
co_funcs	..\\scintilla\\lua\\src\\lbaselib.c	/^static const luaL_Reg co_funcs[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
code	..\\scintilla\\include\\Scintilla.h	/^	unsigned int code;$/;"	m	struct:Sci_NotifyHeader	typeref:typename:unsigned int	access:public
code	..\\scintilla\\lua\\src\\lobject.h	/^  Instruction *code;$/;"	m	struct:Proto	typeref:typename:Instruction *	access:public
code	..\\scintilla\\lua\\src\\lptree.h	/^  union Instruction *code;$/;"	m	struct:Pattern	typeref:union:Instruction *	access:public
code	..\\scintilla\\lua\\src\\lpvm.h	/^    byte code;$/;"	m	struct:Instruction::Inst	typeref:typename:byte	access:public
codePage	..\\scintilla\\cocoa\\PlatCocoa.h	/^  int codePage;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	access:private
codePage	..\\scintilla\\lexlib\\LexAccessor.h	/^	int codePage;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:int	access:private
codePage	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	int codePage;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	access:private
codePage	..\\scintilla\\src\\CallTip.h	/^	int codePage;$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:public
codePage	..\\scintilla\\src\\Editor.h	/^	int codePage;$/;"	m	class:Scintilla::SelectionText	typeref:typename:int	access:public
codePage	..\\scintilla\\win32\\PlatWin.cxx	/^	int codePage;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:int	file:	access:private
codePage	..\\scintilla\\win32\\PlatWin.cxx	/^	int codePage;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:int	file:	access:private
codePage	..\\scite\\src\\LuaExtension.cxx	/^	int codePage;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
codePage	..\\scite\\src\\SciTEBase.h	/^	int codePage;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
codePage	..\\scite\\src\\StyleWriter.h	/^	int codePage;$/;"	m	class:TextReader	typeref:typename:int	access:protected
codePage	..\\scite\\win32\\SciTEWin.cxx	/^		int codePage;$/;"	m	struct:CodePageFromName::Encoding	typeref:typename:int	file:	access:public
codePageText	..\\scintilla\\win32\\PlatWin.cxx	/^	int codePageText;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:int	file:	access:private
codeTransparent	..\\scintilla\\src\\XPM.h	/^	char codeTransparent;$/;"	m	class:Scintilla::XPM	typeref:typename:char	access:private
code_label	..\\scintilla\\lua\\src\\lcode.c	/^static int code_label (FuncState *fs, int A, int b, int jump) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,int A,int b,int jump)
codeand	..\\scintilla\\lua\\src\\lpcode.c	/^static void codeand (CompileState *compst, TTree *tree, int tt) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree,int tt)
codearith	..\\scintilla\\lua\\src\\lcode.c	/^static void codearith (FuncState *fs, OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,OpCode op,expdesc * e1,expdesc * e2)
codebehind	..\\scintilla\\lua\\src\\lpcode.c	/^static void codebehind (CompileState *compst, TTree *tree) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree)
codec	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	QTextCodec *codec;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:QTextCodec *	access:private
codec	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	QTextCodec *codec;$/;"	m	class:CaseFolderDBCS	typeref:typename:QTextCodec *	file:	access:private
codecName	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	const char *codecName;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:const char *	access:private
codecall	..\\scintilla\\lua\\src\\lpcode.c	/^static void codecall (CompileState *compst, TTree *call) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * call)
codecapture	..\\scintilla\\lua\\src\\lpcode.c	/^static void codecapture (CompileState *compst, TTree *tree, int tt,$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree,int tt,const Charset * fl)
codechar	..\\scintilla\\lua\\src\\lpcode.c	/^static void codechar (CompileState *compst, int c, int tt) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,int c,int tt)
codecharset	..\\scintilla\\lua\\src\\lpcode.c	/^static void codecharset (CompileState *compst, const byte *cs, int tt) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,const byte * cs,int tt)
codechoice	..\\scintilla\\lua\\src\\lpcode.c	/^static void codechoice (CompileState *compst, TTree *p1, TTree *p2, int opt,$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * p1,TTree * p2,int opt,const Charset * fl)
codecomp	..\\scintilla\\lua\\src\\lcode.c	/^static void codecomp (FuncState *fs, OpCode op, int cond, expdesc *e1,$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,OpCode op,int cond,expdesc * e1,expdesc * e2)
codegen	..\\scintilla\\lua\\src\\lpcode.c	/^static void codegen (CompileState *compst, TTree *tree, int opt, int tt,$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree,int opt,int tt,const Charset * fl)
codegrammar	..\\scintilla\\lua\\src\\lpcode.c	/^static void codegrammar (CompileState *compst, TTree *grammar) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * grammar)
codenot	..\\scintilla\\lua\\src\\lcode.c	/^static void codenot (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e)
codenot	..\\scintilla\\lua\\src\\lpcode.c	/^static void codenot (CompileState *compst, TTree *tree) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree)
coderep	..\\scintilla\\lua\\src\\lpcode.c	/^static void coderep (CompileState *compst, TTree *tree, int opt,$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree,int opt,const Charset * fl)
coderuntime	..\\scintilla\\lua\\src\\lpcode.c	/^static void coderuntime (CompileState *compst, TTree *tree, int tt) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,TTree * tree,int tt)
codeseq1	..\\scintilla\\lua\\src\\lpcode.c	/^static int codeseq1 (CompileState *compst, TTree *p1, TTree *p2,$/;"	f	typeref:typename:int	file:	signature:(CompileState * compst,TTree * p1,TTree * p2,int tt,const Charset * fl)
codesize	..\\scintilla\\lua\\src\\lptree.h	/^  int codesize;$/;"	m	struct:Pattern	typeref:typename:int	access:public
codestring	..\\scintilla\\lua\\src\\lparser.c	/^static void codestring (LexState *ls, expdesc *e, TString *s) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * e,TString * s)
codetestset	..\\scintilla\\lua\\src\\lpcode.c	/^static int codetestset (CompileState *compst, Charset *cs, int e) {$/;"	f	typeref:typename:int	file:	signature:(CompileState * compst,Charset * cs,int e)
codingCookie	..\\scite\\src\\Cookie.cxx	/^static const char codingCookie[] = "coding";$/;"	v	typeref:typename:const char[]	file:
collectargs	..\\scintilla\\lua\\src\\lua.c	/^static int collectargs (char **argv, int *pi, int *pv, int *pe) {$/;"	f	typeref:typename:int	file:	signature:(char ** argv,int * pi,int * pv,int * pe)
collectingUndo	..\\scintilla\\src\\CellBuffer.h	/^	bool collectingUndo;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:bool	access:private
collectrules	..\\scintilla\\lua\\src\\lptree.c	/^static int collectrules (lua_State *L, int arg, int *totalsize) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int arg,int * totalsize)
collectvalidlines	..\\scintilla\\lua\\src\\ldebug.c	/^static void collectvalidlines (lua_State *L, Closure *f) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,Closure * f)
colour	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired colour;$/;"	m	struct:Scintilla::EdgeProperties	typeref:typename:ColourDesired	access:public
colour	..\\scite\\src\\StyleDefinition.h	/^	long colour;$/;"	m	struct:IndicatorDefinition	typeref:typename:long	access:public
colourBG	..\\scintilla\\gtk\\PlatGTK.cxx	/^	long colourBG;$/;"	m	class:ListBoxX	typeref:typename:long	file:	access:private
colourBG	..\\scintilla\\src\\CallTip.h	/^	ColourDesired colourBG;$/;"	m	class:Scintilla::CallTip	typeref:typename:ColourDesired	access:public
colourBG	..\\scintilla\\win32\\PlatWin.cxx	/^	COLORREF colourBG;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:COLORREF	file:	access:private
colourCodeTable	..\\scintilla\\src\\XPM.h	/^	ColourDesired colourCodeTable[256];$/;"	m	class:Scintilla::XPM	typeref:typename:ColourDesired[256]	access:private
colourFG	..\\scintilla\\gtk\\PlatGTK.cxx	/^	long colourFG;$/;"	m	class:ListBoxX	typeref:typename:long	file:	access:private
colourFG	..\\scintilla\\win32\\PlatWin.cxx	/^	COLORREF colourFG;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:COLORREF	file:	access:private
colourLight	..\\scintilla\\src\\CallTip.h	/^	ColourDesired colourLight;$/;"	m	class:Scintilla::CallTip	typeref:typename:ColourDesired	access:public
colourMode	..\\scintilla\\src\\EditView.h	/^	int colourMode;$/;"	m	struct:Scintilla::PrintParameters	typeref:typename:int	access:public
colourNoMatch	..\\scite\\win32\\Strips.cxx	/^static const COLORREF colourNoMatch = RGB(0xff,0x66,0x66);$/;"	v	typeref:typename:const COLORREF	file:
colourSel	..\\scintilla\\src\\CallTip.h	/^	ColourDesired colourSel;$/;"	m	class:Scintilla::CallTip	typeref:typename:ColourDesired	access:public
colourShade	..\\scintilla\\src\\CallTip.h	/^	ColourDesired colourShade;$/;"	m	class:Scintilla::CallTip	typeref:typename:ColourDesired	access:public
colourUnSel	..\\scintilla\\src\\CallTip.h	/^	ColourDesired colourUnSel;$/;"	m	class:Scintilla::CallTip	typeref:typename:ColourDesired	access:public
column	..\\scintilla\\src\\ViewStyle.h	/^	int column;$/;"	m	struct:Scintilla::EdgeProperties	typeref:typename:int	access:public
columns	..\\scite\\gtk\\Widget.h	/^	int columns;$/;"	m	class:WTable	typeref:typename:int	access:private
columns	..\\scite\\src\\StripDefinition.h	/^	unsigned int columns;$/;"	m	class:StripDefinition	typeref:typename:unsigned int	access:public
combine	..\\scintilla\\lua\\src\\luac.c	/^static const Proto* combine(lua_State* L, int n)$/;"	f	typeref:typename:const Proto *	file:	signature:(lua_State * L,int n)
comboAbbrev	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry comboAbbrev;$/;"	m	class:DialogAbbrev	typeref:typename:WComboBoxEntry	file:	access:public
comboDir	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry comboDir;$/;"	m	class:DialogFindInFiles	typeref:typename:WComboBoxEntry	file:	access:public
command	..\\scintilla\\include\\ScintillaWidget.h	/^	void (* command) (ScintillaObject *sci, int cmd, GtkWidget *window);$/;"	m	struct:_ScintillaClass	typeref:typename:void (*)(ScintillaObject * sci,int cmd,GtkWidget * window)	access:public
command	..\\scite\\src\\JobQueue.h	/^	std::string command;$/;"	m	class:Job	typeref:typename:std::string	access:public
commandCurrent	..\\scite\\src\\JobQueue.h	/^	int commandCurrent;$/;"	m	class:JobQueue	typeref:typename:int	access:public
commandMax	..\\scite\\src\\JobQueue.h	/^	enum { commandMax = 2 };$/;"	e	enum:JobQueue::__anond39dc6f30103	access:public
commandTime	..\\scite\\gtk\\SciTEGTK.cxx	/^	GUI::ElapsedTime commandTime;$/;"	m	class:SciTEGTK	typeref:typename:GUI::ElapsedTime	file:	access:protected
commandTime	..\\scite\\win32\\SciTEWin.h	/^	GUI::ElapsedTime commandTime;$/;"	m	class:CommandWorker	typeref:typename:GUI::ElapsedTime	access:public
compile	..\\scintilla\\lua\\src\\lpcode.c	/^Instruction *compile (lua_State *L, Pattern *p) {$/;"	f	typeref:typename:Instruction *	signature:(lua_State * L,Pattern * p)
compile_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * compile_xpm[] = {$/;"	v	typeref:typename:const char * []
completed	..\\scite\\src\\Worker.h	/^	volatile bool completed;$/;"	m	struct:Worker	typeref:typename:volatile bool	access:private
complexCaseConversions	..\\scintilla\\src\\CaseConvert.cxx	/^const char *complexCaseConversions =$/;"	v	namespace:__anon1fb76d660111	typeref:typename:const char *
computesizes	..\\scintilla\\lua\\src\\ltable.c	/^static int computesizes (int nums[], int *narray) {$/;"	f	typeref:typename:int	file:	signature:(int nums[],int * narray)
concattable	..\\scintilla\\lua\\src\\lptree.c	/^static int concattable (lua_State *L, int idx1, int idx2) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int idx1,int idx2)
cond	..\\scintilla\\lua\\src\\lparser.c	/^static int cond (LexState *ls) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls)
condhardstacktests	..\\scintilla\\lua\\src\\llimits.h	/^#define condhardstacktests(/;"	d	signature:(x)
condjump	..\\scintilla\\lua\\src\\lcode.c	/^static int condjump (FuncState *fs, OpCode op, int A, int B, int C) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,OpCode op,int A,int B,int C)
configFileVisibilityString	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char configFileVisibilityString[] = ".";$/;"	v	typeref:typename:const GUI::gui_char[]
configFileVisibilityString	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char configFileVisibilityString[] = GUI_TEXT("");$/;"	v	typeref:typename:const GUI::gui_char[]
constantCount	..\\scite\\src\\IFaceTable.cxx	/^const int IFaceTable::constantCount = ifaceConstantCount;$/;"	m	class:IFaceTable	typeref:typename:const int
constantCount	..\\scite\\src\\IFaceTable.h	/^	static const int constantCount;$/;"	m	class:IFaceTable	typeref:typename:const int	access:public
constants	..\\scite\\src\\IFaceTable.cxx	/^const IFaceConstant * const IFaceTable::constants = ifaceConstants;$/;"	m	class:IFaceTable	typeref:typename:const IFaceConstant * const
constants	..\\scite\\src\\IFaceTable.h	/^	static const IFaceConstant * const constants;$/;"	m	class:IFaceTable	typeref:typename:const IFaceConstant * const	access:public
constfolding	..\\scintilla\\lua\\src\\lcode.c	/^static int constfolding (OpCode op, expdesc *e1, expdesc *e2) {$/;"	f	typeref:typename:int	file:	signature:(OpCode op,expdesc * e1,expdesc * e2)
constructor	..\\scintilla\\lua\\src\\lparser.c	/^static void constructor (LexState *ls, expdesc *t) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * t)
cont	..\\scintilla\\include\\ScintillaWidget.h	/^	GtkContainer cont;$/;"	m	struct:_ScintillaObject	typeref:typename:GtkContainer	access:public
containerAction	..\\scintilla\\src\\CellBuffer.h	/^enum actionType { insertAction, removeAction, startAction, containerAction };$/;"	e	enum:Scintilla::actionType	access:public
contains	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^	bool contains(const char *testVar) const {$/;"	f	struct:VarChain	typeref:typename:bool	file:	access:public	signature:(const char * testVar) const
contains	..\\scite\\src\\PropSetFile.cxx	/^	bool contains(const char *testVar) const {$/;"	f	struct:VarChain	typeref:typename:bool	file:	access:public	signature:(const char * testVar) const
containsCaret	..\\scintilla\\src\\PositionCache.h	/^	bool containsCaret;$/;"	m	class:Scintilla::LineLayout	typeref:typename:bool	access:public
contents	..\\scite\\scripts\\tags2api.py	/^		contents = fc.grabFile(fileName)$/;"	v	access:public
contents	..\\scite\\win32\\SciTEWin.h	/^	ContentWin contents;$/;"	m	class:SciTEWin	typeref:typename:ContentWin	access:protected
context	..\\scintilla\\gtk\\PlatGTK.cxx	/^	cairo_t *context;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:cairo_t *	file:	access:private
contextMenuEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::contextMenuEvent(QContextMenuEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QContextMenuEvent * event)
contiguousRanges	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^def contiguousRanges(l, diff):$/;"	f	access:public	signature:(l, diff)
contributors	..\\scite\\src\\Credits.cxx	/^static const char *contributors[] = {$/;"	v	typeref:typename:const char * []	file:
controlCharSymbol	..\\scintilla\\src\\ViewStyle.h	/^	int controlCharSymbol;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
controlCharWidth	..\\scintilla\\src\\ViewStyle.h	/^	XYPOSITION controlCharWidth;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:XYPOSITION	access:public
controlType	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	m	class:UserControl	typeref:enum:UserControl::UCControlType	access:public
controls	..\\scite\\src\\StripDefinition.h	/^	std::vector<std::vector<UserControl> > controls;$/;"	m	class:StripDefinition	typeref:typename:std::vector<std::vector<UserControl>>	access:public
conv	..\\scintilla\\gtk\\PlatGTK.cxx	/^	Converter conv;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:Converter	file:	access:private
conversion	..\\scintilla\\src\\CaseConvert.cxx	/^		ConversionString conversion;$/;"	m	struct:__anon1fb76d660111::CaseConverter::CharacterConversion	typeref:typename:ConversionString	file:	access:public
conversion	..\\scintilla\\src\\CaseConvert.cxx	/^		char conversion[maxConversionLength+1];$/;"	m	struct:__anon1fb76d660111::CaseConverter::ConversionString	typeref:typename:char[]	file:	access:public
conversionSets	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^def conversionSets():$/;"	f	access:public	signature:()
conversions	..\\scintilla\\src\\CaseConvert.cxx	/^	std::vector<ConversionString> conversions;$/;"	m	class:__anon1fb76d660111::CaseConverter	typeref:typename:std::vector<ConversionString>	file:	access:private
convert	..\\scite\\src\\Utf8_16.cxx	/^size_t Utf8_16_Read::convert(char* buf, size_t len) {$/;"	f	class:Utf8_16_Read	typeref:typename:size_t	signature:(char * buf,size_t len)
convertFromMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	QList<QByteArray> convertFromMime(const QString & \/* mime *\/, QVariant data, QString \/* flav/;"	f	class:ScintillaRectangularMime	typeref:typename:QList<QByteArray>	file:	access:public	signature:(const QString &,QVariant data,QString)
convertIFaceTypeToC	..\\scite\\scripts\\CheckMentioned.py	/^def convertIFaceTypeToC(t):$/;"	f	access:public	signature:(t)
convertPastes	..\\scintilla\\src\\Editor.h	/^	bool convertPastes;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
convertStringResult	..\\scite\\scripts\\IFaceTableGen.py	/^def convertStringResult(s):$/;"	f	access:public	signature:(s)
convertToMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	QVariant convertToMime(const QString & \/* mime *\/, QList<QByteArray> data, QString \/* flav */;"	f	class:ScintillaRectangularMime	typeref:typename:QVariant	file:	access:public	signature:(const QString &,QList<QByteArray> data,QString)
converter	..\\scintilla\\src\\CaseFolder.h	/^	ICaseConverter *converter;$/;"	m	class:Scintilla::CaseFolderUnicode	typeref:typename:ICaseConverter *	access:private
convertorName	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	QString convertorName() {$/;"	f	class:ScintillaRectangularMime	typeref:typename:QString	file:	access:public	signature:()
copyScintillaConstants	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def copyScintillaConstants(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
copy_	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void *copy_(void *src) { return src; }$/;"	f	typeref:typename:void *	file:	signature:(void * src)
copyktable	..\\scintilla\\lua\\src\\lptree.c	/^static void copyktable (lua_State *L, int idx) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int idx)
correctassociativity	..\\scintilla\\lua\\src\\lptree.c	/^static void correctassociativity (TTree *tree) {$/;"	f	typeref:typename:void	file:	signature:(TTree * tree)
correctcalls	..\\scintilla\\lua\\src\\lpcode.c	/^static void correctcalls (CompileState *compst, int *positions,$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,int * positions,int from,int to)
correctkeys	..\\scintilla\\lua\\src\\lptree.c	/^static void correctkeys (TTree *tree, int n) {$/;"	f	typeref:typename:void	file:	signature:(TTree * tree,int n)
correctstack	..\\scintilla\\lua\\src\\ldo.c	/^static void correctstack (lua_State *L, TValue *oldstack) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,TValue * oldstack)
costatus	..\\scintilla\\lua\\src\\lbaselib.c	/^static int costatus (lua_State *L, lua_State *co) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,lua_State * co)
countint	..\\scintilla\\lua\\src\\ltable.c	/^static int countint (const TValue *key, int *nums) {$/;"	f	typeref:typename:int	file:	signature:(const TValue * key,int * nums)
cp	..\\scintilla\\lua\\src\\lpcap.c	/^    Capture *cp;  \/* if not a string, respective capture *\/$/;"	m	union:StrAux::__anond6d1f967010a	typeref:typename:Capture *	file:	access:public
cp	..\\scintilla\\win32\\ScintillaWin.cxx	/^	UINT cp;$/;"	m	class:CaseFolderDBCS	typeref:typename:UINT	file:	access:private
cpMax	..\\scintilla\\include\\Scintilla.h	/^	Sci_PositionCR cpMax;$/;"	m	struct:Sci_CharacterRange	typeref:typename:Sci_PositionCR	access:public
cpMin	..\\scintilla\\include\\Scintilla.h	/^	Sci_PositionCR cpMin;$/;"	m	struct:Sci_CharacterRange	typeref:typename:Sci_PositionCR	access:public
cppAlias	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def cppAlias(s):$/;"	f	access:public	signature:(s)
crPlatformLock	..\\scintilla\\win32\\PlatWin.cxx	/^static CRITICAL_SECTION crPlatformLock;$/;"	v	typeref:typename:CRITICAL_SECTION	file:
createcat	..\\scintilla\\lua\\src\\lptree.c	/^static void createcat (lua_State *L, const char *catname, int (catf) (int)) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * catname,int (catf)(int))
createdGC	..\\scintilla\\gtk\\PlatGTK.cxx	/^	bool createdGC;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:bool	file:	access:private
createmeta	..\\scintilla\\lua\\src\\liolib.c	/^static void createmeta (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
createmetatable	..\\scintilla\\lua\\src\\lstrlib.c	/^static void createmetatable (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
createstdfile	..\\scintilla\\lua\\src\\liolib.c	/^static void createstdfile (lua_State *L, FILE *f, int k, const char *fname) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,FILE * f,int k,const char * fname)
cs	..\\scintilla\\lua\\src\\lptypes.h	/^  byte cs[CHARSETSIZE];$/;"	m	struct:Charset	typeref:typename:byte[]	access:public
cs	..\\scintilla\\src\\EditModel.h	/^	ContractionState cs;$/;"	m	class:Scintilla::EditModel	typeref:typename:ContractionState	access:public
cs	..\\scite\\win32\\WinMutex.cxx	/^	CRITICAL_SECTION cs;$/;"	m	class:WinMutex	typeref:typename:CRITICAL_SECTION	file:	access:private
csClicked	..\\scite\\win32\\Strips.h	/^	enum stripCloseState { csNone, csOver, csClicked, csClickedOver } closeState;$/;"	e	enum:Strip::stripCloseState	access:public
csClickedOver	..\\scite\\win32\\Strips.h	/^	enum stripCloseState { csNone, csOver, csClicked, csClickedOver } closeState;$/;"	e	enum:Strip::stripCloseState	access:public
csNone	..\\scite\\win32\\Strips.h	/^	enum stripCloseState { csNone, csOver, csClicked, csClickedOver } closeState;$/;"	e	enum:Strip::stripCloseState	access:public
csOver	..\\scite\\win32\\Strips.h	/^	enum stripCloseState { csNone, csOver, csClicked, csClickedOver } closeState;$/;"	e	enum:Strip::stripCloseState	access:public
cs_complement	..\\scintilla\\lua\\src\\lpcode.c	/^static void cs_complement (Charset *cs) {$/;"	f	typeref:typename:void	file:	signature:(Charset * cs)
cs_disjoint	..\\scintilla\\lua\\src\\lpcode.c	/^static int cs_disjoint (const Charset *cs1, const Charset *cs2) {$/;"	f	typeref:typename:int	file:	signature:(const Charset * cs1,const Charset * cs2)
cs_equal	..\\scintilla\\lua\\src\\lpcode.c	/^static int cs_equal (const byte *cs1, const byte *cs2) {$/;"	f	typeref:typename:int	file:	signature:(const byte * cs1,const byte * cs2)
cssProvider	..\\scintilla\\gtk\\PlatGTK.cxx	/^	GtkCssProvider *cssProvider;$/;"	m	class:ListBoxX	typeref:typename:GtkCssProvider *	file:	access:private
ct	..\\scintilla\\src\\ScintillaBase.h	/^	CallTip ct;$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:CallTip	access:protected
ctrlCharPadding	..\\scintilla\\src\\ViewStyle.h	/^	int ctrlCharPadding; \/\/ the padding around control character text blobs$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
ctrlID	..\\scintilla\\src\\Editor.h	/^	int ctrlID;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:public
ctrlID	..\\scintilla\\win32\\PlatWin.cxx	/^	int ctrlID;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:int	file:	access:private
curBufferIndex	..\\scite\\src\\LuaExtension.cxx	/^static int curBufferIndex = -1;$/;"	v	typeref:typename:int	file:
curDef	..\\scite\\scripts\\tags2api.py	/^						curDef = curDef + contents[curLineNo]$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^						curDef = curDef.rstrip("0 ")$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^						curDef = curDef.rstrip("= ")$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^						curDef = curDef[:startImpl] + curDef[endImpl+1:]$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = " ".join(curDef.split())$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = contents[curLineNo]$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = curDef.replace(" (", '(').replace("( ", '(')$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = curDef.replace(";", '')$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = curDef.rstrip()$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = curDef.strip()$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^					curDef = curDef[curDef.find(entityName):]$/;"	v	access:public
curDef	..\\scite\\scripts\\tags2api.py	/^				curDef = contents[curLineNo]$/;"	v	access:public
curIndex	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int curIndex;$/;"	m	class:ClusterIterator	typeref:typename:int	file:	access:public
curLineNo	..\\scite\\scripts\\tags2api.py	/^						curLineNo = curLineNo + 1$/;"	v	access:public
curLineNo	..\\scite\\scripts\\tags2api.py	/^		curLineNo = int(lineNo[:-2]) - 1	# -1 because line numbers in tags file start at 1.$/;"	v	access:public
currIsNewline	..\\scintilla\\lua\\src\\llex.c	/^#define currIsNewline(/;"	d	file:	signature:(ls)
curr_func	..\\scintilla\\lua\\src\\lstate.h	/^#define curr_func(/;"	d	signature:(L)
current	..\\scintilla\\lua\\src\\llex.h	/^  int current;  \/* current character (charint) *\/$/;"	m	struct:LexState	typeref:typename:int	access:public
current	..\\scintilla\\src\\Decoration.h	/^	Decoration *current;	\/\/ Cached so FillRange doesn't have to search for each call.$/;"	m	class:Scintilla::DecorationList	typeref:typename:Decoration *	access:private
current	..\\scite\\src\\SciTEBase.h	/^	int current;$/;"	m	class:BufferList	typeref:typename:int	access:protected
currentAction	..\\scintilla\\src\\CellBuffer.h	/^	int currentAction;$/;"	m	class:Scintilla::UndoHistory	typeref:typename:int	access:private
currentCallTip	..\\scite\\src\\SciTEBase.h	/^	int currentCallTip;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
currentCallTipWord	..\\scite\\src\\SciTEBase.h	/^	std::string currentCallTipWord;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
currentIndicator	..\\scintilla\\src\\Decoration.h	/^	int currentIndicator;$/;"	m	class:Scintilla::DecorationList	typeref:typename:int	access:private
currentLine	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position currentLine;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:public
currentMacro	..\\scite\\src\\SciTEBase.h	/^	std::string currentMacro;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
currentPos	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_PositionU currentPos;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_PositionU	access:public
currentPos	..\\scite\\src\\LuaExtension.cxx	/^	unsigned int currentPos;$/;"	m	struct:StylingContext	typeref:typename:unsigned int	file:	access:public
currentPosLastRelative	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_PositionU currentPosLastRelative;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_PositionU	access:private
currentValue	..\\scintilla\\src\\Decoration.h	/^	int currentValue;$/;"	m	class:Scintilla::DecorationList	typeref:typename:int	access:private
currentWordHighlight	..\\scite\\src\\SciTEBase.h	/^	CurrentWordHighlight currentWordHighlight;$/;"	m	class:SciTEBase	typeref:typename:CurrentWordHighlight	access:protected
currentline	..\\scintilla\\lua\\src\\ldebug.c	/^static int currentline (lua_State *L, CallInfo *ci) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,CallInfo * ci)
currentline	..\\scintilla\\lua\\src\\lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
currentline	..\\scite\\lua\\include\\lua.h	/^  int currentline;	\/* (l) *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
currentpc	..\\scintilla\\lua\\src\\ldebug.c	/^static int currentpc (lua_State *L, CallInfo *ci) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,CallInfo * ci)
currentwhite	..\\scintilla\\lua\\src\\lstate.h	/^  lu_byte currentwhite;$/;"	m	struct:global_State	typeref:typename:lu_byte	access:public
cursor	..\\scintilla\\src\\ViewStyle.h	/^	int cursor;$/;"	m	class:Scintilla::MarginStyle	typeref:typename:int	access:public
cursor	..\\scite\\src\\LuaExtension.cxx	/^	char cursor[3][8];$/;"	m	struct:StylingContext	typeref:typename:char[3][8]	file:	access:public
cursorArrow	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorHand	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorHoriz	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorInvalid	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorLast	..\\scintilla\\include\\Platform.h	/^	Cursor cursorLast;$/;"	m	class:Scintilla::Window	typeref:typename:Cursor	access:private
cursorMode	..\\scintilla\\src\\Editor.h	/^	int cursorMode;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
cursorPos	..\\scite\\src\\LuaExtension.cxx	/^	int cursorPos;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
cursorReverseArrow	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorText	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorUp	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorVert	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursorWait	..\\scintilla\\include\\Platform.h	/^	enum Cursor { cursorInvalid, cursorText, cursorArrow, cursorUp, cursorWait, cursorHoriz, cursor/;"	e	enum:Scintilla::Window::Cursor	access:public
cursor_pos	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	gint cursor_pos;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:gint	file:	access:public
customClearTypeRenderingParams	..\\scintilla\\win32\\PlatWin.cxx	/^IDWriteRenderingParams *customClearTypeRenderingParams = 0;$/;"	v	namespace:Scintilla	typeref:typename:IDWriteRenderingParams *
customDraw	..\\scintilla\\src\\LineMarker.h	/^	DrawLineMarkerFn customDraw;$/;"	m	class:Scintilla::LineMarker	typeref:typename:DrawLineMarkerFn	access:public
customDrawTabArrow	..\\scintilla\\src\\EditView.h	/^	DrawTabArrowFn customDrawTabArrow;$/;"	m	class:Scintilla::EditView	typeref:typename:DrawTabArrowFn	access:public
customDrawWrapMarker	..\\scintilla\\src\\EditView.h	/^	DrawWrapMarkerFn customDrawWrapMarker;$/;"	m	class:Scintilla::EditView	typeref:typename:DrawWrapMarkerFn	access:public
customDrawWrapMarker	..\\scintilla\\src\\MarginView.h	/^	DrawWrapMarkerFn customDrawWrapMarker;$/;"	m	class:Scintilla::MarginView	typeref:typename:DrawWrapMarkerFn	access:public
data	..\\scintilla\\lua\\src\\ldump.c	/^ void* data;$/;"	m	struct:__anonbc205f790108	typeref:typename:void *	file:	access:public
data	..\\scintilla\\lua\\src\\lzio.h	/^  void* data;			\/* additional data *\/$/;"	m	struct:Zio	typeref:typename:void *	access:public
data	..\\scintilla\\src\\CellBuffer.h	/^	std::unique_ptr<char[]> data;$/;"	m	class:Scintilla::Action	typeref:typename:std::unique_ptr<char[]>	access:public
data	..\\scintilla\\win32\\PlatWin.cxx	/^	std::vector<ListItemData> data;$/;"	m	class:Scintilla::LineToItem	typeref:typename:std::vector<ListItemData>	file:	access:private
data	..\\scite\\src\\Containers.h	/^		TYPE data;$/;"	m	struct:TList::Node	typeref:typename:TYPE	access:public
db_debug	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_debug (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_errorfb	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_errorfb (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_getfenv	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_getfenv (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_gethook	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_gethook (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_getinfo	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_getinfo (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_getlocal	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_getlocal (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_getmetatable	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_getmetatable (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_getregistry	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_getregistry (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_getupvalue	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_getupvalue (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_setfenv	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_setfenv (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_sethook	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_sethook (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_setlocal	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_setlocal (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_setmetatable	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_setmetatable (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
db_setupvalue	..\\scintilla\\lua\\src\\ldblib.c	/^static int db_setupvalue (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
dbcs	..\\scintilla\\gtk\\PlatGTK.cxx	/^enum encodingType { singleByte, UTF8, dbcs};$/;"	e	enum:encodingType	file:	access:public
dbcsCodePage	..\\scintilla\\src\\Document.h	/^	int dbcsCodePage;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:public
dblib	..\\scintilla\\lua\\src\\ldblib.c	/^static const luaL_Reg dblib[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
ddDragging	..\\scintilla\\src\\Editor.h	/^	enum { ddNone, ddInitial, ddDragging } inDragDrop;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450503	access:public
ddInitial	..\\scintilla\\src\\Editor.h	/^	enum { ddNone, ddInitial, ddDragging } inDragDrop;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450503	access:public
ddNone	..\\scintilla\\src\\Editor.h	/^	enum { ddNone, ddInitial, ddDragging } inDragDrop;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450503	access:public
decodeEvent	..\\scintilla\\scripts\\Face.py	/^def decodeEvent(featureVal):$/;"	f	access:public	signature:(featureVal)
decodeFunction	..\\scintilla\\scripts\\Face.py	/^def decodeFunction(featureVal):$/;"	f	access:public	signature:(featureVal)
decodeParam	..\\scintilla\\scripts\\Face.py	/^def decodeParam(p):$/;"	f	access:public	signature:(p)
decorationList	..\\scintilla\\src\\Decoration.h	/^	std::vector<std::unique_ptr<Decoration>> decorationList;$/;"	m	class:Scintilla::DecorationList	typeref:typename:std::vector<std::unique_ptr<Decoration>>	access:private
decorationView	..\\scintilla\\src\\Decoration.h	/^	std::vector<const Decoration*> decorationView;	\/\/ Read-only view of decorationList$/;"	m	class:Scintilla::DecorationList	typeref:typename:std::vector<const Decoration * >	access:private
decoration_fill_range	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::decoration_fill_range(int position, int value, int fillLength) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int position,int value,int fillLength)
decorations	..\\scintilla\\src\\Document.h	/^	DecorationList decorations;$/;"	m	class:Scintilla::Document	typeref:typename:DecorationList	access:public
decorations_end	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::decorations_end(int indic, int position) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int indic,int position)
decorations_start	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::decorations_start(int indic, int position) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int indic,int position)
decorations_value_at	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::decorations_value_at(int indic, int position) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int indic,int position)
decpoint	..\\scintilla\\lua\\src\\llex.h	/^  char decpoint;  \/* locale decimal point *\/$/;"	m	struct:LexState	typeref:typename:char	access:public
defaultRenderingParams	..\\scintilla\\win32\\PlatWin.cxx	/^IDWriteRenderingParams *defaultRenderingParams = 0;$/;"	v	namespace:Scintilla	typeref:typename:IDWriteRenderingParams *
defaultSessionFileName	..\\scite\\src\\SciTEBuffers.cxx	/^const GUI::gui_char defaultSessionFileName[] = GUI_TEXT("SciTE.session");$/;"	v	typeref:typename:const GUI::gui_char[]
defineTexStyle	..\\scite\\src\\ExportTEX.cxx	/^static void defineTexStyle(StyleDefinition &style, FILE* fp, int istyle) {$/;"	f	typeref:typename:void	file:	signature:(StyleDefinition & style,FILE * fp,int istyle)
delay	..\\scite\\src\\SciTEBase.h	/^		delay,              \/\/ Delay before to highlight the word at the caret.$/;"	e	enum:CurrentWordHighlight::__anonf95580a60603	access:public
delayAlreadyElapsed	..\\scite\\src\\SciTEBase.h	/^		delayAlreadyElapsed \/\/ Delay has already elapsed, word at the caret and occurrences are (or /;"	e	enum:CurrentWordHighlight::__anonf95580a60603	access:public
delayBeforeAutoSave	..\\scite\\src\\SciTEBase.h	/^	int delayBeforeAutoSave;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
delayJustEnded	..\\scite\\src\\SciTEBase.h	/^		delayJustEnded,     \/\/ Delay has just ended. This state allows to ignore next HighlightCurre/;"	e	enum:CurrentWordHighlight::__anonf95580a60603	access:public
delegate	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  id<ScintillaNotificationProtocol> delegate;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:id<ScintillaNotificationProtocol>	access:private
delegate	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  IListBoxDelegate *delegate;$/;"	m	class:ListBoxImpl	typeref:typename:IListBoxDelegate *	file:	access:public
delegate	..\\scintilla\\gtk\\PlatGTK.cxx	/^	IListBoxDelegate *delegate;$/;"	m	class:ListBoxX	typeref:typename:IListBoxDelegate *	file:	access:public
delegate	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	IListBoxDelegate *delegate;$/;"	m	class:Scintilla::ListWidget	typeref:typename:IListBoxDelegate *	file:	access:private
delegate	..\\scintilla\\win32\\PlatWin.cxx	/^	IListBoxDelegate *delegate;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:IListBoxDelegate *	file:	access:private
delete_chars	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::delete_chars(int pos, int len) {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:(int pos,int len)
delete_undo_history	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::delete_undo_history() {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:()
deletionLengthChar	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	int deletionLengthChar;$/;"	m	class:Scintilla::ScintillaGTKAccessible	typeref:typename:int	access:private
depunctuate	..\\scite\\scripts\\CheckMentioned.py	/^def depunctuate(s):$/;"	f	access:public	signature:(s)
depunctuate	..\\scite\\scripts\\CheckPropsDoc.py	/^def depunctuate(s):$/;"	f	access:public	signature:(s)
descent	..\\scintilla\\src\\Style.h	/^	unsigned int descent;$/;"	m	struct:Scintilla::FontMeasurements	typeref:typename:unsigned int	access:public
description	..\\scintilla\\lexlib\\LexAccessor.h	/^	const char *description;$/;"	m	struct:Scintilla::LexicalClass	typeref:typename:const char *	access:public
description	..\\scintilla\\lexlib\\OptionSet.h	/^		std::string description;$/;"	m	struct:Scintilla::OptionSet::Option	typeref:typename:std::string	access:public
desiredVisibleRows	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int desiredVisibleRows;$/;"	m	class:ListBoxX	typeref:typename:int	file:	access:private
desiredVisibleRows	..\\scintilla\\win32\\PlatWin.cxx	/^	int desiredVisibleRows;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:int	file:	access:private
destroyDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^static void destroyDialog(GtkWidget *, gpointer *window) {$/;"	f	typeref:typename:void	file:	signature:(GtkWidget *,gpointer * window)
determineEncoding	..\\scite\\src\\Utf8_16.cxx	/^int Utf8_16_Read::determineEncoding() {$/;"	f	class:Utf8_16_Read	typeref:typename:int	signature:()
device	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	QPaintDevice *device;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:QPaintDevice *	access:private
deviceOwned	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	bool deviceOwned;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:bool	access:private
diagnosticStyleStart	..\\scite\\src\\SciTEBase.h	/^	int diagnosticStyleStart;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
diagnosticStyles	..\\scite\\src\\SciTEBase.h	/^	enum { diagnosticStyles=4};$/;"	e	enum:SciTEBase::__anonf95580a60f03	access:public
dialogsOnScreen	..\\scite\\src\\SciTEBase.h	/^	int dialogsOnScreen;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
difference_type	..\\scintilla\\src\\Document.cxx	/^	typedef ptrdiff_t difference_type;$/;"	t	class:__anon1ef09aa80111::ByteIterator	typeref:typename:ptrdiff_t	file:	access:public
difference_type	..\\scintilla\\src\\Document.cxx	/^	typedef ptrdiff_t difference_type;$/;"	t	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:ptrdiff_t	file:	access:public
dirNameAtExecute	..\\scite\\src\\SciTEBase.h	/^	FilePath dirNameAtExecute;$/;"	m	class:SciTEBase	typeref:typename:FilePath	access:protected
dirNameForExecute	..\\scite\\src\\SciTEBase.h	/^	FilePath dirNameForExecute;$/;"	m	class:SciTEBase	typeref:typename:FilePath	access:protected
directory	..\\scite\\src\\JobQueue.h	/^	FilePath directory;$/;"	m	class:Job	typeref:typename:FilePath	access:public
dirname	..\\scite\\scripts\\CheckPropsDoc.py	/^	dirname = os.path.join(srcRoot, filename)$/;"	v	access:public
discharge2anyreg	..\\scintilla\\lua\\src\\lcode.c	/^static void discharge2anyreg (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e)
discharge2reg	..\\scintilla\\lua\\src\\lcode.c	/^static void discharge2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e,int reg)
dischargejpc	..\\scintilla\\lua\\src\\lcode.c	/^static void dischargejpc (FuncState *fs) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs)
displayLines	..\\scintilla\\src\\ContractionState.h	/^	std::unique_ptr<Partitioning<Sci::Line>> displayLines;$/;"	m	class:Scintilla::ContractionState	typeref:typename:std::unique_ptr<Partitioning<Sci::Line>>	access:private
displayPopupMenu	..\\scintilla\\src\\ScintillaBase.h	/^	int displayPopupMenu;$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:int	access:protected
distance	..\\scintilla\\gtk\\PlatGTK.cxx	/^	XYPOSITION distance;$/;"	m	class:ClusterIterator	typeref:typename:XYPOSITION	file:	access:public
distance	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^    def distance(s):$/;"	f	function:groupRanges	file:	access:private	signature:(s)
dlgAbbrev	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogAbbrev dlgAbbrev;$/;"	m	class:SciTEGTK	typeref:typename:DialogAbbrev	file:	access:protected
dlgFileSelector	..\\scite\\gtk\\SciTEGTK.cxx	/^	Dialog dlgFileSelector;$/;"	m	class:SciTEGTK	typeref:typename:Dialog	file:	access:protected
dlgFindInFiles	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogFindInFiles dlgFindInFiles;$/;"	m	class:SciTEGTK	typeref:typename:DialogFindInFiles	file:	access:protected
dlgFindReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogFindReplace dlgFindReplace;$/;"	m	class:SciTEGTK	typeref:typename:DialogFindReplace	file:	access:protected
dlgGoto	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogGoto dlgGoto;$/;"	m	class:SciTEGTK	typeref:typename:DialogGoto	file:	access:protected
dlgParameters	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogParameters dlgParameters;$/;"	m	class:SciTEGTK	typeref:typename:DialogParameters	file:	access:protected
dlgTabSize	..\\scite\\gtk\\SciTEGTK.cxx	/^	DialogTabSize dlgTabSize;$/;"	m	class:SciTEGTK	typeref:typename:DialogTabSize	file:	access:protected
doargs	..\\scintilla\\lua\\src\\luac.c	/^static int doargs(int argc, char* argv[])$/;"	f	typeref:typename:int	file:	signature:(int argc,char * argv[])
dob	..\\scintilla\\win32\\ScintillaWin.cxx	/^	DataObject dob;$/;"	m	class:ScintillaWin	typeref:typename:DataObject	file:	access:private
doc	..\\scintilla\\src\\Document.cxx	/^	const Document *doc;$/;"	m	class:__anon1ef09aa80111::ByteIterator	typeref:typename:const Document *	file:	access:public
doc	..\\scintilla\\src\\Document.cxx	/^	const Document *doc;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:const Document *	file:	access:public
doc	..\\scintilla\\src\\Document.cxx	/^	const Document *doc;$/;"	m	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:const Document *	file:	access:private
doc	..\\scite\\src\\SciTEBase.h	/^	sptr_t doc;$/;"	m	class:Buffer	typeref:typename:sptr_t	access:public
docFile	..\\scite\\scripts\\CheckPropsDoc.py	/^docFile = open(docFileName, "rt")$/;"	v	access:public
docFileName	..\\scite\\scripts\\CheckMentioned.py	/^docFileName = srcRoot + "\/scintilla\/doc\/ScintillaDoc.html"$/;"	v	access:public
docFileName	..\\scite\\scripts\\CheckPropsDoc.py	/^docFileName = os.path.join(srcRoot, "doc", "SciTEDoc.html")$/;"	v	access:public
docWatcher	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.h	/^    WatcherHelper *docWatcher;$/;"	m	class:ScintillaDocument	typeref:typename:WatcherHelper *	access:private
docall	..\\scintilla\\lua\\src\\lua.c	/^static int docall (lua_State *L, int narg, int clear) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int narg,int clear)
documentBytes	..\\scite\\src\\FileWorker.h	/^	const char *documentBytes;$/;"	m	class:FileStorer	typeref:typename:const char *	access:public
documentModTime	..\\scite\\src\\SciTEBase.h	/^	time_t documentModTime;$/;"	m	class:Buffer	typeref:typename:time_t	access:public
documentProperties	..\\scintilla\\scripts\\ScintillaData.py	/^    documentProperties = list(sci.propertyDocuments.keys())$/;"	v	access:public
documentVersion	..\\scintilla\\lexlib\\LexAccessor.h	/^	int documentVersion;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:int	access:private
dofile	..\\scintilla\\lua\\src\\lua.c	/^static int dofile (lua_State *L, const char *name) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * name)
dojump	..\\scintilla\\lua\\src\\lvm.c	/^#define dojump(/;"	d	file:	signature:(L,pc,i)
dolibrary	..\\scintilla\\lua\\src\\lua.c	/^static int dolibrary (lua_State *L, const char *name) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * name)
dontLook	..\\scite\\scripts\\CheckPropsDoc.py	/^				dontLook = ";" not in srcLine$/;"	v	access:public
dontLook	..\\scite\\scripts\\CheckPropsDoc.py	/^dontLook = False	# ignore contributor names as they don't get localised$/;"	v	access:public
dooptions	..\\scintilla\\lua\\src\\loadlib.c	/^static void dooptions (lua_State *L, int n) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int n)
dostring	..\\scintilla\\lua\\src\\lua.c	/^static int dostring (lua_State *L, const char *s, const char *name) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * s,const char * name)
dotty	..\\scintilla\\lua\\src\\lua.c	/^static void dotty (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
doubleBackSlashes	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def doubleBackSlashes(s):$/;"	f	access:public	signature:(s)
doubleClick	..\\scintilla\\include\\Platform.h	/^	enum class EventType { selectionChange, doubleClick } event;$/;"	e	enum:Scintilla::ListBoxEvent::EventType	access:public
doubleClickCloseThreshold	..\\scintilla\\src\\Editor.h	/^	Point doubleClickCloseThreshold;$/;"	m	class:Scintilla::Editor	typeref:typename:Point	access:protected
doubleFromPangoUnits	..\\scintilla\\gtk\\PlatGTK.cxx	/^static double doubleFromPangoUnits(int pu) {$/;"	f	typeref:typename:double	file:	signature:(int pu)
doublecap	..\\scintilla\\lua\\src\\lpvm.c	/^static Capture *doublecap (lua_State *L, Capture *cap, int captop, int ptop) {$/;"	f	typeref:typename:Capture *	file:	signature:(lua_State * L,Capture * cap,int captop,int ptop)
doublestack	..\\scintilla\\lua\\src\\lpvm.c	/^static Stack *doublestack (lua_State *L, Stack **stacklimit, int ptop) {$/;"	f	typeref:typename:Stack *	file:	signature:(lua_State * L,Stack ** stacklimit,int ptop)
dpiScaleX	..\\scintilla\\win32\\PlatWin.cxx	/^	float dpiScaleX;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:float	file:	access:private
dpiScaleY	..\\scintilla\\win32\\PlatWin.cxx	/^	float dpiScaleY;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:float	file:	access:private
drag	..\\scintilla\\src\\Editor.h	/^	SelectionText drag;$/;"	m	class:Scintilla::Editor	typeref:typename:SelectionText	access:protected
dragEnterEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::dragEnterEvent(QDragEnterEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QDragEnterEvent * event)
dragLeaveEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::dragLeaveEvent(QDragLeaveEvent * \/* event *\/)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QDragLeaveEvent *)
dragMoveEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::dragMoveEvent(QDragMoveEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QDragMoveEvent * event)
dragOffset	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int dragOffset; \/\/ the distance to the position of the scrollbar being dragged$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
dragOffset	..\\scintilla\\win32\\PlatWin.cxx	/^	Point dragOffset;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:Point	file:	access:private
dragWasDropped	..\\scintilla\\gtk\\ScintillaGTK.h	/^	bool dragWasDropped;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:bool	access:private
dragWasDropped	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	bool dragWasDropped;$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:bool	access:private
draggingHScrollBar	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool draggingVScrollBar, draggingHScrollBar; \/\/ a scrollbar is being dragged$/;"	m	class:ScintillaCurses	typeref:typename:bool	file:	access:private
draggingVScrollBar	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  bool draggingVScrollBar, draggingHScrollBar; \/\/ a scrollbar is being dragged$/;"	m	class:ScintillaCurses	typeref:typename:bool	file:	access:private
draw	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    void draw( float x, float y )$/;"	f	class:QuartzTextLayout	typeref:typename:void	access:public	signature:(float x,float y)
drawAll	..\\scintilla\\src\\EditView.h	/^	drawAll = 0x1FF$/;"	e	enum:Scintilla::DrawPhase	access:public
drawBack	..\\scintilla\\src\\EditView.h	/^	drawBack = 0x1,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawCarets	..\\scintilla\\src\\EditView.h	/^	drawCarets = 0x100,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawFoldLines	..\\scintilla\\src\\EditView.h	/^	drawFoldLines = 0x80,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawHover	..\\scintilla\\src\\Indicator.h	/^	enum DrawState { drawNormal, drawHover };$/;"	e	enum:Scintilla::Indicator::DrawState	access:public
drawIndentationGuides	..\\scintilla\\src\\EditView.h	/^	drawIndentationGuides = 0x8,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawIndicatorsBack	..\\scintilla\\src\\EditView.h	/^	drawIndicatorsBack = 0x2,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawIndicatorsFore	..\\scintilla\\src\\EditView.h	/^	drawIndicatorsFore = 0x10,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawLineTranslucent	..\\scintilla\\src\\EditView.h	/^	drawLineTranslucent = 0x40,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawNormal	..\\scintilla\\src\\Indicator.h	/^	enum DrawState { drawNormal, drawHover };$/;"	e	enum:Scintilla::Indicator::DrawState	access:public
drawOverstrikeCaret	..\\scintilla\\src\\EditView.h	/^	bool drawOverstrikeCaret;$/;"	m	class:Scintilla::EditView	typeref:typename:bool	access:public
drawSelectionTranslucent	..\\scintilla\\src\\EditView.h	/^	drawSelectionTranslucent = 0x20,$/;"	e	enum:Scintilla::DrawPhase	access:public
drawText	..\\scintilla\\src\\EditView.h	/^	drawText = 0x4,$/;"	e	enum:Scintilla::DrawPhase	access:public
dropEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::dropEvent(QDropEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QDropEvent * event)
dropFilesQueue	..\\scite\\win32\\SciTEWin.h	/^	std::deque<GUI::gui_string> dropFilesQueue;$/;"	m	class:SciTEWin	typeref:typename:std::deque<GUI::gui_string>	access:protected
dropRestOfWord	..\\scintilla\\src\\AutoComplete.h	/^	bool dropRestOfWord;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:bool	access:public
dropWentOutside	..\\scintilla\\src\\Editor.h	/^	bool dropWentOutside;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
ds	..\\scintilla\\win32\\ScintillaWin.cxx	/^	DropSource ds;$/;"	m	class:ScintillaWin	typeref:typename:DropSource	file:	access:private
dt	..\\scintilla\\win32\\ScintillaWin.cxx	/^	DropTarget dt;$/;"	m	class:ScintillaWin	typeref:typename:DropTarget	file:	access:private
dummy	..\\scintilla\\lua\\src\\lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for `local' udata *\/$/;"	m	union:Udata	typeref:typename:L_Umaxalign	access:public
dummy	..\\scintilla\\lua\\src\\lobject.h	/^  L_Umaxalign dummy;  \/* ensures maximum alignment for strings *\/$/;"	m	union:TString	typeref:typename:L_Umaxalign	access:public
dummynode	..\\scintilla\\lua\\src\\ltable.c	/^#define dummynode	/;"	d	file:
dummynode_	..\\scintilla\\lua\\src\\ltable.c	/^static const Node dummynode_ = {$/;"	v	typeref:typename:const Node	file:
dumping	..\\scintilla\\lua\\src\\luac.c	/^static int dumping=1;			\/* dump bytecodes? *\/$/;"	v	typeref:typename:int	file:
durationStyleOneLine	..\\scintilla\\src\\Document.h	/^	double durationStyleOneLine;$/;"	m	class:Scintilla::Document	typeref:typename:double	access:public
dvLineEnd	..\\scintilla\\include\\ILexer.h	/^enum { dvOriginal=0, dvLineEnd=1 };$/;"	e	enum:Scintilla::__anon86eda4c30103	access:public
dvOriginal	..\\scintilla\\include\\ILexer.h	/^enum { dvOriginal=0, dvLineEnd=1 };$/;"	e	enum:Scintilla::__anon86eda4c30103	access:public
dwellDelay	..\\scintilla\\src\\Editor.h	/^	int dwellDelay;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
dwelling	..\\scintilla\\src\\Editor.h	/^	bool dwelling;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
dwordFromBGRA	..\\scintilla\\win32\\PlatWin.cxx	/^static DWORD dwordFromBGRA(byte b, byte g, byte r, byte a) {$/;"	f	namespace:Scintilla	typeref:typename:DWORD	file:	signature:(byte b,byte g,byte r,byte a)
e	..\\scintilla\\lua\\src\\lpcap.c	/^      const char *e;  \/* ... ends here *\/$/;"	m	struct:StrAux::__anond6d1f967010a::__anond6d1f9670208	typeref:typename:const char *	file:	access:public
eFinal	..\\scite\\src\\Utf8_16.h	/^	    eFinal$/;"	e	enum:Utf16_Iter::eState	access:public
eFinal	..\\scite\\src\\Utf8_16.h	/^	    eFinal$/;"	e	enum:Utf8_Iter::eState	access:public
eLast	..\\scite\\src\\Utf8_16.h	/^	    eLast$/;"	e	enum:Utf8_16::encodingType	access:public
ePenultimate	..\\scite\\src\\Utf8_16.h	/^	    ePenultimate,$/;"	e	enum:Utf16_Iter::eState	access:public
ePenultimate	..\\scite\\src\\Utf8_16.h	/^	    ePenultimate,$/;"	e	enum:Utf8_Iter::eState	access:public
eSecondOf4Bytes	..\\scite\\src\\Utf8_16.h	/^	    eSecondOf4Bytes,$/;"	e	enum:Utf16_Iter::eState	access:public
eSecondOf4Bytes	..\\scite\\src\\Utf8_16.h	/^	    eSecondOf4Bytes,$/;"	e	enum:Utf8_Iter::eState	access:public
eStart	..\\scite\\src\\Utf8_16.h	/^	    eStart,$/;"	e	enum:Utf16_Iter::eState	access:public
eStart	..\\scite\\src\\Utf8_16.h	/^	    eStart,$/;"	e	enum:Utf8_Iter::eState	access:public
eState	..\\scite\\src\\Utf8_16.h	/^	enum eState {$/;"	g	class:Utf16_Iter	access:protected
eState	..\\scite\\src\\Utf8_16.h	/^	enum eState {$/;"	g	class:Utf8_Iter	access:protected
eUnknown	..\\scite\\src\\Utf8_16.h	/^	    eUnknown,$/;"	e	enum:Utf8_16::encodingType	access:public
eUtf16BigEndian	..\\scite\\src\\Utf8_16.h	/^	    eUtf16BigEndian,$/;"	e	enum:Utf8_16::encodingType	access:public
eUtf16LittleEndian	..\\scite\\src\\Utf8_16.h	/^	    eUtf16LittleEndian,  \/\/ Default on Windows$/;"	e	enum:Utf8_16::encodingType	access:public
eUtf8	..\\scite\\src\\Utf8_16.h	/^	    eUtf8,$/;"	e	enum:Utf8_16::encodingType	access:public
eWrapChar	..\\scintilla\\src\\ViewStyle.h	/^enum WrapMode { eWrapNone, eWrapWord, eWrapChar, eWrapWhitespace };$/;"	e	enum:Scintilla::WrapMode	access:public
eWrapNone	..\\scintilla\\src\\ViewStyle.h	/^enum WrapMode { eWrapNone, eWrapWord, eWrapChar, eWrapWhitespace };$/;"	e	enum:Scintilla::WrapMode	access:public
eWrapWhitespace	..\\scintilla\\src\\ViewStyle.h	/^enum WrapMode { eWrapNone, eWrapWord, eWrapChar, eWrapWhitespace };$/;"	e	enum:Scintilla::WrapMode	access:public
eWrapWord	..\\scintilla\\src\\ViewStyle.h	/^enum WrapMode { eWrapNone, eWrapWord, eWrapChar, eWrapWhitespace };$/;"	e	enum:Scintilla::WrapMode	access:public
ecaseForced	..\\scintilla\\src\\Style.h	/^	enum ecaseForced {caseMixed, caseUpper, caseLower, caseCamel};$/;"	g	class:Scintilla::Style	access:public
edgeColumn	..\\scintilla\\src\\PositionCache.h	/^	int edgeColumn;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
edgeState	..\\scintilla\\src\\ViewStyle.h	/^	int edgeState;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
editcopy_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * editcopy_xpm[] = {$/;"	v	typeref:typename:const char * []
editcut_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * editcut_xpm[] = {$/;"	v	typeref:typename:const char * []
editpaste_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * editpaste_xpm[] = {$/;"	v	typeref:typename:const char * []
efDBCS	..\\scintilla\\src\\Document.h	/^enum EncodingFamily { efEightBit, efUnicode, efDBCS };$/;"	e	enum:Scintilla::EncodingFamily	access:public
efEightBit	..\\scintilla\\src\\Document.h	/^enum EncodingFamily { efEightBit, efUnicode, efDBCS };$/;"	e	enum:Scintilla::EncodingFamily	access:public
efUnicode	..\\scintilla\\src\\Document.h	/^enum EncodingFamily { efEightBit, efUnicode, efDBCS };$/;"	e	enum:Scintilla::EncodingFamily	access:public
elapsedTimes	..\\scite\\src\\SciTEBase.h	/^	GUI::ElapsedTime elapsedTimes;$/;"	m	struct:CurrentWordHighlight	typeref:typename:GUI::ElapsedTime	access:public
empty	..\\scintilla\\src\\SparseVector.h	/^	T empty;$/;"	m	class:Scintilla::SparseVector	typeref:typename:T	access:private
empty	..\\scintilla\\src\\SplitVector.h	/^	T empty;	\/\/\/ Returned as the result of out-of-bounds access.$/;"	m	class:Scintilla::SplitVector	typeref:typename:T	access:protected
empty	..\\scite\\src\\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anonf95580a60203	access:public
emptybuffer	..\\scintilla\\lua\\src\\lauxlib.c	/^static int emptybuffer (luaL_Buffer *B) {$/;"	f	typeref:typename:int	file:	signature:(luaL_Buffer * B)
enc8bit	..\\scintilla\\lexlib\\LexAccessor.h	/^enum EncodingType { enc8bit, encUnicode, encDBCS };$/;"	e	enum:Scintilla::EncodingType	access:public
encDBCS	..\\scintilla\\lexlib\\LexAccessor.h	/^enum EncodingType { enc8bit, encUnicode, encDBCS };$/;"	e	enum:Scintilla::EncodingType	access:public
encUnicode	..\\scintilla\\lexlib\\LexAccessor.h	/^enum EncodingType { enc8bit, encUnicode, encDBCS };$/;"	e	enum:Scintilla::EncodingType	access:public
encodingFamily	..\\scintilla\\src\\PositionCache.h	/^	EncodingFamily encodingFamily;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:EncodingFamily	access:private
encodingType	..\\scintilla\\gtk\\PlatGTK.cxx	/^enum encodingType { singleByte, UTF8, dbcs};$/;"	g	file:
encodingType	..\\scintilla\\lexlib\\LexAccessor.h	/^	enum EncodingType encodingType;$/;"	m	class:Scintilla::LexAccessor	typeref:enum:EncodingType	access:private
encodingType	..\\scite\\src\\Utf8_16.h	/^	enum encodingType {$/;"	g	class:Utf8_16	access:public
end	..\\scintilla\\src\\Document.cxx	/^	Sci::Position end;$/;"	m	class:__anon1ef09aa80111::DocumentIndexer	typeref:typename:Sci::Position	file:	access:private
end	..\\scintilla\\src\\Document.h	/^	Sci::Position end;$/;"	m	class:Scintilla::Range	typeref:typename:Sci::Position	access:public
end	..\\scintilla\\src\\Editor.h	/^	Sci::Line end;	\/\/ May be lineLarge to indicate all of document after start$/;"	m	struct:Scintilla::WrapPending	typeref:typename:Sci::Line	access:public
end	..\\scintilla\\src\\PositionCache.h	/^	int end() const {$/;"	f	struct:Scintilla::TextSegment	typeref:typename:int	access:public	signature:() const
end	..\\scintilla\\src\\Selection.h	/^	SelectionPosition end;$/;"	m	struct:Scintilla::SelectionSegment	typeref:typename:SelectionPosition	access:public
endAtLastLine	..\\scintilla\\src\\Editor.h	/^	bool endAtLastLine;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
endDoc	..\\scite\\src\\LuaExtension.cxx	/^	unsigned int endDoc;$/;"	m	struct:StylingContext	typeref:typename:unsigned int	file:	access:public
endFoldBlock	..\\scintilla\\src\\Document.h	/^	Sci::Line endFoldBlock;	\/\/ End of current fold block$/;"	m	class:Scintilla::HighlightDelimiter	typeref:typename:Sci::Line	access:public
endHighlight	..\\scintilla\\src\\CallTip.h	/^	int endHighlight;      \/\/ ...end of highlighted text$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:private
endImpl	..\\scite\\scripts\\tags2api.py	/^						endImpl = curDef.find("}")$/;"	v	access:public
endPDF	..\\scite\\src\\ExportPDF.cxx	/^		void endPDF() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:()
endPage	..\\scite\\src\\ExportPDF.cxx	/^		void endPage() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:()
endPos	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position endPos;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:private
endPos	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_PositionU endPos;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_PositionU	access:private
endPos	..\\scintilla\\src\\Document.cxx	/^	Sci::Position endPos;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:Sci::Position	file:	access:public
endPos	..\\scite\\src\\LuaExtension.cxx	/^	int endPos;$/;"	m	struct:PaneMatchObject	typeref:typename:int	file:	access:public
endPos	..\\scite\\src\\LuaExtension.cxx	/^	unsigned int endPos;$/;"	m	struct:StylingContext	typeref:typename:unsigned int	file:	access:public
endPos	..\\scite\\src\\StyleWriter.h	/^	int endPos;$/;"	m	class:TextReader	typeref:typename:int	access:protected
endPosOrig	..\\scite\\src\\LuaExtension.cxx	/^	int endPosOrig; \/\/ has to do with preventing infinite loop on a 0-length match$/;"	m	struct:PaneMatchObject	typeref:typename:int	file:	access:public
endStyled	..\\scintilla\\src\\Document.h	/^	Sci::Position endStyled;$/;"	m	class:Scintilla::Document	typeref:typename:Sci::Position	access:private
end_capture	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *end_capture (MatchState *ms, const char *s,$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,const char * p)
end_ci	..\\scintilla\\lua\\src\\lstate.h	/^  CallInfo *end_ci;  \/* points after end of ci array*\/$/;"	m	struct:lua_State	typeref:typename:CallInfo *	access:public
end_undo_action	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::end_undo_action() {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:()
endpc	..\\scintilla\\lua\\src\\lobject.h	/^  int endpc;    \/* first point where variable is dead *\/$/;"	m	struct:LocVar	typeref:typename:int	access:public
ensure_styled_to	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::ensure_styled_to(int position) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int position)
enterblock	..\\scintilla\\lua\\src\\lparser.c	/^static void enterblock (FuncState *fs, BlockCnt *bl, lu_byte isbreakable) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,BlockCnt * bl,lu_byte isbreakable)
entered	..\\scite\\win32\\Strips.h	/^	int entered;$/;"	m	class:Strip	typeref:typename:int	access:protected
enteredModification	..\\scintilla\\src\\Document.h	/^	int enteredModification;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:private
enteredReadOnlyCount	..\\scintilla\\src\\Document.h	/^	int enteredReadOnlyCount;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:private
enteredSetScrollingSize	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  bool enteredSetScrollingSize;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:bool	access:private
enteredStyling	..\\scintilla\\src\\Document.h	/^	int enteredStyling;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:private
enterlevel	..\\scintilla\\lua\\src\\lparser.c	/^static void enterlevel (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
entries	..\\scite\\src\\StringHelpers.h	/^	std::string entries[sz];$/;"	m	class:EntryMemory	typeref:typename:std::string[]	access:private
entryGoto	..\\scite\\gtk\\SciTEGTK.cxx	/^	WEntry entryGoto;$/;"	m	class:DialogGoto	typeref:typename:WEntry	file:	access:public
entryIndentSize	..\\scite\\gtk\\SciTEGTK.cxx	/^	WEntry entryIndentSize;$/;"	m	class:DialogTabSize	typeref:typename:WEntry	file:	access:public
entryParam	..\\scite\\gtk\\SciTEGTK.cxx	/^	WEntry entryParam[SciTEBase::maxParam];$/;"	m	class:DialogParameters	typeref:typename:WEntry[]	file:	access:public
entryTabSize	..\\scite\\gtk\\SciTEGTK.cxx	/^	WEntry entryTabSize;$/;"	m	class:DialogTabSize	typeref:typename:WEntry	file:	access:public
env	..\\scintilla\\lua\\src\\lobject.h	/^    struct Table *env;$/;"	m	struct:Udata::__anonae4e9c5f0308	typeref:struct:Table *	access:public
env	..\\scintilla\\lua\\src\\lstate.h	/^  TValue env;  \/* temporary place for environments *\/$/;"	m	struct:lua_State	typeref:typename:TValue	access:public
eolFilled	..\\scintilla\\src\\Style.h	/^	bool eolFilled;$/;"	m	class:Scintilla::Style	typeref:typename:bool	access:public
eolMode	..\\scintilla\\src\\Document.h	/^	int eolMode;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:public
eolfilled	..\\scite\\src\\StyleDefinition.h	/^	bool eolfilled;$/;"	m	class:StyleDefinition	typeref:typename:bool	access:public
eopat	..\\scintilla\\src\\RESearch.h	/^	Sci::Position eopat[MAXTAG];$/;"	m	class:Scintilla::RESearch	typeref:typename:Sci::Position[]	access:public
epsilon	..\\scintilla\\src\\EditView.cxx	/^const XYPOSITION epsilon = 0.0001f;	\/\/ A small nudge to avoid floating point precision issues$/;"	v	typeref:typename:const XYPOSITION
equalobj	..\\scintilla\\lua\\src\\lvm.h	/^#define equalobj(/;"	d	signature:(L,o1,o2)
err	..\\scite\\src\\FileWorker.h	/^	int err;$/;"	m	struct:FileWorker	typeref:typename:int	access:public
errfile	..\\scintilla\\lua\\src\\lauxlib.c	/^static int errfile (lua_State *L, const char *what, int fnameindex) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * what,int fnameindex)
errfunc	..\\scintilla\\lua\\src\\lstate.h	/^  ptrdiff_t errfunc;  \/* current error handling function (stack index) *\/$/;"	m	struct:lua_State	typeref:typename:ptrdiff_t	access:public
error	..\\scintilla\\lua\\src\\lundump.c	/^#define error(/;"	d	file:	signature:(S,s)
error	..\\scintilla\\lua\\src\\lundump.c	/^static void error(LoadState* S, const char* why)$/;"	f	typeref:typename:void	file:	signature:(LoadState * S,const char * why)
errorJmp	..\\scintilla\\lua\\src\\lstate.h	/^  struct lua_longjmp *errorJmp;  \/* current error recover point *\/$/;"	m	struct:lua_State	typeref:struct:lua_longjmp *	access:public
errorStatus	..\\scintilla\\src\\Editor.h	/^	int errorStatus;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:public
error_expected	..\\scintilla\\lua\\src\\lparser.c	/^static void error_expected (LexState *ls, int token) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int token)
errorfromcode	..\\scintilla\\lua\\src\\loadlib.c	/^static const char *errorfromcode (NSObjectFileImageReturnCode ret) {$/;"	f	typeref:typename:const char *	file:	signature:(NSObjectFileImageReturnCode ret)
errorlimit	..\\scintilla\\lua\\src\\lparser.c	/^static void errorlimit (FuncState *fs, int limit, const char *what) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,int limit,const char * what)
escape	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^def escape(s):$/;"	f	access:public	signature:(s)
escapeValue	..\\scintilla\\src\\RESearch.cxx	/^static unsigned char escapeValue(unsigned char ch) {$/;"	f	typeref:typename:unsigned char	file:	signature:(unsigned char ch)
estimate	..\\scintilla\\lua\\src\\lstate.h	/^  lu_mem estimate;  \/* an estimate of number of bytes actually in use *\/$/;"	m	struct:global_State	typeref:typename:lu_mem	access:public
et	..\\scintilla\\gtk\\PlatGTK.cxx	/^	encodingType et;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:encodingType	file:	access:private
et	..\\scite\\src\\FileWorker.h	/^	GUI::ElapsedTime et;$/;"	m	struct:FileWorker	typeref:typename:GUI::ElapsedTime	access:public
evbtn	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GdkEventButton *evbtn;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkEventButton *	access:private
event	..\\scintilla\\include\\Platform.h	/^	enum class EventType { selectionChange, doubleClick } event;$/;"	m	struct:Scintilla::ListBoxEvent	typeref:enum:Scintilla::ListBoxEvent::EventType	access:public
event	..\\scintilla\\lua\\src\\lua.h	/^  int event;$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
event	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^bool ScintillaEditBase::event(QEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:bool	signature:(QEvent * event)
event	..\\scite\\lua\\include\\lua.h	/^  int event;$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
event_command	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::event_command(uptr_t wParam, sptr_t lParam)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(uptr_t wParam,sptr_t lParam)
excludes	..\\scite\\src\\PropSetFile.h	/^	std::set<std::string> excludes;$/;"	m	class:ImportFilter	typeref:typename:std::set<std::string>	access:public
execCommand	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::execCommand(QAction *action)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(QAction * action)
executing	..\\scite\\src\\JobQueue.h	/^	bool executing;$/;"	m	class:JobQueue	typeref:typename:bool	access:public
exhausted	..\\scite\\src\\SciTEIO.cxx	/^	bool exhausted;$/;"	m	class:BufferedFile	typeref:typename:bool	file:	access:private
exitStatus	..\\scite\\gtk\\SciTEGTK.cxx	/^	int exitStatus;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
exitStatus	..\\scite\\win32\\SciTEWin.h	/^	int exitStatus;$/;"	m	class:CommandWorker	typeref:typename:int	access:public
exp1	..\\scintilla\\lua\\src\\lparser.c	/^static int exp1 (LexState *ls) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls)
exp2reg	..\\scintilla\\lua\\src\\lcode.c	/^static void exp2reg (FuncState *fs, expdesc *e, int reg) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e,int reg)
expanded	..\\scintilla\\src\\ContractionState.h	/^	std::unique_ptr<RunStyles<Sci::Line, char>> expanded;$/;"	m	class:Scintilla::ContractionState	typeref:typename:std::unique_ptr<RunStyles<Sci::Line,char>>	access:private
expands	..\\scite\\win32\\SciTEWin.h	/^	bool expands;$/;"	m	struct:Band	typeref:typename:bool	access:public
expdesc	..\\scintilla\\lua\\src\\lparser.h	/^typedef struct expdesc {$/;"	s
expdesc	..\\scintilla\\lua\\src\\lparser.h	/^} expdesc;$/;"	t	typeref:struct:expdesc
expkind	..\\scintilla\\lua\\src\\lparser.h	/^} expkind;$/;"	t	typeref:enum:__anon613de0d50103
explist1	..\\scintilla\\lua\\src\\lparser.c	/^static int explist1 (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls,expdesc * v)
expr	..\\scintilla\\lua\\src\\lparser.c	/^static void expr (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * v)
exprstat	..\\scintilla\\lua\\src\\lparser.c	/^static void exprstat (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
extender	..\\scite\\gtk\\SciTEGTK.cxx	/^	Extension *extender;$/;"	m	class:UserStrip	typeref:typename:Extension *	file:	access:public
extender	..\\scite\\src\\SciTEBase.h	/^	Extension *extender;$/;"	m	class:SciTEBase	typeref:typename:Extension *	access:protected
extender	..\\scite\\win32\\Strips.h	/^	Extension *extender;$/;"	m	class:UserStrip	typeref:typename:Extension *	access:private
extension	..\\scite\\src\\SciTEBase.h	/^	std::string extension;$/;"	m	class:LanguageMenuItem	typeref:typename:std::string	access:public
extensionScript	..\\scite\\src\\LuaExtension.cxx	/^static std::string extensionScript;$/;"	v	typeref:typename:std::string	file:
extensions	..\\scite\\src\\MultiplexExtension.h	/^	std::vector<Extension *> extensions;$/;"	m	class:MultiplexExtension	typeref:typename:std::vector<Extension * >	access:private
extraAscent	..\\scintilla\\src\\ViewStyle.h	/^	int extraAscent;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
extraDescent	..\\scintilla\\src\\ViewStyle.h	/^	int extraDescent;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
extraFontFlag	..\\scintilla\\include\\Platform.h	/^	int extraFontFlag;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:int	access:public
extraFontFlag	..\\scintilla\\src\\Style.h	/^	int extraFontFlag;$/;"	m	struct:Scintilla::FontSpecification	typeref:typename:int	access:public
extraFontFlag	..\\scintilla\\src\\ViewStyle.h	/^	int extraFontFlag;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
extraFontFlag	..\\scintilla\\win32\\PlatWin.cxx	/^	int extraFontFlag;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:int	file:	access:public
extraline	..\\scintilla\\lua\\src\\lauxlib.c	/^  int extraline;$/;"	m	struct:LoadF	typeref:typename:int	file:	access:public
extremePosition	..\\scintilla\\lexlib\\LexAccessor.h	/^	enum {extremePosition=0x7FFFFFFF};$/;"	e	enum:Scintilla::LexAccessor::__anonb2de87d20103	access:public
extremePosition	..\\scite\\src\\StyleWriter.h	/^	enum {extremePosition=0x7FFFFFFF};$/;"	e	enum:TextReader::__anon931737210103	access:public
f	..\\scintilla\\lua\\src\\lauxlib.c	/^  FILE *f;$/;"	m	struct:LoadF	typeref:typename:FILE *	file:	access:public
f	..\\scintilla\\lua\\src\\lobject.h	/^  lua_CFunction f;$/;"	m	struct:CClosure	typeref:typename:lua_CFunction	access:public
f	..\\scintilla\\lua\\src\\lparser.h	/^  Proto *f;  \/* current function header *\/$/;"	m	struct:FuncState	typeref:typename:Proto *	access:public
f	..\\scintilla\\lua\\src\\lparser.h	/^  int f;  \/* patch list of `exit when false' *\/$/;"	m	struct:expdesc	typeref:typename:int	access:public
f	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^				Function f;$/;"	m	union:Scintilla::DynamicLibraryImpl::FindFunction::__anon1e21bbec020a	typeref:typename:Function	file:	access:public
f	..\\scintilla\\win32\\PlatWin.cxx	/^				Function f;$/;"	m	union:Scintilla::DynamicLibraryImpl::FindFunction::__anon82a12833020a	typeref:typename:Function	file:	access:public
fIndexOnFail	..\\scite\\win32\\SciTEWin.cxx	/^	BOOL fIndexOnFail;$/;"	m	struct:XHH_AKLINK	typeref:typename:BOOL	file:	access:public
fReserved	..\\scite\\win32\\SciTEWin.cxx	/^	BOOL fReserved;$/;"	m	struct:XHH_AKLINK	typeref:typename:BOOL	file:	access:public
f_Ccall	..\\scintilla\\lua\\src\\lapi.c	/^static void f_Ccall (lua_State *L, void *ud) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,void * ud)
f_call	..\\scintilla\\lua\\src\\lapi.c	/^static void f_call (lua_State *L, void *ud) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,void * ud)
f_flush	..\\scintilla\\lua\\src\\liolib.c	/^static int f_flush (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
f_isLua	..\\scintilla\\lua\\src\\lstate.h	/^#define f_isLua(/;"	d	signature:(ci)
f_lines	..\\scintilla\\lua\\src\\liolib.c	/^static int f_lines (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
f_luaopen	..\\scintilla\\lua\\src\\lstate.c	/^static void f_luaopen (lua_State *L, void *ud) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,void * ud)
f_parser	..\\scintilla\\lua\\src\\ldo.c	/^static void f_parser (lua_State *L, void *ud) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,void * ud)
f_read	..\\scintilla\\lua\\src\\liolib.c	/^static int f_read (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
f_seek	..\\scintilla\\lua\\src\\liolib.c	/^static int f_seek (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
f_setvbuf	..\\scintilla\\lua\\src\\liolib.c	/^static int f_setvbuf (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
f_write	..\\scintilla\\lua\\src\\liolib.c	/^static int f_write (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
faceFeatures	..\\scite\\scripts\\commandsdoc.py	/^def faceFeatures(out):$/;"	f	access:public	signature:(out)
faceName	..\\scintilla\\include\\Platform.h	/^	const char *faceName;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:const char *	access:public
failedSave	..\\scite\\src\\SciTEBase.h	/^	bool failedSave;$/;"	m	class:Buffer	typeref:typename:bool	access:public
failedfind	..\\scite\\src\\SciTEBase.h	/^	bool failedfind;$/;"	m	class:Searcher	typeref:typename:bool	access:public
failure	..\\scintilla\\src\\RESearch.h	/^	int failure;$/;"	m	class:Scintilla::RESearch	typeref:typename:int	access:private
fasttm	..\\scintilla\\lua\\src\\ltm.h	/^#define fasttm(/;"	d	signature:(l,et,e)
fatal	..\\scintilla\\lua\\src\\luac.c	/^static void fatal(const char* message)$/;"	f	typeref:typename:void	file:	signature:(const char * message)
fc	..\\scite\\scripts\\tags2api.py	/^fc = FileCache()$/;"	v	access:public
fclose	..\\scite\\src\\Utf8_16.cxx	/^int Utf8_16_Write::fclose() {$/;"	f	class:Utf8_16_Write	typeref:typename:int	signature:()
fd	..\\scite\\gtk\\DirectorExtension.cxx	/^	int fd;$/;"	m	struct:PipeEntry	typeref:typename:int	file:	access:public
fdCorrespondent	..\\scite\\gtk\\DirectorExtension.cxx	/^static int fdCorrespondent = 0;$/;"	v	typeref:typename:int	file:
fdDirector	..\\scite\\gtk\\DirectorExtension.cxx	/^static int fdDirector = 0;$/;"	v	typeref:typename:int	file:
fdFIFO	..\\scite\\gtk\\SciTEGTK.cxx	/^	int fdFIFO;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
fdFinishSave	..\\scite\\src\\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	e	enum:Buffer::FutureDo	access:public
fdNone	..\\scite\\src\\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	e	enum:Buffer::FutureDo	access:public
fdReceiver	..\\scite\\gtk\\DirectorExtension.cxx	/^static int fdReceiver = 0;$/;"	v	typeref:typename:int	file:
fid	..\\scintilla\\include\\Platform.h	/^	FontID fid;$/;"	m	class:Scintilla::Font	typeref:typename:FontID	access:protected
field	..\\scintilla\\lua\\src\\lparser.c	/^static void field (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * v)
fileModLastAsk	..\\scite\\src\\SciTEBase.h	/^	time_t fileModLastAsk;$/;"	m	class:Buffer	typeref:typename:time_t	access:public
fileModTime	..\\scite\\src\\SciTEBase.h	/^	time_t fileModTime;$/;"	m	class:Buffer	typeref:typename:time_t	access:public
fileName	..\\scintilla\\scripts\\ScintillaData.py	/^        fileName = os.path.basename(sci.fileFromSclex[sclex])$/;"	v	access:public
fileName	..\\scite\\src\\FilePath.h	/^	GUI::gui_string fileName;$/;"	m	class:FilePath	typeref:typename:GUI::gui_string	access:private
fileNameLast	..\\scite\\src\\SciTEBase.h	/^	GUI::gui_string fileNameLast;$/;"	m	struct:BackgroundActivities	typeref:typename:GUI::gui_string	access:public
filePath	..\\scite\\src\\SciTEBase.h	/^	FilePath filePath;$/;"	m	class:SciTEBase	typeref:typename:FilePath	access:protected
fileRead	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char fileRead[] = "rb";$/;"	v	typeref:typename:const GUI::gui_char[]
fileRead	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char fileRead[] = GUI_TEXT("rb");$/;"	v	typeref:typename:const GUI::gui_char[]
fileSelectorHeight	..\\scite\\gtk\\SciTEGTK.cxx	/^	gint	fileSelectorHeight;$/;"	m	class:SciTEGTK	typeref:typename:gint	file:	access:protected
fileSelectorWidth	..\\scite\\gtk\\SciTEGTK.cxx	/^	gint	fileSelectorWidth;$/;"	m	class:SciTEGTK	typeref:typename:gint	file:	access:protected
fileStackCmdID	..\\scite\\src\\SciTEBase.h	/^	enum { fileStackCmdID = IDM_MRUFILE, bufferCmdID = IDM_BUFFER };$/;"	e	enum:SciTEBase::__anonf95580a60903	access:public
fileStackMax	..\\scite\\src\\SciTEBase.h	/^	enum { fileStackMax = 10 };$/;"	e	enum:SciTEBase::__anonf95580a60803	access:public
fileWrite	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char fileWrite[] = "wb";$/;"	v	typeref:typename:const GUI::gui_char[]
fileWrite	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char fileWrite[] = GUI_TEXT("wb");$/;"	v	typeref:typename:const GUI::gui_char[]
fileerror	..\\scintilla\\lua\\src\\liolib.c	/^static void fileerror (lua_State *L, int arg, const char *filename) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int arg,const char * filename)
filenew_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * filenew_xpm[] = {$/;"	v	typeref:typename:const char * []
fileopen_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * fileopen_xpm[] = {$/;"	v	typeref:typename:const char * []
files	..\\scite\\scripts\\CheckPropsDoc.py	/^	files = propToFile[k]$/;"	v	access:public
filesave_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * filesave_xpm[] = {$/;"	v	typeref:typename:const char * []
fillAlpha	..\\scintilla\\src\\Indicator.h	/^	int fillAlpha;$/;"	m	class:Scintilla::Indicator	typeref:typename:int	access:public
fillAlpha	..\\scite\\src\\StyleDefinition.h	/^	int fillAlpha;$/;"	m	struct:IndicatorDefinition	typeref:typename:int	access:public
fillUpChars	..\\scintilla\\src\\AutoComplete.h	/^	std::string fillUpChars;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:std::string	access:private
fillseq	..\\scintilla\\lua\\src\\lptree.c	/^static void fillseq (TTree *tree, int tag, int n, const char *s) {$/;"	f	typeref:typename:void	file:	signature:(TTree * tree,int tag,int n,const char * s)
filter	..\\scite\\src\\SciTEBase.h	/^	ImportFilter filter;$/;"	m	class:SciTEBase	typeref:typename:ImportFilter	access:protected
filterDefault	..\\scite\\win32\\SciTEWin.h	/^	int filterDefault;$/;"	m	class:SciTEWin	typeref:typename:int	access:protected
finalfix	..\\scintilla\\lua\\src\\lptree.c	/^static void finalfix (lua_State *L, int postable, TTree *g, TTree *t) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int postable,TTree * g,TTree * t)
finallabel	..\\scintilla\\lua\\src\\lpcode.c	/^static int finallabel (Instruction *code, int i) {$/;"	f	typeref:typename:int	file:	signature:(Instruction * code,int i)
finaltarget	..\\scintilla\\lua\\src\\lpcode.c	/^static int finaltarget (Instruction *code, int i) {$/;"	f	typeref:typename:int	file:	signature:(Instruction * code,int i)
findCategories	..\\scintilla\\scripts\\GenerateCharacterCategory.py	/^def findCategories(filename):$/;"	f	access:public	signature:(filename)
findInStyle	..\\scite\\src\\SciTEBase.h	/^	bool findInStyle;$/;"	m	class:Searcher	typeref:typename:bool	access:public
findMarker	..\\scite\\src\\SciTEBase.h	/^	MatchMarker findMarker;$/;"	m	class:SciTEBase	typeref:typename:MatchMarker	access:protected
findMarks	..\\scite\\src\\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	m	class:Buffer	typeref:enum:Buffer::__anonf95580a60303	access:public
findStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	FindStrip findStrip;$/;"	m	class:SciTEGTK	typeref:typename:FindStrip	file:	access:protected
findStrip	..\\scite\\win32\\SciTEWin.h	/^	FindStrip findStrip;$/;"	m	class:SciTEWin	typeref:typename:FindStrip	access:protected
findStyle	..\\scite\\src\\SciTEBase.h	/^	int findStyle;$/;"	m	class:Searcher	typeref:typename:int	access:public
findWhat	..\\scite\\src\\SciTEBase.h	/^	std::string findWhat;$/;"	m	class:Searcher	typeref:typename:std::string	access:public
findback	..\\scintilla\\lua\\src\\lpcap.c	/^static Capture *findback (CapState *cs, Capture *cap) {$/;"	f	typeref:typename:Capture *	file:	signature:(CapState * cs,Capture * cap)
finddyncap	..\\scintilla\\lua\\src\\lpcap.c	/^int finddyncap (Capture *cap, Capture *last) {$/;"	f	typeref:typename:int	signature:(Capture * cap,Capture * last)
findfile	..\\scintilla\\lua\\src\\loadlib.c	/^static const char *findfile (lua_State *L, const char *name,$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,const char * name,const char * pname)
findindex	..\\scintilla\\lua\\src\\ltable.c	/^static int findindex (lua_State *L, Table *t, StkId key) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,Table * t,StkId key)
findinfiles_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * findinfiles_xpm[] = {$/;"	v	typeref:typename:const char * []
findlocal	..\\scintilla\\lua\\src\\ldebug.c	/^static const char *findlocal (lua_State *L, CallInfo *ci, int n) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,CallInfo * ci,int n)
findnext_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * findnext_xpm[] = {$/;"	v	typeref:typename:const char * []
findopen	..\\scintilla\\lua\\src\\lpcap.c	/^static Capture *findopen (Capture *cap) {$/;"	f	typeref:typename:Capture *	file:	signature:(Capture * cap)
fineTimerStart	..\\scintilla\\win32\\ScintillaWin.cxx	/^	enum { invalidTimerID, standardTimerID, idleTimerID, fineTimerStart };$/;"	e	enum:ScintillaWin::__anon5333cfc50203	file:	access:public
finished	..\\scintilla\\gtk\\PlatGTK.cxx	/^	bool finished;$/;"	m	class:ClusterIterator	typeref:typename:bool	file:	access:public
first	..\\scintilla\\win32\\PlatWin.cxx	/^	static FontCached *first;$/;"	m	class:Scintilla::FontCached	typeref:typename:FontCached *	file:	access:private
first	..\\scintilla\\win32\\PlatWin.cxx	/^FontCached *FontCached::first = 0;$/;"	m	class:Scintilla::FontCached	typeref:typename:FontCached *
firstChangeableLineAfter	..\\scintilla\\src\\Document.h	/^	Sci::Line firstChangeableLineAfter;	\/\/ First line that triggers repaint after starting line t/;"	m	class:Scintilla::HighlightDelimiter	typeref:typename:Sci::Line	access:public
firstChangeableLineBefore	..\\scintilla\\src\\Document.h	/^	Sci::Line firstChangeableLineBefore;	\/\/ First line that triggers repaint before starting line/;"	m	class:Scintilla::HighlightDelimiter	typeref:typename:Sci::Line	access:public
firstLine	..\\scite\\src\\ExportPDF.cxx	/^		bool firstLine;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:bool	file:	access:private
firstPropertiesRead	..\\scite\\src\\SciTEBase.h	/^	bool firstPropertiesRead;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
firstStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	int firstStyle;$/;"	m	class:Scintilla::WordClassifier	typeref:typename:int	access:private
fixedColumnWidth	..\\scintilla\\src\\ViewStyle.h	/^	int fixedColumnWidth;	\/\/\/< Total width of margins$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
fixedWidth	..\\scite\\src\\StripDefinition.h	/^	bool fixedWidth;$/;"	m	class:UserControl	typeref:typename:bool	access:public
fixedlen	..\\scintilla\\lua\\src\\lpcode.h	/^#define fixedlen(/;"	d	signature:(t)
fixedlenx	..\\scintilla\\lua\\src\\lpcode.c	/^int fixedlenx (TTree *tree, int count, int len) {$/;"	f	typeref:typename:int	signature:(TTree * tree,int count,int len)
fixjump	..\\scintilla\\lua\\src\\lcode.c	/^static void fixjump (FuncState *fs, int pc, int dest) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,int pc,int dest)
fixonecall	..\\scintilla\\lua\\src\\lptree.c	/^static void fixonecall (lua_State *L, int postable, TTree *g, TTree *t) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int postable,TTree * g,TTree * t)
flags	..\\scintilla\\lua\\src\\lobject.h	/^  lu_byte flags;  \/* 1<<p means tagmethod(p) is not present *\/ $/;"	m	struct:Table	typeref:typename:lu_byte	access:public
flags	..\\scite\\src\\JobQueue.h	/^	int flags;$/;"	m	class:Job	typeref:typename:int	access:public
flags	..\\scite\\src\\JobQueue.h	/^	int flags;$/;"	m	struct:JobMode	typeref:typename:int	access:public
flags	..\\scite\\src\\LuaExtension.cxx	/^	int flags; \/\/ this is really part of the state, but is kept here for convenience$/;"	m	struct:PaneMatchObject	typeref:typename:int	file:	access:public
flags	..\\scite\\src\\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	g	class:StyleDefinition	access:public
flags	..\\scite\\win32\\SciTEWin.h	/^	int flags;$/;"	m	class:CommandWorker	typeref:typename:int	access:public
flagsMatch	..\\scite\\src\\MatchMarker.h	/^	int flagsMatch;$/;"	m	class:MatchMarker	typeref:typename:int	access:private
flatten	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^def flatten(listOfLists):$/;"	f	access:public	signature:(listOfLists)
flattenSpaces	..\\scite\\scripts\\CheckMentioned.py	/^def flattenSpaces(s):$/;"	f	access:public	signature:(s)
flavorFor	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	QString flavorFor(const QString &mime) {$/;"	f	class:ScintillaRectangularMime	typeref:typename:QString	file:	access:public	signature:(const QString & mime)
flib	..\\scintilla\\lua\\src\\liolib.c	/^static const luaL_Reg flib[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
flushSegment	..\\scite\\src\\ExportPDF.cxx	/^		void flushSegment() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:()
fmMarked	..\\scite\\src\\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anonf95580a60303	access:public
fmModified	..\\scite\\src\\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anonf95580a60303	access:public
fmNone	..\\scite\\src\\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anonf95580a60303	access:public
fmTemporary	..\\scite\\src\\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anonf95580a60303	access:public
fn	..\\scite\\src\\GUI.h	/^	SciFnDirect fn;$/;"	m	class:GUI::ScintillaWindow	typeref:typename:SciFnDirect	access:private
fnFactory	..\\scintilla\\lexlib\\LexerModule.h	/^	LexerFactoryFunction fnFactory;$/;"	m	class:Scintilla::LexerModule	typeref:typename:LexerFactoryFunction	access:protected
fnFolder	..\\scintilla\\lexlib\\LexerModule.h	/^	LexerFunction fnFolder;$/;"	m	class:Scintilla::LexerModule	typeref:typename:LexerFunction	access:protected
fnLexer	..\\scintilla\\lexlib\\LexerModule.h	/^	LexerFunction fnLexer;$/;"	m	class:Scintilla::LexerModule	typeref:typename:LexerFunction	access:protected
fnames	..\\scintilla\\lua\\src\\liolib.c	/^static const char *const fnames[] = {"input", "output"};$/;"	v	typeref:typename:const char * const[]	file:
fneFactory	..\\scintilla\\src\\ExternalLexer.h	/^	GetLexerFactoryFunction fneFactory;$/;"	m	class:Scintilla::ExternalLexerModule	typeref:typename:GetLexerFactoryFunction	access:protected
focusInEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::focusInEvent(QFocusEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QFocusEvent * event)
focusOnReplace	..\\scite\\src\\SciTEBase.h	/^	bool focusOnReplace;$/;"	m	class:Searcher	typeref:typename:bool	access:public
focusOutEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::focusOutEvent(QFocusEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QFocusEvent * event)
foldAutomatic	..\\scintilla\\src\\Editor.h	/^	int foldAutomatic;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
foldDisplayTextStyle	..\\scintilla\\src\\EditModel.h	/^	int foldDisplayTextStyle;$/;"	m	class:Scintilla::EditModel	typeref:typename:int	access:public
foldDisplayTexts	..\\scintilla\\src\\ContractionState.h	/^	std::unique_ptr<SparseVector<UniqueString>> foldDisplayTexts;$/;"	m	class:Scintilla::ContractionState	typeref:typename:std::unique_ptr<SparseVector<UniqueString>>	access:private
foldFlags	..\\scintilla\\src\\EditModel.h	/^	int foldFlags;$/;"	m	class:Scintilla::EditModel	typeref:typename:int	access:public
foldLevelNow	..\\scintilla\\include\\Scintilla.h	/^	int foldLevelNow;	\/* SCN_MODIFIED *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
foldLevelNow	..\\scintilla\\src\\Document.h	/^	int foldLevelNow;$/;"	m	class:Scintilla::DocModification	typeref:typename:int	access:public
foldLevelPrev	..\\scintilla\\include\\Scintilla.h	/^	int foldLevelPrev;	\/* SCN_MODIFIED *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
foldLevelPrev	..\\scintilla\\src\\Document.h	/^	int foldLevelPrev;$/;"	m	class:Scintilla::DocModification	typeref:typename:int	access:public
foldMargin	..\\scite\\src\\SciTEBase.h	/^	bool foldMargin;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
foldMarginWidth	..\\scite\\src\\SciTEBase.h	/^	int foldMarginWidth;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
foldMarginWidthDefault	..\\scite\\src\\SciTEBase.h	/^	enum { foldMarginWidthDefault = 14};$/;"	e	enum:SciTEBase::__anonf95580a61303	access:public
foldState	..\\scite\\src\\SciTEBase.h	/^	std::vector<int> foldState;$/;"	m	class:Buffer	typeref:typename:std::vector<int>	access:public
foldState	..\\scite\\src\\SciTEBase.h	/^	std::vector<int> foldState;$/;"	m	struct:BufferState	typeref:typename:std::vector<int>	access:public
foldcap	..\\scintilla\\lua\\src\\lpcap.c	/^static int foldcap (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
foldmarginColour	..\\scintilla\\src\\ViewStyle.h	/^	ColourOptional foldmarginColour;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourOptional	access:public
foldmarginHighlightColour	..\\scintilla\\src\\ViewStyle.h	/^	ColourOptional foldmarginHighlightColour;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourOptional	access:public
font	..\\scintilla\\src\\CallTip.h	/^	Font font;$/;"	m	class:Scintilla::CallTip	typeref:typename:Font	access:private
font	..\\scintilla\\src\\Style.h	/^	FontAlias font;$/;"	m	class:Scintilla::Style	typeref:typename:FontAlias	access:public
font	..\\scintilla\\src\\ViewStyle.h	/^	Font font;$/;"	m	class:Scintilla::FontRealised	typeref:typename:Font	access:public
font	..\\scintilla\\win32\\PlatWin.cxx	/^	HFONT font;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HFONT	file:	access:private
font	..\\scite\\src\\ExportPDF.cxx	/^	int font;$/;"	m	struct:PDFStyle	typeref:typename:int	file:	access:public
font	..\\scite\\src\\StyleDefinition.h	/^	std::string font;$/;"	m	class:StyleDefinition	typeref:typename:std::string	access:public
fontCopy	..\\scintilla\\win32\\PlatWin.cxx	/^	FontID fontCopy;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:FontID	file:	access:private
fontName	..\\scintilla\\src\\Style.h	/^	const char *fontName;$/;"	m	struct:Scintilla::FontSpecification	typeref:typename:const char *	access:public
fontNames	..\\scintilla\\src\\ViewStyle.h	/^	FontNames fontNames;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:FontNames	access:private
fontOld	..\\scintilla\\win32\\PlatWin.cxx	/^	HFONT fontOld;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HFONT	file:	access:private
fontRef	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	CTFontRef fontRef;$/;"	m	class:QuartzTextStyle	typeref:typename:CTFontRef	access:private
fontSet	..\\scite\\src\\ExportPDF.cxx	/^		int fontSet;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:int	file:	access:public
fontSize	..\\scite\\src\\ExportPDF.cxx	/^		int fontSize;		\/\/ properties supplied by user$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:int	file:	access:public
fontTabs	..\\scite\\win32\\SciTEWin.h	/^	HFONT fontTabs;$/;"	m	class:SciTEWin	typeref:typename:HFONT	access:protected
fontText	..\\scite\\win32\\Strips.h	/^	HFONT fontText;$/;"	m	class:Strip	typeref:typename:HFONT	access:protected
fontToPoints	..\\scite\\src\\ExportPDF.cxx	/^		double fontToPoints(int thousandths) const {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:double	file:	access:public	signature:(int thousandths) const
fontid	..\\scintilla\\cocoa\\QuartzTextStyleAttribute.h	/^	CTFontRef fontid;$/;"	m	class:QuartzFont	typeref:typename:CTFontRef	access:private
fonts	..\\scintilla\\src\\ViewStyle.h	/^	FontMap fonts;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:FontMap	access:private
fopen	..\\scite\\src\\FilePath.cxx	/^static FILE *fopen(const wchar_t *filename, const wchar_t *mode) {$/;"	f	typeref:typename:FILE *	file:	signature:(const wchar_t * filename,const wchar_t * mode)
fopen	..\\scite\\src\\scite_lua_win.h	/^#define fopen /;"	d
forbody	..\\scintilla\\lua\\src\\lparser.c	/^static void forbody (LexState *ls, int base, int line, int nvars, int isnum) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int base,int line,int nvars,int isnum)
fore	..\\scintilla\\src\\Indicator.h	/^	ColourDesired fore;$/;"	m	struct:Scintilla::StyleAndColour	typeref:typename:ColourDesired	access:public
fore	..\\scintilla\\src\\LineMarker.h	/^	ColourDesired fore;$/;"	m	class:Scintilla::LineMarker	typeref:typename:ColourDesired	access:public
fore	..\\scintilla\\src\\Style.h	/^	ColourDesired fore;$/;"	m	class:Scintilla::Style	typeref:typename:ColourDesired	access:public
fore	..\\scintilla\\src\\ViewStyle.h	/^	ColourOptional fore;$/;"	m	struct:Scintilla::ForeBackColours	typeref:typename:ColourOptional	access:public
fore	..\\scite\\src\\ExportPDF.cxx	/^	char fore[24];$/;"	m	struct:PDFStyle	typeref:typename:char[24]	file:	access:public
fore	..\\scite\\src\\StyleDefinition.h	/^	std::string fore;$/;"	m	class:StyleDefinition	typeref:typename:std::string	access:public
foreach	..\\scintilla\\lua\\src\\ltablib.c	/^static int foreach (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
foreachi	..\\scintilla\\lua\\src\\ltablib.c	/^static int foreachi (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
forlist	..\\scintilla\\lua\\src\\lparser.c	/^static void forlist (LexState *ls, TString *indexname) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,TString * indexname)
form	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^    form = Form()$/;"	v	access:public
formats	..\\scintilla\\win32\\ScintillaWin.cxx	/^	std::vector<CLIPFORMAT> formats;$/;"	m	class:FormatEnumerator	typeref:typename:std::vector<CLIPFORMAT>	file:	access:public
fornum	..\\scintilla\\lua\\src\\lparser.c	/^static void fornum (LexState *ls, TString *varname, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,TString * varname,int line)
forstat	..\\scintilla\\lua\\src\\lparser.c	/^static void forstat (LexState *ls, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int line)
fp	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^				QFunctionPointer fp;$/;"	m	union:Scintilla::DynamicLibraryImpl::FindFunction::__anon1e21bbec020a	typeref:typename:QFunctionPointer	file:	access:public
fp	..\\scintilla\\win32\\PlatWin.cxx	/^				FARPROC fp;$/;"	m	union:Scintilla::DynamicLibraryImpl::FindFunction::__anon82a12833020a	typeref:typename:FARPROC	file:	access:public
fp	..\\scite\\src\\ExportPDF.cxx	/^		FILE *fp;$/;"	m	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:FILE *	file:	access:private
fp	..\\scite\\src\\FileWorker.h	/^	FILE *fp;$/;"	m	struct:FileWorker	typeref:typename:FILE *	access:public
fp	..\\scite\\src\\SciTEIO.cxx	/^	FILE *fp;$/;"	m	class:BufferedFile	typeref:typename:FILE *	file:	access:private
frame	..\\scintilla\\gtk\\PlatGTK.cxx	/^	WindowID frame;$/;"	m	class:ListBoxX	typeref:typename:WindowID	file:	access:private
frealloc	..\\scintilla\\lua\\src\\lstate.h	/^  lua_Alloc frealloc;  \/* function to reallocate memory *\/$/;"	m	struct:global_State	typeref:typename:lua_Alloc	access:public
free_	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void free_(void *) { }$/;"	f	typeref:typename:void	file:	signature:(void *)
freeexp	..\\scintilla\\lua\\src\\lcode.c	/^static void freeexp (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e)
freeobj	..\\scintilla\\lua\\src\\lgc.c	/^static void freeobj (lua_State *L, GCObject *o) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,GCObject * o)
freereg	..\\scintilla\\lua\\src\\lcode.c	/^static void freereg (FuncState *fs, int reg) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,int reg)
freereg	..\\scintilla\\lua\\src\\lparser.h	/^  int freereg;  \/* first free register *\/$/;"	m	struct:FuncState	typeref:typename:int	access:public
freestack	..\\scintilla\\lua\\src\\lstate.c	/^static void freestack (lua_State *L, lua_State *L1) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,lua_State * L1)
frequency	..\\scintilla\\win32\\PlatWin.cxx	/^static LARGE_INTEGER frequency;$/;"	v	namespace:Scintilla	typeref:typename:LARGE_INTEGER	file:
frequency	..\\scite\\win32\\GUIWin.cxx	/^static LARGE_INTEGER frequency;$/;"	v	namespace:GUI	typeref:typename:LARGE_INTEGER	file:
fromstate	..\\scintilla\\lua\\src\\lstate.c	/^#define fromstate(/;"	d	file:	signature:(l)
fs	..\\scintilla\\lua\\src\\llex.h	/^  struct FuncState *fs;  \/* `FuncState' is private to the parser *\/$/;"	m	struct:LexState	typeref:struct:FuncState *	access:public
fullScreen	..\\scite\\src\\SciTEBase.h	/^	bool fullScreen;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
fullset	..\\scintilla\\lua\\src\\lpcode.c	/^static const Charset *fullset = &fullset_;$/;"	v	typeref:typename:const Charset *	file:
fullset_	..\\scintilla\\lua\\src\\lpcode.c	/^static const Charset fullset_ =$/;"	v	typeref:typename:const Charset	file:
func	..\\scintilla\\lua\\src\\lapi.c	/^  StkId func;$/;"	m	struct:CallS	typeref:typename:StkId	file:	access:public
func	..\\scintilla\\lua\\src\\lapi.c	/^  lua_CFunction func;$/;"	m	struct:CCallS	typeref:typename:lua_CFunction	file:	access:public
func	..\\scintilla\\lua\\src\\lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	typeref:typename:lua_CFunction	access:public
func	..\\scintilla\\lua\\src\\lstate.h	/^  StkId func;  \/* function index in the stack *\/$/;"	m	struct:CallInfo	typeref:typename:StkId	access:public
func	..\\scite\\lua\\include\\lauxlib.h	/^  lua_CFunction func;$/;"	m	struct:luaL_Reg	typeref:typename:lua_CFunction	access:public
funcargs	..\\scintilla\\lua\\src\\lparser.c	/^static void funcargs (LexState *ls, expdesc *f) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * f)
funcinfo	..\\scintilla\\lua\\src\\ldebug.c	/^static void funcinfo (lua_Debug *ar, Closure *cl) {$/;"	f	typeref:typename:void	file:	signature:(lua_Debug * ar,Closure * cl)
funcinstsize	..\\scintilla\\lua\\src\\lptypes.h	/^#define funcinstsize(/;"	d	signature:(p)
funcname	..\\scintilla\\lua\\src\\lparser.c	/^static int funcname (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls,expdesc * v)
funcstat	..\\scintilla\\lua\\src\\lparser.c	/^static void funcstat (LexState *ls, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int line)
functionCount	..\\scite\\src\\IFaceTable.cxx	/^const int IFaceTable::functionCount = ifaceFunctionCount;$/;"	m	class:IFaceTable	typeref:typename:const int
functionCount	..\\scite\\src\\IFaceTable.h	/^	static const int functionCount;$/;"	m	class:IFaceTable	typeref:typename:const int	access:public
functionDefinition	..\\scite\\src\\SciTEBase.h	/^	std::string functionDefinition;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
functioncap	..\\scintilla\\lua\\src\\lpcap.c	/^static int functioncap (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
functions	..\\scite\\src\\IFaceTable.cxx	/^const IFaceFunction * const IFaceTable::functions = ifaceFunctions;$/;"	m	class:IFaceTable	typeref:typename:const IFaceFunction * const
functions	..\\scite\\src\\IFaceTable.h	/^	static const IFaceFunction * const functions;$/;"	m	class:IFaceTable	typeref:typename:const IFaceFunction * const	access:public
futureDo	..\\scite\\src\\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	m	class:Buffer	typeref:enum:Buffer::FutureDo	access:public
fwrite	..\\scite\\src\\Utf8_16.cxx	/^size_t Utf8_16_Write::fwrite(const void* p, size_t _size) {$/;"	f	class:Utf8_16_Write	typeref:typename:size_t	signature:(const void * p,size_t _size)
g	..\\scintilla\\lua\\src\\lstate.c	/^  global_State g;$/;"	m	struct:LG	typeref:typename:global_State	file:	access:public
g	..\\scite\\src\\Credits.cxx	/^	int g;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:public
g_iofile	..\\scintilla\\lua\\src\\liolib.c	/^static int g_iofile (lua_State *L, int f, const char *mode) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int f,const char * mode)
g_marshal_value_peek_boolean	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_boolean(/;"	d	file:	signature:(v)
g_marshal_value_peek_boxed	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_boxed(/;"	d	file:	signature:(v)
g_marshal_value_peek_char	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_char(/;"	d	file:	signature:(v)
g_marshal_value_peek_double	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_double(/;"	d	file:	signature:(v)
g_marshal_value_peek_enum	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_enum(/;"	d	file:	signature:(v)
g_marshal_value_peek_flags	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_flags(/;"	d	file:	signature:(v)
g_marshal_value_peek_float	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_float(/;"	d	file:	signature:(v)
g_marshal_value_peek_int	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_int(/;"	d	file:	signature:(v)
g_marshal_value_peek_int64	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_int64(/;"	d	file:	signature:(v)
g_marshal_value_peek_long	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_long(/;"	d	file:	signature:(v)
g_marshal_value_peek_object	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_object(/;"	d	file:	signature:(v)
g_marshal_value_peek_param	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_param(/;"	d	file:	signature:(v)
g_marshal_value_peek_pointer	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_pointer(/;"	d	file:	signature:(v)
g_marshal_value_peek_string	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_string(/;"	d	file:	signature:(v)
g_marshal_value_peek_uchar	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_uchar(/;"	d	file:	signature:(v)
g_marshal_value_peek_uint	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_uint(/;"	d	file:	signature:(v)
g_marshal_value_peek_uint64	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_uint64(/;"	d	file:	signature:(v)
g_marshal_value_peek_ulong	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_ulong(/;"	d	file:	signature:(v)
g_marshal_value_peek_variant	..\\scintilla\\gtk\\scintilla-marshal.c	/^#define g_marshal_value_peek_variant(/;"	d	file:	signature:(v)
g_read	..\\scintilla\\lua\\src\\liolib.c	/^static int g_read (lua_State *L, FILE *f, int first) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,FILE * f,int first)
g_write	..\\scintilla\\lua\\src\\liolib.c	/^static int g_write (lua_State *L, FILE *f, int arg) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,FILE * f,int arg)
gapLength	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t gapLength;	\/\/\/ invariant: gapLength == body.size() - lengthBody$/;"	m	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:protected
gc	..\\scintilla\\cocoa\\PlatCocoa.h	/^  CGContextRef gc;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:CGContextRef	access:private
gc	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    CGContextRef gc;$/;"	m	class:QuartzTextLayout	typeref:typename:CGContextRef	access:private
gc	..\\scintilla\\lua\\src\\lobject.h	/^  GCObject *gc;$/;"	m	union:__anonae4e9c5f010a	typeref:typename:GCObject *	access:public
gcdept	..\\scintilla\\lua\\src\\lstate.h	/^  lu_mem gcdept;  \/* how much GC is `behind schedule' *\/$/;"	m	struct:global_State	typeref:typename:lu_mem	access:public
gch	..\\scintilla\\lua\\src\\lstate.h	/^  GCheader gch;$/;"	m	union:GCObject	typeref:typename:GCheader	access:public
gclist	..\\scintilla\\lua\\src\\lobject.h	/^  GCObject *gclist;$/;"	m	struct:Proto	typeref:typename:GCObject *	access:public
gclist	..\\scintilla\\lua\\src\\lobject.h	/^  GCObject *gclist;$/;"	m	struct:Table	typeref:typename:GCObject *	access:public
gclist	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *gclist;$/;"	m	struct:lua_State	typeref:typename:GCObject *	access:public
gco2cl	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2cl(/;"	d	signature:(o)
gco2h	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2h(/;"	d	signature:(o)
gco2p	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2p(/;"	d	signature:(o)
gco2th	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2th(/;"	d	signature:(o)
gco2ts	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2ts(/;"	d	signature:(o)
gco2u	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2u(/;"	d	signature:(o)
gco2uv	..\\scintilla\\lua\\src\\lstate.h	/^#define gco2uv(/;"	d	signature:(o)
gcpause	..\\scintilla\\lua\\src\\lstate.h	/^  int gcpause;  \/* size of pause between successive GCs *\/$/;"	m	struct:global_State	typeref:typename:int	access:public
gcstate	..\\scintilla\\lua\\src\\lstate.h	/^  lu_byte gcstate;  \/* state of garbage collector *\/$/;"	m	struct:global_State	typeref:typename:lu_byte	access:public
gcstepmul	..\\scintilla\\lua\\src\\lstate.h	/^  int gcstepmul;  \/* GC `granularity' *\/$/;"	m	struct:global_State	typeref:typename:int	access:public
gctm	..\\scintilla\\lua\\src\\loadlib.c	/^static int gctm (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
gcvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define gcvalue(/;"	d	signature:(o)
generateAPI	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def generateAPI(self, args):$/;"	m	class:SepBuilder	access:public	signature:(self, args)
generic_reader	..\\scintilla\\lua\\src\\lbaselib.c	/^static const char *generic_reader (lua_State *L, void *ud, size_t *size) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,void * ud,size_t * size)
get	..\\scite\\src\\Utf8_16.h	/^	int get() const {$/;"	f	class:Utf8_Iter	typeref:typename:int	access:public	signature:() const
get	..\\scite\\src\\Utf8_16.h	/^	utf8 get() const {$/;"	f	class:Utf16_Iter	typeref:typename:utf8	access:public	signature:() const
getAscent	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	float getAscent() const$/;"	f	class:QuartzTextStyle	typeref:typename:float	access:public	signature:() const
getBMode	..\\scintilla\\lua\\src\\lopcodes.h	/^#define getBMode(/;"	d	signature:(m)
getCMode	..\\scintilla\\lua\\src\\lopcodes.h	/^#define getCMode(/;"	d	signature:(m)
getCTLine	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    CTLineRef getCTLine() {$/;"	f	class:QuartzTextLayout	typeref:typename:CTLineRef	access:public	signature:()
getCTStyle	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	CFMutableDictionaryRef getCTStyle() const$/;"	f	class:QuartzTextStyle	typeref:typename:CFMutableDictionaryRef	access:public	signature:() const
getCharacterSet	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	int getCharacterSet()$/;"	f	class:QuartzTextStyle	typeref:typename:int	access:public	signature:()
getDescent	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	float getDescent() const$/;"	f	class:QuartzTextStyle	typeref:typename:float	access:public	signature:() const
getEncoding	..\\scite\\src\\Utf8_16.h	/^	encodingType getEncoding() const { return m_eEncoding; }$/;"	f	class:Utf8_16_Read	typeref:typename:encodingType	access:public	signature:() const
getF	..\\scintilla\\lua\\src\\lauxlib.c	/^static const char *getF (lua_State *L, void *ud, size_t *size) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,void * ud,size_t * size)
getFontID	..\\scintilla\\cocoa\\QuartzTextStyleAttribute.h	/^	CTFontRef getFontID()$/;"	f	class:QuartzFont	typeref:typename:CTFontRef	access:public	signature:()
getFontRef	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	CTFontRef getFontRef()$/;"	f	class:QuartzTextStyle	typeref:typename:CTFontRef	access:public	signature:()
getLeading	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	float getLeading() const$/;"	f	class:QuartzTextStyle	typeref:typename:float	access:public	signature:() const
getNewBuf	..\\scite\\src\\Utf8_16.h	/^	char* getNewBuf() { return reinterpret_cast<char*>(m_pNewBuf); }$/;"	f	class:Utf8_16_Read	typeref:typename:char *	access:public	signature:()
getOpMode	..\\scintilla\\lua\\src\\lopcodes.h	/^#define getOpMode(/;"	d	signature:(m)
getPDFRGB	..\\scite\\src\\ExportPDF.cxx	/^inline void getPDFRGB(char* pdfcolour, const char* stylecolour) {$/;"	f	typeref:typename:void	signature:(char * pdfcolour,const char * stylecolour)
getRange	..\\scintilla\\lexlib\\StyleContext.cxx	/^static void getRange(Sci_PositionU start,$/;"	f	typeref:typename:void	file:	signature:(Sci_PositionU start,Sci_PositionU end,LexAccessor & styler,char * s,Sci_PositionU len)
getRangeLowered	..\\scintilla\\lexlib\\StyleContext.cxx	/^static void getRangeLowered(Sci_PositionU start,$/;"	f	typeref:typename:void	file:	signature:(Sci_PositionU start,Sci_PositionU end,LexAccessor & styler,char * s,Sci_PositionU len)
getS	..\\scintilla\\lua\\src\\lauxlib.c	/^static const char *getS (lua_State *L, void *ud, size_t *size) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,void * ud,size_t * size)
getStringLength	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    CFIndex getStringLength() {$/;"	f	class:QuartzTextLayout	typeref:typename:CFIndex	access:public	signature:()
getTexRGB	..\\scite\\src\\ExportTEX.cxx	/^static char* getTexRGB(char* texcolor, const char* stylecolor) {$/;"	f	typeref:typename:char *	file:	signature:(char * texcolor,const char * stylecolor)
get_char_range	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^QByteArray ScintillaDocument::get_char_range(int position, int length) {$/;"	f	class:ScintillaDocument	typeref:typename:QByteArray	signature:(int position,int length)
get_character	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::get_character(int pos) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int pos)
get_code_page	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::get_code_page() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
get_compTM	..\\scintilla\\lua\\src\\lvm.c	/^static const TValue *get_compTM (lua_State *L, Table *mt1, Table *mt2,$/;"	f	typeref:typename:const TValue *	file:	signature:(lua_State * L,Table * mt1,Table * mt2,TMS event)
get_end_styled	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::get_end_styled() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
get_eol_mode	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::get_eol_mode() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
get_prompt	..\\scintilla\\lua\\src\\lua.c	/^static const char *get_prompt (lua_State *L, int firstline) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,int firstline)
getargs	..\\scintilla\\lua\\src\\lua.c	/^static int getargs (lua_State *L, char **argv, int n) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,char ** argv,int n)
getbinopr	..\\scintilla\\lua\\src\\lparser.c	/^static BinOpr getbinopr (int op) {$/;"	f	typeref:typename:BinOpr	file:	signature:(int op)
getboolfield	..\\scintilla\\lua\\src\\loslib.c	/^static int getboolfield (lua_State *L, const char *key) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * key)
getcaptures	..\\scintilla\\lua\\src\\lpcap.c	/^int getcaptures (lua_State *L, const char *s, const char *r, int ptop) {$/;"	f	typeref:typename:int	signature:(lua_State * L,const char * s,const char * r,int ptop)
getcode	..\\scintilla\\lua\\src\\lcode.h	/^#define getcode(/;"	d	signature:(fs,e)
getcurrenv	..\\scintilla\\lua\\src\\lapi.c	/^static Table *getcurrenv (lua_State *L) {$/;"	f	typeref:typename:Table *	file:	signature:(lua_State * L)
getcwd	..\\scite\\src\\FilePath.cxx	/^static wchar_t *getcwd(wchar_t *buffer, int maxlen) {$/;"	f	typeref:typename:wchar_t *	file:	signature:(wchar_t * buffer,int maxlen)
getfield	..\\scintilla\\lua\\src\\loslib.c	/^static int getfield (lua_State *L, const char *key, int d) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * key,int d)
getfirst	..\\scintilla\\lua\\src\\lpcode.c	/^static int getfirst (TTree *tree, const Charset *follow, Charset *firstset) {$/;"	f	typeref:typename:int	file:	signature:(TTree * tree,const Charset * follow,Charset * firstset)
getfirstrule	..\\scintilla\\lua\\src\\lptree.c	/^static void getfirstrule (lua_State *L, int arg, int postab) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int arg,int postab)
getfreepos	..\\scintilla\\lua\\src\\ltable.c	/^static Node *getfreepos (Table *t) {$/;"	f	typeref:typename:Node *	file:	signature:(Table * t)
getfromktable	..\\scintilla\\lua\\src\\lpcap.c	/^#define getfromktable(/;"	d	file:	signature:(cs,v)
getfunc	..\\scintilla\\lua\\src\\lbaselib.c	/^static void getfunc (lua_State *L, int opt) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int opt)
getfuncname	..\\scintilla\\lua\\src\\ldebug.c	/^static const char *getfuncname (lua_State *L, CallInfo *ci, const char **name) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,CallInfo * ci,const char ** name)
gethere	..\\scintilla\\lua\\src\\lpcode.c	/^#define gethere(/;"	d	file:	signature:(compst)
gethooktable	..\\scintilla\\lua\\src\\ldblib.c	/^static void gethooktable (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
getinstr	..\\scintilla\\lua\\src\\lpcode.c	/^#define getinstr(/;"	d	file:	signature:(cs,i)
getiofile	..\\scintilla\\lua\\src\\liolib.c	/^static FILE *getiofile (lua_State *L, int findex) {$/;"	f	typeref:typename:FILE *	file:	signature:(lua_State * L,int findex)
getjump	..\\scintilla\\lua\\src\\lcode.c	/^static int getjump (FuncState *fs, int pc) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,int pc)
getjumpcontrol	..\\scintilla\\lua\\src\\lcode.c	/^static Instruction *getjumpcontrol (FuncState *fs, int pc) {$/;"	f	typeref:typename:Instruction *	file:	signature:(FuncState * fs,int pc)
getkind	..\\scintilla\\lua\\src\\lptypes.h	/^#define getkind(/;"	d	signature:(op)
getline	..\\scintilla\\lua\\src\\ldebug.h	/^#define getline(/;"	d	signature:(f,pc)
getlocvar	..\\scintilla\\lua\\src\\lparser.c	/^#define getlocvar(/;"	d	file:	signature:(fs,i)
getluaproto	..\\scintilla\\lua\\src\\ldebug.c	/^static Proto *getluaproto (CallInfo *ci) {$/;"	f	typeref:typename:Proto *	file:	signature:(CallInfo * ci)
getn	..\\scintilla\\lua\\src\\ltablib.c	/^static int getn (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
getobjname	..\\scintilla\\lua\\src\\ldebug.c	/^static const char *getobjname (lua_State *L, CallInfo *ci, int stackpos,$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,CallInfo * ci,int stackpos,const char ** name)
getoff	..\\scintilla\\lua\\src\\lptypes.h	/^#define getoff(/;"	d	signature:(op)
getoffset	..\\scintilla\\lua\\src\\lpvm.c	/^#define getoffset(/;"	d	file:	signature:(p)
getpatt	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *getpatt (lua_State *L, int idx, int *len) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int idx,int * len)
getpattern	..\\scintilla\\lua\\src\\lptree.c	/^static Pattern *getpattern (lua_State *L, int idx) {$/;"	f	typeref:typename:Pattern *	file:	signature:(lua_State * L,int idx)
getsize	..\\scintilla\\lua\\src\\lptree.c	/^static int getsize (lua_State *L, int idx) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int idx)
getsizes	..\\scintilla\\lua\\src\\lauxlib.c	/^static void getsizes (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
getstackbase	..\\scintilla\\lua\\src\\lpvm.c	/^#define getstackbase(/;"	d	file:	signature:(L,ptop)
getstr	..\\scintilla\\lua\\src\\lobject.h	/^#define getstr(/;"	d	signature:(ts)
getstrcaps	..\\scintilla\\lua\\src\\lpcap.c	/^static int getstrcaps (CapState *cs, StrAux *cps, int n) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs,StrAux * cps,int n)
getter	..\\scite\\src\\IFaceTable.h	/^	int getter;$/;"	m	struct:IFaceProperty	typeref:typename:int	access:public
getthread	..\\scintilla\\lua\\src\\ldblib.c	/^static lua_State *getthread (lua_State *L, int *arg) {$/;"	f	typeref:typename:lua_State *	file:	signature:(lua_State * L,int * arg)
gettree	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *gettree (lua_State *L, int idx, int *len) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int idx,int * len)
getunopr	..\\scintilla\\lua\\src\\lparser.c	/^static UnOpr getunopr (int op) {$/;"	f	typeref:typename:UnOpr	file:	signature:(int op)
gfasttm	..\\scintilla\\lua\\src\\ltm.h	/^#define gfasttm(/;"	d	signature:(g,et,e)
gfind_nodef	..\\scintilla\\lua\\src\\lstrlib.c	/^static int gfind_nodef (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
giveup	..\\scintilla\\lua\\src\\lpvm.c	/^static const Instruction giveup = {{IGiveup, 0, 0}};$/;"	v	typeref:typename:const Instruction	file:
gkey	..\\scintilla\\lua\\src\\ltable.h	/^#define gkey(/;"	d	signature:(n)
globalL	..\\scintilla\\lua\\src\\lua.c	/^static lua_State *globalL = NULL;$/;"	v	typeref:typename:lua_State *	file:
global_State	..\\scintilla\\lua\\src\\lstate.h	/^typedef struct global_State {$/;"	s
global_State	..\\scintilla\\lua\\src\\lstate.h	/^} global_State;$/;"	t	typeref:struct:global_State
gmatch	..\\scintilla\\lua\\src\\lstrlib.c	/^static int gmatch (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
gmatch_aux	..\\scintilla\\lua\\src\\lstrlib.c	/^static int gmatch_aux (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
gnext	..\\scintilla\\lua\\src\\ltable.h	/^#define gnext(/;"	d	signature:(n)
gnode	..\\scintilla\\lua\\src\\ltable.h	/^#define gnode(/;"	d	signature:(t,i)
grabFile	..\\scite\\scripts\\tags2api.py	/^	def grabFile(self, filename):$/;"	m	class:FileCache	access:public	signature:(self, filename)
grabQuoted	..\\scite\\scripts\\CheckPropsDoc.py	/^def grabQuoted(s):$/;"	f	access:public	signature:(s)
grapheme_width	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int grapheme_width(const char *s) {$/;"	f	class:SurfaceImpl	typeref:typename:int	file:	access:private	signature:(const char * s)
gray	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *gray;  \/* list of gray objects *\/$/;"	m	struct:global_State	typeref:typename:GCObject *	access:public
gray2black	..\\scintilla\\lua\\src\\lgc.h	/^#define gray2black(/;"	d	signature:(x)
grayagain	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *grayagain;  \/* list of objects to be traversed atomically *\/$/;"	m	struct:global_State	typeref:typename:GCObject *	access:public
grepBinary	..\\scite\\src\\SciTEBase.h	/^	    grepDot = 8, grepBinary = 16, grepScroll = 32$/;"	e	enum:SciTEBase::GrepFlags	access:public
grepDot	..\\scite\\src\\SciTEBase.h	/^	    grepDot = 8, grepBinary = 16, grepScroll = 32$/;"	e	enum:SciTEBase::GrepFlags	access:public
grepMatchCase	..\\scite\\src\\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags	access:public
grepNone	..\\scite\\src\\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags	access:public
grepScroll	..\\scite\\src\\SciTEBase.h	/^	    grepDot = 8, grepBinary = 16, grepScroll = 32$/;"	e	enum:SciTEBase::GrepFlags	access:public
grepStdOut	..\\scite\\src\\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags	access:public
grepWholeWord	..\\scite\\src\\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags	access:public
groupNeeded	..\\scintilla\\src\\Document.h	/^	bool groupNeeded;$/;"	m	class:Scintilla::UndoGroup	typeref:typename:bool	access:private
groupRanges	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^def groupRanges(symmetrics):$/;"	f	access:public	signature:(symmetrics)
growCI	..\\scintilla\\lua\\src\\ldo.c	/^static CallInfo *growCI (lua_State *L) {$/;"	f	typeref:typename:CallInfo *	file:	signature:(lua_State * L)
growSize	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t growSize;$/;"	m	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:protected
gt	..\\scintilla\\lua\\src\\lstate.h	/^#define gt(/;"	d	signature:(L)
gtkNames	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def gtkNames():$/;"	f	access:public	signature:()
gui_char	..\\scite\\src\\GUI.h	/^typedef char gui_char;$/;"	t	namespace:GUI	typeref:typename:char
gui_char	..\\scite\\src\\GUI.h	/^typedef wchar_t gui_char;$/;"	t	namespace:GUI	typeref:typename:wchar_t
gui_string	..\\scite\\src\\GUI.h	/^typedef std::string gui_string;$/;"	t	namespace:GUI	typeref:typename:std::string
gui_string	..\\scite\\src\\GUI.h	/^typedef std::wstring gui_string;$/;"	t	namespace:GUI	typeref:typename:std::wstring
gval	..\\scintilla\\lua\\src\\ltable.h	/^#define gval(/;"	d	signature:(n)
h	..\\scintilla\\lua\\src\\lparser.h	/^  Table *h;  \/* table to find (and reuse) elements in `k' *\/$/;"	m	struct:FuncState	typeref:typename:Table *	access:public
h	..\\scintilla\\lua\\src\\lstate.h	/^  struct Table h;$/;"	m	union:GCObject	typeref:struct:Table	access:public
h	..\\scintilla\\win32\\PlatWin.cxx	/^	HMODULE h;$/;"	m	class:Scintilla::DynamicLibraryImpl	typeref:typename:HMODULE	file:	access:protected
hAccTable	..\\scite\\win32\\SciTEWin.h	/^	HACCEL hAccTable;$/;"	m	class:SciTEWin	typeref:typename:HACCEL	access:protected
hBrushBack	..\\scintilla\\win32\\PlatWin.cxx	/^	HBRUSH hBrushBack;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:HBRUSH	file:	access:private
hDLLD2D	..\\scintilla\\win32\\PlatWin.cxx	/^static HMODULE hDLLD2D = NULL;$/;"	v	namespace:Scintilla	typeref:typename:HMODULE	file:
hDLLDWrite	..\\scintilla\\win32\\PlatWin.cxx	/^static HMODULE hDLLDWrite = NULL;$/;"	v	namespace:Scintilla	typeref:typename:HMODULE	file:
hDevMode	..\\scite\\win32\\SciTEWin.h	/^	HGLOBAL hDevMode;$/;"	m	class:SciTEWin	typeref:typename:HGLOBAL	access:protected
hDevNames	..\\scite\\win32\\SciTEWin.h	/^	HGLOBAL hDevNames;$/;"	m	class:SciTEWin	typeref:typename:HGLOBAL	access:protected
hDlg	..\\scite\\win32\\SciTEWinDlg.cxx	/^	HWND hDlg;$/;"	m	class:Dialog	typeref:typename:HWND	file:	access:private
hHH	..\\scite\\win32\\SciTEWin.h	/^	HMODULE hHH;$/;"	m	class:SciTEWin	typeref:typename:HMODULE	access:protected
hIMC	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HIMC hIMC;$/;"	m	class:__anon5333cfc50111::IMContext	typeref:typename:HIMC	file:	access:public
hInstance	..\\scintilla\\win32\\ScintillaWin.cxx	/^	static HINSTANCE hInstance;$/;"	m	class:ScintillaWin	typeref:typename:HINSTANCE	file:	access:private
hInstance	..\\scintilla\\win32\\ScintillaWin.cxx	/^HINSTANCE ScintillaWin::hInstance = 0;$/;"	m	class:ScintillaWin	typeref:typename:HINSTANCE
hInstance	..\\scite\\win32\\SciTEWin.cxx	/^HINSTANCE SciTEWin::hInstance = 0;$/;"	m	class:SciTEWin	typeref:typename:HINSTANCE
hInstance	..\\scite\\win32\\SciTEWin.h	/^	static HINSTANCE hInstance;$/;"	m	class:SciTEWin	typeref:typename:HINSTANCE	access:protected
hMM	..\\scite\\win32\\SciTEWin.h	/^	HMODULE hMM;$/;"	m	class:SciTEWin	typeref:typename:HMODULE	access:protected
hMax	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	int vMax, hMax;   \/\/ Scroll bar maximums.$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:int	access:private
hOtherWindow	..\\scite\\win32\\UniqueInstance.h	/^	HWND hOtherWindow;	\/\/\/< Handle of the window of the found other instance$/;"	m	class:UniqueInstance	typeref:typename:HWND	access:private
hPage	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	int vPage, hPage; \/\/ Scroll bar page sizes.$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:int	access:private
hRgnUpdate	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HRGN hRgnUpdate;$/;"	m	class:ScintillaWin	typeref:typename:HRGN	file:	access:private
hTheme	..\\scite\\win32\\Strips.h	/^	HTHEME hTheme;$/;"	m	class:Strip	typeref:typename:HTHEME	access:protected
hToolbarBitmap	..\\scite\\win32\\SciTEWin.h	/^	HBITMAP hToolbarBitmap;$/;"	m	class:SciTEWin	typeref:typename:HBITMAP	access:protected
hWriteSubProcess	..\\scite\\win32\\SciTEWin.h	/^	HANDLE hWriteSubProcess;$/;"	m	class:SciTEWin	typeref:typename:HANDLE	access:protected
hand	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HGLOBAL hand;$/;"	m	class:GlobalMemory	typeref:typename:HGLOBAL	file:	access:private
handle	..\\scintilla\\src\\PerLine.h	/^	int handle;$/;"	m	struct:Scintilla::MarkerHandleNumber	typeref:typename:int	access:public
handleCurrent	..\\scintilla\\src\\PerLine.h	/^	int handleCurrent;$/;"	m	class:Scintilla::LineMarkers	typeref:typename:int	access:private
handle_luainit	..\\scintilla\\lua\\src\\lua.c	/^static int handle_luainit (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
handle_script	..\\scintilla\\lua\\src\\lua.c	/^static int handle_script (lua_State *L, char **argv, int n) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,char ** argv,int n)
hasClose	..\\scite\\src\\StripDefinition.h	/^	bool hasClose;$/;"	m	class:StripDefinition	typeref:typename:bool	access:public
hasFocus	..\\scintilla\\src\\Editor.h	/^	bool hasFocus;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
hasOKText	..\\scintilla\\win32\\ScintillaWin.cxx	/^	bool hasOKText;$/;"	m	class:ScintillaWin	typeref:typename:bool	file:	access:private
hasStyles	..\\scintilla\\src\\CellBuffer.h	/^	bool hasStyles;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:bool	access:private
hascaptures	..\\scintilla\\lua\\src\\lpcode.c	/^int hascaptures (TTree *tree) {$/;"	f	typeref:typename:int	signature:(TTree * tree)
hash	..\\scintilla\\lua\\src\\lobject.h	/^    unsigned int hash;$/;"	m	struct:TString::__anonae4e9c5f0208	typeref:typename:unsigned int	access:public
hash	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject **hash;$/;"	m	struct:stringtable	typeref:typename:GCObject **	access:public
hash	..\\scintilla\\win32\\PlatWin.cxx	/^	int hash;$/;"	m	class:Scintilla::FontCached	typeref:typename:int	file:	access:private
hashboolean	..\\scintilla\\lua\\src\\ltable.c	/^#define hashboolean(/;"	d	file:	signature:(t,p)
hashmod	..\\scintilla\\lua\\src\\ltable.c	/^#define hashmod(/;"	d	file:	signature:(t,n)
hashnum	..\\scintilla\\lua\\src\\ltable.c	/^static Node *hashnum (const Table *t, lua_Number n) {$/;"	f	typeref:typename:Node *	file:	signature:(const Table * t,lua_Number n)
hashpointer	..\\scintilla\\lua\\src\\ltable.c	/^#define hashpointer(/;"	d	file:	signature:(t,p)
hashpow2	..\\scintilla\\lua\\src\\ltable.c	/^#define hashpow2(/;"	d	file:	signature:(t,n)
hashstr	..\\scintilla\\lua\\src\\ltable.c	/^#define hashstr(/;"	d	file:	signature:(t,str)
hasjumps	..\\scintilla\\lua\\src\\lcode.c	/^#define hasjumps(/;"	d	file:	signature:(e)
hasmultret	..\\scintilla\\lua\\src\\lparser.c	/^#define hasmultret(/;"	d	file:	signature:(k)
haveMouseCapture	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	bool haveMouseCapture;$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:bool	access:private
havefound	..\\scite\\src\\SciTEBase.h	/^	bool havefound;$/;"	m	class:Searcher	typeref:typename:bool	access:public
hbrNoMatch	..\\scite\\win32\\Strips.h	/^	HBRUSH hbrNoMatch;$/;"	m	class:SearchStripBase	typeref:typename:HBRUSH	access:protected
hdc	..\\scintilla\\include\\Scintilla.h	/^	Sci_SurfaceID hdc;$/;"	m	struct:Sci_RangeToFormat	typeref:typename:Sci_SurfaceID	access:public
hdc	..\\scintilla\\win32\\PlatWin.cxx	/^	HDC hdc;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HDC	file:	access:private
hdcOwned	..\\scintilla\\win32\\PlatWin.cxx	/^	bool hdcOwned;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:bool	file:	access:private
hdcTarget	..\\scintilla\\include\\Scintilla.h	/^	Sci_SurfaceID hdcTarget;$/;"	m	struct:Sci_RangeToFormat	typeref:typename:Sci_SurfaceID	access:public
head	..\\scintilla\\src\\LineMarker.h	/^	enum typeOfFold { undefined, head, body, tail, headWithTail };$/;"	e	enum:Scintilla::LineMarker::typeOfFold	access:public
headWithTail	..\\scintilla\\src\\LineMarker.h	/^	enum typeOfFold { undefined, head, body, tail, headWithTail };$/;"	e	enum:Scintilla::LineMarker::typeOfFold	access:public
headfail	..\\scintilla\\lua\\src\\lpcode.c	/^static int headfail (TTree *tree) {$/;"	f	typeref:typename:int	file:	signature:(TTree * tree)
height	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int height, width;$/;"	m	class:ListBoxImpl	typeref:typename:int	file:	access:private
height	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int width, height; \/\/ window dimensions$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
height	..\\scintilla\\src\\XPM.h	/^	int height;$/;"	m	class:Scintilla::RGBAImage	typeref:typename:int	access:private
height	..\\scintilla\\src\\XPM.h	/^	int height;$/;"	m	class:Scintilla::XPM	typeref:typename:int	access:private
height	..\\scintilla\\src\\XPM.h	/^	mutable int height;	\/\/\/< Memorize largest height of the set.$/;"	m	class:Scintilla::RGBAImageSet	typeref:typename:int	access:private
height	..\\scite\\win32\\SciTEWin.h	/^	int height;$/;"	m	struct:Band	typeref:typename:int	access:public
heightBar	..\\scite\\src\\SciTEBase.h	/^	int heightBar;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
heightButton	..\\scite\\gtk\\Widget.h	/^	enum { heightButton=23, heightStatic=12, widthCombo=20};$/;"	e	enum:Strip::__anon7c5ac8350203	access:public
heightLBDefault	..\\scintilla\\src\\AutoComplete.h	/^	int heightLBDefault;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:int	access:public
heightOutput	..\\scite\\src\\SciTEBase.h	/^	int heightOutput;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
heightOutputStartDrag	..\\scite\\src\\SciTEBase.h	/^	int heightOutputStartDrag;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
heightStatic	..\\scite\\gtk\\Widget.h	/^	enum { heightButton=23, heightStatic=12, widthCombo=20};$/;"	e	enum:Strip::__anon7c5ac8350203	access:public
heightStatus	..\\scite\\src\\SciTEBase.h	/^    heightStatus = 20,$/;"	e	enum:__anonf95580a60403	access:public
heightTab	..\\scite\\src\\SciTEBase.h	/^    heightTab = 24,$/;"	e	enum:__anonf95580a60403	access:public
heightTools	..\\scite\\src\\SciTEBase.h	/^    heightTools = 24,$/;"	e	enum:__anonf95580a60403	access:public
heightToolsBig	..\\scite\\src\\SciTEBase.h	/^    heightToolsBig = 32,$/;"	e	enum:__anonf95580a60403	access:public
heights	..\\scintilla\\src\\ContractionState.h	/^	std::unique_ptr<RunStyles<Sci::Line, int>> heights;$/;"	m	class:Scintilla::ContractionState	typeref:typename:std::unique_ptr<RunStyles<Sci::Line,int>>	access:private
hfont	..\\scintilla\\win32\\PlatWin.cxx	/^	HFONT hfont;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:HFONT	file:	access:public
hideSelection	..\\scintilla\\src\\EditView.h	/^	bool hideSelection;$/;"	m	class:Scintilla::EditView	typeref:typename:bool	access:public
highlightColumn	..\\scintilla\\src\\PositionCache.h	/^	bool highlightColumn;$/;"	m	class:Scintilla::LineLayout	typeref:typename:bool	access:public
highlightDelimiter	..\\scintilla\\src\\MarginView.h	/^	HighlightDelimiter highlightDelimiter;$/;"	m	class:Scintilla::MarginView	typeref:typename:HighlightDelimiter	access:public
highlightGuideColumn	..\\scintilla\\src\\EditModel.h	/^	int highlightGuideColumn;$/;"	m	class:Scintilla::EditModel	typeref:typename:int	access:public
hinstPlatformRes	..\\scintilla\\win32\\PlatWin.cxx	/^static HINSTANCE hinstPlatformRes = 0;$/;"	v	typeref:typename:HINSTANCE	file:
hook	..\\scintilla\\lua\\src\\lstate.h	/^  lua_Hook hook;$/;"	m	struct:lua_State	typeref:typename:lua_Hook	access:public
hookcount	..\\scintilla\\lua\\src\\lstate.h	/^  int hookcount;$/;"	m	struct:lua_State	typeref:typename:int	access:public
hookf	..\\scintilla\\lua\\src\\ldblib.c	/^static void hookf (lua_State *L, lua_Debug *ar) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,lua_Debug * ar)
hookmask	..\\scintilla\\lua\\src\\lstate.h	/^  lu_byte hookmask;$/;"	m	struct:lua_State	typeref:typename:lu_byte	access:public
horizontalScrollBarHeight	..\\scintilla\\gtk\\ScintillaGTK.h	/^	int horizontalScrollBarHeight;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:int	access:private
horizontalScrollBarVisible	..\\scintilla\\src\\Editor.h	/^	bool horizontalScrollBarVisible;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
host	..\\scite\\gtk\\DirectorExtension.h	/^	ExtensionAPI *host;$/;"	m	class:DirectorExtension	typeref:typename:ExtensionAPI *	access:private
host	..\\scite\\src\\LuaExtension.cxx	/^static ExtensionAPI *host = 0;$/;"	v	typeref:typename:ExtensionAPI *	file:
host	..\\scite\\src\\MultiplexExtension.h	/^	ExtensionAPI *host;$/;"	m	class:MultiplexExtension	typeref:typename:ExtensionAPI *	access:private
host	..\\scite\\win32\\DirectorExtension.h	/^	ExtensionAPI *host;$/;"	m	class:DirectorExtension	typeref:typename:ExtensionAPI *	access:private
hotSpotClickPos	..\\scintilla\\src\\Editor.h	/^	Sci::Position hotSpotClickPos;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
hotspot	..\\scintilla\\src\\EditModel.h	/^	Range hotspot;$/;"	m	class:Scintilla::EditModel	typeref:typename:Range	access:public
hotspot	..\\scintilla\\src\\PositionCache.h	/^	Range hotspot;$/;"	m	class:Scintilla::LineLayout	typeref:typename:Range	access:public
hotspot	..\\scintilla\\src\\Style.h	/^	bool hotspot;$/;"	m	class:Scintilla::Style	typeref:typename:bool	access:public
hotspotColours	..\\scintilla\\src\\ViewStyle.h	/^	ForeBackColours hotspotColours;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ForeBackColours	access:public
hotspotSingleLine	..\\scintilla\\src\\ViewStyle.h	/^	bool hotspotSingleLine;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
hotspotUnderline	..\\scintilla\\src\\ViewStyle.h	/^	bool hotspotUnderline;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
hoverIndicatorPos	..\\scintilla\\src\\EditModel.h	/^	Sci::Position hoverIndicatorPos;$/;"	m	class:Scintilla::EditModel	typeref:typename:Sci::Position	access:public
hr	..\\scintilla\\win32\\HanjaDic.cxx	/^	HRESULT hr;$/;"	m	class:Scintilla::HanjaDict::HanjaDic	typeref:typename:HRESULT	file:	access:private
hrOle	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HRESULT hrOle;$/;"	m	class:ScintillaWin	typeref:typename:HRESULT	file:	access:private
hvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define hvalue(/;"	d	signature:(o)
hwnd	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HWND hwnd;$/;"	m	class:__anon5333cfc50111::IMContext	typeref:typename:HWND	file:	access:private
hwndFrom	..\\scintilla\\include\\Scintilla.h	/^	void *hwndFrom;$/;"	m	struct:Sci_NotifyHeader	typeref:typename:void *	access:public
i	..\\scintilla\\lua\\src\\lpvm.h	/^  } i;$/;"	m	union:Instruction	typeref:struct:Instruction::Inst	access:public
iABC	..\\scintilla\\lua\\src\\lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode	access:public
iABx	..\\scintilla\\lua\\src\\lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode	access:public
iAsBx	..\\scintilla\\lua\\src\\lopcodes.h	/^enum OpMode {iABC, iABx, iAsBx};  \/* basic instruction format *\/$/;"	e	enum:OpMode	access:public
i_ci	..\\scintilla\\lua\\src\\lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
i_ci	..\\scite\\lua\\include\\lua.h	/^  int i_ci;  \/* active function *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
i_key	..\\scintilla\\lua\\src\\lobject.h	/^  TKey i_key;$/;"	m	struct:Node	typeref:typename:TKey	access:public
i_val	..\\scintilla\\lua\\src\\lobject.h	/^  TValue i_val;$/;"	m	struct:Node	typeref:typename:TValue	access:public
icmd	..\\scite\\gtk\\SciTEGTK.cxx	/^	int icmd;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
icmd	..\\scite\\win32\\SciTEWin.h	/^	int icmd;$/;"	m	class:CommandWorker	typeref:typename:int	access:public
iconvh	..\\scintilla\\gtk\\Converter.h	/^	GIConv iconvh;$/;"	m	class:Scintilla::Converter	typeref:typename:GIConv	access:private
iconvhBad	..\\scintilla\\gtk\\Converter.h	/^const GIConv iconvhBad = (GIConv)(-1);$/;"	v	namespace:Scintilla	typeref:typename:const GIConv
id	..\\scite\\src\\SciTEBase.h	/^	int id;	\/\/ Control in dialog$/;"	m	struct:SearchOption	typeref:typename:int	access:public
id	..\\scite\\win32\\SciTEWinBar.cxx	/^	int id;$/;"	m	struct:BarButtonIn	typeref:typename:int	file:	access:public
idAutoComplete	..\\scintilla\\src\\ScintillaBase.h	/^		idAutoComplete=2,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idCallTip	..\\scintilla\\src\\ScintillaBase.h	/^		idCallTip=1,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idFrom	..\\scintilla\\include\\Scintilla.h	/^	uptr_t idFrom;$/;"	m	struct:Sci_NotifyHeader	typeref:typename:uptr_t	access:public
idcmdCopy	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdCopy=13,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idcmdCut	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdCut=12,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idcmdDelete	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdDelete=15,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idcmdPaste	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdPaste=14,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idcmdRedo	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdRedo=11,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idcmdSelectAll	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdSelectAll=16$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
idcmdUndo	..\\scintilla\\src\\ScintillaBase.h	/^		idcmdUndo=10,$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0103	access:public
identCharacters	..\\scite\\scripts\\CheckMentioned.py	/^	identCharacters = "_" + string.ascii_letters + string.digits$/;"	v	access:public
identCharacters	..\\scite\\scripts\\CheckPropsDoc.py	/^	identCharacters = "_*." + string.ascii_letters + string.digits$/;"	v	access:public
identifier	..\\scite\\scripts\\CheckMentioned.py	/^			identifier = line.split()[1]$/;"	v	access:public
identifiersSorted	..\\scite\\scripts\\CheckPropsDoc.py	/^identifiersSorted = list(propertyNames.keys())$/;"	v	access:public
identityMessage	..\\scite\\win32\\UniqueInstance.h	/^	UINT identityMessage;	\/\/\/< Registered message to identify SciTE instances$/;"	m	class:UniqueInstance	typeref:typename:UINT	access:private
idleStyling	..\\scintilla\\src\\Editor.h	/^	int idleStyling;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
idleTimerID	..\\scintilla\\win32\\ScintillaWin.cxx	/^	enum { invalidTimerID, standardTimerID, idleTimerID, fineTimerStart };$/;"	e	enum:ScintillaWin::__anon5333cfc50203	file:	access:public
idler	..\\scintilla\\src\\Editor.h	/^	Idler idler;$/;"	m	class:Scintilla::Editor	typeref:typename:Idler	access:protected
idlerID	..\\scintilla\\src\\Editor.h	/^	IdlerID idlerID;$/;"	m	class:Scintilla::Idler	typeref:typename:IdlerID	access:public
idlerID	..\\scite\\gtk\\SciTEGTK.cxx	/^	guint idlerID;$/;"	m	class:SciTEGTK	typeref:typename:guint	file:	access:protected
idsFromDocumentation	..\\scite\\scripts\\IFaceTableGen.py	/^def idsFromDocumentation(filename):$/;"	f	access:public	signature:(filename)
idx	..\\scintilla\\lua\\src\\lpcap.h	/^  short idx;  \/* extra info about capture (group name, arg index, etc.) *\/$/;"	m	struct:Capture	typeref:typename:short	access:public
ifaceConstantCount	..\\scite\\src\\IFaceTable.cxx	/^	ifaceConstantCount = 2646,$/;"	e	enum:__anondfdb3b5e0103	file:	access:public
ifaceConstants	..\\scite\\src\\IFaceTable.cxx	/^static IFaceConstant ifaceConstants[] = {$/;"	v	typeref:typename:IFaceConstant[]	file:
ifaceFunctionCount	..\\scite\\src\\IFaceTable.cxx	/^	ifaceFunctionCount = 296,$/;"	e	enum:__anondfdb3b5e0103	file:	access:public
ifaceFunctions	..\\scite\\src\\IFaceTable.cxx	/^static IFaceFunction ifaceFunctions[] = {$/;"	v	typeref:typename:IFaceFunction[]	file:
ifaceProperties	..\\scite\\src\\IFaceTable.cxx	/^static IFaceProperty ifaceProperties[] = {$/;"	v	typeref:typename:IFaceProperty[]	file:
ifacePropertyCount	..\\scite\\src\\IFaceTable.cxx	/^	ifacePropertyCount = 224$/;"	e	enum:__anondfdb3b5e0103	file:	access:public
iface_bool	..\\scite\\src\\IFaceTable.h	/^	iface_bool,$/;"	e	enum:IFaceType	access:public
iface_cells	..\\scite\\src\\IFaceTable.h	/^	iface_cells,$/;"	e	enum:IFaceType	access:public
iface_colour	..\\scite\\src\\IFaceTable.h	/^	iface_colour,$/;"	e	enum:IFaceType	access:public
iface_findtext	..\\scite\\src\\IFaceTable.h	/^	iface_findtext,$/;"	e	enum:IFaceType	access:public
iface_formatrange	..\\scite\\src\\IFaceTable.h	/^	iface_formatrange$/;"	e	enum:IFaceType	access:public
iface_function_helper	..\\scite\\src\\LuaExtension.cxx	/^static int iface_function_helper(lua_State *L, const IFaceFunction &func) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const IFaceFunction & func)
iface_int	..\\scite\\src\\IFaceTable.h	/^	iface_int,$/;"	e	enum:IFaceType	access:public
iface_keymod	..\\scite\\src\\IFaceTable.h	/^	iface_keymod,$/;"	e	enum:IFaceType	access:public
iface_length	..\\scite\\src\\IFaceTable.h	/^	iface_length,$/;"	e	enum:IFaceType	access:public
iface_position	..\\scite\\src\\IFaceTable.h	/^	iface_position,$/;"	e	enum:IFaceType	access:public
iface_string	..\\scite\\src\\IFaceTable.h	/^	iface_string,$/;"	e	enum:IFaceType	access:public
iface_stringresult	..\\scite\\src\\IFaceTable.h	/^	iface_stringresult,$/;"	e	enum:IFaceType	access:public
iface_textrange	..\\scite\\src\\IFaceTable.h	/^	iface_textrange,$/;"	e	enum:IFaceType	access:public
iface_void	..\\scite\\src\\IFaceTable.h	/^	iface_void,$/;"	e	enum:IFaceType	access:public
ifstat	..\\scintilla\\lua\\src\\lparser.c	/^static void ifstat (LexState *ls, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int line)
ignoreCase	..\\scintilla\\src\\AutoComplete.h	/^	bool ignoreCase;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:bool	access:public
ignoreCaseBehaviour	..\\scintilla\\src\\AutoComplete.h	/^	unsigned int ignoreCaseBehaviour;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:unsigned int	access:public
im_context	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GtkIMContext *im_context;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GtkIMContext *	access:private
image	..\\scintilla\\src\\LineMarker.h	/^	std::unique_ptr<RGBAImage> image;$/;"	m	class:Scintilla::LineMarker	typeref:typename:std::unique_ptr<RGBAImage>	access:public
images	..\\scintilla\\gtk\\PlatGTK.cxx	/^	RGBAImageSet images;$/;"	m	class:ListBoxX	typeref:typename:RGBAImageSet	file:	access:private
images	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	QMap<int,QPixmap> images;$/;"	m	class:Scintilla::ListBoxImpl	typeref:typename:QMap<int,QPixmap>	file:	access:private
images	..\\scintilla\\src\\XPM.h	/^	ImageMap images;$/;"	m	class:Scintilla::RGBAImageSet	typeref:typename:ImageMap	access:private
images	..\\scintilla\\win32\\PlatWin.cxx	/^	RGBAImageSet images;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:RGBAImageSet	file:	access:private
imeAutoComplete	..\\scite\\src\\SciTEBase.h	/^	bool imeAutoComplete;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
imeCaretBlockOverride	..\\scintilla\\src\\EditView.h	/^	bool imeCaretBlockOverride;$/;"	m	class:Scintilla::EditView	typeref:typename:bool	access:public
imeInline	..\\scintilla\\src\\EditModel.h	/^	enum IMEInteraction { imeWindowed, imeInline } imeInteraction;$/;"	e	enum:Scintilla::EditModel::IMEInteraction	access:public
imeInteraction	..\\scintilla\\src\\EditModel.h	/^	enum IMEInteraction { imeWindowed, imeInline } imeInteraction;$/;"	m	class:Scintilla::EditModel	typeref:enum:Scintilla::EditModel::IMEInteraction	access:public
imeWindowed	..\\scintilla\\src\\EditModel.h	/^	enum IMEInteraction { imeWindowed, imeInline } imeInteraction;$/;"	e	enum:Scintilla::EditModel::IMEInteraction	access:public
impl	..\\scintilla\\lexlib\\PropSetSimple.h	/^	void *impl;$/;"	m	class:Scintilla::PropSetSimple	typeref:typename:void *	access:private
importCmdID	..\\scite\\src\\SciTEBase.h	/^	enum { importCmdID = IDM_IMPORT };$/;"	e	enum:SciTEBase::__anonf95580a60b03	access:public
importFiles	..\\scite\\src\\SciTEBase.h	/^	std::vector<FilePath> importFiles;$/;"	m	class:SciTEBase	typeref:typename:std::vector<FilePath>	access:protected
importMax	..\\scite\\src\\SciTEBase.h	/^	enum { importMax = 50 };$/;"	e	enum:SciTEBase::__anonf95580a60a03	access:public
inCache	..\\scintilla\\src\\PositionCache.h	/^	bool inCache;$/;"	m	class:Scintilla::LineLayout	typeref:typename:bool	access:private
inCallTipMode	..\\scintilla\\src\\CallTip.h	/^	bool inCallTipMode;$/;"	m	class:Scintilla::CallTip	typeref:typename:bool	access:public
inDragDrop	..\\scintilla\\src\\Editor.h	/^	enum { ddNone, ddInitial, ddDragging } inDragDrop;$/;"	m	class:Scintilla::Editor	typeref:enum:Scintilla::Editor::__anon8e1f0c450503	access:protected
inOverstrike	..\\scintilla\\src\\EditModel.h	/^	bool inOverstrike;$/;"	m	class:Scintilla::EditModel	typeref:typename:bool	access:public
incFileName	..\\scite\\scripts\\CheckMentioned.py	/^incFileName = srcRoot + "\/scintilla\/include\/Scintilla.h"$/;"	v	access:public
inc_ci	..\\scintilla\\lua\\src\\ldo.c	/^#define inc_ci(/;"	d	file:	signature:(L)
inclinenumber	..\\scintilla\\lua\\src\\llex.c	/^static void inclinenumber (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
include	..\\scite\\scripts\\tags2api.py	/^include="A"	# Set to "W" if you want the UniCode prototypes.$/;"	v	access:public
includes	..\\scite\\src\\PropSetFile.h	/^	std::set<std::string> includes;$/;"	m	class:ImportFilter	typeref:typename:std::set<std::string>	access:public
includes	..\\scite\\src\\SciTEBase.cxx	/^static bool includes(const StyleAndWords &symbols, const std::string &value) {$/;"	f	typeref:typename:bool	file:	signature:(const StyleAndWords & symbols,const std::string & value)
incomplete	..\\scintilla\\lua\\src\\lua.c	/^static int incomplete (lua_State *L, int status) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int status)
incr	..\\scite\\src\\Credits.cxx	/^	int incr;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:private
incr_top	..\\scintilla\\lua\\src\\ldo.h	/^#define incr_top(/;"	d	signature:(L)
increment	..\\scintilla\\src\\Document.cxx	/^	int increment;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:int	file:	access:public
incremental	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	e	enum:FindReplaceStrip::IncrementalBehaviour	file:	access:public
incremental	..\\scite\\win32\\Strips.h	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	e	enum:FindReplaceStrip::IncrementalBehaviour	access:public
incrementalBehaviour	..\\scite\\gtk\\SciTEGTK.cxx	/^	IncrementalBehaviour incrementalBehaviour;$/;"	m	class:FindReplaceStrip	typeref:typename:IncrementalBehaviour	file:	access:public
incrementalBehaviour	..\\scite\\win32\\Strips.h	/^	IncrementalBehaviour incrementalBehaviour; $/;"	m	class:FindReplaceStrip	typeref:typename:IncrementalBehaviour	access:protected
indentClosing	..\\scite\\src\\SciTEBase.h	/^	bool indentClosing;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
indentExamine	..\\scite\\src\\SciTEBase.h	/^	int indentExamine;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
indentInChars	..\\scintilla\\src\\Document.h	/^	int indentInChars;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:public
indentMaintain	..\\scite\\src\\SciTEBase.h	/^	bool indentMaintain;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
indentOpening	..\\scite\\src\\SciTEBase.h	/^	bool indentOpening;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
indentationWSVisible	..\\scite\\src\\SciTEBase.h	/^	int indentationWSVisible;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
index	..\\scite\\src\\ExportPDF.cxx	/^		int index;$/;"	m	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:int	file:	access:public
index2adr	..\\scintilla\\lua\\src\\lapi.c	/^static TValue *index2adr (lua_State *L, int idx) {$/;"	f	typeref:typename:TValue *	file:	signature:(lua_State * L,int idx)
indexType	..\\scite\\src\\IFaceTable.h	/^	IFaceType indexType;$/;"	m	struct:IFaceObject	typeref:typename:IFaceType	access:public
indexupvalue	..\\scintilla\\lua\\src\\lparser.c	/^static int indexupvalue (FuncState *fs, TString *name, expdesc *v) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,TString * name,expdesc * v)
indicator	..\\scintilla\\src\\Decoration.h	/^	int indicator;$/;"	m	class:Scintilla::Decoration	typeref:typename:int	access:private
indicator	..\\scite\\src\\MatchMarker.h	/^	int indicator;$/;"	m	class:MatchMarker	typeref:typename:int	access:private
indicatorHighlightCurrentWord	..\\scite\\src\\SciTEBase.h	/^		indicatorHighlightCurrentWord,$/;"	e	enum:SciTEBase::__anonf95580a60c03	access:public
indicatorMatch	..\\scite\\src\\SciTEBase.h	/^	enum { indicatorMatch = INDIC_CONTAINER,$/;"	e	enum:SciTEBase::__anonf95580a60c03	access:public
indicatorSentinel	..\\scite\\src\\SciTEBase.h	/^		indicatorSentinel };$/;"	e	enum:SciTEBase::__anonf95580a60c03	access:public
indicatorSpellingMistake	..\\scite\\src\\SciTEBase.h	/^		indicatorSpellingMistake,$/;"	e	enum:SciTEBase::__anonf95580a60c03	access:public
indicators	..\\scintilla\\src\\ViewStyle.h	/^	std::vector<Indicator> indicators;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:std::vector<Indicator>	access:public
indicatorsDynamic	..\\scintilla\\src\\ViewStyle.h	/^	bool indicatorsDynamic;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
indicatorsSetFore	..\\scintilla\\src\\ViewStyle.h	/^	bool indicatorsSetFore;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
indices	..\\scintilla\\src\\AutoComplete.cxx	/^	std::vector<int> indices;$/;"	m	struct:Sorter	typeref:typename:std::vector<int>	file:	access:public
info	..\\scintilla\\lua\\src\\lparser.h	/^    struct { int info, aux; } s;$/;"	m	struct:expdesc::__anon613de0d5020a::__anon613de0d50308	typeref:typename:int	access:public
info	..\\scintilla\\lua\\src\\lparser.h	/^  lu_byte info;$/;"	m	struct:upvaldesc	typeref:typename:lu_byte	access:public
info_tailcall	..\\scintilla\\lua\\src\\ldebug.c	/^static void info_tailcall (lua_Debug *ar) {$/;"	f	typeref:typename:void	file:	signature:(lua_Debug * ar)
init	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkEditableTextIface::init(::AtkEditableTextIface *iface) {$/;"	f	class:ScintillaGTKAccessible::AtkEditableTextIface	typeref:typename:void	signature:(::AtkEditableTextIface * iface)
init	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^void ScintillaGTKAccessible::AtkTextIface::init(::AtkTextIface *iface) {$/;"	f	class:ScintillaGTKAccessible::AtkTextIface	typeref:typename:void	signature:(::AtkTextIface * iface)
init	..\\scintilla\\lua\\src\\lstrlib.c	/^    const char *init;$/;"	m	struct:MatchState::__anondc1923b30108	typeref:typename:const char *	file:	access:public
initStyle	..\\scite\\src\\LuaExtension.cxx	/^	int initStyle;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
init_colors	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static void init_colors() {$/;"	f	typeref:typename:void	file:	signature:()
init_exp	..\\scintilla\\lua\\src\\lparser.c	/^static void init_exp (expdesc *e, expkind k, int i) {$/;"	f	typeref:typename:void	file:	signature:(expdesc * e,expkind k,int i)
init_pixmap	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void init_pixmap(ListImage *list_image) {$/;"	f	typeref:typename:void	file:	signature:(ListImage * list_image)
inited	..\\scintilla\\gtk\\PlatGTK.cxx	/^	bool inited;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:bool	file:	access:private
initialised	..\\scite\\src\\SciTEBase.h	/^	bool initialised;$/;"	m	class:BufferList	typeref:typename:bool	access:public
initialisedBytesOfLead	..\\scintilla\\src\\UniConversion.cxx	/^static bool initialisedBytesOfLead = false;$/;"	v	namespace:Scintilla	typeref:typename:bool	file:
initialisedET	..\\scintilla\\win32\\PlatWin.cxx	/^static bool initialisedET = false;$/;"	v	namespace:Scintilla	typeref:typename:bool	file:
initialisedET	..\\scite\\win32\\GUIWin.cxx	/^static bool initialisedET = false;$/;"	v	namespace:GUI	typeref:typename:bool	file:
initialized_colors	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static bool initialized_colors = false;$/;"	v	typeref:typename:bool	file:
initializingSearch	..\\scite\\gtk\\SciTEGTK.cxx	/^	bool initializingSearch;$/;"	m	class:FindReplaceStrip	typeref:typename:bool	file:	access:public
initialrulename	..\\scintilla\\lua\\src\\lptree.c	/^static void initialrulename (lua_State *L, TTree *grammar, int frule) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,TTree * grammar,int frule)
initposition	..\\scintilla\\lua\\src\\lptree.c	/^static size_t initposition (lua_State *L, size_t len) {$/;"	f	typeref:typename:size_t	file:	signature:(lua_State * L,size_t len)
injectCheckN	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^injectCheckN = """$/;"	v	access:public
injectCode	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^injectCode = """$/;"	v	access:public
input	..\\scite\\src\\JobQueue.h	/^	std::string input;$/;"	m	class:Job	typeref:typename:std::string	access:public
input	..\\scite\\src\\JobQueue.h	/^	std::string input;$/;"	m	struct:JobMode	typeref:typename:std::string	access:public
inputChannel	..\\scite\\gtk\\DirectorExtension.h	/^	GIOChannel *inputChannel;$/;"	m	class:DirectorExtension	typeref:typename:GIOChannel *	access:private
inputChannel	..\\scite\\gtk\\SciTEGTK.cxx	/^	GIOChannel *inputChannel;$/;"	m	class:SciTEGTK	typeref:typename:GIOChannel *	file:	access:protected
inputHandle	..\\scite\\gtk\\SciTEGTK.cxx	/^	int inputHandle;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
inputMethodEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::inputMethodEvent(QInputMethodEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QInputMethodEvent * event)
inputMethodQuery	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^QVariant ScintillaEditBase::inputMethodQuery(Qt::InputMethodQuery query) const$/;"	f	class:ScintillaEditBase	typeref:typename:QVariant	signature:(Qt::InputMethodQuery query) const
inputWatcher	..\\scite\\gtk\\DirectorExtension.h	/^	int inputWatcher;$/;"	m	class:DirectorExtension	typeref:typename:int	access:private
insertAction	..\\scintilla\\src\\CellBuffer.h	/^enum actionType { insertAction, removeAction, startAction, containerAction };$/;"	e	enum:Scintilla::actionType	access:public
insert_string	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::insert_string(int position, QByteArray &str) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int position,QByteArray & str)
insertion	..\\scintilla\\src\\Document.h	/^	std::string insertion;$/;"	m	class:Scintilla::Document	typeref:typename:std::string	access:private
insertionSet	..\\scintilla\\src\\Document.h	/^	bool insertionSet;$/;"	m	class:Scintilla::Document	typeref:typename:bool	access:private
insetX	..\\scintilla\\src\\CallTip.h	/^	int insetX; \/\/ text inset in x from calltip border$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:public
instance	..\\scintilla\\src\\Document.h	/^	ILexer *instance;$/;"	m	class:Scintilla::LexInterface	typeref:typename:ILexer *	access:protected
instance	..\\scite\\gtk\\SciTEGTK.cxx	/^	static SciTEGTK *instance;$/;"	m	class:SciTEGTK	typeref:typename:SciTEGTK *	file:	access:public
instance	..\\scite\\gtk\\SciTEGTK.cxx	/^SciTEGTK *SciTEGTK::instance;$/;"	m	class:SciTEGTK	typeref:typename:SciTEGTK *
instsize	..\\scintilla\\lua\\src\\lptypes.h	/^#define instsize(/;"	d	signature:(l)
interfaceVersion	..\\scintilla\\src\\ScintillaBase.cxx	/^	int interfaceVersion;$/;"	m	class:Scintilla::LexState	typeref:typename:int	file:	access:private
invalidPosition	..\\scintilla\\src\\Position.h	/^const Position invalidPosition = -1;$/;"	v	namespace:Sci	typeref:typename:const Position
invalidTimerID	..\\scintilla\\win32\\ScintillaWin.cxx	/^	enum { invalidTimerID, standardTimerID, idleTimerID, fineTimerStart };$/;"	e	enum:ScintillaWin::__anon5333cfc50203	file:	access:public
invertjump	..\\scintilla\\lua\\src\\lcode.c	/^static void invertjump (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e)
io_close	..\\scintilla\\lua\\src\\liolib.c	/^static int io_close (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_fclose	..\\scintilla\\lua\\src\\liolib.c	/^static int io_fclose (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_flush	..\\scintilla\\lua\\src\\liolib.c	/^static int io_flush (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_gc	..\\scintilla\\lua\\src\\liolib.c	/^static int io_gc (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_input	..\\scintilla\\lua\\src\\liolib.c	/^static int io_input (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_lines	..\\scintilla\\lua\\src\\liolib.c	/^static int io_lines (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_noclose	..\\scintilla\\lua\\src\\liolib.c	/^static int io_noclose (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_open	..\\scintilla\\lua\\src\\liolib.c	/^static int io_open (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_output	..\\scintilla\\lua\\src\\liolib.c	/^static int io_output (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_pclose	..\\scintilla\\lua\\src\\liolib.c	/^static int io_pclose (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_popen	..\\scintilla\\lua\\src\\liolib.c	/^static int io_popen (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_read	..\\scintilla\\lua\\src\\liolib.c	/^static int io_read (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_readline	..\\scintilla\\lua\\src\\liolib.c	/^static int io_readline (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_tmpfile	..\\scintilla\\lua\\src\\liolib.c	/^static int io_tmpfile (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_tostring	..\\scintilla\\lua\\src\\liolib.c	/^static int io_tostring (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_type	..\\scintilla\\lua\\src\\liolib.c	/^static int io_type (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
io_write	..\\scintilla\\lua\\src\\liolib.c	/^static int io_write (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
iolib	..\\scintilla\\lua\\src\\liolib.c	/^static const luaL_Reg iolib[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
ipairsaux	..\\scintilla\\lua\\src\\lbaselib.c	/^static int ipairsaux (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
isBlockEnd	..\\scite\\src\\SciTEBase.h	/^    isBlockEnd,	\/\/ indentation end indicator such as "}" or VB "end"$/;"	e	enum:IndentationStatus	access:public
isBlockStart	..\\scite\\src\\SciTEBase.h	/^    isBlockStart,	\/\/ indentation block begin such as "{" or VB "function"$/;"	e	enum:IndentationStatus	access:public
isBuilding	..\\scite\\src\\JobQueue.h	/^	bool isBuilding;$/;"	m	class:JobQueue	typeref:typename:bool	access:public
isBuilt	..\\scite\\src\\JobQueue.h	/^	bool isBuilt;$/;"	m	class:JobQueue	typeref:typename:bool	access:public
isDirty	..\\scite\\src\\SciTEBase.h	/^	bool isDirty;$/;"	m	class:Buffer	typeref:typename:bool	access:public
isEnabled	..\\scintilla\\src\\Document.h	/^	bool isEnabled;$/;"	m	class:Scintilla::HighlightDelimiter	typeref:typename:bool	access:public
isEnabled	..\\scite\\src\\SciTEBase.h	/^	bool isEnabled;$/;"	m	struct:CurrentWordHighlight	typeref:typename:bool	access:public
isEncodingChar	..\\scite\\src\\Cookie.cxx	/^static bool isEncodingChar(char ch) {$/;"	f	typeref:typename:bool	file:	signature:(char ch)
isFilter	..\\scite\\src\\JobQueue.h	/^	bool isFilter;$/;"	m	struct:JobMode	typeref:typename:bool	access:public
isKeyWordStart	..\\scite\\src\\SciTEBase.h	/^    isKeyWordStart	\/\/ Keywords that cause indentation$/;"	e	enum:IndentationStatus	access:public
isLfunction	..\\scintilla\\lua\\src\\lobject.h	/^#define isLfunction(/;"	d	signature:(o)
isLua	..\\scintilla\\lua\\src\\lstate.h	/^#define isLua(/;"	d	signature:(ci)
isNone	..\\scite\\src\\SciTEBase.h	/^    isNone,		\/\/ no effect on indentation$/;"	e	enum:IndentationStatus	access:public
isOnlyWithSameStyle	..\\scite\\src\\SciTEBase.h	/^	bool isOnlyWithSameStyle;$/;"	m	struct:CurrentWordHighlight	typeref:typename:bool	access:public
isReadOnly	..\\scite\\src\\SciTEBase.h	/^	bool isReadOnly;$/;"	m	class:Buffer	typeref:typename:bool	access:public
isResizeable	..\\scite\\src\\StripDefinition.h	/^	bool isResizeable;$/;"	m	struct:ColumnWidth	typeref:typename:bool	access:public
isSet	..\\scintilla\\src\\ViewStyle.h	/^	bool isSet;$/;"	m	class:Scintilla::ColourOptional	typeref:typename:bool	access:public
isSpaceChar	..\\scite\\src\\Cookie.cxx	/^static bool isSpaceChar(char ch) {$/;"	f	typeref:typename:bool	file:	signature:(char ch)
is_collecting_undo	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::is_collecting_undo() {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:()
is_cr_lf	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::is_cr_lf(int pos) {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:(int pos)
is_read_only	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::is_read_only() {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:()
is_save_point	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::is_save_point() {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:()
is_vararg	..\\scintilla\\lua\\src\\lobject.h	/^  lu_byte is_vararg;$/;"	m	struct:Proto	typeref:typename:lu_byte	access:public
isblack	..\\scintilla\\lua\\src\\lgc.h	/^#define isblack(/;"	d	signature:(x)
isbreakable	..\\scintilla\\lua\\src\\lparser.c	/^  lu_byte isbreakable;  \/* true if `block' is a loop *\/$/;"	m	struct:BlockCnt	typeref:typename:lu_byte	file:	access:public
iscfunction	..\\scintilla\\lua\\src\\lobject.h	/^#define iscfunction(/;"	d	signature:(o)
iscleared	..\\scintilla\\lua\\src\\lgc.c	/^static int iscleared (const TValue *o, int iskey) {$/;"	f	typeref:typename:int	file:	signature:(const TValue * o,int iskey)
isclosecap	..\\scintilla\\lua\\src\\lpcap.c	/^#define isclosecap(/;"	d	file:	signature:(cap)
iscollectable	..\\scintilla\\lua\\src\\lobject.h	/^#define iscollectable(/;"	d	signature:(o)
isdead	..\\scintilla\\lua\\src\\lgc.h	/^#define isdead(/;"	d	signature:(g,v)
isdigitchar	..\\scite\\src\\SciTEBuffers.cxx	/^inline bool isdigitchar(int ch) {$/;"	f	typeref:typename:bool	signature:(int ch)
isfilenamecharforsel	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::isfilenamecharforsel(char ch) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(char ch)
isfinalized	..\\scintilla\\lua\\src\\lgc.c	/^#define isfinalized(/;"	d	file:	signature:(u)
isfullcap	..\\scintilla\\lua\\src\\lpcap.c	/^#define isfullcap(/;"	d	file:	signature:(cap)
isgray	..\\scintilla\\lua\\src\\lgc.h	/^#define isgray(/;"	d	signature:(x)
isinset	..\\scintilla\\src\\RESearch.cxx	/^static inline int isinset(const char *ap, unsigned char c) {$/;"	f	typeref:typename:int	file:	signature:(const char * ap,unsigned char c)
isinstack	..\\scintilla\\lua\\src\\ldebug.c	/^static int isinstack (CallInfo *ci, const TValue *o) {$/;"	f	typeref:typename:int	file:	signature:(CallInfo * ci,const TValue * o)
islexerwordcharforsel	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::islexerwordcharforsel(char ch) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(char ch)
isnumeral	..\\scintilla\\lua\\src\\lcode.c	/^static int isnumeral(expdesc *e) {$/;"	f	typeref:typename:int	file:	signature:(expdesc * e)
isoperator	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool isoperator(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
isprefix	..\\scite\\src\\StringHelpers.cxx	/^bool isprefix(const char *target, const char *prefix) {$/;"	f	typeref:typename:bool	signature:(const char * target,const char * prefix)
isspacechar	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool isspacechar(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
isspacechar	..\\scite\\src\\SciTEBase.h	/^inline bool isspacechar(unsigned char ch) {$/;"	f	typeref:typename:bool	signature:(unsigned char ch)
isstring	..\\scintilla\\lua\\src\\lpcap.c	/^  int isstring;  \/* whether capture is a string *\/$/;"	m	struct:StrAux	typeref:typename:int	file:	access:public
istrlen	..\\scintilla\\src\\Editor.cxx	/^static int istrlen(const char *s) {$/;"	f	typeref:typename:int	file:	signature:(const char * s)
iswhite	..\\scintilla\\lua\\src\\lgc.h	/^#define iswhite(/;"	d	signature:(x)
iswordc	..\\scintilla\\src\\RESearch.h	/^	bool iswordc(unsigned char x) const {$/;"	f	class:Scintilla::RESearch	typeref:typename:bool	access:private	signature:(unsigned char x) const
iswordchar	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool iswordchar(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
iswordcharforsel	..\\scite\\src\\SciTEBase.cxx	/^bool SciTEBase::iswordcharforsel(char ch) {$/;"	f	class:SciTEBase	typeref:typename:bool	signature:(char ch)
iswordstart	..\\scintilla\\lexlib\\CharacterSet.h	/^inline bool iswordstart(int ch) {$/;"	f	namespace:Scintilla	typeref:typename:bool	signature:(int ch)
italic	..\\scintilla\\include\\Platform.h	/^	bool italic;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:bool	access:public
italic	..\\scintilla\\src\\Style.h	/^	bool italic;$/;"	m	struct:Scintilla::FontSpecification	typeref:typename:bool	access:public
italics	..\\scite\\src\\StyleDefinition.h	/^	bool italics;$/;"	m	class:StyleDefinition	typeref:typename:bool	access:public
item	..\\scite\\src\\StripDefinition.h	/^	int item;$/;"	m	class:UserControl	typeref:typename:int	access:public
item_type	..\\scite\\gtk\\SciTEGTK.cxx	/^	const char *item_type;$/;"	m	struct:SciTEItemFactoryEntry	typeref:typename:const char *	file:	access:public
items	..\\scintilla\\src\\Editor.h	/^	enum workItems items;$/;"	m	class:Scintilla::WorkNeeded	typeref:enum:workItems	access:public
iter	..\\scintilla\\gtk\\PlatGTK.cxx	/^	PangoLayoutIter *iter;$/;"	m	class:ClusterIterator	typeref:typename:PangoLayoutIter *	file:	access:private
iterator_category	..\\scintilla\\src\\Document.cxx	/^	typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:__anon1ef09aa80111::ByteIterator	typeref:typename:std::bidirectional_iterator_tag	file:	access:public
iterator_category	..\\scintilla\\src\\Document.cxx	/^	typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:std::bidirectional_iterator_tag	file:	access:public
ivLookBoth	..\\scintilla\\src\\ViewStyle.h	/^enum IndentView {ivNone, ivReal, ivLookForward, ivLookBoth};$/;"	e	enum:Scintilla::IndentView	access:public
ivLookForward	..\\scintilla\\src\\ViewStyle.h	/^enum IndentView {ivNone, ivReal, ivLookForward, ivLookBoth};$/;"	e	enum:Scintilla::IndentView	access:public
ivNone	..\\scintilla\\src\\ViewStyle.h	/^enum IndentView {ivNone, ivReal, ivLookForward, ivLookBoth};$/;"	e	enum:Scintilla::IndentView	access:public
ivReal	..\\scintilla\\src\\ViewStyle.h	/^enum IndentView {ivNone, ivReal, ivLookForward, ivLookBoth};$/;"	e	enum:Scintilla::IndentView	access:public
jobCLI	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobExtension	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobForceQueue	..\\scite\\src\\JobQueue.h	/^    jobForceQueue = 1,$/;"	e	enum:JobFlags	access:public
jobGUI	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobGrep	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobGroupUndo	..\\scite\\src\\JobQueue.h	/^    jobGroupUndo = 64$/;"	e	enum:JobFlags	access:public
jobHasInput	..\\scite\\src\\JobQueue.h	/^    jobHasInput = 2,$/;"	e	enum:JobFlags	access:public
jobHelp	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobImmediate	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobOtherHelp	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobProgress	..\\scite\\src\\Worker.h	/^	volatile int jobProgress;$/;"	m	struct:Worker	typeref:typename:volatile int	access:private
jobQueue	..\\scite\\src\\JobQueue.h	/^	Job jobQueue[commandMax];$/;"	m	class:JobQueue	typeref:typename:Job[]	access:public
jobQueue	..\\scite\\src\\SciTEBase.h	/^	JobQueue jobQueue;$/;"	m	class:SciTEBase	typeref:typename:JobQueue	access:protected
jobQuiet	..\\scite\\src\\JobQueue.h	/^    jobQuiet = 4,$/;"	e	enum:JobFlags	access:public
jobRepSelAuto	..\\scite\\src\\JobQueue.h	/^    jobRepSelAuto = 32,$/;"	e	enum:JobFlags	access:public
jobRepSelMask	..\\scite\\src\\JobQueue.h	/^    jobRepSelMask = 48,$/;"	e	enum:JobFlags	access:public
jobRepSelYes	..\\scite\\src\\JobQueue.h	/^    jobRepSelYes = 16,$/;"	e	enum:JobFlags	access:public
jobShell	..\\scite\\src\\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGr/;"	e	enum:JobSubsystem	access:public
jobSize	..\\scite\\src\\Worker.h	/^	volatile int jobSize;$/;"	m	struct:Worker	typeref:typename:volatile int	access:private
jobType	..\\scite\\src\\JobQueue.h	/^	JobSubsystem jobType;$/;"	m	class:Job	typeref:typename:JobSubsystem	access:public
jobType	..\\scite\\src\\JobQueue.h	/^	JobSubsystem jobType;$/;"	m	struct:JobMode	typeref:typename:JobSubsystem	access:public
jobUsesOutputPane	..\\scite\\src\\JobQueue.h	/^	bool jobUsesOutputPane;$/;"	m	class:JobQueue	typeref:typename:bool	access:public
joinkindoff	..\\scintilla\\lua\\src\\lptypes.h	/^#define joinkindoff(/;"	d	signature:(k,o)
joinktables	..\\scintilla\\lua\\src\\lptree.c	/^static int joinktables (lua_State *L, int p1, int p2) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int p1,int p2)
jpc	..\\scintilla\\lua\\src\\lparser.h	/^  int jpc;  \/* list of pending jumps to `pc' *\/$/;"	m	struct:FuncState	typeref:typename:int	access:public
jumponcond	..\\scintilla\\lua\\src\\lcode.c	/^static int jumponcond (FuncState *fs, expdesc *e, int cond) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,expdesc * e,int cond)
jumptohere	..\\scintilla\\lua\\src\\lpcode.c	/^static void jumptohere (CompileState *compst, int instruction) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,int instruction)
jumptothere	..\\scintilla\\lua\\src\\lpcode.c	/^static void jumptothere (CompileState *compst, int instruction, int target) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,int instruction,int target)
justWhiteSpace	..\\scite\\src\\ExportPDF.cxx	/^		bool justWhiteSpace;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:bool	file:	access:private
k	..\\scintilla\\lua\\src\\lobject.h	/^  TValue *k;  \/* constants used by the function *\/$/;"	m	struct:Proto	typeref:typename:TValue *	access:public
k	..\\scintilla\\lua\\src\\lparser.h	/^  expkind k;$/;"	m	struct:expdesc	typeref:typename:expkind	access:public
k	..\\scintilla\\lua\\src\\lparser.h	/^  lu_byte k;$/;"	m	struct:upvaldesc	typeref:typename:lu_byte	access:public
kPi	..\\scintilla\\gtk\\PlatGTK.cxx	/^static const double kPi = 3.14159265358979323846;$/;"	v	typeref:typename:const double	file:
k_Boms	..\\scite\\src\\Utf8_16.cxx	/^const Utf8_16::utf8 Utf8_16::k_Boms[][3] = {$/;"	m	class:Utf8_16	typeref:typename:const Utf8_16::utf8[][3]
k_Boms	..\\scite\\src\\Utf8_16.h	/^	static const utf8 k_Boms[eLast][3];$/;"	m	class:Utf8_16	typeref:typename:const utf8[][3]	access:public
key	..\\scintilla\\lua\\src\\lptree.h	/^  unsigned short key;  \/* key in ktable for Lua data (0 if no key) *\/$/;"	m	struct:TTree	typeref:typename:unsigned short	access:public
key	..\\scintilla\\lua\\src\\lpvm.h	/^    short key;$/;"	m	struct:Instruction::Inst	typeref:typename:short	access:public
key	..\\scintilla\\src\\KeyMap.h	/^	int key;$/;"	m	class:Scintilla::KeyModifiers	typeref:typename:int	access:public
key	..\\scintilla\\src\\KeyMap.h	/^	int key;$/;"	m	class:Scintilla::KeyToCommand	typeref:typename:int	access:public
key	..\\scite\\gtk\\SciTEGTK.cxx	/^	unsigned int key;	\/\/ For alphabetic keys has to match the shift modifier.$/;"	m	class:KeyToCommand	typeref:typename:unsigned int	file:	access:public
key	..\\scite\\scripts\\CheckPropsDoc.py	/^			key = keyOfLine(propLine)$/;"	v	access:public
key	..\\scite\\scripts\\CheckPropsDoc.py	/^		key = keyOfLine(propLine)$/;"	v	access:public
key	..\\scite\\src\\Containers.h	/^		KEY key;$/;"	m	struct:TMap::Association	typeref:typename:KEY	access:public
key2tval	..\\scintilla\\lua\\src\\ltable.h	/^#define key2tval(/;"	d	signature:(n)
keyOfLine	..\\scite\\scripts\\CheckPropsDoc.py	/^def keyOfLine(line):$/;"	f	access:public	signature:(line)
keyPressEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::keyPressEvent(QKeyEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QKeyEvent * event)
keyWordLists	..\\scintilla\\lexlib\\LexerBase.h	/^	WordList *keyWordLists[numWordLists+1];$/;"	m	class:Scintilla::LexerBase	typeref:typename:WordList * []	access:protected
keywords	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^keywords = \\$/;"	v	access:public
kind	..\\scintilla\\lua\\src\\lpcap.h	/^  byte kind;  \/* kind of capture *\/$/;"	m	struct:Capture	typeref:typename:byte	access:public
kmap	..\\scintilla\\src\\Editor.h	/^	KeyMap kmap;$/;"	m	class:Scintilla::Editor	typeref:typename:KeyMap	access:protected
kmap	..\\scintilla\\src\\KeyMap.h	/^	std::map<KeyModifiers, unsigned int> kmap;$/;"	m	class:Scintilla::KeyMap	typeref:typename:std::map<KeyModifiers,unsigned int>	access:private
kmap	..\\scite\\gtk\\SciTEGTK.cxx	/^static KeyToCommand kmap[] = {$/;"	v	typeref:typename:KeyToCommand[]	file:
kname	..\\scintilla\\lua\\src\\ldebug.c	/^static const char *kname (Proto *p, int c) {$/;"	f	typeref:typename:const char *	file:	signature:(Proto * p,int c)
knownDebugOptionalAndArchaicProperties	..\\scite\\scripts\\CheckPropsDoc.py	/^knownDebugOptionalAndArchaicProperties = {$/;"	v	access:public
knownIrregularProperties	..\\scintilla\\scripts\\ScintillaData.py	/^knownIrregularProperties = [$/;"	v	access:public
knownOutputAndLexerProperties	..\\scite\\scripts\\CheckPropsDoc.py	/^knownOutputAndLexerProperties = {$/;"	v	access:public
ktableidx	..\\scintilla\\lua\\src\\lptypes.h	/^#define ktableidx(/;"	d	signature:(ptop)
ktablelen	..\\scintilla\\lua\\src\\lptree.c	/^static int ktablelen (lua_State *L, int idx) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int idx)
l	..\\scintilla\\lua\\src\\lobject.h	/^    } l;$/;"	m	union:UpVal::__anonae4e9c5f040a	typeref:struct:UpVal::__anonae4e9c5f040a::__anonae4e9c5f0508	access:public
l	..\\scintilla\\lua\\src\\lobject.h	/^  LClosure l;$/;"	m	union:Closure	typeref:typename:LClosure	access:public
l	..\\scintilla\\lua\\src\\lstate.c	/^  lua_State l;$/;"	m	struct:LG	typeref:typename:lua_State	file:	access:public
lParam	..\\scintilla\\include\\Scintilla.h	/^	sptr_t lParam;	\/* SCN_MACRORECORD *\/$/;"	m	struct:SCNotification	typeref:typename:sptr_t	access:public
l_G	..\\scintilla\\lua\\src\\lstate.h	/^  global_State *l_G;$/;"	m	struct:lua_State	typeref:typename:global_State *	access:public
l_alloc	..\\scintilla\\lua\\src\\lauxlib.c	/^static void *l_alloc (void *ud, void *ptr, size_t osize, size_t nsize) {$/;"	f	typeref:typename:void *	file:	signature:(void * ud,void * ptr,size_t osize,size_t nsize)
l_d	..\\scintilla\\lua\\src\\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	typeref:typename:double	access:public
l_d	..\\scite\\lua\\include\\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	typeref:typename:double	access:public
l_gt	..\\scintilla\\lua\\src\\lstate.h	/^  TValue l_gt;  \/* table of globals *\/$/;"	m	struct:lua_State	typeref:typename:TValue	access:public
l_isfalse	..\\scintilla\\lua\\src\\lobject.h	/^#define l_isfalse(/;"	d	signature:(o)
l_l	..\\scintilla\\lua\\src\\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	typeref:typename:long	access:public
l_l	..\\scite\\lua\\include\\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	m	union:luai_Cast	typeref:typename:long	access:public
l_mem	..\\scintilla\\lua\\src\\llimits.h	/^typedef LUAI_MEM l_mem;$/;"	t	typeref:typename:LUAI_MEM
l_message	..\\scintilla\\lua\\src\\lua.c	/^static void l_message (const char *pname, const char *msg) {$/;"	f	typeref:typename:void	file:	signature:(const char * pname,const char * msg)
l_registry	..\\scintilla\\lua\\src\\lstate.h	/^  TValue l_registry;$/;"	m	struct:global_State	typeref:typename:TValue	access:public
l_setbit	..\\scintilla\\lua\\src\\lgc.h	/^#define l_setbit(/;"	d	signature:(x,b)
l_strcmp	..\\scintilla\\lua\\src\\lvm.c	/^static int l_strcmp (const TString *ls, const TString *rs) {$/;"	f	typeref:typename:int	file:	signature:(const TString * ls,const TString * rs)
l_uacNumber	..\\scintilla\\lua\\src\\llimits.h	/^typedef LUAI_UACNUMBER l_uacNumber;$/;"	t	typeref:typename:LUAI_UACNUMBER
label	..\\scite\\src\\SciTEBase.h	/^	const char *label;$/;"	m	struct:SearchOption	typeref:typename:const char *	access:public
labelFind	..\\scite\\gtk\\SciTEGTK.cxx	/^	WStatic labelFind;$/;"	m	class:DialogFindReplace	typeref:typename:WStatic	file:	access:public
labelReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^	WStatic labelReplace;$/;"	m	class:DialogFindReplace	typeref:typename:WStatic	file:	access:public
laction	..\\scintilla\\lua\\src\\lua.c	/^static void laction (int i) {$/;"	f	typeref:typename:void	file:	signature:(int i)
language	..\\scintilla\\lexlib\\LexerModule.h	/^	int language;$/;"	m	class:Scintilla::LexerModule	typeref:typename:int	access:protected
language	..\\scite\\src\\SciTEBase.h	/^	std::string language;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
languageCmdID	..\\scite\\src\\SciTEBase.h	/^	enum { languageCmdID = IDM_LANGUAGE };$/;"	e	enum:SciTEBase::__anonf95580a60e03	access:public
languageMenu	..\\scite\\src\\SciTEBase.h	/^	std::vector<LanguageMenuItem> languageMenu;$/;"	m	class:SciTEBase	typeref:typename:std::vector<LanguageMenuItem>	access:protected
languageName	..\\scintilla\\lexlib\\LexerModule.h	/^	const char *languageName;$/;"	m	class:Scintilla::LexerModule	typeref:typename:const char *	access:public
lapi_c	..\\scintilla\\lua\\src\\lapi.c	/^#define lapi_c$/;"	d	file:
lapi_h	..\\scintilla\\lua\\src\\lapi.h	/^#define lapi_h$/;"	d
largestMarkerHeight	..\\scintilla\\src\\ViewStyle.h	/^	int largestMarkerHeight;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
lastClick	..\\scintilla\\src\\Editor.h	/^	Point lastClick;$/;"	m	class:Scintilla::Editor	typeref:typename:Point	access:protected
lastClickTime	..\\scintilla\\src\\Editor.h	/^	unsigned int lastClickTime;$/;"	m	class:Scintilla::Editor	typeref:typename:unsigned int	access:protected
lastFlags	..\\scite\\gtk\\SciTEGTK.cxx	/^	int lastFlags;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
lastHighSurrogateChar	..\\scintilla\\win32\\ScintillaWin.cxx	/^	wchar_t lastHighSurrogateChar;$/;"	m	class:ScintillaWin	typeref:typename:wchar_t	file:	access:private
lastKey	..\\scintilla\\gtk\\ScintillaGTK.h	/^	int lastKey;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:int	access:private
lastKeyDownConsumed	..\\scintilla\\win32\\ScintillaWin.cxx	/^	bool lastKeyDownConsumed;$/;"	m	class:ScintillaWin	typeref:typename:bool	file:	access:private
lastMouseEvent	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  NSEvent* lastMouseEvent;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:NSEvent *	access:private
lastNonCommonScript	..\\scintilla\\gtk\\ScintillaGTK.h	/^	PangoScript lastNonCommonScript;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:PangoScript	access:private
lastOutput	..\\scite\\gtk\\SciTEGTK.cxx	/^	std::string lastOutput;$/;"	m	class:SciTEGTK	typeref:typename:std::string	file:	access:protected
lastPosCallTip	..\\scite\\src\\SciTEBase.h	/^	int lastPosCallTip;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
lastSegItalicsOffset	..\\scintilla\\src\\ViewStyle.h	/^	int lastSegItalicsOffset; \/\/ the offset so as not to clip italic characters at EOLs$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
lastWasCR	..\\scite\\src\\SciTEIO.cxx	/^	bool lastWasCR;$/;"	m	class:FileReader	typeref:typename:bool	file:	access:private
lastWheelMouseDirection	..\\scintilla\\gtk\\ScintillaGTK.h	/^	gint lastWheelMouseDirection;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:gint	access:private
lastWheelMouseTime	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GTimeVal lastWheelMouseTime;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GTimeVal	access:private
lastXChosen	..\\scintilla\\src\\Editor.h	/^	int lastXChosen;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
lastfree	..\\scintilla\\lua\\src\\lobject.h	/^  Node *lastfree;  \/* any free position is before this position *\/$/;"	m	struct:Table	typeref:typename:Node *	access:public
lastline	..\\scintilla\\lua\\src\\llex.h	/^  int lastline;  \/* line of last token `consumed' *\/$/;"	m	struct:LexState	typeref:typename:int	access:public
lastlinedefined	..\\scintilla\\lua\\src\\lobject.h	/^  int lastlinedefined;$/;"	m	struct:Proto	typeref:typename:int	access:public
lastlinedefined	..\\scintilla\\lua\\src\\lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
lastlinedefined	..\\scite\\lua\\include\\lua.h	/^  int lastlinedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
lastlistfield	..\\scintilla\\lua\\src\\lparser.c	/^static void lastlistfield (FuncState *fs, struct ConsControl *cc) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,struct ConsControl * cc)
lasttarget	..\\scintilla\\lua\\src\\lparser.h	/^  int lasttarget;   \/* `pc' of last `jump target' *\/$/;"	m	struct:FuncState	typeref:typename:int	access:public
lauxlib_c	..\\scintilla\\lua\\src\\lauxlib.c	/^#define lauxlib_c$/;"	d	file:
lauxlib_h	..\\scintilla\\lua\\src\\lauxlib.h	/^#define lauxlib_h$/;"	d
lauxlib_h	..\\scite\\lua\\include\\lauxlib.h	/^#define lauxlib_h$/;"	d
layerFindIndicator	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  FindHighlightLayer *layerFindIndicator;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:FindHighlightLayer *	access:private
layout	..\\scintilla\\gtk\\PlatGTK.cxx	/^	PangoLayout *layout;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:PangoLayout *	file:	access:private
lb	..\\scintilla\\src\\AutoComplete.h	/^	std::unique_ptr<ListBox> lb;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:std::unique_ptr<ListBox>	access:public
lb	..\\scintilla\\win32\\PlatWin.cxx	/^	HWND lb;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:HWND	file:	access:private
lbaselib_c	..\\scintilla\\lua\\src\\lbaselib.c	/^#define lbaselib_c$/;"	d	file:
lcode_c	..\\scintilla\\lua\\src\\lcode.c	/^#define lcode_c$/;"	d	file:
lcode_h	..\\scintilla\\lua\\src\\lcode.h	/^#define lcode_h$/;"	d
lconfig_h	..\\scintilla\\lua\\src\\luaconf.h	/^#define lconfig_h$/;"	d
lconfig_h	..\\scite\\lua\\include\\luaconf.h	/^#define lconfig_h$/;"	d
ldAnnotation	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	e	enum:Scintilla::Document::lineData	access:public
ldLevels	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	e	enum:Scintilla::Document::lineData	access:public
ldMargin	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	e	enum:Scintilla::Document::lineData	access:public
ldMarkers	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	e	enum:Scintilla::Document::lineData	access:public
ldSize	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	e	enum:Scintilla::Document::lineData	access:public
ldState	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	e	enum:Scintilla::Document::lineData	access:public
ldTabstops	..\\scintilla\\src\\EditView.h	/^	std::unique_ptr<PerLine> ldTabstops;$/;"	m	class:Scintilla::EditView	typeref:typename:std::unique_ptr<PerLine>	access:public
ldblib_c	..\\scintilla\\lua\\src\\ldblib.c	/^#define ldblib_c$/;"	d	file:
ldebug_c	..\\scintilla\\lua\\src\\ldebug.c	/^#define ldebug_c$/;"	d	file:
ldebug_h	..\\scintilla\\lua\\src\\ldebug.h	/^#define ldebug_h$/;"	d
ldo_c	..\\scintilla\\lua\\src\\ldo.c	/^#define ldo_c$/;"	d	file:
ldo_h	..\\scintilla\\lua\\src\\ldo.h	/^#define ldo_h$/;"	d
ldump_c	..\\scintilla\\lua\\src\\ldump.c	/^#define ldump_c$/;"	d	file:
leading	..\\scite\\src\\ExportPDF.cxx	/^		double leading;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:double	file:	access:private
leaveblock	..\\scintilla\\lua\\src\\lparser.c	/^static void leaveblock (FuncState *fs) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs)
leavelevel	..\\scintilla\\lua\\src\\lparser.c	/^#define leavelevel(/;"	d	file:	signature:(ls)
left	..\\scintilla\\include\\Platform.h	/^	XYPOSITION left;$/;"	m	class:Scintilla::PRectangle	typeref:typename:XYPOSITION	access:public
left	..\\scintilla\\include\\Scintilla.h	/^	int left;$/;"	m	struct:Sci_Rectangle	typeref:typename:int	access:public
left	..\\scintilla\\lua\\src\\lparser.c	/^  lu_byte left;  \/* left priority for each binary operator *\/$/;"	m	struct:__anon613de0d00108	typeref:typename:lu_byte	file:	access:public
left	..\\scite\\src\\GUI.h	/^	int left;$/;"	m	class:GUI::Rectangle	typeref:typename:int	access:public
leftMarginWidth	..\\scintilla\\src\\ViewStyle.h	/^	int leftMarginWidth;	\/\/\/< Spacing margin on left of text$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
len	..\\scintilla\\lexlib\\WordList.h	/^	int len;$/;"	m	class:Scintilla::WordList	typeref:typename:int	access:private
len	..\\scintilla\\lua\\src\\lobject.h	/^    size_t len;$/;"	m	struct:TString::__anonae4e9c5f0208	typeref:typename:size_t	access:public
len	..\\scintilla\\lua\\src\\lobject.h	/^    size_t len;$/;"	m	struct:Udata::__anonae4e9c5f0308	typeref:typename:size_t	access:public
len	..\\scintilla\\lua\\src\\lstrlib.c	/^    ptrdiff_t len;$/;"	m	struct:MatchState::__anondc1923b30108	typeref:typename:ptrdiff_t	file:	access:public
len	..\\scintilla\\src\\PositionCache.h	/^	unsigned int len:8;$/;"	m	class:Scintilla::PositionCacheEntry	typeref:typename:unsigned int:8	access:private
lenBytes	..\\scintilla\\src\\Document.cxx	/^	unsigned int lenBytes;$/;"	m	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:unsigned int	file:	access:private
lenCharacters	..\\scintilla\\src\\Document.cxx	/^	size_t lenCharacters;$/;"	m	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:size_t	file:	access:private
lenCurrent	..\\scite\\src\\LuaExtension.cxx	/^	int lenCurrent;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
lenData	..\\scintilla\\src\\CellBuffer.h	/^	Sci::Position lenData;$/;"	m	class:Scintilla::Action	typeref:typename:Sci::Position	access:public
lenDoc	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position lenDoc;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:private
lenDoc	..\\scite\\src\\StyleWriter.h	/^	int lenDoc;$/;"	m	class:TextReader	typeref:typename:int	access:protected
lenLineStarts	..\\scintilla\\src\\PositionCache.h	/^	int lenLineStarts;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:private
lenNext	..\\scite\\src\\LuaExtension.cxx	/^	int lenNext;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
lenPositions	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int lenPositions;$/;"	m	class:ClusterIterator	typeref:typename:int	file:	access:private
lenStyles	..\\scintilla\\lexlib\\SubStyles.h	/^	int lenStyles;$/;"	m	class:Scintilla::WordClassifier	typeref:typename:int	access:private
length	..\\scintilla\\include\\Scintilla.h	/^	Sci_Position length;		\/* SCN_MODIFIED *\/$/;"	m	struct:SCNotification	typeref:typename:Sci_Position	access:public
length	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::length() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
length	..\\scintilla\\src\\Document.h	/^	Sci::Position length;$/;"	m	class:Scintilla::DocModification	typeref:typename:Sci::Position	access:public
length	..\\scintilla\\src\\Document.h	/^	size_t length;$/;"	m	struct:Scintilla::StyledText	typeref:typename:size_t	access:public
length	..\\scintilla\\src\\PerLine.cxx	/^	int length;$/;"	m	struct:AnnotationHeader	typeref:typename:int	file:	access:public
length	..\\scintilla\\src\\PositionCache.h	/^	int length;$/;"	m	struct:Scintilla::TextSegment	typeref:typename:int	access:public
length	..\\scite\\src\\SciTEBase.h	/^	int length;$/;"	m	class:BufferList	typeref:typename:int	access:public
lengthBody	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t lengthBody;$/;"	m	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:protected
lengthDoc	..\\scite\\src\\LuaExtension.cxx	/^	int lengthDoc;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
lengthDocument	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_PositionU lengthDocument;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_PositionU	access:private
lengthDocument	..\\scintilla\\src\\Decoration.h	/^	Sci::Position lengthDocument;$/;"	m	class:Scintilla::DecorationList	typeref:typename:Sci::Position	access:private
lengthEachSubdivision	..\\scintilla\\src\\PositionCache.h	/^	enum { lengthEachSubdivision = 100 };$/;"	e	enum:Scintilla::BreakFinder::__anon8a9e19270403	access:public
lengthForEncode	..\\scintilla\\src\\Editor.h	/^	Sci::Position lengthForEncode;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
lengthStartSubdivision	..\\scintilla\\src\\PositionCache.h	/^	enum { lengthStartSubdivision = 300 };$/;"	e	enum:Scintilla::BreakFinder::__anon8a9e19270303	access:public
lengthVisible	..\\scite\\src\\SciTEBase.h	/^	int lengthVisible;$/;"	m	class:BufferList	typeref:typename:int	access:public
lessequal	..\\scintilla\\lua\\src\\lvm.c	/^static int lessequal (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const TValue * l,const TValue * r)
level	..\\scintilla\\lua\\src\\lstrlib.c	/^  int level;  \/* total number of captures (finished or unfinished) *\/$/;"	m	struct:MatchState	typeref:typename:int	file:	access:public
level	..\\scintilla\\src\\PositionCache.h	/^	int level;$/;"	m	class:Scintilla::LineLayoutCache	typeref:typename:int	access:private
levels	..\\scintilla\\src\\PerLine.h	/^	SplitVector<int> levels;$/;"	m	class:Scintilla::LineLevels	typeref:typename:SplitVector<int>	access:private
lexClasses	..\\scintilla\\lexlib\\DefaultLexer.h	/^	const LexicalClass *lexClasses;$/;"	m	class:Scintilla::DefaultLexer	typeref:typename:const LexicalClass *	access:private
lexClasses	..\\scintilla\\lexlib\\LexerBase.h	/^	const LexicalClass *lexClasses;$/;"	m	class:Scintilla::LexerBase	typeref:typename:const LexicalClass *	access:protected
lexClasses	..\\scintilla\\lexlib\\LexerModule.h	/^	const LexicalClass *lexClasses;$/;"	m	class:Scintilla::LexerModule	typeref:typename:const LexicalClass *	access:protected
lexCurrent	..\\scintilla\\src\\ScintillaBase.cxx	/^	const LexerModule *lexCurrent;$/;"	m	class:Scintilla::LexState	typeref:typename:const LexerModule *	file:	access:private
lexLPeg	..\\scite\\src\\SciTEBase.h	/^	int lexLPeg;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
lexLanguage	..\\scintilla\\src\\ScintillaBase.cxx	/^	int lexLanguage;$/;"	m	class:Scintilla::LexState	typeref:typename:int	file:	access:public
lexLanguage	..\\scite\\src\\SciTEBase.h	/^	int lexLanguage;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
lexNames	..\\scintilla\\scripts\\ScintillaData.py	/^    lexNames = sorted(sci.sclexFromName.keys())$/;"	v	access:public
lexerCatalogue	..\\scintilla\\src\\Catalogue.cxx	/^static std::vector<LexerModule *> lexerCatalogue;$/;"	v	typeref:typename:std::vector<LexerModule * >	file:
lf	..\\scintilla\\win32\\PlatWin.cxx	/^	LOGFONTW lf;$/;"	m	class:Scintilla::FontCached	typeref:typename:LOGFONTW	file:	access:private
lfunc_c	..\\scintilla\\lua\\src\\lfunc.c	/^#define lfunc_c$/;"	d	file:
lfunc_h	..\\scintilla\\lua\\src\\lfunc.h	/^#define lfunc_h$/;"	d
lgc_c	..\\scintilla\\lua\\src\\lgc.c	/^#define lgc_c$/;"	d	file:
lgc_h	..\\scintilla\\lua\\src\\lgc.h	/^#define lgc_h$/;"	d
lib	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	QLibrary *lib;$/;"	m	class:Scintilla::DynamicLibraryImpl	typeref:typename:QLibrary *	file:	access:protected
lib	..\\scintilla\\src\\ExternalLexer.h	/^	std::unique_ptr<DynamicLibrary> lib;$/;"	m	class:Scintilla::LexerLibrary	typeref:typename:std::unique_ptr<DynamicLibrary>	access:private
libraries	..\\scintilla\\src\\ExternalLexer.h	/^	std::vector<std::unique_ptr<LexerLibrary>> libraries;$/;"	m	class:Scintilla::LexerManager	typeref:typename:std::vector<std::unique_ptr<LexerLibrary>>	access:private
libsize	..\\scintilla\\lua\\src\\lauxlib.c	/^static int libsize (const luaL_Reg *l) {$/;"	f	typeref:typename:int	file:	signature:(const luaL_Reg * l)
lifeState	..\\scite\\src\\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	m	class:Buffer	typeref:enum:Buffer::__anonf95580a60203	access:public
line	..\\scintilla\\include\\Scintilla.h	/^	Sci_Position line;		\/* SCN_MODIFIED *\/$/;"	m	struct:SCNotification	typeref:typename:Sci_Position	access:public
line	..\\scintilla\\src\\Document.h	/^	Sci::Line line;$/;"	m	class:Scintilla::DocModification	typeref:typename:Sci::Line	access:public
line	..\\scite\\scripts\\CheckPropsDoc.py	/^				line = line[:line.find('\\\\t')]$/;"	v	access:public
line	..\\scite\\scripts\\CheckPropsDoc.py	/^			line = line.replace('&','')$/;"	v	access:public
line	..\\scite\\scripts\\CheckPropsDoc.py	/^			line = line.replace('...','')$/;"	v	access:public
line	..\\scite\\scripts\\CheckPropsDoc.py	/^		line = grabQuoted(line)$/;"	v	access:public
line	..\\scite\\scripts\\CheckPropsDoc.py	/^		line = line.strip().strip("=")$/;"	v	access:public
line	..\\scite\\scripts\\CheckPropsDoc.py	/^	line = line.strip()$/;"	v	access:public
lineAnchorPos	..\\scintilla\\src\\Editor.h	/^	Sci::Position lineAnchorPos;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
lineCopy	..\\scintilla\\src\\Editor.h	/^	bool lineCopy;$/;"	m	class:Scintilla::SelectionText	typeref:typename:bool	access:public
lineData	..\\scintilla\\src\\Document.h	/^	enum lineData { ldMarkers, ldLevels, ldState, ldMargin, ldAnnotation, ldSize };$/;"	g	class:Scintilla::Document	access:private
lineDocEnd	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position lineDocEnd;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:public
lineEnd	..\\scintilla\\scripts\\FileGenerator.py	/^lineEnd = "\\r\\n" if sys.platform == "win32" else "\\n"$/;"	v	access:public
lineEnd	..\\scite\\src\\MatchMarker.h	/^	int lineEnd;$/;"	m	struct:LineRange	typeref:typename:int	access:public
lineEndBitSet	..\\scintilla\\src\\Document.h	/^	int lineEndBitSet;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:public
lineHeight	..\\scintilla\\src\\CallTip.h	/^	int lineHeight;         \/\/ vertical line spacing$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:private
lineHeight	..\\scintilla\\src\\ViewStyle.h	/^	int lineHeight;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
lineHeight	..\\scintilla\\win32\\PlatWin.cxx	/^	int lineHeight;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:int	file:	access:private
lineHeight	..\\scite\\win32\\Strips.h	/^	int lineHeight;$/;"	m	class:Strip	typeref:typename:int	access:protected
lineLarge	..\\scintilla\\src\\Editor.h	/^	enum { lineLarge = 0x7ffffff };$/;"	e	enum:Scintilla::WrapPending::__anon8e1f0c450203	access:public
lineNum	..\\scite\\src\\SciTEIO.cxx	/^	int lineNum;$/;"	m	class:FileReader	typeref:typename:int	file:	access:private
lineNumber	..\\scintilla\\src\\PositionCache.h	/^	Sci::Line lineNumber;$/;"	m	class:Scintilla::LineLayout	typeref:typename:Sci::Line	access:private
lineNumberPrintSpace	..\\scintilla\\src\\EditView.cxx	/^#define lineNumberPrintSpace /;"	d	file:
lineNumbers	..\\scite\\src\\SciTEBase.h	/^	bool lineNumbers;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
lineNumbersExpand	..\\scite\\src\\SciTEBase.h	/^	bool lineNumbersExpand;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
lineNumbersWidth	..\\scite\\src\\SciTEBase.h	/^	int lineNumbersWidth;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
lineNumbersWidthDefault	..\\scite\\src\\SciTEBase.h	/^	enum { lineNumbersWidthDefault = 4 };$/;"	e	enum:SciTEBase::__anonf95580a61403	access:public
lineOverlap	..\\scintilla\\src\\ViewStyle.h	/^	int lineOverlap;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
lineRange	..\\scintilla\\src\\PositionCache.h	/^	Range lineRange;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:Range	access:private
lineRangeBreak	..\\scintilla\\src\\Document.cxx	/^	Sci::Line lineRangeBreak;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:Sci::Line	file:	access:public
lineRangeEnd	..\\scintilla\\src\\Document.cxx	/^	Sci::Line lineRangeEnd;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:Sci::Line	file:	access:public
lineRangeStart	..\\scintilla\\src\\Document.cxx	/^	Sci::Line lineRangeStart;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:Sci::Line	file:	access:public
lineRanges	..\\scite\\src\\MatchMarker.h	/^	std::vector<LineRange> lineRanges;$/;"	m	class:MatchMarker	typeref:typename:std::vector<LineRange>	access:private
lineStart	..\\scite\\src\\MatchMarker.h	/^	int lineStart;$/;"	m	struct:LineRange	typeref:typename:int	access:public
lineStartNext	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position lineStartNext;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:public
lineStarts	..\\scintilla\\src\\PositionCache.h	/^	std::unique_ptr<int []>lineStarts;$/;"	m	class:Scintilla::LineLayout	typeref:typename:std::unique_ptr<int[]>	access:private
lineStates	..\\scintilla\\src\\PerLine.h	/^	SplitVector<int> lineStates;$/;"	m	class:Scintilla::LineState	typeref:typename:SplitVector<int>	access:private
lineToCompare	..\\scite\\src\\SciTEIO.cxx	/^	std::string lineToCompare;$/;"	m	class:FileReader	typeref:typename:std::string	file:	access:private
lineToShow	..\\scite\\src\\SciTEIO.cxx	/^	std::string lineToShow;$/;"	m	class:FileReader	typeref:typename:std::string	file:	access:private
lineWidthMaxSeen	..\\scintilla\\src\\EditView.h	/^	int lineWidthMaxSeen;$/;"	m	class:Scintilla::EditView	typeref:typename:int	access:public
line_end	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::line_end(int lineno) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int lineno)
line_end_position	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::line_end_position(int pos) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int pos)
line_from_position	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::line_from_position(int pos) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int pos)
line_start	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::line_start(int lineno) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int lineno)
linedefined	..\\scintilla\\lua\\src\\lobject.h	/^  int linedefined;$/;"	m	struct:Proto	typeref:typename:int	access:public
linedefined	..\\scintilla\\lua\\src\\lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
linedefined	..\\scite\\lua\\include\\lua.h	/^  int linedefined;	\/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
lineinfo	..\\scintilla\\lua\\src\\lobject.h	/^  int *lineinfo;  \/* map from opcodes to source lines *\/$/;"	m	struct:Proto	typeref:typename:int *	access:public
linenumber	..\\scintilla\\lua\\src\\llex.h	/^  int linenumber;  \/* input line counter *\/$/;"	m	struct:LexState	typeref:typename:int	access:public
lines	..\\scintilla\\src\\PerLine.cxx	/^	short lines;$/;"	m	struct:AnnotationHeader	typeref:typename:short	file:	access:public
lines	..\\scintilla\\src\\PositionCache.h	/^	int lines;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
linesAdded	..\\scintilla\\include\\Scintilla.h	/^	Sci_Position linesAdded;	\/* SCN_MODIFIED *\/$/;"	m	struct:SCNotification	typeref:typename:Sci_Position	access:public
linesAdded	..\\scintilla\\src\\Document.h	/^	Sci::Line linesAdded;	\/**< Negative if lines deleted. *\/$/;"	m	class:Scintilla::DocModification	typeref:typename:Sci::Line	access:public
linesInDocument	..\\scintilla\\src\\ContractionState.h	/^	Sci::Line linesInDocument;$/;"	m	class:Scintilla::ContractionState	typeref:typename:Sci::Line	access:private
linesPerScroll	..\\scintilla\\gtk\\ScintillaGTK.h	/^	unsigned int linesPerScroll;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:unsigned int	access:private
linesPerScroll	..\\scintilla\\win32\\ScintillaWin.cxx	/^	unsigned int linesPerScroll;	\/\/\/< Intellimouse support$/;"	m	class:ScintillaWin	typeref:typename:unsigned int	file:	access:private
lines_total	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::lines_total() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
linit_c	..\\scintilla\\lua\\src\\linit.c	/^#define linit_c$/;"	d	file:
link	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^	const VarChain *link;$/;"	m	struct:VarChain	typeref:typename:const VarChain *	file:	access:public
link	..\\scite\\src\\PropSetFile.cxx	/^	const VarChain *link;$/;"	m	struct:VarChain	typeref:typename:const VarChain *	file:	access:public
liolib_c	..\\scintilla\\lua\\src\\liolib.c	/^#define liolib_c$/;"	d	file:
list	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  std::vector<std::string> list;$/;"	m	class:ListBoxImpl	typeref:typename:std::vector<std::string>	file:	access:private
list	..\\scintilla\\gtk\\PlatGTK.cxx	/^	WindowID list;$/;"	m	class:ListBoxX	typeref:typename:WindowID	file:	access:private
list	..\\scintilla\\lexlib\\WordList.h	/^	char *list;$/;"	m	class:Scintilla::WordList	typeref:typename:char *	access:private
list	..\\scintilla\\src\\AutoComplete.cxx	/^	const char *list;$/;"	m	struct:Sorter	typeref:typename:const char *	file:	access:public
listCompletionMethod	..\\scintilla\\include\\Scintilla.h	/^	int listCompletionMethod;$/;"	m	struct:SCNotification	typeref:typename:int	access:public
listSepString	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char listSepString[] = ":";$/;"	v	typeref:typename:const GUI::gui_char[]
listSepString	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char listSepString[] = GUI_TEXT(";");$/;"	v	typeref:typename:const GUI::gui_char[]
listText	..\\scite\\src\\StringList.h	/^	std::string listText;$/;"	m	class:StringList	typeref:typename:std::string	access:private
listType	..\\scintilla\\include\\Scintilla.h	/^	int listType;	\/* SCN_USERLISTSELECTION *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
listType	..\\scintilla\\src\\ScintillaBase.h	/^	int listType;			\/\/\/< 0 is an autocomplete list$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:int	access:protected
list_image_free	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void list_image_free(gpointer, gpointer value, gpointer) {$/;"	f	typeref:typename:void	file:	signature:(gpointer,gpointer value,gpointer)
listfield	..\\scintilla\\lua\\src\\lparser.c	/^static void listfield (LexState *ls, struct ConsControl *cc) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,struct ConsControl * cc)
listing	..\\scintilla\\lua\\src\\luac.c	/^static int listing=0;			\/* list bytecodes? *\/$/;"	v	typeref:typename:int	file:
literalStrings	..\\scite\\scripts\\CheckPropsDoc.py	/^literalStrings = [l for l in list(literalStrings) if not present(localeSet, l)]$/;"	v	access:public
literalStrings	..\\scite\\scripts\\CheckPropsDoc.py	/^literalStrings = [l for l in literalStrings.keys() if l not in identifiersSorted]$/;"	v	access:public
literalStrings	..\\scite\\scripts\\CheckPropsDoc.py	/^literalStrings = {}$/;"	v	access:public
littleBit	..\\scintilla\\include\\Platform.h	/^	long littleBit;$/;"	m	class:Scintilla::ElapsedTime	typeref:typename:long	access:private
littleBit	..\\scite\\src\\GUI.h	/^	long littleBit;$/;"	m	class:GUI::ElapsedTime	typeref:typename:long	access:private
ll	..\\scintilla\\src\\EditView.h	/^	LineLayout *ll;$/;"	m	class:Scintilla::AutoLineLayout	typeref:typename:LineLayout *	access:private
ll	..\\scintilla\\src\\PositionCache.h	/^	const LineLayout *ll;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:const LineLayout *	access:private
llCheckTextAndStyle	..\\scintilla\\src\\PositionCache.h	/^	enum validLevel { llInvalid, llCheckTextAndStyle, llPositions, llLines } validity;$/;"	e	enum:Scintilla::LineLayout::validLevel	access:public
llInvalid	..\\scintilla\\src\\PositionCache.h	/^	enum validLevel { llInvalid, llCheckTextAndStyle, llPositions, llLines } validity;$/;"	e	enum:Scintilla::LineLayout::validLevel	access:public
llLines	..\\scintilla\\src\\PositionCache.h	/^	enum validLevel { llInvalid, llCheckTextAndStyle, llPositions, llLines } validity;$/;"	e	enum:Scintilla::LineLayout::validLevel	access:public
llPositions	..\\scintilla\\src\\PositionCache.h	/^	enum validLevel { llInvalid, llCheckTextAndStyle, llPositions, llLines } validity;$/;"	e	enum:Scintilla::LineLayout::validLevel	access:public
ll_funcs	..\\scintilla\\lua\\src\\loadlib.c	/^static const luaL_Reg ll_funcs[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
ll_load	..\\scintilla\\lua\\src\\loadlib.c	/^static void *ll_load (lua_State *L, const char *path) {$/;"	f	typeref:typename:void *	file:	signature:(lua_State * L,const char * path)
ll_loadfunc	..\\scintilla\\lua\\src\\loadlib.c	/^static int ll_loadfunc (lua_State *L, const char *path, const char *sym) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * path,const char * sym)
ll_loadlib	..\\scintilla\\lua\\src\\loadlib.c	/^static int ll_loadlib (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
ll_module	..\\scintilla\\lua\\src\\loadlib.c	/^static int ll_module (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
ll_register	..\\scintilla\\lua\\src\\loadlib.c	/^static void **ll_register (lua_State *L, const char *path) {$/;"	f	typeref:typename:void **	file:	signature:(lua_State * L,const char * path)
ll_require	..\\scintilla\\lua\\src\\loadlib.c	/^static int ll_require (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
ll_seeall	..\\scintilla\\lua\\src\\loadlib.c	/^static int ll_seeall (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
ll_sym	..\\scintilla\\lua\\src\\loadlib.c	/^static lua_CFunction ll_sym (lua_State *L, void *lib, const char *sym) {$/;"	f	typeref:typename:lua_CFunction	file:	signature:(lua_State * L,void * lib,const char * sym)
ll_unloadlib	..\\scintilla\\lua\\src\\loadlib.c	/^static void ll_unloadlib (void *lib) {$/;"	f	typeref:typename:void	file:	signature:(void * lib)
llc	..\\scintilla\\src\\EditView.h	/^	LineLayoutCache &llc;$/;"	m	class:Scintilla::AutoLineLayout	typeref:typename:LineLayoutCache &	access:private
llc	..\\scintilla\\src\\EditView.h	/^	LineLayoutCache llc;$/;"	m	class:Scintilla::EditView	typeref:typename:LineLayoutCache	access:public
llcCaret	..\\scintilla\\src\\PositionCache.h	/^		llcCaret=SC_CACHE_CARET,$/;"	e	enum:Scintilla::LineLayoutCache::__anon8a9e19270203	access:public
llcDocument	..\\scintilla\\src\\PositionCache.h	/^		llcDocument=SC_CACHE_DOCUMENT$/;"	e	enum:Scintilla::LineLayoutCache::__anon8a9e19270203	access:public
llcNone	..\\scintilla\\src\\PositionCache.h	/^		llcNone=SC_CACHE_NONE,$/;"	e	enum:Scintilla::LineLayoutCache::__anon8a9e19270203	access:public
llcPage	..\\scintilla\\src\\PositionCache.h	/^		llcPage=SC_CACHE_PAGE,$/;"	e	enum:Scintilla::LineLayoutCache::__anon8a9e19270203	access:public
llex	..\\scintilla\\lua\\src\\llex.c	/^static int llex (LexState *ls, SemInfo *seminfo) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls,SemInfo * seminfo)
llex_c	..\\scintilla\\lua\\src\\llex.c	/^#define llex_c$/;"	d	file:
llex_h	..\\scintilla\\lua\\src\\llex.h	/^#define llex_h$/;"	d
llimits_h	..\\scintilla\\lua\\src\\llimits.h	/^#define llimits_h$/;"	d
lmathlib_c	..\\scintilla\\lua\\src\\lmathlib.c	/^#define lmathlib_c$/;"	d	file:
lmem_c	..\\scintilla\\lua\\src\\lmem.c	/^#define lmem_c$/;"	d	file:
lmem_h	..\\scintilla\\lua\\src\\lmem.h	/^#define lmem_h$/;"	d
lmemfind	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *lmemfind (const char *s1, size_t l1,$/;"	f	typeref:typename:const char *	file:	signature:(const char * s1,size_t l1,const char * s2,size_t l2)
lmod	..\\scintilla\\lua\\src\\lobject.h	/^#define lmod(/;"	d	signature:(s,size)
load_aux	..\\scintilla\\lua\\src\\lbaselib.c	/^static int load_aux (lua_State *L, int status) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int status)
loader_C	..\\scintilla\\lua\\src\\loadlib.c	/^static int loader_C (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
loader_Croot	..\\scintilla\\lua\\src\\loadlib.c	/^static int loader_Croot (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
loader_Lua	..\\scintilla\\lua\\src\\loadlib.c	/^static int loader_Lua (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
loader_preload	..\\scintilla\\lua\\src\\loadlib.c	/^static int loader_preload (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
loaderror	..\\scintilla\\lua\\src\\loadlib.c	/^static void loaderror (lua_State *L, const char *filename) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * filename)
loaders	..\\scintilla\\lua\\src\\loadlib.c	/^static const lua_CFunction loaders[] =$/;"	v	typeref:typename:const lua_CFunction[]	file:
loaders	..\\scite\\src\\SciTEBase.h	/^	int loaders;$/;"	m	struct:BackgroundActivities	typeref:typename:int	access:public
loadlib_c	..\\scintilla\\lua\\src\\loadlib.c	/^#define loadlib_c$/;"	d	file:
loadline	..\\scintilla\\lua\\src\\lua.c	/^static int loadline (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lobject_c	..\\scintilla\\lua\\src\\lobject.c	/^#define lobject_c$/;"	d	file:
lobject_h	..\\scintilla\\lua\\src\\lobject.h	/^#define lobject_h$/;"	d
localeFileName	..\\scite\\scripts\\CheckPropsDoc.py	/^localeFileName = srcRoot + "\/win32\/locale.properties"$/;"	v	access:public
localeSet	..\\scite\\scripts\\CheckPropsDoc.py	/^localeSet = {}$/;"	v	access:public
localfunc	..\\scintilla\\lua\\src\\lparser.c	/^static void localfunc (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
localiser	..\\scite\\gtk\\Widget.h	/^	ILocalize *localiser;$/;"	m	class:BaseWin	typeref:typename:ILocalize *	access:protected
localiser	..\\scite\\src\\SciTEBase.h	/^	Localization localiser;$/;"	m	class:SciTEBase	typeref:typename:Localization	access:protected
localiser	..\\scite\\win32\\Strips.h	/^	ILocalize *localiser;$/;"	m	class:BaseWin	typeref:typename:ILocalize *	access:protected
localstat	..\\scintilla\\lua\\src\\lparser.c	/^static void localstat (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
location	..\\scintilla\\win32\\PlatWin.cxx	/^	Point location;	\/\/ Caret location at which the list is opened$/;"	m	class:Scintilla::ListBoxX	typeref:typename:Point	file:	access:private
locvars	..\\scintilla\\lua\\src\\lobject.h	/^  struct LocVar *locvars;  \/* information about local variables *\/$/;"	m	struct:Proto	typeref:struct:LocVar *	access:public
logPixelsY	..\\scintilla\\win32\\PlatWin.cxx	/^	int logPixelsY;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:int	file:	access:private
lookahead	..\\scintilla\\lua\\src\\llex.h	/^  Token lookahead;  \/* look ahead token *\/$/;"	m	struct:LexState	typeref:typename:Token	access:public
loopset	..\\scintilla\\lua\\src\\lptypes.h	/^#define loopset(/;"	d	signature:(v,b)
lopcodes_c	..\\scintilla\\lua\\src\\lopcodes.c	/^#define lopcodes_c$/;"	d	file:
lopcodes_h	..\\scintilla\\lua\\src\\lopcodes.h	/^#define lopcodes_h$/;"	d
loslib_c	..\\scintilla\\lua\\src\\loslib.c	/^#define loslib_c$/;"	d	file:
lowerKeys	..\\scite\\src\\PropSetFile.h	/^	bool lowerKeys;$/;"	m	class:PropSetFile	typeref:typename:bool	access:private
lp_P	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_P (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_V	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_V (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_and	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_and (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_argcapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_argcapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_backref	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_backref (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_behind	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_behind (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_choice	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_choice (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_constcapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_constcapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_divcapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_divcapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_foldcapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_foldcapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_gc	..\\scintilla\\lua\\src\\lptree.c	/^int lp_gc (lua_State *L) {$/;"	f	typeref:typename:int	signature:(lua_State * L)
lp_groupcapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_groupcapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_locale	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_locale (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_match	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_match (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_matchtime	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_matchtime (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_not	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_not (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_poscapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_poscapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_printcode	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_printcode (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_printtree	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_printtree (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_range	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_range (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_seq	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_seq (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_set	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_set (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_setmax	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_setmax (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_simplecapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_simplecapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_star	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_star (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_sub	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_sub (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_substcapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_substcapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_tablecapture	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_tablecapture (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_type	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_type (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lp_version	..\\scintilla\\lua\\src\\lptree.c	/^static int lp_version (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
lparser_c	..\\scintilla\\lua\\src\\lparser.c	/^#define lparser_c$/;"	d	file:
lparser_h	..\\scintilla\\lua\\src\\lparser.h	/^#define lparser_h$/;"	d
lpcap_h	..\\scintilla\\lua\\src\\lpcap.h	/^#define lpcap_h$/;"	d
lpcode_h	..\\scintilla\\lua\\src\\lpcode.h	/^#define lpcode_h$/;"	d
lpprint_h	..\\scintilla\\lua\\src\\lpprint.h	/^#define lpprint_h$/;"	d
lpstrText	..\\scintilla\\include\\Scintilla.h	/^	char *lpstrText;$/;"	m	struct:Sci_TextRange	typeref:typename:char *	access:public
lpstrText	..\\scintilla\\include\\Scintilla.h	/^	const char *lpstrText;$/;"	m	struct:Sci_TextToFind	typeref:typename:const char *	access:public
lptree_h	..\\scintilla\\lua\\src\\lptree.h	/^#define lptree_h$/;"	d
lptypes_h	..\\scintilla\\lua\\src\\lptypes.h	/^#define lptypes_h$/;"	d
lpvm_h	..\\scintilla\\lua\\src\\lpvm.h	/^#define lpvm_h$/;"	d
ls	..\\scintilla\\lua\\src\\lparser.h	/^  struct LexState *ls;  \/* lexical state *\/$/;"	m	struct:FuncState	typeref:struct:LexState *	access:public
lsizenode	..\\scintilla\\lua\\src\\lobject.h	/^  lu_byte lsizenode;  \/* log2 of size of `node' array *\/$/;"	m	struct:Table	typeref:typename:lu_byte	access:public
lstate_c	..\\scintilla\\lua\\src\\lstate.c	/^#define lstate_c$/;"	d	file:
lstate_h	..\\scintilla\\lua\\src\\lstate.h	/^#define lstate_h$/;"	d
lstop	..\\scintilla\\lua\\src\\lua.c	/^static void lstop (lua_State *L, lua_Debug *ar) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,lua_Debug * ar)
lstring_c	..\\scintilla\\lua\\src\\lstring.c	/^#define lstring_c$/;"	d	file:
lstring_h	..\\scintilla\\lua\\src\\lstring.h	/^#define lstring_h$/;"	d
lstrlib_c	..\\scintilla\\lua\\src\\lstrlib.c	/^#define lstrlib_c$/;"	d	file:
ltable_c	..\\scintilla\\lua\\src\\ltable.c	/^#define ltable_c$/;"	d	file:
ltable_h	..\\scintilla\\lua\\src\\ltable.h	/^#define ltable_h$/;"	d
ltablib_c	..\\scintilla\\lua\\src\\ltablib.c	/^#define ltablib_c$/;"	d	file:
lti	..\\scintilla\\win32\\PlatWin.cxx	/^	LineToItem lti;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:LineToItem	file:	access:private
ltm_c	..\\scintilla\\lua\\src\\ltm.c	/^#define ltm_c$/;"	d	file:
ltm_h	..\\scintilla\\lua\\src\\ltm.h	/^#define ltm_h$/;"	d
lu_byte	..\\scintilla\\lua\\src\\llimits.h	/^typedef unsigned char lu_byte;$/;"	t	typeref:typename:unsigned char
lu_int32	..\\scintilla\\lua\\src\\llimits.h	/^typedef LUAI_UINT32 lu_int32;$/;"	t	typeref:typename:LUAI_UINT32
lu_mem	..\\scintilla\\lua\\src\\llimits.h	/^typedef LUAI_UMEM lu_mem;$/;"	t	typeref:typename:LUAI_UMEM
luaA_pushobject	..\\scintilla\\lua\\src\\lapi.c	/^void luaA_pushobject (lua_State *L, const TValue *o) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const TValue * o)
luaB_assert	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_assert (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_auxwrap	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_auxwrap (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_cocreate	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_cocreate (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_collectgarbage	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_collectgarbage (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_coresume	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_coresume (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_corunning	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_corunning (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_costatus	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_costatus (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_cowrap	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_cowrap (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_dofile	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_dofile (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_error	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_error (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_gcinfo	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_gcinfo (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_getfenv	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_getfenv (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_getmetatable	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_getmetatable (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_ipairs	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_ipairs (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_load	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_load (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_loadfile	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_loadfile (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_loadstring	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_loadstring (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_newproxy	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_newproxy (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_next	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_next (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_pairs	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_pairs (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_pcall	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_pcall (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_print	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_print (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_rawequal	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_rawequal (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_rawget	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_rawget (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_rawset	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_rawset (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_select	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_select (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_setfenv	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_setfenv (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_setmetatable	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_setmetatable (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_tonumber	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_tonumber (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_tostring	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_tostring (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_type	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_type (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_unpack	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_unpack (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_xpcall	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_xpcall (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaB_yield	..\\scintilla\\lua\\src\\lbaselib.c	/^static int luaB_yield (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
luaC_barrier	..\\scintilla\\lua\\src\\lgc.h	/^#define luaC_barrier(/;"	d	signature:(L,p,v)
luaC_barrierback	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_barrierback (lua_State *L, Table *t) {$/;"	f	typeref:typename:void	signature:(lua_State * L,Table * t)
luaC_barrierf	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_barrierf (lua_State *L, GCObject *o, GCObject *v) {$/;"	f	typeref:typename:void	signature:(lua_State * L,GCObject * o,GCObject * v)
luaC_barriert	..\\scintilla\\lua\\src\\lgc.h	/^#define luaC_barriert(/;"	d	signature:(L,t,v)
luaC_callGCTM	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_callGCTM (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaC_checkGC	..\\scintilla\\lua\\src\\lgc.h	/^#define luaC_checkGC(/;"	d	signature:(L)
luaC_freeall	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_freeall (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaC_fullgc	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_fullgc (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaC_link	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_link (lua_State *L, GCObject *o, lu_byte tt) {$/;"	f	typeref:typename:void	signature:(lua_State * L,GCObject * o,lu_byte tt)
luaC_linkupval	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_linkupval (lua_State *L, UpVal *uv) {$/;"	f	typeref:typename:void	signature:(lua_State * L,UpVal * uv)
luaC_objbarrier	..\\scintilla\\lua\\src\\lgc.h	/^#define luaC_objbarrier(/;"	d	signature:(L,p,o)
luaC_objbarriert	..\\scintilla\\lua\\src\\lgc.h	/^#define luaC_objbarriert(/;"	d	signature:(L,t,o)
luaC_separateudata	..\\scintilla\\lua\\src\\lgc.c	/^size_t luaC_separateudata (lua_State *L, int all) {$/;"	f	typeref:typename:size_t	signature:(lua_State * L,int all)
luaC_step	..\\scintilla\\lua\\src\\lgc.c	/^void luaC_step (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaC_white	..\\scintilla\\lua\\src\\lgc.h	/^#define luaC_white(/;"	d	signature:(g)
luaD_call	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_call (lua_State *L, StkId func, int nResults) {$/;"	f	typeref:typename:void	signature:(lua_State * L,StkId func,int nResults)
luaD_callhook	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_callhook (lua_State *L, int event, int line) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int event,int line)
luaD_checkstack	..\\scintilla\\lua\\src\\ldo.h	/^#define luaD_checkstack(/;"	d	signature:(L,n)
luaD_growstack	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_growstack (lua_State *L, int n) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int n)
luaD_pcall	..\\scintilla\\lua\\src\\ldo.c	/^int luaD_pcall (lua_State *L, Pfunc func, void *u,$/;"	f	typeref:typename:int	signature:(lua_State * L,Pfunc func,void * u,ptrdiff_t old_top,ptrdiff_t ef)
luaD_poscall	..\\scintilla\\lua\\src\\ldo.c	/^int luaD_poscall (lua_State *L, StkId firstResult) {$/;"	f	typeref:typename:int	signature:(lua_State * L,StkId firstResult)
luaD_precall	..\\scintilla\\lua\\src\\ldo.c	/^int luaD_precall (lua_State *L, StkId func, int nresults) {$/;"	f	typeref:typename:int	signature:(lua_State * L,StkId func,int nresults)
luaD_protectedparser	..\\scintilla\\lua\\src\\ldo.c	/^int luaD_protectedparser (lua_State *L, ZIO *z, const char *name) {$/;"	f	typeref:typename:int	signature:(lua_State * L,ZIO * z,const char * name)
luaD_rawrunprotected	..\\scintilla\\lua\\src\\ldo.c	/^int luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {$/;"	f	typeref:typename:int	signature:(lua_State * L,Pfunc f,void * ud)
luaD_reallocCI	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_reallocCI (lua_State *L, int newsize) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int newsize)
luaD_reallocstack	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_reallocstack (lua_State *L, int newsize) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int newsize)
luaD_seterrorobj	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_seterrorobj (lua_State *L, int errcode, StkId oldtop) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int errcode,StkId oldtop)
luaD_throw	..\\scintilla\\lua\\src\\ldo.c	/^void luaD_throw (lua_State *L, int errcode) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int errcode)
luaDisabled	..\\scite\\src\\LuaExtension.cxx	/^static bool luaDisabled = false;$/;"	v	typeref:typename:bool	file:
luaE_freethread	..\\scintilla\\lua\\src\\lstate.c	/^void luaE_freethread (lua_State *L, lua_State *L1) {$/;"	f	typeref:typename:void	signature:(lua_State * L,lua_State * L1)
luaE_newthread	..\\scintilla\\lua\\src\\lstate.c	/^lua_State *luaE_newthread (lua_State *L) {$/;"	f	typeref:typename:lua_State *	signature:(lua_State * L)
luaF_close	..\\scintilla\\lua\\src\\lfunc.c	/^void luaF_close (lua_State *L, StkId level) {$/;"	f	typeref:typename:void	signature:(lua_State * L,StkId level)
luaF_findupval	..\\scintilla\\lua\\src\\lfunc.c	/^UpVal *luaF_findupval (lua_State *L, StkId level) {$/;"	f	typeref:typename:UpVal *	signature:(lua_State * L,StkId level)
luaF_freeclosure	..\\scintilla\\lua\\src\\lfunc.c	/^void luaF_freeclosure (lua_State *L, Closure *c) {$/;"	f	typeref:typename:void	signature:(lua_State * L,Closure * c)
luaF_freeproto	..\\scintilla\\lua\\src\\lfunc.c	/^void luaF_freeproto (lua_State *L, Proto *f) {$/;"	f	typeref:typename:void	signature:(lua_State * L,Proto * f)
luaF_freeupval	..\\scintilla\\lua\\src\\lfunc.c	/^void luaF_freeupval (lua_State *L, UpVal *uv) {$/;"	f	typeref:typename:void	signature:(lua_State * L,UpVal * uv)
luaF_getlocalname	..\\scintilla\\lua\\src\\lfunc.c	/^const char *luaF_getlocalname (const Proto *f, int local_number, int pc) {$/;"	f	typeref:typename:const char *	signature:(const Proto * f,int local_number,int pc)
luaF_newCclosure	..\\scintilla\\lua\\src\\lfunc.c	/^Closure *luaF_newCclosure (lua_State *L, int nelems, Table *e) {$/;"	f	typeref:typename:Closure *	signature:(lua_State * L,int nelems,Table * e)
luaF_newLclosure	..\\scintilla\\lua\\src\\lfunc.c	/^Closure *luaF_newLclosure (lua_State *L, int nelems, Table *e) {$/;"	f	typeref:typename:Closure *	signature:(lua_State * L,int nelems,Table * e)
luaF_newproto	..\\scintilla\\lua\\src\\lfunc.c	/^Proto *luaF_newproto (lua_State *L) {$/;"	f	typeref:typename:Proto *	signature:(lua_State * L)
luaF_newupval	..\\scintilla\\lua\\src\\lfunc.c	/^UpVal *luaF_newupval (lua_State *L) {$/;"	f	typeref:typename:UpVal *	signature:(lua_State * L)
luaG_aritherror	..\\scintilla\\lua\\src\\ldebug.c	/^void luaG_aritherror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const TValue * p1,const TValue * p2)
luaG_checkcode	..\\scintilla\\lua\\src\\ldebug.c	/^int luaG_checkcode (const Proto *pt) {$/;"	f	typeref:typename:int	signature:(const Proto * pt)
luaG_checkopenop	..\\scintilla\\lua\\src\\ldebug.c	/^int luaG_checkopenop (Instruction i) {$/;"	f	typeref:typename:int	signature:(Instruction i)
luaG_concaterror	..\\scintilla\\lua\\src\\ldebug.c	/^void luaG_concaterror (lua_State *L, StkId p1, StkId p2) {$/;"	f	typeref:typename:void	signature:(lua_State * L,StkId p1,StkId p2)
luaG_errormsg	..\\scintilla\\lua\\src\\ldebug.c	/^void luaG_errormsg (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaG_ordererror	..\\scintilla\\lua\\src\\ldebug.c	/^int luaG_ordererror (lua_State *L, const TValue *p1, const TValue *p2) {$/;"	f	typeref:typename:int	signature:(lua_State * L,const TValue * p1,const TValue * p2)
luaG_runerror	..\\scintilla\\lua\\src\\ldebug.c	/^void luaG_runerror (lua_State *L, const char *fmt, ...) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const char * fmt,...)
luaG_typeerror	..\\scintilla\\lua\\src\\ldebug.c	/^void luaG_typeerror (lua_State *L, const TValue *o, const char *op) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const TValue * o,const char * op)
luaH_free	..\\scintilla\\lua\\src\\ltable.c	/^void luaH_free (lua_State *L, Table *t) {$/;"	f	typeref:typename:void	signature:(lua_State * L,Table * t)
luaH_get	..\\scintilla\\lua\\src\\ltable.c	/^const TValue *luaH_get (Table *t, const TValue *key) {$/;"	f	typeref:typename:const TValue *	signature:(Table * t,const TValue * key)
luaH_getn	..\\scintilla\\lua\\src\\ltable.c	/^int luaH_getn (Table *t) {$/;"	f	typeref:typename:int	signature:(Table * t)
luaH_getnum	..\\scintilla\\lua\\src\\ltable.c	/^const TValue *luaH_getnum (Table *t, int key) {$/;"	f	typeref:typename:const TValue *	signature:(Table * t,int key)
luaH_getstr	..\\scintilla\\lua\\src\\ltable.c	/^const TValue *luaH_getstr (Table *t, TString *key) {$/;"	f	typeref:typename:const TValue *	signature:(Table * t,TString * key)
luaH_isdummy	..\\scintilla\\lua\\src\\ltable.c	/^int luaH_isdummy (Node *n) { return n == dummynode; }$/;"	f	typeref:typename:int	signature:(Node * n)
luaH_mainposition	..\\scintilla\\lua\\src\\ltable.c	/^Node *luaH_mainposition (const Table *t, const TValue *key) {$/;"	f	typeref:typename:Node *	signature:(const Table * t,const TValue * key)
luaH_new	..\\scintilla\\lua\\src\\ltable.c	/^Table *luaH_new (lua_State *L, int narray, int nhash) {$/;"	f	typeref:typename:Table *	signature:(lua_State * L,int narray,int nhash)
luaH_next	..\\scintilla\\lua\\src\\ltable.c	/^int luaH_next (lua_State *L, Table *t, StkId key) {$/;"	f	typeref:typename:int	signature:(lua_State * L,Table * t,StkId key)
luaH_resizearray	..\\scintilla\\lua\\src\\ltable.c	/^void luaH_resizearray (lua_State *L, Table *t, int nasize) {$/;"	f	typeref:typename:void	signature:(lua_State * L,Table * t,int nasize)
luaH_set	..\\scintilla\\lua\\src\\ltable.c	/^TValue *luaH_set (lua_State *L, Table *t, const TValue *key) {$/;"	f	typeref:typename:TValue *	signature:(lua_State * L,Table * t,const TValue * key)
luaH_setnum	..\\scintilla\\lua\\src\\ltable.c	/^TValue *luaH_setnum (lua_State *L, Table *t, int key) {$/;"	f	typeref:typename:TValue *	signature:(lua_State * L,Table * t,int key)
luaH_setstr	..\\scintilla\\lua\\src\\ltable.c	/^TValue *luaH_setstr (lua_State *L, Table *t, TString *key) {$/;"	f	typeref:typename:TValue *	signature:(lua_State * L,Table * t,TString * key)
luaI_openlib	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaI_openlib (lua_State *L, const char *libname,$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,const char * libname,const luaL_Reg * l,int nup)
luaI_openlib	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaI_openlib	/;"	d
luaI_openlib	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaI_openlib) (lua_State *L, const char *libname,$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,const char * libname,const luaL_Reg * l,int nup)
luaI_openlib	..\\scite\\lua\\include\\lauxlib.h	/^#define luaI_openlib	/;"	d
luaI_openlib	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaI_openlib) (lua_State *L, const char *libname,$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,const char * libname,const luaL_Reg * l,int nup)
luaK_checkstack	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_checkstack (FuncState *fs, int n) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int n)
luaK_code	..\\scintilla\\lua\\src\\lcode.c	/^static int luaK_code (FuncState *fs, Instruction i, int line) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,Instruction i,int line)
luaK_codeABC	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_codeABC (FuncState *fs, OpCode o, int a, int b, int c) {$/;"	f	typeref:typename:int	signature:(FuncState * fs,OpCode o,int a,int b,int c)
luaK_codeABx	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_codeABx (FuncState *fs, OpCode o, int a, unsigned int bc) {$/;"	f	typeref:typename:int	signature:(FuncState * fs,OpCode o,int a,unsigned int bc)
luaK_codeAsBx	..\\scintilla\\lua\\src\\lcode.h	/^#define luaK_codeAsBx(/;"	d	signature:(fs,o,A,sBx)
luaK_concat	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_concat (FuncState *fs, int *l1, int l2) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int * l1,int l2)
luaK_dischargevars	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_dischargevars (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e)
luaK_exp2RK	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_exp2RK (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:int	signature:(FuncState * fs,expdesc * e)
luaK_exp2anyreg	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_exp2anyreg (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:int	signature:(FuncState * fs,expdesc * e)
luaK_exp2nextreg	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_exp2nextreg (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e)
luaK_exp2val	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_exp2val (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e)
luaK_fixline	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_fixline (FuncState *fs, int line) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int line)
luaK_getlabel	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_getlabel (FuncState *fs) {$/;"	f	typeref:typename:int	signature:(FuncState * fs)
luaK_goiffalse	..\\scintilla\\lua\\src\\lcode.c	/^static void luaK_goiffalse (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,expdesc * e)
luaK_goiftrue	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_goiftrue (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e)
luaK_indexed	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_indexed (FuncState *fs, expdesc *t, expdesc *k) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * t,expdesc * k)
luaK_infix	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_infix (FuncState *fs, BinOpr op, expdesc *v) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,BinOpr op,expdesc * v)
luaK_jump	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_jump (FuncState *fs) {$/;"	f	typeref:typename:int	signature:(FuncState * fs)
luaK_nil	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_nil (FuncState *fs, int from, int n) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int from,int n)
luaK_numberK	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_numberK (FuncState *fs, lua_Number r) {$/;"	f	typeref:typename:int	signature:(FuncState * fs,lua_Number r)
luaK_patchlist	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_patchlist (FuncState *fs, int list, int target) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int list,int target)
luaK_patchtohere	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_patchtohere (FuncState *fs, int list) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int list)
luaK_posfix	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_posfix (FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,BinOpr op,expdesc * e1,expdesc * e2)
luaK_prefix	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_prefix (FuncState *fs, UnOpr op, expdesc *e) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,UnOpr op,expdesc * e)
luaK_reserveregs	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_reserveregs (FuncState *fs, int n) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int n)
luaK_ret	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_ret (FuncState *fs, int first, int nret) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int first,int nret)
luaK_self	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_self (FuncState *fs, expdesc *e, expdesc *key) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e,expdesc * key)
luaK_setlist	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_setlist (FuncState *fs, int base, int nelems, int tostore) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,int base,int nelems,int tostore)
luaK_setmultret	..\\scintilla\\lua\\src\\lcode.h	/^#define luaK_setmultret(/;"	d	signature:(fs,e)
luaK_setoneret	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_setoneret (FuncState *fs, expdesc *e) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e)
luaK_setreturns	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_setreturns (FuncState *fs, expdesc *e, int nresults) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * e,int nresults)
luaK_storevar	..\\scintilla\\lua\\src\\lcode.c	/^void luaK_storevar (FuncState *fs, expdesc *var, expdesc *ex) {$/;"	f	typeref:typename:void	signature:(FuncState * fs,expdesc * var,expdesc * ex)
luaK_stringK	..\\scintilla\\lua\\src\\lcode.c	/^int luaK_stringK (FuncState *fs, TString *s) {$/;"	f	typeref:typename:int	signature:(FuncState * fs,TString * s)
luaL_Buffer	..\\scintilla\\lua\\src\\lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	..\\scintilla\\lua\\src\\lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Buffer	..\\scite\\lua\\include\\lauxlib.h	/^typedef struct luaL_Buffer {$/;"	s
luaL_Buffer	..\\scite\\lua\\include\\lauxlib.h	/^} luaL_Buffer;$/;"	t	typeref:struct:luaL_Buffer
luaL_Reg	..\\scintilla\\lua\\src\\lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	..\\scintilla\\lua\\src\\lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_Reg	..\\scite\\lua\\include\\lauxlib.h	/^typedef struct luaL_Reg {$/;"	s
luaL_Reg	..\\scite\\lua\\include\\lauxlib.h	/^} luaL_Reg;$/;"	t	typeref:struct:luaL_Reg
luaL_addchar	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_addchar(/;"	d	signature:(B,c)
luaL_addchar	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_addchar(/;"	d	signature:(B,c)
luaL_addlstring	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_addlstring (luaL_Buffer *B, const char *s, size_t l) {$/;"	f	typeref:typename:LUALIB_API void	signature:(luaL_Buffer * B,const char * s,size_t l)
luaL_addlstring	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B,const char * s,size_t l)
luaL_addlstring	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_addlstring) (luaL_Buffer *B, const char *s, size_t l);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B,const char * s,size_t l)
luaL_addsize	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_addsize(/;"	d	signature:(B,n)
luaL_addsize	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_addsize(/;"	d	signature:(B,n)
luaL_addstring	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_addstring (luaL_Buffer *B, const char *s) {$/;"	f	typeref:typename:LUALIB_API void	signature:(luaL_Buffer * B,const char * s)
luaL_addstring	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_addstring) (luaL_Buffer *B, const char *s);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B,const char * s)
luaL_addstring	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_addstring) (luaL_Buffer *B, const char *s);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B,const char * s)
luaL_addvalue	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_addvalue (luaL_Buffer *B) {$/;"	f	typeref:typename:LUALIB_API void	signature:(luaL_Buffer * B)
luaL_addvalue	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_addvalue) (luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B)
luaL_addvalue	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_addvalue) (luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B)
luaL_argcheck	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_argcheck(/;"	d	signature:(L,cond,numarg,extramsg)
luaL_argcheck	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_argcheck(/;"	d	signature:(L,cond,numarg,extramsg)
luaL_argerror	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_argerror (lua_State *L, int narg, const char *extramsg) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int narg,const char * extramsg)
luaL_argerror	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_argerror) (lua_State *L, int numarg, const char *extramsg);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int numarg,const char * extramsg)
luaL_argerror	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_argerror) (lua_State *L, int numarg, const char *extramsg);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int numarg,const char * extramsg)
luaL_buffinit	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_buffinit (lua_State *L, luaL_Buffer *B) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,luaL_Buffer * B)
luaL_buffinit	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,luaL_Buffer * B)
luaL_buffinit	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_buffinit) (lua_State *L, luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,luaL_Buffer * B)
luaL_callmeta	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_callmeta (lua_State *L, int obj, const char *event) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int obj,const char * event)
luaL_callmeta	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_callmeta) (lua_State *L, int obj, const char *e);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int obj,const char * e)
luaL_callmeta	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_callmeta) (lua_State *L, int obj, const char *e);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int obj,const char * e)
luaL_checkany	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_checkany (lua_State *L, int narg) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,int narg)
luaL_checkany	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_checkany) (lua_State *L, int narg);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int narg)
luaL_checkany	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_checkany) (lua_State *L, int narg);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int narg)
luaL_checkint	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_checkint(/;"	d	signature:(L,n)
luaL_checkint	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_checkint(/;"	d	signature:(L,n)
luaL_checkinteger	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API lua_Integer luaL_checkinteger (lua_State *L, int narg) {$/;"	f	typeref:typename:LUALIB_API lua_Integer	signature:(lua_State * L,int narg)
luaL_checklong	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_checklong(/;"	d	signature:(L,n)
luaL_checklong	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_checklong(/;"	d	signature:(L,n)
luaL_checklstring	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API const char *luaL_checklstring (lua_State *L, int narg, size_t *len) {$/;"	f	typeref:typename:LUALIB_API const char *	signature:(lua_State * L,int narg,size_t * len)
luaL_checklstring	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API const char *(luaL_checklstring) (lua_State *L, int numArg,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,int numArg,size_t * l)
luaL_checklstring	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API const char *(luaL_checklstring) (lua_State *L, int numArg,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,int numArg,size_t * l)
luaL_checknumber	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API lua_Number luaL_checknumber (lua_State *L, int narg) {$/;"	f	typeref:typename:LUALIB_API lua_Number	signature:(lua_State * L,int narg)
luaL_checkoption	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_checkoption (lua_State *L, int narg, const char *def,$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int narg,const char * def,const char * const lst[])
luaL_checkoption	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_checkoption) (lua_State *L, int narg, const char *def,$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int narg,const char * def,const char * const lst[])
luaL_checkoption	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_checkoption) (lua_State *L, int narg, const char *def,$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int narg,const char * def,const char * const lst[])
luaL_checkstack	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_checkstack (lua_State *L, int space, const char *mes) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,int space,const char * mes)
luaL_checkstack	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_checkstack) (lua_State *L, int sz, const char *msg);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int sz,const char * msg)
luaL_checkstack	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_checkstack) (lua_State *L, int sz, const char *msg);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int sz,const char * msg)
luaL_checkstring	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_checkstring(/;"	d	signature:(L,n)
luaL_checkstring	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_checkstring(/;"	d	signature:(L,n)
luaL_checktype	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_checktype (lua_State *L, int narg, int t) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,int narg,int t)
luaL_checktype	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_checktype) (lua_State *L, int narg, int t);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int narg,int t)
luaL_checktype	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_checktype) (lua_State *L, int narg, int t);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int narg,int t)
luaL_checkudata	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void *luaL_checkudata (lua_State *L, int ud, const char *tname) {$/;"	f	typeref:typename:LUALIB_API void *	signature:(lua_State * L,int ud,const char * tname)
luaL_checkudata	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void *(luaL_checkudata) (lua_State *L, int ud, const char *tname);$/;"	v	typeref:typename:LUALIB_API void * ()(lua_State * L,int ud,const char * tname)
luaL_checkudata	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void *(luaL_checkudata) (lua_State *L, int ud, const char *tname);$/;"	v	typeref:typename:LUALIB_API void * ()(lua_State * L,int ud,const char * tname)
luaL_dofile	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_dofile(/;"	d	signature:(L,fn)
luaL_dofile	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_dofile(/;"	d	signature:(L,fn)
luaL_dostring	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_dostring(/;"	d	signature:(L,s)
luaL_dostring	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_dostring(/;"	d	signature:(L,s)
luaL_error	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_error (lua_State *L, const char *fmt, ...) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,const char * fmt,...)
luaL_error	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_error) (lua_State *L, const char *fmt, ...);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * fmt,...)
luaL_error	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_error) (lua_State *L, const char *fmt, ...);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * fmt,...)
luaL_findtable	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API const char *luaL_findtable (lua_State *L, int idx,$/;"	f	typeref:typename:LUALIB_API const char *	signature:(lua_State * L,int idx,const char * fname,int szhint)
luaL_findtable	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API const char *(luaL_findtable) (lua_State *L, int idx,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,int idx,const char * fname,int szhint)
luaL_findtable	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API const char *(luaL_findtable) (lua_State *L, int idx,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,int idx,const char * fname,int szhint)
luaL_getmetafield	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_getmetafield (lua_State *L, int obj, const char *event) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int obj,const char * event)
luaL_getmetafield	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_getmetafield) (lua_State *L, int obj, const char *e);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int obj,const char * e)
luaL_getmetafield	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_getmetafield) (lua_State *L, int obj, const char *e);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int obj,const char * e)
luaL_getmetatable	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_getmetatable(/;"	d	signature:(L,n)
luaL_getmetatable	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_getmetatable(/;"	d	signature:(L,n)
luaL_getn	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_getn (lua_State *L, int t) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int t)
luaL_getn	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_getn(/;"	d	signature:(L,i)
luaL_getn	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_getn) (lua_State *L, int t);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int t)
luaL_getn	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_getn(/;"	d	signature:(L,i)
luaL_getn	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_getn) (lua_State *L, int t);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int t)
luaL_gsub	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API const char *luaL_gsub (lua_State *L, const char *s, const char *p,$/;"	f	typeref:typename:LUALIB_API const char *	signature:(lua_State * L,const char * s,const char * p,const char * r)
luaL_gsub	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API const char *(luaL_gsub) (lua_State *L, const char *s, const char *p,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,const char * s,const char * p,const char * r)
luaL_gsub	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API const char *(luaL_gsub) (lua_State *L, const char *s, const char *p,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,const char * s,const char * p,const char * r)
luaL_loadbuffer	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_loadbuffer (lua_State *L, const char *buff, size_t size,$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,const char * buff,size_t size,const char * name)
luaL_loadbuffer	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_loadbuffer) (lua_State *L, const char *buff, size_t sz,$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * buff,size_t sz,const char * name)
luaL_loadbuffer	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_loadbuffer) (lua_State *L, const char *buff, size_t sz,$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * buff,size_t sz,const char * name)
luaL_loadfile	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_loadfile (lua_State *L, const char *filename) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,const char * filename)
luaL_loadfile	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_loadfile) (lua_State *L, const char *filename);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * filename)
luaL_loadfile	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_loadfile) (lua_State *L, const char *filename);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * filename)
luaL_loadstring	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * s)
luaL_loadstring	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_loadstring) (lua_State *L, const char *s);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * s)
luaL_newmetatable	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_newmetatable (lua_State *L, const char *tname) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,const char * tname)
luaL_newmetatable	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int   (luaL_newmetatable) (lua_State *L, const char *tname);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * tname)
luaL_newmetatable	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int   (luaL_newmetatable) (lua_State *L, const char *tname);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,const char * tname)
luaL_newstate	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API lua_State *luaL_newstate (void) {$/;"	f	typeref:typename:LUALIB_API lua_State *	signature:(void)
luaL_newstate	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API lua_State *(luaL_newstate) (void);$/;"	v	typeref:typename:LUALIB_API lua_State * ()(void)
luaL_newstate	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API lua_State *(luaL_newstate) (void);$/;"	v	typeref:typename:LUALIB_API lua_State * ()(void)
luaL_openlibs	..\\scintilla\\lua\\src\\linit.c	/^LUALIB_API void luaL_openlibs (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L)
luaL_openlibs	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API void (luaL_openlibs) (lua_State *L); $/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L)
luaL_openlibs	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API void (luaL_openlibs) (lua_State *L); $/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L)
luaL_opt	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_opt(/;"	d	signature:(L,f,n,d)
luaL_opt	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_opt(/;"	d	signature:(L,f,n,d)
luaL_optint	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_optint(/;"	d	signature:(L,n,d)
luaL_optint	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_optint(/;"	d	signature:(L,n,d)
luaL_optinteger	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API lua_Integer luaL_optinteger (lua_State *L, int narg,$/;"	f	typeref:typename:LUALIB_API lua_Integer	signature:(lua_State * L,int narg,lua_Integer def)
luaL_optlong	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_optlong(/;"	d	signature:(L,n,d)
luaL_optlong	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_optlong(/;"	d	signature:(L,n,d)
luaL_optlstring	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API const char *luaL_optlstring (lua_State *L, int narg,$/;"	f	typeref:typename:LUALIB_API const char *	signature:(lua_State * L,int narg,const char * def,size_t * len)
luaL_optlstring	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API const char *(luaL_optlstring) (lua_State *L, int numArg,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,int numArg,const char * def,size_t * l)
luaL_optlstring	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API const char *(luaL_optlstring) (lua_State *L, int numArg,$/;"	v	typeref:typename:LUALIB_API const char * ()(lua_State * L,int numArg,const char * def,size_t * l)
luaL_optnumber	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API lua_Number luaL_optnumber (lua_State *L, int narg, lua_Number def) {$/;"	f	typeref:typename:LUALIB_API lua_Number	signature:(lua_State * L,int narg,lua_Number def)
luaL_optstring	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_optstring(/;"	d	signature:(L,n,d)
luaL_optstring	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_optstring(/;"	d	signature:(L,n,d)
luaL_prepbuffer	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API char *luaL_prepbuffer (luaL_Buffer *B) {$/;"	f	typeref:typename:LUALIB_API char *	signature:(luaL_Buffer * B)
luaL_prepbuffer	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API char *(luaL_prepbuffer) (luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API char * ()(luaL_Buffer * B)
luaL_prepbuffer	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API char *(luaL_prepbuffer) (luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API char * ()(luaL_Buffer * B)
luaL_pushresult	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_pushresult (luaL_Buffer *B) {$/;"	f	typeref:typename:LUALIB_API void	signature:(luaL_Buffer * B)
luaL_pushresult	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_pushresult) (luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B)
luaL_pushresult	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_pushresult) (luaL_Buffer *B);$/;"	v	typeref:typename:LUALIB_API void ()(luaL_Buffer * B)
luaL_putchar	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_putchar(/;"	d	signature:(B,c)
luaL_putchar	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_putchar(/;"	d	signature:(B,c)
luaL_ref	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_ref (lua_State *L, int t) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int t)
luaL_ref	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_ref) (lua_State *L, int t);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int t)
luaL_ref	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_ref) (lua_State *L, int t);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int t)
luaL_reg	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_reg	/;"	d
luaL_reg	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_reg	/;"	d
luaL_register	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,const char * libname,const luaL_Reg * l)
luaL_register	..\\scintilla\\lua\\src\\lptypes.h	/^#define luaL_register(/;"	d	signature:(L,n,f)
luaL_register	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_register) (lua_State *L, const char *libname,$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,const char * libname,const luaL_Reg * l)
luaL_setn	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_setn (lua_State *L, int t, int n) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,int t,int n)
luaL_setn	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_setn(/;"	d	signature:(L,i,j)
luaL_setn	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_setn) (lua_State *L, int t, int n);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int t,int n)
luaL_setn	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_setn(/;"	d	signature:(L,i,j)
luaL_setn	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_setn) (lua_State *L, int t, int n);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int t,int n)
luaL_typename	..\\scintilla\\lua\\src\\lauxlib.h	/^#define luaL_typename(/;"	d	signature:(L,i)
luaL_typename	..\\scite\\lua\\include\\lauxlib.h	/^#define luaL_typename(/;"	d	signature:(L,i)
luaL_typerror	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API int luaL_typerror (lua_State *L, int narg, const char *tname) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L,int narg,const char * tname)
luaL_typerror	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API int (luaL_typerror) (lua_State *L, int narg, const char *tname);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int narg,const char * tname)
luaL_typerror	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API int (luaL_typerror) (lua_State *L, int narg, const char *tname);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L,int narg,const char * tname)
luaL_unref	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_unref (lua_State *L, int t, int ref) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,int t,int ref)
luaL_unref	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_unref) (lua_State *L, int t, int ref);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int t,int ref)
luaL_unref	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_unref) (lua_State *L, int t, int ref);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int t,int ref)
luaL_where	..\\scintilla\\lua\\src\\lauxlib.c	/^LUALIB_API void luaL_where (lua_State *L, int level) {$/;"	f	typeref:typename:LUALIB_API void	signature:(lua_State * L,int level)
luaL_where	..\\scintilla\\lua\\src\\lauxlib.h	/^LUALIB_API void (luaL_where) (lua_State *L, int lvl);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int lvl)
luaL_where	..\\scite\\lua\\include\\lauxlib.h	/^LUALIB_API void (luaL_where) (lua_State *L, int lvl);$/;"	v	typeref:typename:LUALIB_API void ()(lua_State * L,int lvl)
luaM_free	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_free(/;"	d	signature:(L,b)
luaM_freearray	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_freearray(/;"	d	signature:(L,b,n,t)
luaM_freemem	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_freemem(/;"	d	signature:(L,b,s)
luaM_growaux_	..\\scintilla\\lua\\src\\lmem.c	/^void *luaM_growaux_ (lua_State *L, void *block, int *size, size_t size_elems,$/;"	f	typeref:typename:void *	signature:(lua_State * L,void * block,int * size,size_t size_elems,int limit,const char * errormsg)
luaM_growvector	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_growvector(/;"	d	signature:(L,v,nelems,size,t,limit,e)
luaM_malloc	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_malloc(/;"	d	signature:(L,t)
luaM_new	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_new(/;"	d	signature:(L,t)
luaM_newvector	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_newvector(/;"	d	signature:(L,n,t)
luaM_realloc_	..\\scintilla\\lua\\src\\lmem.c	/^void *luaM_realloc_ (lua_State *L, void *block, size_t osize, size_t nsize) {$/;"	f	typeref:typename:void *	signature:(lua_State * L,void * block,size_t osize,size_t nsize)
luaM_reallocv	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_reallocv(/;"	d	signature:(L,b,on,n,e)
luaM_reallocvector	..\\scintilla\\lua\\src\\lmem.h	/^#define luaM_reallocvector(/;"	d	signature:(L,v,oldn,n,t)
luaM_toobig	..\\scintilla\\lua\\src\\lmem.c	/^void *luaM_toobig (lua_State *L) {$/;"	f	typeref:typename:void *	signature:(lua_State * L)
luaO_chunkid	..\\scintilla\\lua\\src\\lobject.c	/^void luaO_chunkid (char *out, const char *source, size_t bufflen) {$/;"	f	typeref:typename:void	signature:(char * out,const char * source,size_t bufflen)
luaO_fb2int	..\\scintilla\\lua\\src\\lobject.c	/^int luaO_fb2int (int x) {$/;"	f	typeref:typename:int	signature:(int x)
luaO_int2fb	..\\scintilla\\lua\\src\\lobject.c	/^int luaO_int2fb (unsigned int x) {$/;"	f	typeref:typename:int	signature:(unsigned int x)
luaO_log2	..\\scintilla\\lua\\src\\lobject.c	/^int luaO_log2 (unsigned int x) {$/;"	f	typeref:typename:int	signature:(unsigned int x)
luaO_nilobject	..\\scintilla\\lua\\src\\lobject.h	/^#define luaO_nilobject	/;"	d
luaO_nilobject_	..\\scintilla\\lua\\src\\lobject.c	/^const TValue luaO_nilobject_ = {{NULL}, LUA_TNIL};$/;"	v	typeref:typename:const TValue
luaO_nilobject_	..\\scintilla\\lua\\src\\lobject.h	/^LUAI_DATA const TValue luaO_nilobject_;$/;"	v	typeref:typename:LUAI_DATA const TValue
luaO_pushfstring	..\\scintilla\\lua\\src\\lobject.c	/^const char *luaO_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f	typeref:typename:const char *	signature:(lua_State * L,const char * fmt,...)
luaO_pushvfstring	..\\scintilla\\lua\\src\\lobject.c	/^const char *luaO_pushvfstring (lua_State *L, const char *fmt, va_list argp) {$/;"	f	typeref:typename:const char *	signature:(lua_State * L,const char * fmt,va_list argp)
luaO_rawequalObj	..\\scintilla\\lua\\src\\lobject.c	/^int luaO_rawequalObj (const TValue *t1, const TValue *t2) {$/;"	f	typeref:typename:int	signature:(const TValue * t1,const TValue * t2)
luaO_str2d	..\\scintilla\\lua\\src\\lobject.c	/^int luaO_str2d (const char *s, lua_Number *result) {$/;"	f	typeref:typename:int	signature:(const char * s,lua_Number * result)
luaP_opmodes	..\\scintilla\\lua\\src\\lopcodes.c	/^const lu_byte luaP_opmodes[NUM_OPCODES] = {$/;"	v	typeref:typename:const lu_byte[]
luaP_opmodes	..\\scintilla\\lua\\src\\lopcodes.h	/^LUAI_DATA const lu_byte luaP_opmodes[NUM_OPCODES];$/;"	v	typeref:typename:LUAI_DATA const lu_byte[]
luaP_opnames	..\\scintilla\\lua\\src\\lopcodes.c	/^const char *const luaP_opnames[NUM_OPCODES+1] = {$/;"	v	typeref:typename:const char * const[]
luaP_opnames	..\\scintilla\\lua\\src\\lopcodes.h	/^LUAI_DATA const char *const luaP_opnames[NUM_OPCODES+1];  \/* opcode names *\/$/;"	v	typeref:typename:LUAI_DATA const char * const[]
luaS_fix	..\\scintilla\\lua\\src\\lstring.h	/^#define luaS_fix(/;"	d	signature:(s)
luaS_new	..\\scintilla\\lua\\src\\lstring.h	/^#define luaS_new(/;"	d	signature:(L,s)
luaS_newliteral	..\\scintilla\\lua\\src\\lstring.h	/^#define luaS_newliteral(/;"	d	signature:(L,s)
luaS_newlstr	..\\scintilla\\lua\\src\\lstring.c	/^TString *luaS_newlstr (lua_State *L, const char *str, size_t l) {$/;"	f	typeref:typename:TString *	signature:(lua_State * L,const char * str,size_t l)
luaS_newudata	..\\scintilla\\lua\\src\\lstring.c	/^Udata *luaS_newudata (lua_State *L, size_t s, Table *e) {$/;"	f	typeref:typename:Udata *	signature:(lua_State * L,size_t s,Table * e)
luaS_resize	..\\scintilla\\lua\\src\\lstring.c	/^void luaS_resize (lua_State *L, int newsize) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int newsize)
luaState	..\\scite\\src\\LuaExtension.cxx	/^static lua_State *luaState = 0;$/;"	v	typeref:typename:lua_State *	file:
luaT_gettm	..\\scintilla\\lua\\src\\ltm.c	/^const TValue *luaT_gettm (Table *events, TMS event, TString *ename) {$/;"	f	typeref:typename:const TValue *	signature:(Table * events,TMS event,TString * ename)
luaT_gettmbyobj	..\\scintilla\\lua\\src\\ltm.c	/^const TValue *luaT_gettmbyobj (lua_State *L, const TValue *o, TMS event) {$/;"	f	typeref:typename:const TValue *	signature:(lua_State * L,const TValue * o,TMS event)
luaT_init	..\\scintilla\\lua\\src\\ltm.c	/^void luaT_init (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaT_typenames	..\\scintilla\\lua\\src\\ltm.c	/^const char *const luaT_typenames[] = {$/;"	v	typeref:typename:const char * const[]
luaT_typenames	..\\scintilla\\lua\\src\\ltm.h	/^LUAI_DATA const char *const luaT_typenames[];$/;"	v	typeref:typename:LUAI_DATA const char * const[]
luaU_dump	..\\scintilla\\lua\\src\\ldump.c	/^int luaU_dump (lua_State* L, const Proto* f, lua_Writer w, void* data, int strip)$/;"	f	typeref:typename:int	signature:(lua_State * L,const Proto * f,lua_Writer w,void * data,int strip)
luaU_header	..\\scintilla\\lua\\src\\lundump.c	/^void luaU_header (char* h)$/;"	f	typeref:typename:void	signature:(char * h)
luaU_undump	..\\scintilla\\lua\\src\\lundump.c	/^Proto* luaU_undump (lua_State* L, ZIO* Z, Mbuffer* buff, const char* name)$/;"	f	typeref:typename:Proto *	signature:(lua_State * L,ZIO * Z,Mbuffer * buff,const char * name)
luaV_concat	..\\scintilla\\lua\\src\\lvm.c	/^void luaV_concat (lua_State *L, int total, int last) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int total,int last)
luaV_equalval	..\\scintilla\\lua\\src\\lvm.c	/^int luaV_equalval (lua_State *L, const TValue *t1, const TValue *t2) {$/;"	f	typeref:typename:int	signature:(lua_State * L,const TValue * t1,const TValue * t2)
luaV_execute	..\\scintilla\\lua\\src\\lvm.c	/^void luaV_execute (lua_State *L, int nexeccalls) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int nexeccalls)
luaV_gettable	..\\scintilla\\lua\\src\\lvm.c	/^void luaV_gettable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const TValue * t,TValue * key,StkId val)
luaV_lessthan	..\\scintilla\\lua\\src\\lvm.c	/^int luaV_lessthan (lua_State *L, const TValue *l, const TValue *r) {$/;"	f	typeref:typename:int	signature:(lua_State * L,const TValue * l,const TValue * r)
luaV_settable	..\\scintilla\\lua\\src\\lvm.c	/^void luaV_settable (lua_State *L, const TValue *t, TValue *key, StkId val) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const TValue * t,TValue * key,StkId val)
luaV_tonumber	..\\scintilla\\lua\\src\\lvm.c	/^const TValue *luaV_tonumber (const TValue *obj, TValue *n) {$/;"	f	typeref:typename:const TValue *	signature:(const TValue * obj,TValue * n)
luaV_tostring	..\\scintilla\\lua\\src\\lvm.c	/^int luaV_tostring (lua_State *L, StkId obj) {$/;"	f	typeref:typename:int	signature:(lua_State * L,StkId obj)
luaX_init	..\\scintilla\\lua\\src\\llex.c	/^void luaX_init (lua_State *L) {$/;"	f	typeref:typename:void	signature:(lua_State * L)
luaX_lexerror	..\\scintilla\\lua\\src\\llex.c	/^void luaX_lexerror (LexState *ls, const char *msg, int token) {$/;"	f	typeref:typename:void	signature:(LexState * ls,const char * msg,int token)
luaX_lookahead	..\\scintilla\\lua\\src\\llex.c	/^void luaX_lookahead (LexState *ls) {$/;"	f	typeref:typename:void	signature:(LexState * ls)
luaX_newstring	..\\scintilla\\lua\\src\\llex.c	/^TString *luaX_newstring (LexState *ls, const char *str, size_t l) {$/;"	f	typeref:typename:TString *	signature:(LexState * ls,const char * str,size_t l)
luaX_next	..\\scintilla\\lua\\src\\llex.c	/^void luaX_next (LexState *ls) {$/;"	f	typeref:typename:void	signature:(LexState * ls)
luaX_setinput	..\\scintilla\\lua\\src\\llex.c	/^void luaX_setinput (lua_State *L, LexState *ls, ZIO *z, TString *source) {$/;"	f	typeref:typename:void	signature:(lua_State * L,LexState * ls,ZIO * z,TString * source)
luaX_syntaxerror	..\\scintilla\\lua\\src\\llex.c	/^void luaX_syntaxerror (LexState *ls, const char *msg) {$/;"	f	typeref:typename:void	signature:(LexState * ls,const char * msg)
luaX_token2str	..\\scintilla\\lua\\src\\llex.c	/^const char *luaX_token2str (LexState *ls, int token) {$/;"	f	typeref:typename:const char *	signature:(LexState * ls,int token)
luaX_tokens	..\\scintilla\\lua\\src\\llex.c	/^const char *const luaX_tokens [] = {$/;"	v	typeref:typename:const char * const[]
luaX_tokens	..\\scintilla\\lua\\src\\llex.h	/^LUAI_DATA const char *const luaX_tokens [];$/;"	v	typeref:typename:LUAI_DATA const char * const[]
luaY_checklimit	..\\scintilla\\lua\\src\\lparser.c	/^#define luaY_checklimit(/;"	d	file:	signature:(fs,v,l,m)
luaY_parser	..\\scintilla\\lua\\src\\lparser.c	/^Proto *luaY_parser (lua_State *L, ZIO *z, Mbuffer *buff, const char *name) {$/;"	f	typeref:typename:Proto *	signature:(lua_State * L,ZIO * z,Mbuffer * buff,const char * name)
luaZ_buffer	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_buffer(/;"	d	signature:(buff)
luaZ_bufflen	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_bufflen(/;"	d	signature:(buff)
luaZ_fill	..\\scintilla\\lua\\src\\lzio.c	/^int luaZ_fill (ZIO *z) {$/;"	f	typeref:typename:int	signature:(ZIO * z)
luaZ_freebuffer	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_freebuffer(/;"	d	signature:(L,buff)
luaZ_init	..\\scintilla\\lua\\src\\lzio.c	/^void luaZ_init (lua_State *L, ZIO *z, lua_Reader reader, void *data) {$/;"	f	typeref:typename:void	signature:(lua_State * L,ZIO * z,lua_Reader reader,void * data)
luaZ_initbuffer	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_initbuffer(/;"	d	signature:(L,buff)
luaZ_lookahead	..\\scintilla\\lua\\src\\lzio.c	/^int luaZ_lookahead (ZIO *z) {$/;"	f	typeref:typename:int	signature:(ZIO * z)
luaZ_openspace	..\\scintilla\\lua\\src\\lzio.c	/^char *luaZ_openspace (lua_State *L, Mbuffer *buff, size_t n) {$/;"	f	typeref:typename:char *	signature:(lua_State * L,Mbuffer * buff,size_t n)
luaZ_read	..\\scintilla\\lua\\src\\lzio.c	/^size_t luaZ_read (ZIO *z, void *b, size_t n) {$/;"	f	typeref:typename:size_t	signature:(ZIO * z,void * b,size_t n)
luaZ_resetbuffer	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_resetbuffer(/;"	d	signature:(buff)
luaZ_resizebuffer	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_resizebuffer(/;"	d	signature:(L,buff,size)
luaZ_sizebuffer	..\\scintilla\\lua\\src\\lzio.h	/^#define luaZ_sizebuffer(/;"	d	signature:(buff)
lua_Alloc	..\\scintilla\\lua\\src\\lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t	typeref:typename:void * (*)(void * ud,void * ptr,size_t osize,size_t nsize)
lua_Alloc	..\\scite\\lua\\include\\lua.h	/^typedef void * (*lua_Alloc) (void *ud, void *ptr, size_t osize, size_t nsize);$/;"	t	typeref:typename:void * (*)(void * ud,void * ptr,size_t osize,size_t nsize)
lua_CFunction	..\\scintilla\\lua\\src\\lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t	typeref:typename:int (*)(lua_State * L)
lua_CFunction	..\\scite\\lua\\include\\lua.h	/^typedef int (*lua_CFunction) (lua_State *L);$/;"	t	typeref:typename:int (*)(lua_State * L)
lua_Chunkreader	..\\scintilla\\lua\\src\\lua.h	/^#define lua_Chunkreader	/;"	d
lua_Chunkreader	..\\scite\\lua\\include\\lua.h	/^#define lua_Chunkreader	/;"	d
lua_Chunkwriter	..\\scintilla\\lua\\src\\lua.h	/^#define lua_Chunkwriter	/;"	d
lua_Chunkwriter	..\\scite\\lua\\include\\lua.h	/^#define lua_Chunkwriter	/;"	d
lua_Debug	..\\scintilla\\lua\\src\\lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	..\\scintilla\\lua\\src\\lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Debug	..\\scite\\lua\\include\\lua.h	/^struct lua_Debug {$/;"	s
lua_Debug	..\\scite\\lua\\include\\lua.h	/^typedef struct lua_Debug lua_Debug;  \/* activation record *\/$/;"	t	typeref:struct:lua_Debug
lua_Hook	..\\scintilla\\lua\\src\\lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t	typeref:typename:void (*)(lua_State * L,lua_Debug * ar)
lua_Hook	..\\scite\\lua\\include\\lua.h	/^typedef void (*lua_Hook) (lua_State *L, lua_Debug *ar);$/;"	t	typeref:typename:void (*)(lua_State * L,lua_Debug * ar)
lua_Integer	..\\scintilla\\lua\\src\\lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t	typeref:typename:LUA_INTEGER
lua_Integer	..\\scite\\lua\\include\\lua.h	/^typedef LUA_INTEGER lua_Integer;$/;"	t	typeref:typename:LUA_INTEGER
lua_Number	..\\scintilla\\lua\\src\\lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t	typeref:typename:LUA_NUMBER
lua_Number	..\\scite\\lua\\include\\lua.h	/^typedef LUA_NUMBER lua_Number;$/;"	t	typeref:typename:LUA_NUMBER
lua_Reader	..\\scintilla\\lua\\src\\lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t	typeref:typename:const char * (*)(lua_State * L,void * ud,size_t * sz)
lua_Reader	..\\scite\\lua\\include\\lua.h	/^typedef const char * (*lua_Reader) (lua_State *L, void *ud, size_t *sz);$/;"	t	typeref:typename:const char * (*)(lua_State * L,void * ud,size_t * sz)
lua_State	..\\scintilla\\lua\\src\\lstate.h	/^struct lua_State {$/;"	s
lua_State	..\\scintilla\\lua\\src\\lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_State	..\\scite\\lua\\include\\lua.h	/^typedef struct lua_State lua_State;$/;"	t	typeref:struct:lua_State
lua_TValue	..\\scintilla\\lua\\src\\lobject.h	/^typedef struct lua_TValue {$/;"	s
lua_Writer	..\\scintilla\\lua\\src\\lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t	typeref:typename:int (*)(lua_State * L,const void * p,size_t sz,void * ud)
lua_Writer	..\\scite\\lua\\include\\lua.h	/^typedef int (*lua_Writer) (lua_State *L, const void* p, size_t sz, void* ud);$/;"	t	typeref:typename:int (*)(lua_State * L,const void * p,size_t sz,void * ud)
lua_assert	..\\scintilla\\lua\\src\\llimits.h	/^#define lua_assert(/;"	d	signature:(c)
lua_assert	..\\scintilla\\lua\\src\\lualib.h	/^#define lua_assert(/;"	d	signature:(x)
lua_assert	..\\scite\\lua\\include\\lualib.h	/^#define lua_assert(/;"	d	signature:(x)
lua_atpanic	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_CFunction lua_atpanic (lua_State *L, lua_CFunction panicf) {$/;"	f	typeref:typename:LUA_API lua_CFunction	signature:(lua_State * L,lua_CFunction panicf)
lua_c	..\\scintilla\\lua\\src\\lua.c	/^#define lua_c$/;"	d	file:
lua_call	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_call (lua_State *L, int nargs, int nresults) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int nargs,int nresults)
lua_call	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_call) (lua_State *L, int nargs, int nresults);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int nargs,int nresults)
lua_call	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_call) (lua_State *L, int nargs, int nresults);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int nargs,int nresults)
lua_checkstack	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_checkstack (lua_State *L, int size) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int size)
lua_checkstack	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_checkstack) (lua_State *L, int sz);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int sz)
lua_checkstack	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_checkstack) (lua_State *L, int sz);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int sz)
lua_close	..\\scintilla\\lua\\src\\lstate.c	/^LUA_API void lua_close (lua_State *L) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L)
lua_close	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void       (lua_close) (lua_State *L);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L)
lua_close	..\\scite\\lua\\include\\lua.h	/^LUA_API void       (lua_close) (lua_State *L);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L)
lua_concat	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_concat (lua_State *L, int n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int n)
lua_concat	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_concat) (lua_State *L, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int n)
lua_concat	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_concat) (lua_State *L, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int n)
lua_cpcall	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_cpcall (lua_State *L, lua_CFunction func, void *ud) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,lua_CFunction func,void * ud)
lua_cpcall	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_cpcall) (lua_State *L, lua_CFunction func, void *ud);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,lua_CFunction func,void * ud)
lua_cpcall	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_cpcall) (lua_State *L, lua_CFunction func, void *ud);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,lua_CFunction func,void * ud)
lua_createtable	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_createtable (lua_State *L, int narray, int nrec) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int narray,int nrec)
lua_createtable	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_createtable) (lua_State *L, int narr, int nrec);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int narr,int nrec)
lua_createtable	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_createtable) (lua_State *L, int narr, int nrec);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int narr,int nrec)
lua_dump	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_dump (lua_State *L, lua_Writer writer, void *data) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,lua_Writer writer,void * data)
lua_dump	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int (lua_dump) (lua_State *L, lua_Writer writer, void *data);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,lua_Writer writer,void * data)
lua_dump	..\\scite\\lua\\include\\lua.h	/^LUA_API int (lua_dump) (lua_State *L, lua_Writer writer, void *data);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,lua_Writer writer,void * data)
lua_equal	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_equal (lua_State *L, int index1, int index2) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int index1,int index2)
lua_equal	..\\scintilla\\lua\\src\\lptypes.h	/^#define lua_equal(/;"	d	signature:(L,idx1,idx2)
lua_equal	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int            (lua_equal) (lua_State *L, int idx1, int idx2);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx1,int idx2)
lua_equal	..\\scite\\lua\\include\\lua.h	/^LUA_API int            (lua_equal) (lua_State *L, int idx1, int idx2);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx1,int idx2)
lua_error	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_error (lua_State *L) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L)
lua_error	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_error) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_error	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_error) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_freeline	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_freeline(/;"	d	signature:(L,b)
lua_freeline	..\\scite\\lua\\include\\luaconf.h	/^#define lua_freeline(/;"	d	signature:(L,b)
lua_gc	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_gc (lua_State *L, int what, int data) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int what,int data)
lua_gc	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int (lua_gc) (lua_State *L, int what, int data);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int what,int data)
lua_gc	..\\scite\\lua\\include\\lua.h	/^LUA_API int (lua_gc) (lua_State *L, int what, int data);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int what,int data)
lua_getallocf	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_Alloc lua_getallocf (lua_State *L, void **ud) {$/;"	f	typeref:typename:LUA_API lua_Alloc	signature:(lua_State * L,void ** ud)
lua_getfenv	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_getfenv (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_getfenv	..\\scintilla\\lua\\src\\lptypes.h	/^#define lua_getfenv	/;"	d
lua_getfenv	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_getfenv) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_getfenv	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_getfenv) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_getfield	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_getfield (lua_State *L, int idx, const char *k) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx,const char * k)
lua_getfield	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_getfield) (lua_State *L, int idx, const char *k);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,const char * k)
lua_getfield	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_getfield) (lua_State *L, int idx, const char *k);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,const char * k)
lua_getgccount	..\\scintilla\\lua\\src\\lua.h	/^#define lua_getgccount(/;"	d	signature:(L)
lua_getgccount	..\\scite\\lua\\include\\lua.h	/^#define lua_getgccount(/;"	d	signature:(L)
lua_getglobal	..\\scintilla\\lua\\src\\lua.h	/^#define lua_getglobal(/;"	d	signature:(L,s)
lua_getglobal	..\\scite\\lua\\include\\lua.h	/^#define lua_getglobal(/;"	d	signature:(L,s)
lua_gethook	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API lua_Hook lua_gethook (lua_State *L) {$/;"	f	typeref:typename:LUA_API lua_Hook	signature:(lua_State * L)
lua_gethookcount	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API int lua_gethookcount (lua_State *L) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L)
lua_gethookmask	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API int lua_gethookmask (lua_State *L) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L)
lua_getinfo	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API int lua_getinfo (lua_State *L, const char *what, lua_Debug *ar) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,const char * what,lua_Debug * ar)
lua_getlocal	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API const char *lua_getlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,const lua_Debug * ar,int n)
lua_getmetatable	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_getmetatable (lua_State *L, int objindex) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int objindex)
lua_getmetatable	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_getmetatable) (lua_State *L, int objindex);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int objindex)
lua_getmetatable	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_getmetatable) (lua_State *L, int objindex);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int objindex)
lua_getref	..\\scintilla\\lua\\src\\lauxlib.h	/^#define lua_getref(/;"	d	signature:(L,ref)
lua_getref	..\\scite\\lua\\include\\lauxlib.h	/^#define lua_getref(/;"	d	signature:(L,ref)
lua_getregistry	..\\scintilla\\lua\\src\\lua.h	/^#define lua_getregistry(/;"	d	signature:(L)
lua_getregistry	..\\scite\\lua\\include\\lua.h	/^#define lua_getregistry(/;"	d	signature:(L)
lua_getstack	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API int lua_getstack (lua_State *L, int level, lua_Debug *ar) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int level,lua_Debug * ar)
lua_gettable	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_gettable (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_gettable	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_gettable) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_gettable	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_gettable) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_gettop	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_gettop (lua_State *L) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L)
lua_gettop	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_gettop) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_gettop	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_gettop) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_getupvalue	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const char *lua_getupvalue (lua_State *L, int funcindex, int n) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,int funcindex,int n)
lua_h	..\\scintilla\\lua\\src\\lua.h	/^#define lua_h$/;"	d
lua_h	..\\scite\\lua\\include\\lua.h	/^#define lua_h$/;"	d
lua_ident	..\\scintilla\\lua\\src\\lapi.c	/^const char lua_ident[] =$/;"	v	typeref:typename:const char[]
lua_insert	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_insert (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_insert	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_insert) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_insert	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_insert) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_isboolean	..\\scintilla\\lua\\src\\lua.h	/^#define lua_isboolean(/;"	d	signature:(L,n)
lua_isboolean	..\\scite\\lua\\include\\lua.h	/^#define lua_isboolean(/;"	d	signature:(L,n)
lua_iscfunction	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_iscfunction (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_iscfunction	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int             (lua_iscfunction) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_iscfunction	..\\scite\\lua\\include\\lua.h	/^LUA_API int             (lua_iscfunction) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_isfunction	..\\scintilla\\lua\\src\\lua.h	/^#define lua_isfunction(/;"	d	signature:(L,n)
lua_isfunction	..\\scite\\lua\\include\\lua.h	/^#define lua_isfunction(/;"	d	signature:(L,n)
lua_islightuserdata	..\\scintilla\\lua\\src\\lua.h	/^#define lua_islightuserdata(/;"	d	signature:(L,n)
lua_islightuserdata	..\\scite\\lua\\include\\lua.h	/^#define lua_islightuserdata(/;"	d	signature:(L,n)
lua_isnil	..\\scintilla\\lua\\src\\lua.h	/^#define lua_isnil(/;"	d	signature:(L,n)
lua_isnil	..\\scite\\lua\\include\\lua.h	/^#define lua_isnil(/;"	d	signature:(L,n)
lua_isnone	..\\scintilla\\lua\\src\\lua.h	/^#define lua_isnone(/;"	d	signature:(L,n)
lua_isnone	..\\scite\\lua\\include\\lua.h	/^#define lua_isnone(/;"	d	signature:(L,n)
lua_isnoneornil	..\\scintilla\\lua\\src\\lua.h	/^#define lua_isnoneornil(/;"	d	signature:(L,n)
lua_isnoneornil	..\\scite\\lua\\include\\lua.h	/^#define lua_isnoneornil(/;"	d	signature:(L,n)
lua_isnumber	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_isnumber (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_isnumber	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int             (lua_isnumber) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_isnumber	..\\scite\\lua\\include\\lua.h	/^LUA_API int             (lua_isnumber) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_isstring	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_isstring (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_isstring	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int             (lua_isstring) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_isstring	..\\scite\\lua\\include\\lua.h	/^LUA_API int             (lua_isstring) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_istable	..\\scintilla\\lua\\src\\lua.h	/^#define lua_istable(/;"	d	signature:(L,n)
lua_istable	..\\scite\\lua\\include\\lua.h	/^#define lua_istable(/;"	d	signature:(L,n)
lua_isthread	..\\scintilla\\lua\\src\\lua.h	/^#define lua_isthread(/;"	d	signature:(L,n)
lua_isthread	..\\scite\\lua\\include\\lua.h	/^#define lua_isthread(/;"	d	signature:(L,n)
lua_isuserdata	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_isuserdata (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_isuserdata	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int             (lua_isuserdata) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_isuserdata	..\\scite\\lua\\include\\lua.h	/^LUA_API int             (lua_isuserdata) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_lessthan	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_lessthan (lua_State *L, int index1, int index2) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int index1,int index2)
lua_lessthan	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int            (lua_lessthan) (lua_State *L, int idx1, int idx2);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx1,int idx2)
lua_lessthan	..\\scite\\lua\\include\\lua.h	/^LUA_API int            (lua_lessthan) (lua_State *L, int idx1, int idx2);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx1,int idx2)
lua_load	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_load (lua_State *L, lua_Reader reader, void *data,$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,lua_Reader reader,void * data,const char * chunkname)
lua_load	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_load) (lua_State *L, lua_Reader reader, void *dt,$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,lua_Reader reader,void * dt,const char * chunkname)
lua_load	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_load) (lua_State *L, lua_Reader reader, void *dt,$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,lua_Reader reader,void * dt,const char * chunkname)
lua_lock	..\\scintilla\\lua\\src\\llimits.h	/^#define lua_lock(/;"	d	signature:(L)
lua_longjmp	..\\scintilla\\lua\\src\\ldo.c	/^struct lua_longjmp {$/;"	s	file:
lua_newstate	..\\scintilla\\lua\\src\\lstate.c	/^LUA_API lua_State *lua_newstate (lua_Alloc f, void *ud) {$/;"	f	typeref:typename:LUA_API lua_State *	signature:(lua_Alloc f,void * ud)
lua_newstate	..\\scintilla\\lua\\src\\lua.h	/^LUA_API lua_State *(lua_newstate) (lua_Alloc f, void *ud);$/;"	v	typeref:typename:LUA_API lua_State * ()(lua_Alloc f,void * ud)
lua_newstate	..\\scite\\lua\\include\\lua.h	/^LUA_API lua_State *(lua_newstate) (lua_Alloc f, void *ud);$/;"	v	typeref:typename:LUA_API lua_State * ()(lua_Alloc f,void * ud)
lua_newtable	..\\scintilla\\lua\\src\\lua.h	/^#define lua_newtable(/;"	d	signature:(L)
lua_newtable	..\\scite\\lua\\include\\lua.h	/^#define lua_newtable(/;"	d	signature:(L)
lua_newthread	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_State *lua_newthread (lua_State *L) {$/;"	f	typeref:typename:LUA_API lua_State *	signature:(lua_State * L)
lua_newthread	..\\scintilla\\lua\\src\\lua.h	/^LUA_API lua_State *(lua_newthread) (lua_State *L);$/;"	v	typeref:typename:LUA_API lua_State * ()(lua_State * L)
lua_newthread	..\\scite\\lua\\include\\lua.h	/^LUA_API lua_State *(lua_newthread) (lua_State *L);$/;"	v	typeref:typename:LUA_API lua_State * ()(lua_State * L)
lua_newuserdata	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void *lua_newuserdata (lua_State *L, size_t size) {$/;"	f	typeref:typename:LUA_API void *	signature:(lua_State * L,size_t size)
lua_newuserdata	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);$/;"	v	typeref:typename:LUA_API void * ()(lua_State * L,size_t sz)
lua_newuserdata	..\\scite\\lua\\include\\lua.h	/^LUA_API void *(lua_newuserdata) (lua_State *L, size_t sz);$/;"	v	typeref:typename:LUA_API void * ()(lua_State * L,size_t sz)
lua_next	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_next (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_next	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_next) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_next	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_next) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_number2int	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_number2int(/;"	d	signature:(i,d)
lua_number2int	..\\scite\\lua\\include\\luaconf.h	/^#define lua_number2int(/;"	d	signature:(i,d)
lua_number2integer	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_number2integer(/;"	d	signature:(i,d)
lua_number2integer	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_number2integer(/;"	d	signature:(i,n)
lua_number2integer	..\\scite\\lua\\include\\luaconf.h	/^#define lua_number2integer(/;"	d	signature:(i,d)
lua_number2integer	..\\scite\\lua\\include\\luaconf.h	/^#define lua_number2integer(/;"	d	signature:(i,n)
lua_number2str	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_number2str(/;"	d	signature:(s,n)
lua_number2str	..\\scite\\lua\\include\\luaconf.h	/^#define lua_number2str(/;"	d	signature:(s,n)
lua_objlen	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API size_t lua_objlen (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API size_t	signature:(lua_State * L,int idx)
lua_objlen	..\\scintilla\\lua\\src\\lptypes.h	/^#define lua_objlen	/;"	d
lua_open	..\\scintilla\\lua\\src\\lua.h	/^#define lua_open(/;"	d	signature:()
lua_open	..\\scite\\lua\\include\\lua.h	/^#define lua_open(/;"	d	signature:()
lua_pcall	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_pcall (lua_State *L, int nargs, int nresults, int errfunc) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int nargs,int nresults,int errfunc)
lua_pcall	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_pcall) (lua_State *L, int nargs, int nresults, int errfunc);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int nargs,int nresults,int errfunc)
lua_pcall	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_pcall) (lua_State *L, int nargs, int nresults, int errfunc);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int nargs,int nresults,int errfunc)
lua_pclose	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_pclose(/;"	d	signature:(L,file)
lua_pclose	..\\scite\\lua\\include\\luaconf.h	/^#define lua_pclose(/;"	d	signature:(L,file)
lua_pop	..\\scintilla\\lua\\src\\lua.h	/^#define lua_pop(/;"	d	signature:(L,n)
lua_pop	..\\scite\\lua\\include\\lua.h	/^#define lua_pop(/;"	d	signature:(L,n)
lua_popen	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_popen(/;"	d	signature:(L,c,m)
lua_popen	..\\scite\\lua\\include\\luaconf.h	/^#define lua_popen(/;"	d	signature:(L,c,m)
lua_pushboolean	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushboolean (lua_State *L, int b) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int b)
lua_pushboolean	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushboolean) (lua_State *L, int b);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int b)
lua_pushboolean	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushboolean) (lua_State *L, int b);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int b)
lua_pushcclosure	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushcclosure (lua_State *L, lua_CFunction fn, int n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,lua_CFunction fn,int n)
lua_pushcclosure	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,lua_CFunction fn,int n)
lua_pushcclosure	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,lua_CFunction fn,int n)
lua_pushcfunction	..\\scintilla\\lua\\src\\lua.h	/^#define lua_pushcfunction(/;"	d	signature:(L,f)
lua_pushcfunction	..\\scite\\lua\\include\\lua.h	/^#define lua_pushcfunction(/;"	d	signature:(L,f)
lua_pushfstring	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const char *lua_pushfstring (lua_State *L, const char *fmt, ...) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,const char * fmt,...)
lua_pushfstring	..\\scintilla\\lua\\src\\lua.h	/^LUA_API const char *(lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,const char * fmt,...)
lua_pushfstring	..\\scite\\lua\\include\\lua.h	/^LUA_API const char *(lua_pushfstring) (lua_State *L, const char *fmt, ...);$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,const char * fmt,...)
lua_pushinteger	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushinteger (lua_State *L, lua_Integer n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,lua_Integer n)
lua_pushinteger	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,lua_Integer n)
lua_pushinteger	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushinteger) (lua_State *L, lua_Integer n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,lua_Integer n)
lua_pushlightuserdata	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushlightuserdata (lua_State *L, void *p) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,void * p)
lua_pushlightuserdata	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushlightuserdata) (lua_State *L, void *p);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,void * p)
lua_pushlightuserdata	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushlightuserdata) (lua_State *L, void *p);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,void * p)
lua_pushliteral	..\\scintilla\\lua\\src\\lua.h	/^#define lua_pushliteral(/;"	d	signature:(L,s)
lua_pushliteral	..\\scite\\lua\\include\\lua.h	/^#define lua_pushliteral(/;"	d	signature:(L,s)
lua_pushlstring	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushlstring (lua_State *L, const char *s, size_t len) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,const char * s,size_t len)
lua_pushlstring	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,const char * s,size_t l)
lua_pushlstring	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushlstring) (lua_State *L, const char *s, size_t l);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,const char * s,size_t l)
lua_pushnil	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushnil (lua_State *L) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L)
lua_pushnil	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushnil) (lua_State *L);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L)
lua_pushnil	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushnil) (lua_State *L);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L)
lua_pushnumber	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushnumber (lua_State *L, lua_Number n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,lua_Number n)
lua_pushnumber	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushnumber) (lua_State *L, lua_Number n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,lua_Number n)
lua_pushnumber	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushnumber) (lua_State *L, lua_Number n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,lua_Number n)
lua_pushstring	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushstring (lua_State *L, const char *s) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,const char * s)
lua_pushstring	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushstring) (lua_State *L, const char *s);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,const char * s)
lua_pushstring	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushstring) (lua_State *L, const char *s);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,const char * s)
lua_pushthread	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_pushthread (lua_State *L) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L)
lua_pushthread	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_pushthread) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_pushthread	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_pushthread) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_pushvalue	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_pushvalue (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_pushvalue	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_pushvalue) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_pushvalue	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_pushvalue) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_pushvfstring	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const char *lua_pushvfstring (lua_State *L, const char *fmt,$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,const char * fmt,va_list argp)
lua_pushvfstring	..\\scintilla\\lua\\src\\lua.h	/^LUA_API const char *(lua_pushvfstring) (lua_State *L, const char *fmt,$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,const char * fmt,va_list argp)
lua_pushvfstring	..\\scite\\lua\\include\\lua.h	/^LUA_API const char *(lua_pushvfstring) (lua_State *L, const char *fmt,$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,const char * fmt,va_list argp)
lua_rawequal	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_rawequal (lua_State *L, int index1, int index2) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int index1,int index2)
lua_rawequal	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int            (lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx1,int idx2)
lua_rawequal	..\\scite\\lua\\include\\lua.h	/^LUA_API int            (lua_rawequal) (lua_State *L, int idx1, int idx2);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx1,int idx2)
lua_rawget	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_rawget (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_rawget	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_rawget) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_rawget	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_rawget) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_rawgeti	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_rawgeti (lua_State *L, int idx, int n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx,int n)
lua_rawgeti	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_rawgeti) (lua_State *L, int idx, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,int n)
lua_rawgeti	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_rawgeti) (lua_State *L, int idx, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,int n)
lua_rawset	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_rawset (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_rawset	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_rawset) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_rawset	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_rawset) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_rawseti	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_rawseti (lua_State *L, int idx, int n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx,int n)
lua_rawseti	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_rawseti) (lua_State *L, int idx, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,int n)
lua_rawseti	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_rawseti) (lua_State *L, int idx, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,int n)
lua_readline	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_readline(/;"	d	signature:(L,b,p)
lua_readline	..\\scite\\lua\\include\\luaconf.h	/^#define lua_readline(/;"	d	signature:(L,b,p)
lua_ref	..\\scintilla\\lua\\src\\lauxlib.h	/^#define lua_ref(/;"	d	signature:(L,lock)
lua_ref	..\\scite\\lua\\include\\lauxlib.h	/^#define lua_ref(/;"	d	signature:(L,lock)
lua_register	..\\scintilla\\lua\\src\\lua.h	/^#define lua_register(/;"	d	signature:(L,n,f)
lua_register	..\\scite\\lua\\include\\lua.h	/^#define lua_register(/;"	d	signature:(L,n,f)
lua_remove	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_remove (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_remove	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_remove) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_remove	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_remove) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_replace	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_replace (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_replace	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_replace) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_replace	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_replace) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_resume	..\\scintilla\\lua\\src\\ldo.c	/^LUA_API int lua_resume (lua_State *L, int nargs) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int nargs)
lua_resume	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int  (lua_resume) (lua_State *L, int narg);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int narg)
lua_resume	..\\scite\\lua\\include\\lua.h	/^LUA_API int  (lua_resume) (lua_State *L, int narg);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int narg)
lua_saveline	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_saveline(/;"	d	signature:(L,idx)
lua_saveline	..\\scite\\lua\\include\\luaconf.h	/^#define lua_saveline(/;"	d	signature:(L,idx)
lua_setallocf	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_setallocf (lua_State *L, lua_Alloc f, void *ud) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,lua_Alloc f,void * ud)
lua_setfenv	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_setfenv (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_setfenv	..\\scintilla\\lua\\src\\lptypes.h	/^#define lua_setfenv	/;"	d
lua_setfenv	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_setfenv) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_setfenv	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_setfenv) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_setfield	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_setfield (lua_State *L, int idx, const char *k) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx,const char * k)
lua_setfield	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_setfield) (lua_State *L, int idx, const char *k);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,const char * k)
lua_setfield	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_setfield) (lua_State *L, int idx, const char *k);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx,const char * k)
lua_setglobal	..\\scintilla\\lua\\src\\lua.h	/^#define lua_setglobal(/;"	d	signature:(L,s)
lua_setglobal	..\\scite\\lua\\include\\lua.h	/^#define lua_setglobal(/;"	d	signature:(L,s)
lua_sethook	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API int lua_sethook (lua_State *L, lua_Hook func, int mask, int count) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,lua_Hook func,int mask,int count)
lua_setlevel	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_setlevel (lua_State *from, lua_State *to) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * from,lua_State * to)
lua_setlocal	..\\scintilla\\lua\\src\\ldebug.c	/^LUA_API const char *lua_setlocal (lua_State *L, const lua_Debug *ar, int n) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,const lua_Debug * ar,int n)
lua_setmetatable	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_setmetatable (lua_State *L, int objindex) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int objindex)
lua_setmetatable	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int   (lua_setmetatable) (lua_State *L, int objindex);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int objindex)
lua_setmetatable	..\\scite\\lua\\include\\lua.h	/^LUA_API int   (lua_setmetatable) (lua_State *L, int objindex);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int objindex)
lua_settable	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_settable (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_settable	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_settable) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_settable	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_settable) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_settop	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_settop (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * L,int idx)
lua_settop	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_settop) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_settop	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_settop) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void ()(lua_State * L,int idx)
lua_setupvalue	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const char *lua_setupvalue (lua_State *L, int funcindex, int n) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,int funcindex,int n)
lua_status	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int  lua_status (lua_State *L) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L)
lua_status	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int  (lua_status) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_status	..\\scite\\lua\\include\\lua.h	/^LUA_API int  (lua_status) (lua_State *L);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L)
lua_stdin_is_tty	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_stdin_is_tty(/;"	d	signature:()
lua_stdin_is_tty	..\\scite\\lua\\include\\luaconf.h	/^#define lua_stdin_is_tty(/;"	d	signature:()
lua_str2number	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_str2number(/;"	d	signature:(s,p)
lua_str2number	..\\scite\\lua\\include\\luaconf.h	/^#define lua_str2number(/;"	d	signature:(s,p)
lua_strlen	..\\scintilla\\lua\\src\\lua.h	/^#define lua_strlen(/;"	d	signature:(L,i)
lua_strlen	..\\scite\\lua\\include\\lua.h	/^#define lua_strlen(/;"	d	signature:(L,i)
lua_tmpnam	..\\scintilla\\lua\\src\\luaconf.h	/^#define lua_tmpnam(/;"	d	signature:(b,e)
lua_tmpnam	..\\scite\\lua\\include\\luaconf.h	/^#define lua_tmpnam(/;"	d	signature:(b,e)
lua_toboolean	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_toboolean (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_toboolean	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int             (lua_toboolean) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_toboolean	..\\scite\\lua\\include\\lua.h	/^LUA_API int             (lua_toboolean) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_tocfunction	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_CFunction lua_tocfunction (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API lua_CFunction	signature:(lua_State * L,int idx)
lua_tointeger	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_Integer lua_tointeger (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API lua_Integer	signature:(lua_State * L,int idx)
lua_tolstring	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const char *lua_tolstring (lua_State *L, int idx, size_t *len) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,int idx,size_t * len)
lua_tolstring	..\\scintilla\\lua\\src\\lua.h	/^LUA_API const char     *(lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,int idx,size_t * len)
lua_tolstring	..\\scite\\lua\\include\\lua.h	/^LUA_API const char     *(lua_tolstring) (lua_State *L, int idx, size_t *len);$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,int idx,size_t * len)
lua_tonumber	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_Number lua_tonumber (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API lua_Number	signature:(lua_State * L,int idx)
lua_topointer	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const void *lua_topointer (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API const void *	signature:(lua_State * L,int idx)
lua_topointer	..\\scintilla\\lua\\src\\lua.h	/^LUA_API const void     *(lua_topointer) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API const void * ()(lua_State * L,int idx)
lua_topointer	..\\scite\\lua\\include\\lua.h	/^LUA_API const void     *(lua_topointer) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API const void * ()(lua_State * L,int idx)
lua_tostring	..\\scintilla\\lua\\src\\lua.h	/^#define lua_tostring(/;"	d	signature:(L,i)
lua_tostring	..\\scite\\lua\\include\\lua.h	/^#define lua_tostring(/;"	d	signature:(L,i)
lua_tothread	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API lua_State *lua_tothread (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API lua_State *	signature:(lua_State * L,int idx)
lua_tothread	..\\scintilla\\lua\\src\\lua.h	/^LUA_API lua_State      *(lua_tothread) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API lua_State * ()(lua_State * L,int idx)
lua_tothread	..\\scite\\lua\\include\\lua.h	/^LUA_API lua_State      *(lua_tothread) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API lua_State * ()(lua_State * L,int idx)
lua_touserdata	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void *lua_touserdata (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API void *	signature:(lua_State * L,int idx)
lua_touserdata	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void	       *(lua_touserdata) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void * ()(lua_State * L,int idx)
lua_touserdata	..\\scite\\lua\\include\\lua.h	/^LUA_API void	       *(lua_touserdata) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API void * ()(lua_State * L,int idx)
lua_type	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API int lua_type (lua_State *L, int idx) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int idx)
lua_type	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int             (lua_type) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_type	..\\scite\\lua\\include\\lua.h	/^LUA_API int             (lua_type) (lua_State *L, int idx);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int idx)
lua_typename	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API const char *lua_typename (lua_State *L, int t) {$/;"	f	typeref:typename:LUA_API const char *	signature:(lua_State * L,int t)
lua_typename	..\\scintilla\\lua\\src\\lua.h	/^LUA_API const char     *(lua_typename) (lua_State *L, int tp);$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,int tp)
lua_typename	..\\scite\\lua\\include\\lua.h	/^LUA_API const char     *(lua_typename) (lua_State *L, int tp);$/;"	v	typeref:typename:LUA_API const char * ()(lua_State * L,int tp)
lua_unlock	..\\scintilla\\lua\\src\\llimits.h	/^#define lua_unlock(/;"	d	signature:(L)
lua_unref	..\\scintilla\\lua\\src\\lauxlib.h	/^#define lua_unref(/;"	d	signature:(L,ref)
lua_unref	..\\scite\\lua\\include\\lauxlib.h	/^#define lua_unref(/;"	d	signature:(L,ref)
lua_upvalueindex	..\\scintilla\\lua\\src\\lua.h	/^#define lua_upvalueindex(/;"	d	signature:(i)
lua_upvalueindex	..\\scite\\lua\\include\\lua.h	/^#define lua_upvalueindex(/;"	d	signature:(i)
lua_xmove	..\\scintilla\\lua\\src\\lapi.c	/^LUA_API void lua_xmove (lua_State *from, lua_State *to, int n) {$/;"	f	typeref:typename:LUA_API void	signature:(lua_State * from,lua_State * to,int n)
lua_xmove	..\\scintilla\\lua\\src\\lua.h	/^LUA_API void  (lua_xmove) (lua_State *from, lua_State *to, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * from,lua_State * to,int n)
lua_xmove	..\\scite\\lua\\include\\lua.h	/^LUA_API void  (lua_xmove) (lua_State *from, lua_State *to, int n);$/;"	v	typeref:typename:LUA_API void ()(lua_State * from,lua_State * to,int n)
lua_yield	..\\scintilla\\lua\\src\\ldo.c	/^LUA_API int lua_yield (lua_State *L, int nresults) {$/;"	f	typeref:typename:LUA_API int	signature:(lua_State * L,int nresults)
lua_yield	..\\scintilla\\lua\\src\\lua.h	/^LUA_API int  (lua_yield) (lua_State *L, int nresults);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int nresults)
lua_yield	..\\scite\\lua\\include\\lua.h	/^LUA_API int  (lua_yield) (lua_State *L, int nresults);$/;"	v	typeref:typename:LUA_API int ()(lua_State * L,int nresults)
luac_c	..\\scintilla\\lua\\src\\luac.c	/^#define luac_c$/;"	d	file:
luac_c	..\\scintilla\\lua\\src\\print.c	/^#define luac_c$/;"	d	file:
luai_Cast	..\\scintilla\\lua\\src\\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	u
luai_Cast	..\\scite\\lua\\include\\luaconf.h	/^union luai_Cast { double l_d; long l_l; };$/;"	u
luai_apicheck	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_apicheck(/;"	d	signature:(L,o)
luai_apicheck	..\\scite\\lua\\include\\luaconf.h	/^#define luai_apicheck(/;"	d	signature:(L,o)
luai_jmpbuf	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_jmpbuf	/;"	d
luai_jmpbuf	..\\scite\\lua\\include\\luaconf.h	/^#define luai_jmpbuf	/;"	d
luai_numadd	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numadd(/;"	d	signature:(a,b)
luai_numadd	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numadd(/;"	d	signature:(a,b)
luai_numdiv	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numdiv(/;"	d	signature:(a,b)
luai_numdiv	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numdiv(/;"	d	signature:(a,b)
luai_numeq	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numeq(/;"	d	signature:(a,b)
luai_numeq	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numeq(/;"	d	signature:(a,b)
luai_numisnan	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numisnan(/;"	d	signature:(a)
luai_numisnan	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numisnan(/;"	d	signature:(a)
luai_numle	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numle(/;"	d	signature:(a,b)
luai_numle	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numle(/;"	d	signature:(a,b)
luai_numlt	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numlt(/;"	d	signature:(a,b)
luai_numlt	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numlt(/;"	d	signature:(a,b)
luai_nummod	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_nummod(/;"	d	signature:(a,b)
luai_nummod	..\\scite\\lua\\include\\luaconf.h	/^#define luai_nummod(/;"	d	signature:(a,b)
luai_nummul	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_nummul(/;"	d	signature:(a,b)
luai_nummul	..\\scite\\lua\\include\\luaconf.h	/^#define luai_nummul(/;"	d	signature:(a,b)
luai_numpow	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numpow(/;"	d	signature:(a,b)
luai_numpow	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numpow(/;"	d	signature:(a,b)
luai_numsub	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numsub(/;"	d	signature:(a,b)
luai_numsub	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numsub(/;"	d	signature:(a,b)
luai_numunm	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_numunm(/;"	d	signature:(a)
luai_numunm	..\\scite\\lua\\include\\luaconf.h	/^#define luai_numunm(/;"	d	signature:(a)
luai_threadyield	..\\scintilla\\lua\\src\\llimits.h	/^#define luai_threadyield(/;"	d	signature:(L)
luai_userstateclose	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_userstateclose(/;"	d	signature:(L)
luai_userstateclose	..\\scite\\lua\\include\\luaconf.h	/^#define luai_userstateclose(/;"	d	signature:(L)
luai_userstatefree	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_userstatefree(/;"	d	signature:(L)
luai_userstatefree	..\\scite\\lua\\include\\luaconf.h	/^#define luai_userstatefree(/;"	d	signature:(L)
luai_userstateopen	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_userstateopen(/;"	d	signature:(L)
luai_userstateopen	..\\scite\\lua\\include\\luaconf.h	/^#define luai_userstateopen(/;"	d	signature:(L)
luai_userstateresume	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_userstateresume(/;"	d	signature:(L,n)
luai_userstateresume	..\\scite\\lua\\include\\luaconf.h	/^#define luai_userstateresume(/;"	d	signature:(L,n)
luai_userstatethread	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_userstatethread(/;"	d	signature:(L,L1)
luai_userstatethread	..\\scite\\lua\\include\\luaconf.h	/^#define luai_userstatethread(/;"	d	signature:(L,L1)
luai_userstateyield	..\\scintilla\\lua\\src\\luaconf.h	/^#define luai_userstateyield(/;"	d	signature:(L,n)
luai_userstateyield	..\\scite\\lua\\include\\luaconf.h	/^#define luai_userstateyield(/;"	d	signature:(L,n)
lualib_h	..\\scintilla\\lua\\src\\lualib.h	/^#define lualib_h$/;"	d
lualib_h	..\\scite\\lua\\include\\lualib.h	/^#define lualib_h$/;"	d
lualibs	..\\scintilla\\lua\\src\\linit.c	/^static const luaL_Reg lualibs[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
luaopen_base	..\\scintilla\\lua\\src\\lbaselib.c	/^LUALIB_API int luaopen_base (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_base	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_base) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_base	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_base) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_debug	..\\scintilla\\lua\\src\\ldblib.c	/^LUALIB_API int luaopen_debug (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_debug	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_debug) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_debug	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_debug) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_io	..\\scintilla\\lua\\src\\liolib.c	/^LUALIB_API int luaopen_io (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_io	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_io) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_io	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_io) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_lpeg	..\\scintilla\\lua\\src\\lptree.c	/^int luaopen_lpeg (lua_State *L) {$/;"	f	typeref:typename:int	signature:(lua_State * L)
luaopen_math	..\\scintilla\\lua\\src\\lmathlib.c	/^LUALIB_API int luaopen_math (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_math	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_math) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_math	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_math) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_os	..\\scintilla\\lua\\src\\loslib.c	/^LUALIB_API int luaopen_os (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_os	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_os) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_os	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_os) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_package	..\\scintilla\\lua\\src\\loadlib.c	/^LUALIB_API int luaopen_package (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_package	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_package) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_package	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_package) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_string	..\\scintilla\\lua\\src\\lstrlib.c	/^LUALIB_API int luaopen_string (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_string	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_string) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_string	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_string) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_table	..\\scintilla\\lua\\src\\ltablib.c	/^LUALIB_API int luaopen_table (lua_State *L) {$/;"	f	typeref:typename:LUALIB_API int	signature:(lua_State * L)
luaopen_table	..\\scintilla\\lua\\src\\lualib.h	/^LUALIB_API int (luaopen_table) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
luaopen_table	..\\scite\\lua\\include\\lualib.h	/^LUALIB_API int (luaopen_table) (lua_State *L);$/;"	v	typeref:typename:LUALIB_API int ()(lua_State * L)
lundump_c	..\\scintilla\\lua\\src\\lundump.c	/^#define lundump_c$/;"	d	file:
lundump_h	..\\scintilla\\lua\\src\\lundump.h	/^#define lundump_h$/;"	d
lv	..\\scintilla\\src\\CellBuffer.h	/^	LineVector lv;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:LineVector	access:private
lvMetaData	..\\scintilla\\include\\ILexer.h	/^enum { lvOriginal=0, lvSubStyles=1, lvMetaData=2 };$/;"	e	enum:Scintilla::__anon86eda4c30203	access:public
lvOriginal	..\\scintilla\\include\\ILexer.h	/^enum { lvOriginal=0, lvSubStyles=1, lvMetaData=2 };$/;"	e	enum:Scintilla::__anon86eda4c30203	access:public
lvSubStyles	..\\scintilla\\include\\ILexer.h	/^enum { lvOriginal=0, lvSubStyles=1, lvMetaData=2 };$/;"	e	enum:Scintilla::__anon86eda4c30203	access:public
lvl	..\\scintilla\\lua\\src\\lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer	typeref:typename:int	access:public
lvl	..\\scite\\lua\\include\\lauxlib.h	/^  int lvl;  \/* number of strings in the stack (level) *\/$/;"	m	struct:luaL_Buffer	typeref:typename:int	access:public
lvm_c	..\\scintilla\\lua\\src\\lvm.c	/^#define lvm_c$/;"	d	file:
lvm_h	..\\scintilla\\lua\\src\\lvm.h	/^#define lvm_h$/;"	d
lzio_c	..\\scintilla\\lua\\src\\lzio.c	/^#define lzio_c$/;"	d	file:
lzio_h	..\\scintilla\\lua\\src\\lzio.h	/^#define lzio_h$/;"	d
m	..\\scintilla\\gtk\\PlatGTK.cxx	/^	GModule* m;$/;"	m	class:DynamicLibraryImpl	typeref:typename:GModule *	file:	access:protected
m	..\\scite\\gtk\\GTKMutex.cxx	/^	GMutex m;$/;"	m	class:GTKMutex	typeref:typename:GMutex	file:	access:private
mCallback	..\\scintilla\\cocoa\\InfoBar.h	/^  id <InfoBarCommunicator> mCallback;$/;"	v	typeref:typename:id<InfoBarCommunicator>
mCaretPositionLabel	..\\scintilla\\cocoa\\InfoBar.h	/^  NSTextField* mCaretPositionLabel;$/;"	v	typeref:typename:NSTextField *
mCurrentCaretX	..\\scintilla\\cocoa\\InfoBar.h	/^  int mCurrentCaretX;$/;"	v	typeref:typename:int
mCurrentCaretY	..\\scintilla\\cocoa\\InfoBar.h	/^  int mCurrentCaretY;$/;"	v	typeref:typename:int
mDisplayMask	..\\scintilla\\cocoa\\InfoBar.h	/^  IBDisplay mDisplayMask;$/;"	v	typeref:typename:IBDisplay
mLine	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^	CTLineRef mLine;$/;"	m	class:QuartzTextLayout	typeref:typename:CTLineRef	access:private
mSC	..\\scite\\gtk\\SciTEGTK.cxx	/^    mSC = GDK_SHIFT_MASK | GDK_CONTROL_MASK$/;"	e	enum:__anon11b77dfa0403	file:	access:public
mS_	..\\scite\\gtk\\SciTEGTK.cxx	/^    mS_ = GDK_SHIFT_MASK,$/;"	e	enum:__anon11b77dfa0403	file:	access:public
mScaleFactor	..\\scintilla\\cocoa\\InfoBar.h	/^  float mScaleFactor;$/;"	v	typeref:typename:float
mStatusTextLabel	..\\scintilla\\cocoa\\InfoBar.h	/^  NSTextField* mStatusTextLabel;$/;"	v	typeref:typename:NSTextField *
mString	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^	CFAttributedStringRef mString;$/;"	m	class:QuartzTextLayout	typeref:typename:CFAttributedStringRef	access:private
mZoomPopup	..\\scintilla\\cocoa\\InfoBar.h	/^  NSPopUpButton* mZoomPopup;$/;"	v	typeref:typename:NSPopUpButton *
m_ArrayData	..\\scite\\src\\Containers.h	/^	TList<TYPE, ARG_TYPE> m_ArrayData;$/;"	m	class:TArray	typeref:typename:TList<TYPE,ARG_TYPE>	access:protected
m_C	..\\scite\\gtk\\SciTEGTK.cxx	/^    m_C = GDK_CONTROL_MASK,$/;"	e	enum:__anon11b77dfa0403	file:	access:public
m_Iter16	..\\scite\\src\\Utf8_16.h	/^	Utf16_Iter m_Iter16;$/;"	m	class:Utf8_16_Read	typeref:typename:Utf16_Iter	access:private
m__	..\\scite\\gtk\\SciTEGTK.cxx	/^    m__ = 0,$/;"	e	enum:__anon11b77dfa0403	file:	access:public
m_bFirstRead	..\\scite\\src\\Utf8_16.h	/^	bool m_bFirstRead;$/;"	m	class:Utf8_16_Read	typeref:typename:bool	access:private
m_bFirstWrite	..\\scite\\src\\Utf8_16.h	/^	bool m_bFirstWrite;$/;"	m	class:Utf8_16_Write	typeref:typename:bool	access:protected
m_eEncoding	..\\scite\\src\\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf16_Iter	typeref:typename:encodingType	access:protected
m_eEncoding	..\\scite\\src\\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf8_16_Read	typeref:typename:encodingType	access:private
m_eEncoding	..\\scite\\src\\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf8_16_Write	typeref:typename:encodingType	access:protected
m_eEncoding	..\\scite\\src\\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf8_Iter	typeref:typename:encodingType	access:protected
m_eState	..\\scite\\src\\Utf8_16.h	/^	eState m_eState;$/;"	m	class:Utf16_Iter	typeref:typename:eState	access:protected
m_eState	..\\scite\\src\\Utf8_16.h	/^	eState m_eState;$/;"	m	class:Utf8_Iter	typeref:typename:eState	access:protected
m_leadSurrogate	..\\scite\\src\\Utf8_16.h	/^	ubyte m_leadSurrogate[2];$/;"	m	class:Utf8_16_Read	typeref:typename:ubyte[2]	access:private
m_nBufSize	..\\scite\\src\\Utf8_16.h	/^	size_t m_nBufSize;$/;"	m	class:Utf8_16_Read	typeref:typename:size_t	access:private
m_nBufSize	..\\scite\\src\\Utf8_16.h	/^	size_t m_nBufSize;$/;"	m	class:Utf8_16_Write	typeref:typename:size_t	access:protected
m_nCount	..\\scite\\src\\Containers.h	/^	int m_nCount;$/;"	m	class:TList	typeref:typename:int	access:protected
m_nCount	..\\scite\\src\\Containers.h	/^	int m_nCount;$/;"	m	class:TMap	typeref:typename:int	access:protected
m_nCur	..\\scite\\src\\Utf8_16.h	/^	int m_nCur;$/;"	m	class:Utf8_Iter	typeref:typename:int	access:protected
m_nCur	..\\scite\\src\\Utf8_16.h	/^	utf8 m_nCur;$/;"	m	class:Utf16_Iter	typeref:typename:utf8	access:protected
m_nCur16	..\\scite\\src\\Utf8_16.h	/^	int m_nCur16;$/;"	m	class:Utf16_Iter	typeref:typename:int	access:protected
m_nHashTableSize	..\\scite\\src\\Containers.h	/^	unsigned int m_nHashTableSize;$/;"	m	class:TMap	typeref:typename:unsigned int	access:protected
m_nLen	..\\scite\\src\\Utf8_16.h	/^	size_t m_nLen;$/;"	m	class:Utf8_16_Read	typeref:typename:size_t	access:private
m_pBuf	..\\scite\\src\\Utf8_16.h	/^	const ubyte* m_pBuf;$/;"	m	class:Utf16_Iter	typeref:typename:const ubyte *	access:protected
m_pBuf	..\\scite\\src\\Utf8_16.h	/^	const ubyte* m_pBuf;$/;"	m	class:Utf8_Iter	typeref:typename:const ubyte *	access:protected
m_pBuf	..\\scite\\src\\Utf8_16.h	/^	ubyte* m_pBuf;$/;"	m	class:Utf8_16_Read	typeref:typename:ubyte *	access:private
m_pBuf	..\\scite\\src\\Utf8_16.h	/^	utf16* m_pBuf;$/;"	m	class:Utf8_16_Write	typeref:typename:utf16 *	access:protected
m_pEnd	..\\scite\\src\\Utf8_16.h	/^	const ubyte* m_pEnd;$/;"	m	class:Utf16_Iter	typeref:typename:const ubyte *	access:protected
m_pEnd	..\\scite\\src\\Utf8_16.h	/^	const ubyte* m_pEnd;$/;"	m	class:Utf8_Iter	typeref:typename:const ubyte *	access:protected
m_pFile	..\\scite\\src\\Utf8_16.h	/^	FILE* m_pFile;$/;"	m	class:Utf8_16_Write	typeref:typename:FILE *	access:protected
m_pFreeList	..\\scite\\src\\Containers.h	/^	Association* m_pFreeList;$/;"	m	class:TMap	typeref:typename:Association *	access:protected
m_pHashTable	..\\scite\\src\\Containers.h	/^	Association** m_pHashTable;$/;"	m	class:TMap	typeref:typename:Association **	access:protected
m_pNewBuf	..\\scite\\src\\Utf8_16.h	/^	ubyte* m_pNewBuf;$/;"	m	class:Utf8_16_Read	typeref:typename:ubyte *	access:private
m_pNodeHead	..\\scite\\src\\Containers.h	/^	Node* m_pNodeHead;$/;"	m	class:TList	typeref:typename:Node *	access:protected
m_pNodeTail	..\\scite\\src\\Containers.h	/^	Node* m_pNodeTail;$/;"	m	class:TList	typeref:typename:Node *	access:protected
m_pRead	..\\scite\\src\\Utf8_16.h	/^	const ubyte* m_pRead;$/;"	m	class:Utf16_Iter	typeref:typename:const ubyte *	access:protected
m_pRead	..\\scite\\src\\Utf8_16.h	/^	const ubyte* m_pRead;$/;"	m	class:Utf8_Iter	typeref:typename:const ubyte *	access:protected
macrosEnabled	..\\scite\\src\\SciTEBase.h	/^	bool macrosEnabled;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
magnification	..\\scintilla\\src\\EditView.h	/^	int magnification;$/;"	m	struct:Scintilla::PrintParameters	typeref:typename:int	access:public
main	..\\scintilla\\curses\\jinx\\jinx.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int	signature:(int argc,char ** argv)
main	..\\scintilla\\lua\\src\\lua.c	/^int main (int argc, char **argv) {$/;"	f	typeref:typename:int	signature:(int argc,char ** argv)
main	..\\scintilla\\lua\\src\\luac.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int	signature:(int argc,char * argv[])
main	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def main(argv):$/;"	f	access:public	signature:(argv)
main	..\\scite\\gtk\\SciTEGTK.cxx	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int	signature:(int argc,char * argv[])
mainRange	..\\scintilla\\src\\Selection.h	/^	size_t mainRange;$/;"	m	class:Scintilla::Selection	typeref:typename:size_t	access:private
mainposition	..\\scintilla\\lua\\src\\ltable.c	/^static Node *mainposition (const Table *t, const TValue *key) {$/;"	f	typeref:typename:Node *	file:	signature:(const Table * t,const TValue * key)
mainthread	..\\scintilla\\lua\\src\\lstate.h	/^  struct lua_State *mainthread;$/;"	m	struct:global_State	typeref:struct:lua_State *	access:public
make	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def make(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
makeParm	..\\scite\\scripts\\CheckMentioned.py	/^def makeParm(t, n, v):$/;"	f	access:public	signature:(t, n, v)
makeRet	..\\scite\\scripts\\CheckMentioned.py	/^def makeRet(params):$/;"	f	access:public	signature:(params)
makeSig	..\\scite\\scripts\\CheckMentioned.py	/^def makeSig(params):$/;"	f	access:public	signature:(params)
makemask	..\\scintilla\\lua\\src\\ldblib.c	/^static int makemask (const char *smask, int count) {$/;"	f	typeref:typename:int	file:	signature:(const char * smask,int count)
makewhite	..\\scintilla\\lua\\src\\lgc.c	/^#define makewhite(/;"	d	file:	signature:(g,x)
mapMenuItemFromId	..\\scite\\gtk\\SciTEGTK.cxx	/^	std::map<int, GtkWidget *> mapMenuItemFromId;$/;"	m	class:SciTEGTK	typeref:typename:std::map<int,GtkWidget * >	file:	access:protected
mapReprs	..\\scintilla\\src\\PositionCache.h	/^	MapRepresentation mapReprs;$/;"	m	class:Scintilla::SpecialRepresentations	typeref:typename:MapRepresentation	access:private
mapped	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	gchar *mapped;	\/\/ Must be freed with g_free$/;"	m	struct:__anon9c9cef500411::CaseMapper	typeref:typename:gchar *	file:	access:public
mapping	..\\scintilla\\src\\CaseFolder.h	/^	char mapping[256];$/;"	m	class:Scintilla::CaseFolderTable	typeref:typename:char[256]	access:protected
mapss	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^typedef std::map<std::string, std::string> mapss;$/;"	t	typeref:typename:std::map<std::string,std::string>	file:
mapss	..\\scite\\src\\PropSetFile.h	/^typedef std::map<std::string, std::string> mapss;$/;"	t	typeref:typename:std::map<std::string,std::string>
margin	..\\scintilla\\include\\Scintilla.h	/^	int margin;		\/* SCN_MARGINCLICK *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
margin	..\\scite\\src\\SciTEBase.h	/^	bool margin;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
marginInside	..\\scintilla\\src\\ViewStyle.h	/^	bool marginInside;	\/\/\/< true: margin included in text view, false: separate views$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
marginNumberPadding	..\\scintilla\\src\\ViewStyle.h	/^	int marginNumberPadding; \/\/ the right-side padding of the number margin$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
marginOptions	..\\scintilla\\src\\Editor.h	/^	int marginOptions;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
marginStyleOffset	..\\scintilla\\src\\ViewStyle.h	/^	int marginStyleOffset;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
marginView	..\\scintilla\\src\\Editor.h	/^	MarginView marginView;$/;"	m	class:Scintilla::Editor	typeref:typename:MarginView	access:protected
marginWidth	..\\scite\\src\\SciTEBase.h	/^	int marginWidth;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
marginWidthDefault	..\\scite\\src\\SciTEBase.h	/^	enum { marginWidthDefault = 20};$/;"	e	enum:SciTEBase::__anonf95580a61203	access:public
markIncremental	..\\scite\\src\\SciTEBase.h	/^	enum MarkPurpose { markWithBookMarks, markIncremental };$/;"	e	enum:Searcher::MarkPurpose	access:public
markType	..\\scintilla\\src\\LineMarker.h	/^	int markType;$/;"	m	class:Scintilla::LineMarker	typeref:typename:int	access:public
markWithBookMarks	..\\scite\\src\\SciTEBase.h	/^	enum MarkPurpose { markWithBookMarks, markIncremental };$/;"	e	enum:Searcher::MarkPurpose	access:public
markerBookmark	..\\scite\\src\\SciTEBase.h	/^	enum { markerBookmark = 1 };$/;"	e	enum:SciTEBase::__anonf95580a60d03	access:public
markers	..\\scintilla\\src\\PerLine.h	/^	SplitVector<std::unique_ptr<MarkerHandleSet>> markers;$/;"	m	class:Scintilla::LineMarkers	typeref:typename:SplitVector<std::unique_ptr<MarkerHandleSet>>	access:private
markers	..\\scintilla\\src\\ViewStyle.h	/^	std::vector<LineMarker> markers;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:std::vector<LineMarker>	access:public
markfinalized	..\\scintilla\\lua\\src\\lgc.c	/^#define markfinalized(/;"	d	file:	signature:(u)
markmt	..\\scintilla\\lua\\src\\lgc.c	/^static void markmt (global_State *g) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g)
markobject	..\\scintilla\\lua\\src\\lgc.c	/^#define markobject(/;"	d	file:	signature:(g,t)
markroot	..\\scintilla\\lua\\src\\lgc.c	/^static void markroot (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
marktmu	..\\scintilla\\lua\\src\\lgc.c	/^static void marktmu (global_State *g) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g)
markupval	..\\scintilla\\lua\\src\\lparser.c	/^static void markupval (FuncState *fs, int level) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,int level)
markvalue	..\\scintilla\\lua\\src\\lgc.c	/^#define markvalue(/;"	d	file:	signature:(g,o)
mask	..\\scintilla\\src\\ViewStyle.h	/^	int mask;$/;"	m	class:Scintilla::MarginStyle	typeref:typename:int	access:public
maskCategory	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^const int maskCategory = 0x1F;$/;"	v	namespace:Scintilla::__anonf0c5a84c0111	typeref:typename:const int
maskDrawInText	..\\scintilla\\src\\ViewStyle.h	/^	int maskDrawInText;	\/\/\/< Mask for markers that always draw in text$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
maskInLine	..\\scintilla\\src\\ViewStyle.h	/^	int maskInLine;	\/\/\/< Mask for markers to be put into text because there is nowhere for them /;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
maskmarks	..\\scintilla\\lua\\src\\lgc.c	/^#define maskmarks	/;"	d	file:
match	..\\scintilla\\lua\\src\\lpvm.c	/^const char *match (lua_State *L, const char *o, const char *s, const char *e,$/;"	f	typeref:typename:const char *	signature:(lua_State * L,const char * o,const char * s,const char * e,Instruction * op,Capture * capture,int ptop)
match	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *match (MatchState *ms, const char *s, const char *p) {$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,const char * p)
matchCase	..\\scite\\src\\SciTEBase.h	/^	bool matchCase;$/;"	m	class:Searcher	typeref:typename:bool	access:public
matchCnt	..\\scite\\src\\MatchMarker.h	/^	int matchCnt; \/\/todo use a getter$/;"	m	class:MatchMarker	typeref:typename:int	access:public
matchMarker	..\\scite\\src\\SciTEBase.h	/^	MatchMarker matchMarker;$/;"	m	class:SciTEBase	typeref:typename:MatchMarker	access:protected
match_capture	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *match_capture (MatchState *ms, const char *s, int l) {$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,int l)
match_class	..\\scintilla\\lua\\src\\lstrlib.c	/^static int match_class (int c, int cl) {$/;"	f	typeref:typename:int	file:	signature:(int c,int cl)
matchbalance	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *matchbalance (MatchState *ms, const char *s,$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,const char * p)
matchbracketclass	..\\scintilla\\lua\\src\\lstrlib.c	/^static int matchbracketclass (int c, const char *p, const char *ec) {$/;"	f	typeref:typename:int	file:	signature:(int c,const char * p,const char * ec)
matchesValid	..\\scintilla\\src\\Document.h	/^	bool matchesValid;$/;"	m	class:Scintilla::Document	typeref:typename:bool	access:private
math_abs	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_abs (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_acos	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_acos (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_asin	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_asin (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_atan	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_atan (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_atan2	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_atan2 (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_ceil	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_ceil (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_cos	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_cos (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_cosh	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_cosh (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_deg	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_deg (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_exp	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_exp (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_floor	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_floor (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_fmod	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_fmod (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_frexp	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_frexp (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_ldexp	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_ldexp (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_log	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_log (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_log10	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_log10 (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_max	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_max (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_min	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_min (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_modf	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_modf (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_pow	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_pow (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_rad	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_rad (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_random	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_random (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_randomseed	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_randomseed (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_sin	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_sin (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_sinh	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_sinh (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_sqrt	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_sqrt (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_tan	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_tan (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
math_tanh	..\\scintilla\\lua\\src\\lmathlib.c	/^static int math_tanh (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
mathlib	..\\scintilla\\lua\\src\\lmathlib.c	/^static const luaL_Reg mathlib[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
maxAction	..\\scintilla\\src\\CellBuffer.h	/^	int maxAction;$/;"	m	class:Scintilla::UndoHistory	typeref:typename:int	access:private
maxAscent	..\\scintilla\\src\\ViewStyle.h	/^	unsigned int maxAscent;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:unsigned int	access:public
maxBufferIndex	..\\scite\\src\\LuaExtension.cxx	/^static int maxBufferIndex = -1;$/;"	v	typeref:typename:int	file:
maxBufferSize	..\\scite\\win32\\SciTEWinDlg.cxx	/^	enum {maxBufferSize=2048};$/;"	e	enum:SciTEWin::OpenDialog::__anon4f2d75860103	file:	access:public
maxCallTips	..\\scite\\src\\SciTEBase.h	/^	int maxCallTips;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
maxChar	..\\scintilla\\src\\CharClassify.h	/^	enum { maxChar=256 };$/;"	e	enum:Scintilla::CharClassify::__anon1f5b7b9a0103	access:public
maxCharWidth	..\\scintilla\\win32\\PlatWin.cxx	/^	unsigned int maxCharWidth;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:unsigned int	file:	access:private
maxConversionLength	..\\scintilla\\src\\CaseConvert.cxx	/^	enum { maxConversionLength=6 };$/;"	e	enum:__anon1fb76d660111::CaseConverter::__anon1fb76d660203	file:	access:public
maxCoordinate	..\\scintilla\\gtk\\PlatGTK.cxx	/^static const int maxCoordinate = 32000;$/;"	v	typeref:typename:const int	file:
maxDescent	..\\scintilla\\src\\ViewStyle.h	/^	unsigned int maxDescent;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:unsigned int	access:public
maxExpansionCaseConversion	..\\scintilla\\src\\CaseConvert.h	/^const int maxExpansionCaseConversion=3;$/;"	v	namespace:Scintilla	typeref:typename:const int
maxItemCharacters	..\\scintilla\\gtk\\PlatGTK.cxx	/^	unsigned int maxItemCharacters;$/;"	m	class:ListBoxX	typeref:typename:unsigned int	file:	access:private
maxItemCharacters	..\\scintilla\\win32\\PlatWin.cxx	/^	unsigned int maxItemCharacters;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:unsigned int	file:	access:private
maxItemLen	..\\scintilla\\src\\AutoComplete.h	/^	enum { maxItemLen=1000 };$/;"	e	enum:Scintilla::AutoComplete::__anon3bafc3700103	access:public
maxLenInputIME	..\\scintilla\\src\\ScintillaBase.h	/^	enum { maxLenInputIME = 200 };$/;"	e	enum:Scintilla::ScintillaBase::__anon0f68303c0203	access:public
maxLenText	..\\scintilla\\win32\\PlatWin.cxx	/^	int maxLenText;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:int	file:	access:private
maxLineLength	..\\scintilla\\src\\PositionCache.h	/^	int maxLineLength;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
maxListWidth	..\\scintilla\\src\\ScintillaBase.h	/^	int maxListWidth;		\/\/\/ Maximum width of list, in average character widths$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:int	access:protected
maxParam	..\\scite\\src\\SciTEBase.h	/^	enum { maxParam = 4 };$/;"	e	enum:SciTEBase::__anonf95580a61703	access:public
maxUnicode	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^const int maxUnicode = 0x10ffff;$/;"	v	namespace:Scintilla::__anonf0c5a84c0111	typeref:typename:const int
maxWidthMeasure	..\\scintilla\\win32\\PlatWin.cxx	/^	int maxWidthMeasure;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:int	file:	access:private
max_expand	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *max_expand (MatchState *ms, const char *s,$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,const char * p,const char * ep)
maxn	..\\scintilla\\lua\\src\\ltablib.c	/^static int maxn (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
maxstacksize	..\\scintilla\\lua\\src\\lobject.h	/^  lu_byte maxstacksize;$/;"	m	struct:Proto	typeref:typename:lu_byte	access:public
mayCoalesce	..\\scintilla\\src\\CellBuffer.h	/^	bool mayCoalesce;$/;"	m	class:Scintilla::Action	typeref:typename:bool	access:public
mbCancel	..\\scite\\src\\SciTEBase.h	/^		mbCancel,$/;"	e	enum:SciTEBase::MessageBoxChoice	access:public
mbNo	..\\scite\\src\\SciTEBase.h	/^		mbNo$/;"	e	enum:SciTEBase::MessageBoxChoice	access:public
mbOK	..\\scite\\src\\SciTEBase.h	/^		mbOK,$/;"	e	enum:SciTEBase::MessageBoxChoice	access:public
mbYes	..\\scite\\src\\SciTEBase.h	/^		mbYes,$/;"	e	enum:SciTEBase::MessageBoxChoice	access:public
mbsAboutBox	..\\scite\\gtk\\SciTEGTK.cxx	/^enum { mbsAboutBox = 0x100000 };$/;"	e	enum:__anon11b77dfa0103	file:	access:public
mbsIconQuestion	..\\scite\\src\\SciTEBase.h	/^		mbsIconQuestion = 0x20,$/;"	e	enum:SciTEBase::__anonf95580a61603	access:public
mbsIconWarning	..\\scite\\src\\SciTEBase.h	/^		mbsIconWarning = 0x30$/;"	e	enum:SciTEBase::__anonf95580a61603	access:public
mbsOK	..\\scite\\src\\SciTEBase.h	/^		mbsOK = 0,$/;"	e	enum:SciTEBase::__anonf95580a61603	access:public
mbsYesNo	..\\scite\\src\\SciTEBase.h	/^		mbsYesNo = 4,$/;"	e	enum:SciTEBase::__anonf95580a61603	access:public
mbsYesNoCancel	..\\scite\\src\\SciTEBase.h	/^		mbsYesNoCancel = 3,$/;"	e	enum:SciTEBase::__anonf95580a61603	access:public
memDirectory	..\\scite\\src\\SciTEBase.h	/^	ComboMemory memDirectory;$/;"	m	class:SciTEBase	typeref:typename:ComboMemory	access:protected
memFiles	..\\scite\\src\\SciTEBase.h	/^	ComboMemory memFiles;$/;"	m	class:SciTEBase	typeref:typename:ComboMemory	access:protected
memFinds	..\\scite\\src\\SciTEBase.h	/^	ComboMemory memFinds;$/;"	m	class:Searcher	typeref:typename:ComboMemory	access:public
memReplaces	..\\scite\\src\\SciTEBase.h	/^	ComboMemory memReplaces;$/;"	m	class:Searcher	typeref:typename:ComboMemory	access:public
menuAccessIndicator	..\\scite\\src\\SciTEProps.cxx	/^const GUI::gui_char menuAccessIndicator[] = GUI_TEXT("&");$/;"	v	typeref:typename:const GUI::gui_char[]
menuAccessIndicator	..\\scite\\src\\SciTEProps.cxx	/^const GUI::gui_char menuAccessIndicator[] = GUI_TEXT("_");$/;"	v	typeref:typename:const GUI::gui_char[]
menuBar	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *menuBar;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
menuBuffers	..\\scite\\src\\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anonf95580a60103	access:public
menuCommand	..\\scite\\src\\SciTEBase.h	/^	std::string menuCommand; \/\/ the menu command to be passed to "SciTEBase::MenuCommand"$/;"	m	class:ShortcutItem	typeref:typename:std::string	access:public
menuEdit	..\\scite\\src\\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anonf95580a60103	access:public
menuFeatures	..\\scite\\scripts\\commandsdoc.py	/^def menuFeatures(out):$/;"	f	access:public	signature:(out)
menuFile	..\\scite\\src\\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anonf95580a60103	access:public
menuHelp	..\\scite\\src\\SciTEBase.h	/^    menuHelp = 8$/;"	e	enum:__anonf95580a60103	access:public
menuItem	..\\scite\\src\\SciTEBase.h	/^	std::string menuItem;$/;"	m	class:LanguageMenuItem	typeref:typename:std::string	access:public
menuKey	..\\scite\\src\\SciTEBase.h	/^	std::string menuKey; \/\/ the keyboard short cut$/;"	m	class:ShortcutItem	typeref:typename:std::string	access:public
menuKey	..\\scite\\src\\SciTEBase.h	/^	std::string menuKey;$/;"	m	class:LanguageMenuItem	typeref:typename:std::string	access:public
menuLanguage	..\\scite\\src\\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anonf95580a60103	access:public
menuOptions	..\\scite\\src\\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anonf95580a60103	access:public
menuSearch	..\\scite\\src\\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anonf95580a60103	access:public
menuSource	..\\scite\\gtk\\SciTEGTK.cxx	/^	int menuSource;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
menuSource	..\\scite\\win32\\SciTEWin.h	/^	int menuSource;$/;"	m	class:SciTEWin	typeref:typename:int	access:protected
menuTools	..\\scite\\src\\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anonf95580a60103	access:public
menuView	..\\scite\\src\\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anonf95580a60103	access:public
merge_table	..\\scite\\src\\LuaExtension.cxx	/^static int merge_table(lua_State *L, int destTableIdx, int srcTableIdx, bool copyMetatable = fal/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int destTableIdx,int srcTableIdx,bool copyMetatable=false)
mergektable	..\\scintilla\\lua\\src\\lptree.c	/^static void mergektable (lua_State *L, int idx, TTree *rule) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int idx,TTree * rule)
message	..\\scintilla\\include\\Scintilla.h	/^	int message;	\/* SCN_MACRORECORD *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
messageBoxDestroy	..\\scite\\gtk\\SciTEGTK.cxx	/^static void messageBoxDestroy(GtkWidget *, gpointer *) {$/;"	f	typeref:typename:void	file:	signature:(GtkWidget *,gpointer *)
messageBoxDialog	..\\scite\\gtk\\SciTEGTK.cxx	/^static GtkWidget *messageBoxDialog = 0;$/;"	v	typeref:typename:GtkWidget *	file:
messageBoxKey	..\\scite\\gtk\\SciTEGTK.cxx	/^static gint messageBoxKey(GtkWidget *w, GdkEventKey *event, gpointer p) {$/;"	f	typeref:typename:gint	file:	signature:(GtkWidget * w,GdkEventKey * event,gpointer p)
messageBoxOK	..\\scite\\gtk\\SciTEGTK.cxx	/^static void messageBoxOK(GtkWidget *, gpointer p) {$/;"	f	typeref:typename:void	file:	signature:(GtkWidget *,gpointer p)
messageBoxResult	..\\scite\\gtk\\SciTEGTK.cxx	/^static int messageBoxResult = 0;$/;"	v	typeref:typename:int	file:
metareg	..\\scintilla\\lua\\src\\lptree.c	/^static struct luaL_Reg metareg[] = {$/;"	v	typeref:struct:luaL_Reg[]	file:
metatable	..\\scintilla\\lua\\src\\lobject.h	/^    struct Table *metatable;$/;"	m	struct:Udata::__anonae4e9c5f0308	typeref:struct:Table *	access:public
metatable	..\\scintilla\\lua\\src\\lobject.h	/^  struct Table *metatable;$/;"	m	struct:Table	typeref:struct:Table *	access:public
methodNames	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def methodNames(f, options):$/;"	f	access:public	signature:(f, options)
methodSignature	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def methodSignature(name, v, options):$/;"	f	access:public	signature:(name, v, options)
mhList	..\\scintilla\\src\\PerLine.h	/^	std::forward_list<MarkerHandleNumber> mhList;$/;"	m	class:Scintilla::MarkerHandleSet	typeref:typename:std::forward_list<MarkerHandleNumber>	access:private
mid	..\\scintilla\\include\\Platform.h	/^	MenuID mid;$/;"	m	class:Scintilla::Menu	typeref:typename:MenuID	access:private
mid	..\\scite\\src\\GUI.h	/^	MenuID mid;$/;"	m	class:GUI::Menu	typeref:typename:MenuID	access:private
mimeFor	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^	QString mimeFor(QString flav) {$/;"	f	class:ScintillaRectangularMime	typeref:typename:QString	file:	access:public	signature:(QString flav)
min_expand	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *min_expand (MatchState *ms, const char *s,$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,const char * p,const char * ep)
minder	..\\scintilla\\src\\ExternalLexer.cxx	/^LMMinder minder;$/;"	v	typeref:typename:LMMinder
missing	..\\scite\\src\\SciTEBase.h	/^	std::string missing;$/;"	m	class:Localization	typeref:typename:std::string	access:private
mkfuncname	..\\scintilla\\lua\\src\\loadlib.c	/^static const char *mkfuncname (lua_State *L, const char *modname) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,const char * modname)
modEventMask	..\\scintilla\\src\\Editor.h	/^	int modEventMask;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
modalParameters	..\\scite\\win32\\SciTEWin.h	/^	bool modalParameters;$/;"	m	class:SciTEWin	typeref:typename:bool	access:protected
modificationType	..\\scintilla\\include\\Scintilla.h	/^	int modificationType;	\/* SCN_MODIFIED *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
modificationType	..\\scintilla\\src\\Document.h	/^	int modificationType;$/;"	m	class:Scintilla::DocModification	typeref:typename:int	access:public
modifierTranslated	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static int modifierTranslated(int sciModifier) {$/;"	f	typeref:typename:int	file:	signature:(int sciModifier)
modifierTranslated	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^static int modifierTranslated(int sciModifier)$/;"	f	typeref:typename:int	file:	signature:(int sciModifier)
modifiers	..\\scintilla\\include\\Scintilla.h	/^	int modifiers;$/;"	m	struct:SCNotification	typeref:typename:int	access:public
modifiers	..\\scintilla\\src\\KeyMap.h	/^	int modifiers;$/;"	m	class:Scintilla::KeyModifiers	typeref:typename:int	access:public
modifiers	..\\scintilla\\src\\KeyMap.h	/^	int modifiers;$/;"	m	class:Scintilla::KeyToCommand	typeref:typename:int	access:public
modifiers	..\\scite\\gtk\\SciTEGTK.cxx	/^	int modifiers;$/;"	m	class:KeyToCommand	typeref:typename:int	file:	access:public
modifyFunctionElement	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^modifyFunctionElement = """		<modify-function signature="%s">%s$/;"	v	access:public
modinit	..\\scintilla\\lua\\src\\loadlib.c	/^static void modinit (lua_State *L, const char *modname) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * modname)
module	..\\scintilla\\lexlib\\LexerSimple.h	/^	const LexerModule *module;$/;"	m	class:Scintilla::LexerSimple	typeref:typename:const LexerModule *	access:private
moduleName	..\\scintilla\\src\\ExternalLexer.h	/^	std::string moduleName;$/;"	m	class:Scintilla::LexerLibrary	typeref:typename:std::string	access:public
modules	..\\scintilla\\src\\ExternalLexer.h	/^	std::vector<std::unique_ptr<ExternalLexerModule>> modules;$/;"	m	class:Scintilla::LexerLibrary	typeref:typename:std::vector<std::unique_ptr<ExternalLexerModule>>	access:private
modulus	..\\scite\\src\\Credits.cxx	/^	int modulus;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:private
mouseDoubleClickEvent	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListWidget::mouseDoubleClickEvent(QMouseEvent * \/* event *\/)$/;"	f	class:Scintilla::ListWidget	typeref:typename:void	signature:(QMouseEvent *)
mouseDoubleClickEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::mouseDoubleClickEvent(QMouseEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QMouseEvent * event)
mouseDownCaptures	..\\scintilla\\src\\Editor.h	/^	bool mouseDownCaptures;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
mouseMoveEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::mouseMoveEvent(QMouseEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QMouseEvent * event)
mousePressEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::mousePressEvent(QMouseEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QMouseEvent * event)
mouseReleaseEvent	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListWidget::mouseReleaseEvent(QMouseEvent * \/* event *\/)$/;"	f	class:Scintilla::ListWidget	typeref:typename:void	signature:(QMouseEvent *)
mouseReleaseEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::mouseReleaseEvent(QMouseEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QMouseEvent * event)
mouseSelectionRectangularSwitch	..\\scintilla\\src\\Editor.h	/^	bool mouseSelectionRectangularSwitch;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
mouseWheelCaptures	..\\scintilla\\src\\Editor.h	/^	bool mouseWheelCaptures;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
moveExtends	..\\scintilla\\src\\Selection.h	/^	bool moveExtends;$/;"	m	class:Scintilla::Selection	typeref:typename:bool	access:private
move_position_outside_char	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::move_position_outside_char(int pos, int move_dir, bool check_line_end) {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:(int pos,int move_dir,bool check_line_end)
ms	..\\scintilla\\src\\ViewStyle.h	/^	std::vector<MarginStyle> ms;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:std::vector<MarginStyle>	access:public
msg	..\\scintilla\\src\\KeyMap.h	/^	unsigned int msg;$/;"	m	class:Scintilla::KeyToCommand	typeref:typename:unsigned int	access:public
msg	..\\scite\\gtk\\SciTEGTK.cxx	/^	int msg;$/;"	m	class:KeyToCommand	typeref:typename:int	file:	access:public
mt	..\\scintilla\\lua\\src\\lstate.h	/^  struct Table *mt[NUM_TAGS];  \/* metatables for basic types *\/$/;"	m	struct:global_State	typeref:struct:Table * []	access:public
mult	..\\scite\\src\\Credits.cxx	/^	int mult;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:private
multiAutoCMode	..\\scintilla\\src\\ScintillaBase.h	/^	int multiAutoCMode; \/\/\/ Mode for autocompleting when multiple selections are present$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:int	access:protected
multiByteAccess	..\\scintilla\\lexlib\\StyleContext.h	/^	IDocumentWithLineEnd *multiByteAccess;$/;"	m	class:Scintilla::StyleContext	typeref:typename:IDocumentWithLineEnd *	access:private
multiPasteMode	..\\scintilla\\src\\Editor.h	/^	int multiPasteMode;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
multipleSelection	..\\scintilla\\src\\Editor.h	/^	bool multipleSelection;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
multipleStyles	..\\scintilla\\src\\Document.h	/^	bool multipleStyles;$/;"	m	struct:Scintilla::StyledText	typeref:typename:bool	access:public
mute	..\\scite\\src\\Mutex.h	/^	Mutex *mute;$/;"	m	class:Lock	typeref:typename:Mutex *	access:private
mutex	..\\scite\\src\\JobQueue.h	/^	Mutex *mutex;$/;"	m	class:JobQueue	typeref:typename:Mutex *	access:public
mutex	..\\scite\\src\\Worker.h	/^	Mutex *mutex;$/;"	m	struct:Worker	typeref:typename:Mutex *	access:private
mutex	..\\scite\\win32\\UniqueInstance.h	/^	HANDLE mutex;	\/\/\/< Mutex to avoid concurrent running$/;"	m	class:UniqueInstance	typeref:typename:HANDLE	access:private
mutexName	..\\scite\\win32\\UniqueInstance.h	/^	std::wstring mutexName;	\/\/\/< Name of the above$/;"	m	class:UniqueInstance	typeref:typename:std::wstring	access:private
n	..\\scintilla\\lua\\src\\lobject.h	/^  lua_Number n;$/;"	m	union:__anonae4e9c5f010a	typeref:typename:lua_Number	access:public
n	..\\scintilla\\lua\\src\\lptree.h	/^    int n;  \/* occasional counter *\/$/;"	m	union:TTree::__anond9e754e8010a	typeref:typename:int	access:public
n	..\\scintilla\\lua\\src\\lzio.h	/^  size_t n;			\/* bytes still unread *\/$/;"	m	struct:Zio	typeref:typename:size_t	access:public
n	..\\scintilla\\lua\\src\\lzio.h	/^  size_t n;$/;"	m	struct:Mbuffer	typeref:typename:size_t	access:public
nCcalls	..\\scintilla\\lua\\src\\lstate.h	/^  unsigned short nCcalls;  \/* number of nested C calls *\/$/;"	m	struct:lua_State	typeref:typename:unsigned short	access:public
nClasses	..\\scintilla\\lexlib\\DefaultLexer.h	/^	size_t nClasses;$/;"	m	class:Scintilla::DefaultLexer	typeref:typename:size_t	access:private
nClasses	..\\scintilla\\lexlib\\LexerBase.h	/^	size_t nClasses;$/;"	m	class:Scintilla::LexerBase	typeref:typename:size_t	access:protected
nClasses	..\\scintilla\\lexlib\\LexerModule.h	/^	size_t nClasses;$/;"	m	class:Scintilla::LexerModule	typeref:typename:size_t	access:protected
nClipboardCopyTargets	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static const gint nClipboardCopyTargets = ELEMENTS(clipboardCopyTargets);$/;"	v	typeref:typename:const gint	file:
nClipboardPasteTargets	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static const gint nClipboardPasteTargets = ELEMENTS(clipboardPasteTargets);$/;"	v	typeref:typename:const gint	file:
nColours	..\\scintilla\\src\\XPM.h	/^	int nColours;$/;"	m	class:Scintilla::XPM	typeref:typename:int	access:private
nHashValue	..\\scite\\src\\Containers.h	/^		unsigned int nHashValue;  \/\/ needed for efficient iteration$/;"	m	struct:TMap::Association	typeref:typename:unsigned int	access:public
nRanges	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^const int nRanges = ELEMENTS(catRanges);$/;"	v	namespace:Scintilla::__anonf0c5a84c0111	typeref:typename:const int
na	..\\scintilla\\lua\\src\\lparser.c	/^  int na;  \/* total number of array elements *\/$/;"	m	struct:ConsControl	typeref:typename:int	file:	access:public
nactvar	..\\scintilla\\lua\\src\\lparser.c	/^  lu_byte nactvar;  \/* # active locals outside the breakable structure *\/$/;"	m	struct:BlockCnt	typeref:typename:lu_byte	file:	access:public
nactvar	..\\scintilla\\lua\\src\\lparser.h	/^  lu_byte nactvar;  \/* number of active local variables *\/$/;"	m	struct:FuncState	typeref:typename:lu_byte	access:public
name	..\\scintilla\\lexlib\\LexAccessor.h	/^	const char *name;$/;"	m	struct:Scintilla::LexicalClass	typeref:typename:const char *	access:public
name	..\\scintilla\\lua\\src\\lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	typeref:typename:const char *	access:public
name	..\\scintilla\\lua\\src\\ldo.c	/^  const char *name;$/;"	m	struct:SParser	typeref:typename:const char *	file:	access:public
name	..\\scintilla\\lua\\src\\lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
name	..\\scintilla\\lua\\src\\lundump.c	/^ const char* name;$/;"	m	struct:__anonc6bc71bc0108	typeref:typename:const char *	file:	access:public
name	..\\scintilla\\src\\ExternalLexer.h	/^	std::string name;$/;"	m	class:Scintilla::ExternalLexerModule	typeref:typename:std::string	access:protected
name	..\\scite\\gtk\\DirectorExtension.cxx	/^	char *name;$/;"	m	struct:PipeEntry	typeref:typename:char *	file:	access:public
name	..\\scite\\lua\\include\\lauxlib.h	/^  const char *name;$/;"	m	struct:luaL_Reg	typeref:typename:const char *	access:public
name	..\\scite\\lua\\include\\lua.h	/^  const char *name;	\/* (n) *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
name	..\\scite\\src\\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceConstant	typeref:typename:const char *	access:public
name	..\\scite\\src\\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceFunction	typeref:typename:const char *	access:public
name	..\\scite\\src\\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceObject	typeref:typename:const char *	access:public
name	..\\scite\\src\\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceProperty	typeref:typename:const char *	access:public
name	..\\scite\\src\\StyleDefinition.cxx	/^		const char *name;$/;"	m	struct:IndicatorDefinition::ParseIndicatorDefinition::__anon3a004e980108	typeref:typename:const char *	file:	access:public
name	..\\scite\\win32\\SciTEWin.cxx	/^		const char *name;$/;"	m	struct:CodePageFromName::Encoding	typeref:typename:const char *	file:	access:public
nameOKSrc	..\\scite\\scripts\\CheckPropsDoc.py	/^def nameOKSrc(src):$/;"	f	access:public	signature:(src)
nameToDef	..\\scintilla\\lexlib\\OptionSet.h	/^	OptionMap nameToDef;$/;"	m	class:Scintilla::OptionSet	typeref:typename:OptionMap	access:private
names	..\\scintilla\\lexlib\\OptionSet.h	/^	std::string names;$/;"	m	class:Scintilla::OptionSet	typeref:typename:std::string	access:private
names	..\\scintilla\\src\\ViewStyle.h	/^	std::vector<UniqueString> names;$/;"	m	class:Scintilla::FontNames	typeref:typename:std::vector<UniqueString>	access:private
namewhat	..\\scintilla\\lua\\src\\lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
namewhat	..\\scite\\lua\\include\\lua.h	/^  const char *namewhat;	\/* (n) `global', `local', `field', `method' *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
ncode	..\\scintilla\\lua\\src\\lpcode.c	/^  int ncode;  \/* next position in p->code to be filled *\/$/;"	m	struct:CompileState	typeref:typename:int	file:	access:public
needIdle	..\\scite\\src\\SciTEBase.h	/^	bool needIdle;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
needIdleStyling	..\\scintilla\\src\\Editor.h	/^	bool needIdleStyling;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
needReadProperties	..\\scite\\src\\SciTEBase.h	/^	bool needReadProperties;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
needUpdateUI	..\\scintilla\\src\\Editor.h	/^	int needUpdateUI;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
need_value	..\\scintilla\\lua\\src\\lcode.c	/^static int need_value (FuncState *fs, int list) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,int list)
needfollow	..\\scintilla\\lua\\src\\lpcode.c	/^static int needfollow (TTree *tree) {$/;"	f	typeref:typename:int	file:	signature:(TTree * tree)
new_localvar	..\\scintilla\\lua\\src\\lparser.c	/^static void new_localvar (LexState *ls, TString *name, int n) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,TString * name,int n)
new_localvarliteral	..\\scintilla\\lua\\src\\lparser.c	/^#define new_localvarliteral(/;"	d	file:	signature:(ls,v,n)
newcharset	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newcharset (lua_State *L) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L)
newemptycap	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newemptycap (lua_State *L, int cap, int idx) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int cap,int idx)
newfenv	..\\scintilla\\lua\\src\\liolib.c	/^static void newfenv (lua_State *L, lua_CFunction cls) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,lua_CFunction cls)
newfile	..\\scintilla\\lua\\src\\liolib.c	/^static FILE **newfile (lua_State *L) {$/;"	f	typeref:typename:FILE **	file:	signature:(lua_State * L)
newgrammar	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newgrammar (lua_State *L, int arg) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int arg)
newkey	..\\scintilla\\lua\\src\\ltable.c	/^static TValue *newkey (lua_State *L, Table *t, const TValue *key) {$/;"	f	typeref:typename:TValue *	file:	signature:(lua_State * L,Table * t,const TValue * key)
newleaf	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newleaf (lua_State *L, int tag) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int tag)
newlstr	..\\scintilla\\lua\\src\\lstring.c	/^static TString *newlstr (lua_State *L, const char *str, size_t l,$/;"	f	typeref:typename:TString *	file:	signature:(lua_State * L,const char * str,size_t l,unsigned int h)
newroot1sib	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newroot1sib (lua_State *L, int tag) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int tag)
newroot2sib	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newroot2sib (lua_State *L, int tag) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int tag)
newtree	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *newtree (lua_State *L, int len) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int len)
next	..\\scintilla\\lua\\src\\llex.c	/^#define next(/;"	d	file:	signature:(ls)
next	..\\scintilla\\lua\\src\\lobject.h	/^      struct UpVal *next;$/;"	m	struct:UpVal::__anonae4e9c5f040a::__anonae4e9c5f0508	typeref:struct:UpVal *	access:public
next	..\\scintilla\\lua\\src\\lobject.h	/^    struct Node *next;  \/* for chaining *\/$/;"	m	struct:TKey::__anonae4e9c5f0608	typeref:struct:Node *	access:public
next	..\\scintilla\\win32\\PlatWin.cxx	/^	FontCached *next;$/;"	m	class:Scintilla::FontCached	typeref:typename:FontCached *	file:	access:private
next	..\\scite\\gtk\\Widget.h	/^	int next;$/;"	m	class:WTable	typeref:typename:int	access:private
nextBreak	..\\scintilla\\src\\PositionCache.h	/^	int nextBreak;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:int	access:private
nextExtendedStyle	..\\scintilla\\src\\ViewStyle.h	/^	size_t nextExtendedStyle;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:size_t	access:public
nextLanguage	..\\scintilla\\src\\Catalogue.cxx	/^static int nextLanguage = SCLEX_AUTOMATIC+1;$/;"	v	typeref:typename:int	file:
nextLine	..\\scite\\src\\ExportPDF.cxx	/^		void nextLine() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:()
nextProgress	..\\scite\\src\\FileWorker.h	/^	double nextProgress;$/;"	m	struct:FileWorker	typeref:typename:double	access:public
next_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * next_xpm[] = {$/;"	v	typeref:typename:const char * []
nextcap	..\\scintilla\\lua\\src\\lpcap.c	/^static void nextcap (CapState *cs) {$/;"	f	typeref:typename:void	file:	signature:(CapState * cs)
nextinstruction	..\\scintilla\\lua\\src\\lpcode.c	/^static int nextinstruction (CompileState *compst) {$/;"	f	typeref:typename:int	file:	signature:(CompileState * compst)
nfa	..\\scintilla\\src\\RESearch.h	/^	char nfa[MAXNFA];    \/* automaton *\/$/;"	m	class:Scintilla::RESearch	typeref:typename:char[]	access:private
ngcotouv	..\\scintilla\\lua\\src\\lstate.h	/^#define ngcotouv(/;"	d	signature:(o)
nh	..\\scintilla\\lua\\src\\lparser.c	/^  int nh;  \/* total number of `record' elements *\/$/;"	m	struct:ConsControl	typeref:typename:int	file:	access:public
nilK	..\\scintilla\\lua\\src\\lcode.c	/^static int nilK (FuncState *fs) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs)
nk	..\\scintilla\\lua\\src\\lobject.h	/^  } nk;$/;"	m	union:TKey	typeref:struct:TKey::__anonae4e9c5f0608	access:public
nk	..\\scintilla\\lua\\src\\lparser.h	/^  int nk;  \/* number of elements in `k' *\/$/;"	m	struct:FuncState	typeref:typename:int	access:public
nlocvars	..\\scintilla\\lua\\src\\lparser.h	/^  short nlocvars;  \/* number of elements in `locvars' *\/$/;"	m	struct:FuncState	typeref:typename:short	access:public
nmhdr	..\\scintilla\\include\\Scintilla.h	/^	Sci_NotifyHeader nmhdr;$/;"	m	struct:SCNotification	typeref:typename:Sci_NotifyHeader	access:public
noDelay	..\\scite\\src\\SciTEBase.h	/^		noDelay,            \/\/ No delay, and no word at the caret.$/;"	e	enum:CurrentWordHighlight::__anonf95580a60603	access:public
noSel	..\\scintilla\\src\\Selection.h	/^	enum selTypes { noSel, selStream, selRectangle, selLines, selThin };$/;"	e	enum:Scintilla::Selection::selTypes	access:public
node	..\\scintilla\\lua\\src\\lobject.h	/^  Node *node;$/;"	m	struct:Table	typeref:typename:Node *	access:public
nofail	..\\scintilla\\lua\\src\\lpcode.h	/^#define nofail(/;"	d	signature:(t)
nonScriptableTypes	..\\scite\\scripts\\IFaceTableGen.py	/^nonScriptableTypes = ["cells", "textrange", "findtext", "formatrange"]$/;"	v	access:public
normalisedName	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def normalisedName(s, options, role=None):$/;"	f	access:public	signature:(s, options, role=None)
notPainting	..\\scintilla\\src\\Editor.h	/^	enum { notPainting, painting, paintAbandoned } paintState;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450603	access:public
not_empty	..\\scite\\gtk\\DirectorExtension.cxx	/^static bool not_empty(const char *s) {$/;"	f	typeref:typename:bool	file:	signature:(const char * s)
notail	..\\scintilla\\lua\\src\\lua.c	/^#define notail(/;"	d	file:	signature:(x)
notify	..\\scintilla\\include\\ScintillaWidget.h	/^	void (* notify) (ScintillaObject *sci, int id, SCNotification *scn);$/;"	m	struct:_ScintillaClass	typeref:typename:void (*)(ScintillaObject * sci,int id,SCNotification * scn)	access:public
notifyObj	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  intptr_t notifyObj;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:intptr_t	access:private
notifyParent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::notifyParent(SCNotification scn)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(SCNotification scn)
notifyProc	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  SciNotifyFunc	notifyProc;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:SciNotifyFunc	access:private
np	..\\scintilla\\lua\\src\\lparser.h	/^  int np;  \/* number of elements in `p' *\/$/;"	m	struct:FuncState	typeref:typename:int	access:public
nresults	..\\scintilla\\lua\\src\\lapi.c	/^  int nresults;$/;"	m	struct:CallS	typeref:typename:int	file:	access:public
nresults	..\\scintilla\\lua\\src\\lstate.h	/^  int nresults;  \/* expected number of results from this function *\/$/;"	m	struct:CallInfo	typeref:typename:int	access:public
nullable	..\\scintilla\\lua\\src\\lpcode.h	/^#define nullable(/;"	d	signature:(t)
numCharsBeforeEOL	..\\scintilla\\src\\PositionCache.h	/^	int numCharsBeforeEOL;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
numCharsInLine	..\\scintilla\\src\\PositionCache.h	/^	int numCharsInLine;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
numWordLists	..\\scintilla\\lexlib\\LexerBase.h	/^	enum {numWordLists=KEYWORDSET_MAX+1};$/;"	e	enum:Scintilla::LexerBase::__anon7bc08eb10103	access:public
number	..\\scintilla\\src\\PerLine.h	/^	int number;$/;"	m	struct:Scintilla::MarkerHandleNumber	typeref:typename:int	access:public
numcap	..\\scintilla\\lua\\src\\lpcap.c	/^static int numcap (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
numints	..\\scintilla\\lua\\src\\ltable.c	/^#define numints	/;"	d	file:
numparams	..\\scintilla\\lua\\src\\lobject.h	/^  lu_byte numparams;$/;"	m	struct:Proto	typeref:typename:lu_byte	access:public
numsiblings	..\\scintilla\\lua\\src\\lptree.c	/^const byte numsiblings[] = {$/;"	v	typeref:typename:const byte[]
numtree	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *numtree (lua_State *L, int n) {$/;"	f	typeref:typename:TTree *	file:	signature:(lua_State * L,int n)
numusearray	..\\scintilla\\lua\\src\\ltable.c	/^static int numusearray (const Table *t, int *nums) {$/;"	f	typeref:typename:int	file:	signature:(const Table * t,int * nums)
numusehash	..\\scintilla\\lua\\src\\ltable.c	/^static int numusehash (const Table *t, int *nums, int *pnasize) {$/;"	f	typeref:typename:int	file:	signature:(const Table * t,int * nums,int * pnasize)
nups	..\\scintilla\\lua\\src\\lobject.h	/^  lu_byte nups;  \/* number of upvalues *\/$/;"	m	struct:Proto	typeref:typename:lu_byte	access:public
nups	..\\scintilla\\lua\\src\\lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
nups	..\\scite\\lua\\include\\lua.h	/^  int nups;		\/* (u) number of upvalues *\/$/;"	m	struct:lua_Debug	typeref:typename:int	access:public
nuse	..\\scintilla\\lua\\src\\lstate.h	/^  lu_int32 nuse;  \/* number of elements *\/$/;"	m	struct:stringtable	typeref:typename:lu_int32	access:public
nval	..\\scintilla\\lua\\src\\lparser.h	/^    lua_Number nval;$/;"	m	union:expdesc::__anon613de0d5020a	typeref:typename:lua_Number	access:public
nvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define nvalue(/;"	d	signature:(o)
oT	..\\scite\\src\\ExportPDF.cxx	/^		PDFObjectTracker *oT;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:PDFObjectTracker *	file:	access:public
obj2gco	..\\scintilla\\lua\\src\\lstate.h	/^#define obj2gco(/;"	d	signature:(v)
observer	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  CFRunLoopObserverRef observer;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:CFRunLoopObserverRef	access:private
ocCompleteCurrent	..\\scite\\src\\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	e	enum:SciTEBase::OpenCompletion	access:public
ocCompleteSwitch	..\\scite\\src\\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	e	enum:SciTEBase::OpenCompletion	access:public
ocSynchronous	..\\scite\\src\\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	e	enum:SciTEBase::OpenCompletion	access:public
ocap	..\\scintilla\\lua\\src\\lpcap.h	/^  Capture *ocap;  \/* (original) capture list *\/$/;"	m	struct:CapState	typeref:typename:Capture *	access:public
ofForceLoad	..\\scite\\src\\SciTEBase.h	/^	    ofForceLoad = 2,	\/\/ Reload file even if already in a buffer$/;"	e	enum:SciTEBase::OpenFlags	access:public
ofNoSaveIfDirty	..\\scite\\src\\SciTEBase.h	/^	    ofNoSaveIfDirty = 1, 	\/\/ Suppress check for unsaved changes$/;"	e	enum:SciTEBase::OpenFlags	access:public
ofNone	..\\scite\\src\\SciTEBase.h	/^	    ofNone = 0, 		\/\/ Default$/;"	e	enum:SciTEBase::OpenFlags	access:public
ofPreserveUndo	..\\scite\\src\\SciTEBase.h	/^	    ofPreserveUndo = 4,	\/\/ Do not delete undo history$/;"	e	enum:SciTEBase::OpenFlags	access:public
ofQuiet	..\\scite\\src\\SciTEBase.h	/^	    ofQuiet = 8,		\/\/ Avoid "Could not open file" message$/;"	e	enum:SciTEBase::OpenFlags	access:public
ofSynchronous	..\\scite\\src\\SciTEBase.h	/^	    ofSynchronous = 16	\/\/ Force synchronous read$/;"	e	enum:SciTEBase::OpenFlags	access:public
offset	..\\scintilla\\lua\\src\\lpvm.h	/^  int offset;$/;"	m	union:Instruction	typeref:typename:int	access:public
offsetList	..\\scite\\src\\ExportPDF.cxx	/^		long *offsetList, tableSize;$/;"	m	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:long *	file:	access:private
offsetMain	..\\scintilla\\src\\CallTip.h	/^	int offsetMain;         \/\/ The alignment point of the call tip$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:private
offsetRelative	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position offsetRelative;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:private
oidContinue	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^enum class OtherID { oidNone, oidStart, oidContinue };$/;"	e	enum:Scintilla::__anonf0c5a84c0211::OtherID	file:	access:public
oidNone	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^enum class OtherID { oidNone, oidStart, oidContinue };$/;"	e	enum:Scintilla::__anonf0c5a84c0211::OtherID	file:	access:public
oidStart	..\\scintilla\\lexlib\\CharacterCategory.cxx	/^enum class OtherID { oidNone, oidStart, oidContinue };$/;"	e	enum:Scintilla::__anonf0c5a84c0211::OtherID	file:	access:public
oldToolbarBitmapID	..\\scite\\win32\\SciTEWin.h	/^	UINT oldToolbarBitmapID;$/;"	m	class:SciTEWin	typeref:typename:UINT	access:protected
old_pos	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	Sci::Position old_pos;$/;"	m	class:Scintilla::ScintillaGTKAccessible	typeref:typename:Sci::Position	access:private
old_sels	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	std::vector<SelectionRange> old_sels;$/;"	m	class:Scintilla::ScintillaGTKAccessible	typeref:typename:std::vector<SelectionRange>	access:private
on	..\\scintilla\\src\\EditModel.h	/^	bool on;$/;"	m	class:Scintilla::Caret	typeref:typename:bool	access:public
onIdle	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::onIdle()$/;"	f	class:ScintillaQt	typeref:typename:void	signature:()
onlyLineEnds	..\\scintilla\\lexlib\\WordList.h	/^	bool onlyLineEnds;	\/\/\/< Delimited by any white space or only line ends$/;"	m	class:Scintilla::WordList	typeref:typename:bool	access:private
onlyLineEnds	..\\scite\\src\\StringList.h	/^	bool onlyLineEnds;	\/\/\/< Delimited by any white space or only line ends$/;"	m	class:StringList	typeref:typename:bool	access:private
opType	..\\scintilla\\lexlib\\OptionSet.h	/^		int opType;$/;"	m	struct:Scintilla::OptionSet::Option	typeref:typename:int	access:public
open	..\\scite\\src\\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anonf95580a60203	access:public
openFilesHere	..\\scite\\src\\SciTEBase.h	/^	bool openFilesHere;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
openWhat	..\\scite\\win32\\SciTEWin.h	/^	GUI::gui_char openWhat[200];$/;"	m	class:SciTEWin	typeref:typename:GUI::gui_char[200]	access:protected
open_func	..\\scintilla\\lua\\src\\lparser.c	/^static void open_func (LexState *ls, FuncState *fs) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,FuncState * fs)
openupval	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *openupval;  \/* list of open upvalues in this stack *\/$/;"	m	struct:lua_State	typeref:typename:GCObject *	access:public
operator !=	..\\scintilla\\lexlib\\WordList.cxx	/^bool WordList::operator!=(const WordList &other) const {$/;"	f	class:WordList	typeref:typename:bool	signature:(const WordList & other) const
operator !=	..\\scintilla\\src\\Document.cxx	/^	bool operator!=(const ByteIterator &other) const {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:bool	file:	access:public	signature:(const ByteIterator & other) const
operator !=	..\\scintilla\\src\\Document.cxx	/^	bool operator!=(const UTF8Iterator &other) const {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:bool	file:	access:public	signature:(const UTF8Iterator & other) const
operator ()	..\\scintilla\\src\\AutoComplete.cxx	/^	bool operator()(int a, int b) {$/;"	f	struct:Sorter	typeref:typename:bool	file:	access:public	signature:(int a,int b)
operator ()	..\\scite\\src\\StringList.cxx	/^	bool operator()(const char *a, const char *b) const {$/;"	f	struct:__anon6836dfd10111::CompareString	typeref:typename:bool	file:	access:public	signature:(const char * a,const char * b) const
operator ()	..\\scite\\src\\StringList.cxx	/^	bool operator()(const char *a, const char *b) const {$/;"	f	struct:__anon6836dfd10111::CompareStringInsensitive	typeref:typename:bool	file:	access:public	signature:(const char * a,const char * b) const
operator *	..\\scintilla\\src\\Document.cxx	/^	char operator*() const {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:char	file:	access:public	signature:() const
operator *	..\\scintilla\\src\\Document.cxx	/^	wchar_t operator*() const {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:wchar_t	file:	access:public	signature:() const
operator ++	..\\scintilla\\src\\Document.cxx	/^	ByteIterator &operator++() {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:ByteIterator &	file:	access:public	signature:()
operator ++	..\\scintilla\\src\\Document.cxx	/^	ByteIterator operator++(int) {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:ByteIterator	file:	access:public	signature:(int)
operator ++	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator &operator++() {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:UTF8Iterator &	file:	access:public	signature:()
operator ++	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator operator++(int) {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:UTF8Iterator	file:	access:public	signature:(int)
operator ++	..\\scite\\src\\Utf8_16.cxx	/^void Utf16_Iter::operator++() {$/;"	f	class:Utf16_Iter	typeref:typename:void	signature:()
operator ++	..\\scite\\src\\Utf8_16.cxx	/^void Utf8_Iter::operator++() {$/;"	f	class:Utf8_Iter	typeref:typename:void	signature:()
operator --	..\\scintilla\\src\\Document.cxx	/^	ByteIterator &operator--() {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:ByteIterator &	file:	access:public	signature:()
operator --	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator &operator--() {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:UTF8Iterator &	file:	access:public	signature:()
operator ->	..\\scintilla\\src\\EditView.h	/^	LineLayout *operator->() const {$/;"	f	class:Scintilla::AutoLineLayout	typeref:typename:LineLayout *	access:public	signature:() const
operator ->	..\\scintilla\\src\\Editor.h	/^	Surface *operator->() const {$/;"	f	class:Scintilla::AutoSurface	typeref:typename:Surface *	access:public	signature:() const
operator <	..\\scintilla\\lexlib\\SparseState.h	/^		inline bool operator<(const State &other) const {$/;"	f	struct:Scintilla::SparseState::State	typeref:typename:bool	access:public	signature:(const State & other) const
operator <	..\\scintilla\\src\\CaseConvert.cxx	/^		bool operator<(const CharacterConversion &other) const {$/;"	f	struct:__anon1fb76d660111::CaseConverter::CharacterConversion	typeref:typename:bool	file:	access:public	signature:(const CharacterConversion & other) const
operator <	..\\scintilla\\src\\KeyMap.h	/^	bool operator<(const KeyModifiers &other) const {$/;"	f	class:Scintilla::KeyModifiers	typeref:typename:bool	access:public	signature:(const KeyModifiers & other) const
operator <	..\\scintilla\\src\\Selection.cxx	/^bool SelectionPosition::operator <(const SelectionPosition &other) const {$/;"	f	class:SelectionPosition	typeref:typename:bool	signature:(const SelectionPosition & other) const
operator <	..\\scintilla\\src\\Selection.h	/^	bool operator <(const SelectionRange &other) const {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:bool	access:public	signature:(const SelectionRange & other) const
operator <	..\\scintilla\\src\\Style.cxx	/^bool FontSpecification::operator<(const FontSpecification &other) const {$/;"	f	class:FontSpecification	typeref:typename:bool	signature:(const FontSpecification & other) const
operator <	..\\scite\\src\\FilePath.cxx	/^bool FilePath::operator<(const FilePath &other) const {$/;"	f	class:FilePath	typeref:typename:bool	signature:(const FilePath & other) const
operator <=	..\\scintilla\\src\\Selection.cxx	/^bool SelectionPosition::operator <=(const SelectionPosition &other) const {$/;"	f	class:SelectionPosition	typeref:typename:bool	signature:(const SelectionPosition & other) const
operator =	..\\scintilla\\include\\Platform.h	/^	Platform &operator=(const Platform &) { return *this; }$/;"	f	class:Scintilla::Platform	typeref:typename:Platform &	access:private	signature:(const Platform &)
operator =	..\\scintilla\\include\\Platform.h	/^	Surface &operator=(const Surface &) { return *this; }$/;"	f	class:Scintilla::Surface	typeref:typename:Surface &	access:private	signature:(const Surface &)
operator =	..\\scintilla\\include\\Platform.h	/^	Window &operator=(WindowID wid_) {$/;"	f	class:Scintilla::Window	typeref:typename:Window &	access:public	signature:(WindowID wid_)
operator =	..\\scintilla\\include\\Platform.h	/^	Window &operator=(const Window &other) {$/;"	f	class:Scintilla::Window	typeref:typename:Window &	access:public	signature:(const Window & other)
operator =	..\\scintilla\\lexlib\\CharacterSet.h	/^	CharacterSet &operator=(CharacterSet &&other) {$/;"	f	class:Scintilla::CharacterSet	typeref:typename:CharacterSet &	access:public	signature:(CharacterSet && other)
operator =	..\\scintilla\\lexlib\\CharacterSet.h	/^	CharacterSet &operator=(const CharacterSet &other) {$/;"	f	class:Scintilla::CharacterSet	typeref:typename:CharacterSet &	access:public	signature:(const CharacterSet & other)
operator =	..\\scintilla\\src\\Document.cxx	/^	ByteIterator &operator=(const ByteIterator &other) {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:ByteIterator &	file:	access:public	signature:(const ByteIterator & other)
operator =	..\\scintilla\\src\\Document.cxx	/^	UTF8Iterator &operator=(const UTF8Iterator &other) {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:UTF8Iterator &	file:	access:public	signature:(const UTF8Iterator & other)
operator =	..\\scintilla\\src\\LineMarker.cxx	/^LineMarker &LineMarker::operator=(const LineMarker &other) {$/;"	f	class:LineMarker	typeref:typename:LineMarker &	signature:(const LineMarker & other)
operator =	..\\scintilla\\src\\Style.cxx	/^Style &Style::operator=(const Style &source) {$/;"	f	class:Style	typeref:typename:Style &	signature:(const Style & source)
operator =	..\\scite\\src\\GUI.h	/^	Window &operator=(WindowID wid_) {$/;"	f	class:GUI::Window	typeref:typename:Window &	access:public	signature:(WindowID wid_)
operator =	..\\scite\\src\\PropSetFile.cxx	/^PropSetFile &PropSetFile::operator=(const PropSetFile &assign) {$/;"	f	class:PropSetFile	typeref:typename:PropSetFile &	signature:(const PropSetFile & assign)
operator ==	..\\scintilla\\include\\Platform.h	/^	bool operator==(const ColourDesired &other) const {$/;"	f	class:Scintilla::ColourDesired	typeref:typename:bool	access:public	signature:(const ColourDesired & other) const
operator ==	..\\scintilla\\include\\Platform.h	/^	bool operator==(const PRectangle &rc) const {$/;"	f	class:Scintilla::PRectangle	typeref:typename:bool	access:public	signature:(const PRectangle & rc) const
operator ==	..\\scintilla\\lexlib\\SparseState.h	/^		inline bool operator==(const State &other) const {$/;"	f	struct:Scintilla::SparseState::State	typeref:typename:bool	access:public	signature:(const State & other) const
operator ==	..\\scintilla\\src\\Document.cxx	/^	bool operator==(const ByteIterator &other) const {$/;"	f	class:__anon1ef09aa80111::ByteIterator	typeref:typename:bool	file:	access:public	signature:(const ByteIterator & other) const
operator ==	..\\scintilla\\src\\Document.cxx	/^	bool operator==(const UTF8Iterator &other) const {$/;"	f	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:bool	file:	access:public	signature:(const UTF8Iterator & other) const
operator ==	..\\scintilla\\src\\Document.h	/^		bool operator==(const WatcherWithUserData &other) const {$/;"	f	struct:Scintilla::Document::WatcherWithUserData	typeref:typename:bool	access:public	signature:(const WatcherWithUserData & other) const
operator ==	..\\scintilla\\src\\Document.h	/^	bool operator==(const Range &other) const {$/;"	f	class:Scintilla::Range	typeref:typename:bool	access:public	signature:(const Range & other) const
operator ==	..\\scintilla\\src\\Editor.h	/^		bool operator==(const XYScrollPosition &other) const {$/;"	f	struct:Scintilla::Editor::XYScrollPosition	typeref:typename:bool	access:public	signature:(const XYScrollPosition & other) const
operator ==	..\\scintilla\\src\\Indicator.h	/^	bool operator==(const StyleAndColour &other) const {$/;"	f	struct:Scintilla::StyleAndColour	typeref:typename:bool	access:public	signature:(const StyleAndColour & other) const
operator ==	..\\scintilla\\src\\Selection.h	/^	bool operator ==(const SelectionPosition &other) const {$/;"	f	class:Scintilla::SelectionPosition	typeref:typename:bool	access:public	signature:(const SelectionPosition & other) const
operator ==	..\\scintilla\\src\\Selection.h	/^	bool operator ==(const SelectionRange &other) const {$/;"	f	struct:Scintilla::SelectionRange	typeref:typename:bool	access:public	signature:(const SelectionRange & other) const
operator ==	..\\scintilla\\src\\Style.cxx	/^bool FontSpecification::operator==(const FontSpecification &other) const {$/;"	f	class:FontSpecification	typeref:typename:bool	signature:(const FontSpecification & other) const
operator ==	..\\scite\\src\\FilePath.cxx	/^bool FilePath::operator==(const FilePath &other) const {$/;"	f	class:FilePath	typeref:typename:bool	signature:(const FilePath & other) const
operator ==	..\\scite\\src\\GUI.h	/^	bool operator==(const Rectangle &other) const {$/;"	f	class:GUI::Rectangle	typeref:typename:bool	access:public	signature:(const Rectangle & other) const
operator >	..\\scintilla\\src\\Selection.cxx	/^bool SelectionPosition::operator >(const SelectionPosition &other) const {$/;"	f	class:SelectionPosition	typeref:typename:bool	signature:(const SelectionPosition & other) const
operator >=	..\\scintilla\\src\\Selection.cxx	/^bool SelectionPosition::operator >=(const SelectionPosition &other) const {$/;"	f	class:SelectionPosition	typeref:typename:bool	signature:(const SelectionPosition & other) const
operator GtkWidget*	..\\scite\\gtk\\Widget.cxx	/^WBase::operator GtkWidget*() const {$/;"	f	class:WBase	signature:() const
operator LineLayout*	..\\scintilla\\src\\EditView.h	/^	operator LineLayout *() const {$/;"	f	class:Scintilla::AutoLineLayout	access:public	signature:() const
operator Surface*	..\\scintilla\\src\\Editor.h	/^	operator Surface *() const {$/;"	f	class:Scintilla::AutoSurface	access:public	signature:() const
operator []	..\\scintilla\\lexlib\\LexAccessor.h	/^	char operator[](Sci_Position position) {$/;"	f	class:Scintilla::LexAccessor	typeref:typename:char	access:public	signature:(Sci_Position position)
operator []	..\\scintilla\\src\\SplitVector.h	/^	T &operator[](ptrdiff_t position) {$/;"	f	class:Scintilla::SplitVector	typeref:typename:T &	access:public	signature:(ptrdiff_t position)
operator []	..\\scintilla\\src\\SplitVector.h	/^	const T &operator[](ptrdiff_t position) const {$/;"	f	class:Scintilla::SplitVector	typeref:typename:const T &	access:public	signature:(ptrdiff_t position) const
operator []	..\\scite\\src\\Containers.h	/^	TYPE operator[](int nIndex) const {$/;"	f	class:TArray	typeref:typename:TYPE	access:public	signature:(int nIndex) const
operator []	..\\scite\\src\\Containers.h	/^	TYPE& operator[](int nIndex) {$/;"	f	class:TArray	typeref:typename:TYPE &	access:public	signature:(int nIndex)
operator []	..\\scite\\src\\Containers.h	/^	VALUE& operator[](ARG_KEY key) {$/;"	f	class:TMap	typeref:typename:VALUE &	access:public	signature:(ARG_KEY key)
operator []	..\\scite\\src\\StringList.h	/^	char *operator[](size_t ind) { return words[ind]; }$/;"	f	class:StringList	typeref:typename:char *	access:public	signature:(size_t ind)
operator []	..\\scite\\src\\StyleWriter.h	/^	char operator[](int position) {$/;"	f	class:TextReader	typeref:typename:char	access:public	signature:(int position)
opmode	..\\scintilla\\lua\\src\\lopcodes.c	/^#define opmode(/;"	d	file:	signature:(t,a,b,c,m)
originalAnchorPos	..\\scintilla\\src\\Editor.h	/^	Sci::Position originalAnchorPos;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
originalEnd	..\\scite\\gtk\\SciTEGTK.cxx	/^	int originalEnd;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
originalEnd	..\\scite\\win32\\SciTEWin.h	/^	int originalEnd;$/;"	m	class:CommandWorker	typeref:typename:int	access:public
os_clock	..\\scintilla\\lua\\src\\loslib.c	/^static int os_clock (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_date	..\\scintilla\\lua\\src\\loslib.c	/^static int os_date (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_difftime	..\\scintilla\\lua\\src\\loslib.c	/^static int os_difftime (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_execute	..\\scintilla\\lua\\src\\loslib.c	/^static int os_execute (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_exit	..\\scintilla\\lua\\src\\loslib.c	/^static int os_exit (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_getenv	..\\scintilla\\lua\\src\\loslib.c	/^static int os_getenv (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_pushresult	..\\scintilla\\lua\\src\\loslib.c	/^static int os_pushresult (lua_State *L, int i, const char *filename) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int i,const char * filename)
os_remove	..\\scintilla\\lua\\src\\loslib.c	/^static int os_remove (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_rename	..\\scintilla\\lua\\src\\loslib.c	/^static int os_rename (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_setlocale	..\\scintilla\\lua\\src\\loslib.c	/^static int os_setlocale (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_time	..\\scintilla\\lua\\src\\loslib.c	/^static int os_time (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
os_tmpname	..\\scintilla\\lua\\src\\loslib.c	/^static int os_tmpname (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
otherwhite	..\\scintilla\\lua\\src\\lgc.h	/^#define otherwhite(/;"	d	signature:(g)
outlineAlpha	..\\scintilla\\src\\Indicator.h	/^	int outlineAlpha;$/;"	m	class:Scintilla::Indicator	typeref:typename:int	access:public
outlineAlpha	..\\scite\\src\\StyleDefinition.h	/^	int outlineAlpha;$/;"	m	struct:IndicatorDefinition	typeref:typename:int	access:public
output	..\\scintilla\\lua\\src\\luac.c	/^static const char* output=Output;	\/* actual output file name *\/$/;"	v	typeref:typename:const char *	file:
output	..\\scite\\win32\\SciTEWin.h	/^	std::string output;$/;"	m	class:CommandWorker	typeref:typename:std::string	access:public
outputScroll	..\\scite\\win32\\SciTEWin.h	/^	int outputScroll;$/;"	m	class:CommandWorker	typeref:typename:int	access:public
overrideExtension	..\\scite\\src\\SciTEBase.h	/^	std::string overrideExtension;	\/\/\/< User has chosen to use a particular language$/;"	m	class:Buffer	typeref:typename:std::string	access:public
ownRenderTarget	..\\scintilla\\win32\\PlatWin.cxx	/^	bool ownRenderTarget;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:bool	file:	access:private
owner	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^    ScintillaDocument *owner;$/;"	m	class:WatcherHelper	typeref:typename:ScintillaDocument *	file:	access:private
p	..\\scintilla\\lua\\src\\lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer	typeref:typename:char *	access:public
p	..\\scintilla\\lua\\src\\lobject.h	/^  struct Proto **p;  \/* functions defined inside the function *\/$/;"	m	struct:Proto	typeref:struct:Proto **	access:public
p	..\\scintilla\\lua\\src\\lobject.h	/^  struct Proto *p;$/;"	m	struct:LClosure	typeref:struct:Proto *	access:public
p	..\\scintilla\\lua\\src\\lobject.h	/^  void *p;$/;"	m	union:__anonae4e9c5f010a	typeref:typename:void *	access:public
p	..\\scintilla\\lua\\src\\lpcode.c	/^  Pattern *p;  \/* pattern being compiled *\/$/;"	m	struct:CompileState	typeref:typename:Pattern *	file:	access:public
p	..\\scintilla\\lua\\src\\lpvm.c	/^  const Instruction *p;  \/* next instruction *\/$/;"	m	struct:Stack	typeref:typename:const Instruction *	file:	access:public
p	..\\scintilla\\lua\\src\\lstate.h	/^  struct Proto p;$/;"	m	union:GCObject	typeref:struct:Proto	access:public
p	..\\scintilla\\lua\\src\\lzio.h	/^  const char *p;		\/* current position in buffer *\/$/;"	m	struct:Zio	typeref:typename:const char *	access:public
p	..\\scite\\lua\\include\\lauxlib.h	/^  char *p;			\/* current position in buffer *\/$/;"	m	struct:luaL_Buffer	typeref:typename:char *	access:public
pAccess	..\\scintilla\\lexlib\\LexAccessor.h	/^	IDocument *pAccess;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:IDocument *	access:private
pBrush	..\\scintilla\\win32\\PlatWin.cxx	/^	ID2D1SolidColorBrush *pBrush;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:ID2D1SolidColorBrush *	file:	access:private
pD2DFactory	..\\scintilla\\win32\\PlatWin.cxx	/^ID2D1Factory *pD2DFactory = 0;$/;"	v	namespace:Scintilla	typeref:typename:ID2D1Factory *
pFileWorker	..\\scite\\src\\SciTEBase.h	/^	FileWorker *pFileWorker;$/;"	m	class:Buffer	typeref:typename:FileWorker *	access:public
pIDWriteFactory	..\\scintilla\\win32\\PlatWin.cxx	/^IDWriteFactory *pIDWriteFactory = 0;$/;"	v	namespace:Scintilla	typeref:typename:IDWriteFactory *
pListener	..\\scite\\src\\FileWorker.h	/^	WorkerListener *pListener;$/;"	m	struct:FileWorker	typeref:typename:WorkerListener *	access:public
pLoader	..\\scite\\src\\FileWorker.h	/^	ILoader *pLoader;$/;"	m	class:FileLoader	typeref:typename:ILoader *	access:public
pNext	..\\scite\\src\\Containers.h	/^		Association* pNext;$/;"	m	struct:TMap::Association	typeref:typename:Association *	access:public
pNext	..\\scite\\src\\Containers.h	/^		Node* pNext;$/;"	m	struct:TList::Node	typeref:typename:Node *	access:public
pPrev	..\\scite\\src\\Containers.h	/^		Node* pPrev;$/;"	m	struct:TList::Node	typeref:typename:Node *	access:public
pRenderTarget	..\\scintilla\\win32\\PlatWin.cxx	/^	ID2D1RenderTarget *pRenderTarget;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:ID2D1RenderTarget *	file:	access:private
pRenderTarget	..\\scintilla\\win32\\ScintillaWin.cxx	/^	ID2D1RenderTarget *pRenderTarget;$/;"	m	class:ScintillaWin	typeref:typename:ID2D1RenderTarget *	file:	access:private
pSci	..\\scite\\src\\MatchMarker.h	/^	GUI::ScintillaWindow *pSci;$/;"	m	class:MatchMarker	typeref:typename:GUI::ScintillaWindow *	access:private
pSciTE	..\\scite\\gtk\\SciTEGTK.cxx	/^	SciTEGTK *pSciTE;$/;"	m	struct:CallbackData	typeref:typename:SciTEGTK *	file:	access:public
pSciTE	..\\scite\\win32\\SciTEWin.h	/^	SciTEWin *pSciTE;$/;"	m	class:CommandWorker	typeref:typename:SciTEWin *	access:public
pSciTEGTK	..\\scite\\gtk\\SciTEGTK.cxx	/^	SciTEGTK *pSciTEGTK;$/;"	m	class:UserStrip	typeref:typename:SciTEGTK *	file:	access:public
pSciTEWin	..\\scite\\win32\\SciTEWin.h	/^	SciTEWin *pSciTEWin;$/;"	m	class:ContentWin	typeref:typename:SciTEWin *	access:private
pSciTEWin	..\\scite\\win32\\Strips.h	/^	SciTEWin *pSciTEWin;$/;"	m	class:UserStrip	typeref:typename:SciTEWin *	access:private
pSearcher	..\\scite\\src\\SciTEBase.h	/^	Searcher *pSearcher;$/;"	m	class:SearchUI	typeref:typename:Searcher *	access:protected
pSearcher	..\\scite\\win32\\Strips.h	/^	Searcher *pSearcher;$/;"	m	class:SearchStripBase	typeref:typename:Searcher *	access:protected
pTextFormat	..\\scintilla\\win32\\PlatWin.cxx	/^	IDWriteTextFormat *pTextFormat;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:IDWriteTextFormat *	file:	access:private
pTextFormat	..\\scintilla\\win32\\PlatWin.cxx	/^	IDWriteTextFormat *pTextFormat;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:IDWriteTextFormat *	file:	access:public
pWorker	..\\scite\\gtk\\SciTEGTK.cxx	/^	Worker *pWorker;$/;"	m	struct:CallbackData	typeref:typename:Worker *	file:	access:public
padding	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int padding;$/;"	m	struct:__anon0ae033de0308	typeref:typename:int	file:	access:public
pageContentStart	..\\scite\\src\\ExportPDF.cxx	/^		int pageContentStart;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:int	file:	access:private
pageCount	..\\scite\\src\\ExportPDF.cxx	/^		int pageCount;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:int	file:	access:private
pageData	..\\scite\\src\\ExportPDF.cxx	/^		std::string pageData;	\/\/ holds PDF stream contents$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:std::string	file:	access:private
pageHeight	..\\scite\\src\\ExportPDF.cxx	/^		long pageWidth, pageHeight;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:long	file:	access:public
pageMargin	..\\scite\\src\\ExportPDF.cxx	/^		GUI::Rectangle pageMargin;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:GUI::Rectangle	file:	access:public
pageSetup	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkPageSetup *pageSetup;$/;"	m	class:SciTEGTK	typeref:typename:GtkPageSetup *	file:	access:protected
pageStarted	..\\scite\\src\\ExportPDF.cxx	/^		bool pageStarted;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:bool	file:	access:private
pageStarts	..\\scite\\gtk\\SciTEGTK.cxx	/^	std::vector<int> pageStarts;$/;"	m	class:SciTEGTK	typeref:typename:std::vector<int>	file:	access:protected
pageWidth	..\\scite\\src\\ExportPDF.cxx	/^		long pageWidth, pageHeight;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:long	file:	access:public
pagesetupMargin	..\\scite\\win32\\SciTEWin.h	/^	GUI::Rectangle pagesetupMargin;$/;"	m	class:SciTEWin	typeref:typename:GUI::Rectangle	access:protected
paintAbandoned	..\\scintilla\\src\\Editor.h	/^	enum { notPainting, painting, paintAbandoned } paintState;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450603	access:public
paintAbandonedByStyling	..\\scintilla\\src\\Editor.h	/^	bool paintAbandonedByStyling;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
paintEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::paintEvent(QPaintEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QPaintEvent * event)
paintState	..\\scintilla\\src\\Editor.h	/^	enum { notPainting, painting, paintAbandoned } paintState;$/;"	m	class:Scintilla::Editor	typeref:enum:Scintilla::Editor::__anon8e1f0c450603	access:protected
painter	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	QPainter *painter;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:QPainter *	access:private
painterOwned	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	bool painterOwned;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:bool	access:private
painting	..\\scintilla\\src\\Editor.h	/^	enum { notPainting, painting, paintAbandoned } paintState;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450603	access:public
paintingAllText	..\\scintilla\\src\\Editor.h	/^	bool paintingAllText;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
pane	..\\scite\\src\\LuaExtension.cxx	/^	ExtensionAPI::Pane pane;$/;"	m	struct:IFacePropertyBinding	typeref:typename:ExtensionAPI::Pane	file:	access:public
pane	..\\scite\\src\\LuaExtension.cxx	/^	ExtensionAPI::Pane pane;$/;"	m	struct:PaneMatchObject	typeref:typename:ExtensionAPI::Pane	file:	access:public
paneEditor	..\\scite\\src\\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	e	enum:ExtensionAPI::Pane	access:public
paneFindOutput	..\\scite\\src\\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	e	enum:ExtensionAPI::Pane	access:public
paneOutput	..\\scite\\src\\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	e	enum:ExtensionAPI::Pane	access:public
pangoUnitsFromDouble	..\\scintilla\\gtk\\PlatGTK.cxx	/^static int pangoUnitsFromDouble(double d) {$/;"	f	typeref:typename:int	file:	signature:(double d)
panic	..\\scintilla\\lua\\src\\lauxlib.c	/^static int panic (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
panic	..\\scintilla\\lua\\src\\lstate.h	/^  lua_CFunction panic;  \/* to be called in unprotected errors *\/$/;"	m	struct:global_State	typeref:typename:lua_CFunction	access:public
paramDialogCanceled	..\\scite\\gtk\\SciTEGTK.cxx	/^	bool paramDialogCanceled;$/;"	m	class:DialogParameters	typeref:typename:bool	file:	access:public
paramType	..\\scite\\src\\IFaceTable.h	/^	IFaceType paramType;$/;"	m	struct:IFaceProperty	typeref:typename:IFaceType	access:public
paramType	..\\scite\\src\\IFaceTable.h	/^	IFaceType paramType[2];$/;"	m	struct:IFaceFunction	typeref:typename:IFaceType[2]	access:public
parameterisedCommand	..\\scite\\src\\SciTEBase.h	/^	std::string parameterisedCommand;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
parent	..\\scintilla\\gtk\\PlatGTK.cxx	/^	GtkScrolledWindow parent;$/;"	m	struct:__anon0ae033de0308	typeref:typename:GtkScrolledWindow	file:	access:public
parent	..\\scintilla\\win32\\PlatWin.cxx	/^	Window *parent;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:Window *	file:	access:private
parentClass	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GtkWidgetClass *parentClass;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GtkWidgetClass *	access:private
parent_class	..\\scintilla\\include\\ScintillaWidget.h	/^	GtkContainerClass parent_class;$/;"	m	struct:_ScintillaClass	typeref:typename:GtkContainerClass	access:public
parlist	..\\scintilla\\lua\\src\\lparser.c	/^static void parlist (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
part1Length	..\\scintilla\\src\\SplitVector.h	/^	ptrdiff_t part1Length;$/;"	m	class:Scintilla::SplitVector	typeref:typename:ptrdiff_t	access:protected
parts	..\\scite\\scripts\\CheckPropsDoc.py	/^			parts = srcLine.split('\\"')$/;"	v	access:public
pasteLine	..\\scintilla\\src\\Editor.h	/^	enum PasteShape { pasteStream=0, pasteRectangular = 1, pasteLine = 2 };$/;"	e	enum:Scintilla::Editor::PasteShape	access:public
pasteRectangular	..\\scintilla\\src\\Editor.h	/^	enum PasteShape { pasteStream=0, pasteRectangular = 1, pasteLine = 2 };$/;"	e	enum:Scintilla::Editor::PasteShape	access:public
pasteStream	..\\scintilla\\src\\Editor.h	/^	enum PasteShape { pasteStream=0, pasteRectangular = 1, pasteLine = 2 };$/;"	e	enum:Scintilla::Editor::PasteShape	access:public
pat	..\\scintilla\\src\\RESearch.h	/^	std::string pat[MAXTAG];$/;"	m	class:Scintilla::RESearch	typeref:typename:std::string[]	access:public
patchlistaux	..\\scintilla\\lua\\src\\lcode.c	/^static void patchlistaux (FuncState *fs, int list, int vtarget, int reg,$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,int list,int vtarget,int reg,int dtarget)
patchtestreg	..\\scintilla\\lua\\src\\lcode.c	/^static int patchtestreg (FuncState *fs, int node, int reg) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,int node,int reg)
path	..\\scite\\gtk\\SciTEGTK.cxx	/^	const char *path;$/;"	m	struct:SciTEItemFactoryEntry	typeref:typename:const char *	file:	access:public
path	..\\scite\\src\\FileWorker.h	/^	FilePath path;$/;"	m	struct:FileWorker	typeref:typename:FilePath	access:public
pathAbbreviations	..\\scite\\src\\SciTEBase.h	/^	FilePath pathAbbreviations;$/;"	m	class:SciTEBase	typeref:typename:FilePath	access:protected
pathActive	..\\scite\\src\\SciTEBase.h	/^	FilePath pathActive;$/;"	m	class:Session	typeref:typename:FilePath	access:public
pathIface	..\\scite\\scripts\\CheckMentioned.py	/^pathIface = srcRoot + "\/scintilla\/include\/Scintilla.iface"$/;"	v	access:public
pathSepChar	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char pathSepChar = '\/';$/;"	v	typeref:typename:const GUI::gui_char
pathSepChar	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char pathSepChar = '\\\\';$/;"	v	typeref:typename:const GUI::gui_char
pathSepString	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char pathSepString[] = "\/";$/;"	v	typeref:typename:const GUI::gui_char[]
pathSepString	..\\scite\\src\\FilePath.cxx	/^const GUI::gui_char pathSepString[] = GUI_TEXT("\\\\");$/;"	v	typeref:typename:const GUI::gui_char[]
pattreg	..\\scintilla\\lua\\src\\lptree.c	/^static struct luaL_Reg pattreg[] = {$/;"	v	typeref:struct:luaL_Reg[]	file:
pb	..\\scintilla\\lexlib\\OptionSet.h	/^			plcob pb;$/;"	m	union:Scintilla::OptionSet::Option::__anon960ffb3b010a	typeref:typename:plcob	access:public
pc	..\\scintilla\\lua\\src\\lparser.h	/^  int pc;  \/* next position to code (equivalent to `ncode') *\/$/;"	m	struct:FuncState	typeref:typename:int	access:public
pcRel	..\\scintilla\\lua\\src\\ldebug.h	/^#define pcRel(/;"	d	signature:(pc,p)
pces	..\\scintilla\\src\\PositionCache.h	/^	std::vector<PositionCacheEntry> pces;$/;"	m	class:Scintilla::PositionCache	typeref:typename:std::vector<PositionCacheEntry>	access:private
pcf	..\\scintilla\\src\\Document.h	/^	std::unique_ptr<CaseFolder> pcf;$/;"	m	class:Scintilla::Document	typeref:typename:std::unique_ptr<CaseFolder>	access:private
pcontext	..\\scintilla\\gtk\\PlatGTK.cxx	/^	PangoContext *pcontext;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:PangoContext *	file:	access:private
pdoc	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.h	/^    void *pdoc;$/;"	m	class:ScintillaDocument	typeref:typename:Q_OBJECT void *	access:private
pdoc	..\\scintilla\\src\\Document.cxx	/^	Document *pdoc;$/;"	m	class:__anon1ef09aa80111::DocumentIndexer	typeref:typename:Document *	file:	access:private
pdoc	..\\scintilla\\src\\Document.h	/^	Document *pdoc;$/;"	m	class:Scintilla::LexInterface	typeref:typename:Document *	access:protected
pdoc	..\\scintilla\\src\\Document.h	/^	Document *pdoc;$/;"	m	class:Scintilla::UndoGroup	typeref:typename:Document *	access:private
pdoc	..\\scintilla\\src\\EditModel.h	/^	Document *pdoc;$/;"	m	class:Scintilla::EditModel	typeref:typename:Document *	access:public
pdoc	..\\scintilla\\src\\PositionCache.h	/^	const Document *pdoc;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:const Document *	access:private
peDefault	..\\scintilla\\src\\PositionCache.h	/^	peDefault = 0x0,$/;"	e	enum:Scintilla::PointEnd	access:public
peLineEnd	..\\scintilla\\src\\PositionCache.h	/^	peLineEnd = 0x1,$/;"	e	enum:Scintilla::PointEnd	access:public
peSubLineEnd	..\\scintilla\\src\\PositionCache.h	/^	peSubLineEnd = 0x2$/;"	e	enum:Scintilla::PointEnd	access:public
peephole	..\\scintilla\\lua\\src\\lpcode.c	/^static void peephole (CompileState *compst) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst)
pen	..\\scintilla\\win32\\PlatWin.cxx	/^	HPEN pen;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HPEN	file:	access:private
penOld	..\\scintilla\\win32\\PlatWin.cxx	/^	HPEN penOld;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:HPEN	file:	access:private
perLine	..\\scintilla\\src\\CellBuffer.h	/^	PerLine *perLine;$/;"	m	class:Scintilla::LineVector	typeref:typename:PerLine *	access:private
perLineData	..\\scintilla\\src\\Document.h	/^	std::unique_ptr<PerLine> perLineData[ldSize];$/;"	m	class:Scintilla::Document	typeref:typename:std::unique_ptr<PerLine>[]	access:private
performingStyle	..\\scintilla\\src\\Document.h	/^	bool performingStyle;	\/\/\/< Prevent reentrance$/;"	m	class:Scintilla::LexInterface	typeref:typename:bool	access:protected
period	..\\scintilla\\src\\EditModel.h	/^	int period;$/;"	m	class:Scintilla::Caret	typeref:typename:int	access:public
pfd	..\\scintilla\\gtk\\PlatGTK.cxx	/^	PangoFontDescription *pfd;$/;"	m	class:FontHandle	typeref:typename:PangoFontDescription *	file:	access:public
pfont	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	QFont *pfont;$/;"	m	class:Scintilla::FontAndCharacterSet	typeref:typename:QFont *	file:	access:public
phasesDraw	..\\scintilla\\src\\EditView.h	/^	PhasesDraw phasesDraw;$/;"	m	class:Scintilla::EditView	typeref:typename:PhasesDraw	access:public
phasesMultiple	..\\scintilla\\src\\EditView.h	/^	enum PhasesDraw { phasesOne, phasesTwo, phasesMultiple };$/;"	e	enum:Scintilla::EditView::PhasesDraw	access:public
phasesOne	..\\scintilla\\src\\EditView.h	/^	enum PhasesDraw { phasesOne, phasesTwo, phasesMultiple };$/;"	e	enum:Scintilla::EditView::PhasesDraw	access:public
phasesTwo	..\\scintilla\\src\\EditView.h	/^	enum PhasesDraw { phasesOne, phasesTwo, phasesMultiple };$/;"	e	enum:Scintilla::EditView::PhasesDraw	access:public
pi	..\\scintilla\\lexlib\\OptionSet.h	/^			plcoi pi;$/;"	m	union:Scintilla::OptionSet::Option::__anon960ffb3b010a	typeref:typename:plcoi	access:public
pidShell	..\\scite\\gtk\\SciTEGTK.cxx	/^	GPid pidShell;$/;"	m	class:SciTEGTK	typeref:typename:GPid	file:	access:protected
pixId	..\\scintilla\\win32\\PlatWin.cxx	/^	int pixId;$/;"	m	struct:Scintilla::ListItemData	typeref:typename:int	file:	access:public
pixVal	..\\scintilla\\win32\\PlatWin.cxx	/^		byte pixVal[4];$/;"	m	union:Scintilla::dwordFromBGRA::__anon82a12833010a	typeref:typename:byte[4]	file:	access:public
pixbuf	..\\scintilla\\gtk\\PlatGTK.cxx	/^	GdkPixbuf *pixbuf;$/;"	m	struct:ListImage	typeref:typename:GdkPixbuf *	file:	access:public
pixbuf_renderer	..\\scintilla\\gtk\\PlatGTK.cxx	/^	GtkCellRenderer* pixbuf_renderer;$/;"	m	class:ListBoxX	typeref:typename:GtkCellRenderer *	file:	access:private
pixelBytes	..\\scintilla\\src\\XPM.h	/^	std::vector<unsigned char> pixelBytes;$/;"	m	class:Scintilla::RGBAImage	typeref:typename:std::vector<unsigned char>	access:private
pixels	..\\scintilla\\src\\XPM.h	/^	std::vector<unsigned char> pixels;$/;"	m	class:Scintilla::XPM	typeref:typename:std::vector<unsigned char>	access:private
pixhash	..\\scintilla\\gtk\\PlatGTK.cxx	/^	void *pixhash;$/;"	m	class:ListBoxX	typeref:typename:void *	file:	access:private
pixmapIndentGuide	..\\scintilla\\src\\EditView.h	/^	std::unique_ptr<Surface> pixmapIndentGuide;$/;"	m	class:Scintilla::EditView	typeref:typename:std::unique_ptr<Surface>	access:public
pixmapIndentGuideHighlight	..\\scintilla\\src\\EditView.h	/^	std::unique_ptr<Surface> pixmapIndentGuideHighlight;$/;"	m	class:Scintilla::EditView	typeref:typename:std::unique_ptr<Surface>	access:public
pixmapLine	..\\scintilla\\src\\EditView.h	/^	std::unique_ptr<Surface> pixmapLine;$/;"	m	class:Scintilla::EditView	typeref:typename:std::unique_ptr<Surface>	access:public
pixmapSelMargin	..\\scintilla\\src\\MarginView.h	/^	std::unique_ptr<Surface> pixmapSelMargin;$/;"	m	class:Scintilla::MarginView	typeref:typename:std::unique_ptr<Surface>	access:public
pixmapSelPattern	..\\scintilla\\src\\MarginView.h	/^	std::unique_ptr<Surface> pixmapSelPattern;$/;"	m	class:Scintilla::MarginView	typeref:typename:std::unique_ptr<Surface>	access:public
pixmapSelPatternOffset1	..\\scintilla\\src\\MarginView.h	/^	std::unique_ptr<Surface> pixmapSelPatternOffset1;$/;"	m	class:Scintilla::MarginView	typeref:typename:std::unique_ptr<Surface>	access:public
pixmap_new	..\\scite\\gtk\\SciTEGTK.cxx	/^static GtkWidget *pixmap_new(gchar **xpm) {$/;"	f	typeref:typename:GtkWidget *	file:	signature:(gchar ** xpm)
pk_funcs	..\\scintilla\\lua\\src\\loadlib.c	/^static const luaL_Reg pk_funcs[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
plcob	..\\scintilla\\lexlib\\OptionSet.h	/^	typedef bool T::*plcob;$/;"	t	class:Scintilla::OptionSet	typeref:typename:bool T::*	access:private
plcoi	..\\scintilla\\lexlib\\OptionSet.h	/^	typedef int T::*plcoi;$/;"	t	class:Scintilla::OptionSet	typeref:typename:int T::*	access:private
plcos	..\\scintilla\\lexlib\\OptionSet.h	/^	typedef std::string T::*plcos;$/;"	t	class:Scintilla::OptionSet	typeref:typename:std::string T::*	access:private
pli	..\\scintilla\\src\\Document.h	/^	std::unique_ptr<LexInterface> pli;$/;"	m	class:Scintilla::Document	typeref:typename:std::unique_ptr<LexInterface>	access:private
pm	..\\scite\\gtk\\GTKMutex.cxx	/^	GMutex *pm;$/;"	m	class:GTKMutex	typeref:typename:GMutex *	file:	access:private
pmain	..\\scintilla\\lua\\src\\lua.c	/^static int pmain (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
pmain	..\\scintilla\\lua\\src\\luac.c	/^static int pmain(lua_State* L)$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
pointer	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void *ScintillaDocument::pointer() {$/;"	f	class:ScintillaDocument	typeref:typename:void *	signature:()
pointer	..\\scintilla\\src\\Document.cxx	/^	typedef char* pointer;$/;"	t	class:__anon1ef09aa80111::ByteIterator	typeref:typename:char *	file:	access:public
pointer	..\\scintilla\\src\\Document.cxx	/^	typedef wchar_t* pointer;$/;"	t	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:wchar_t *	file:	access:public
pollID	..\\scite\\gtk\\SciTEGTK.cxx	/^	guint pollID;$/;"	m	class:SciTEGTK	typeref:typename:guint	file:	access:protected
popup	..\\scintilla\\src\\ScintillaBase.h	/^	Menu popup;$/;"	m	class:Scintilla::ScintillaBase	typeref:typename:Menu	access:protected
popup	..\\scite\\src\\SciTEBase.h	/^	GUI::Menu popup;$/;"	m	class:SciTEBase	typeref:typename:GUI::Menu	access:protected
pos	..\\scintilla\\gtk\\PlatGTK.cxx	/^	PangoRectangle pos;$/;"	m	class:ClusterIterator	typeref:typename:PangoRectangle	file:	access:private
pos	..\\scintilla\\win32\\ScintillaWin.cxx	/^	unsigned int pos;$/;"	m	class:FormatEnumerator	typeref:typename:unsigned int	file:	access:public
pos	..\\scite\\src\\SciTEIO.cxx	/^	size_t pos;$/;"	m	class:BufferedFile	typeref:typename:size_t	file:	access:private
posCache	..\\scintilla\\src\\EditView.h	/^	PositionCache posCache;$/;"	m	class:Scintilla::EditView	typeref:typename:PositionCache	access:public
posDrag	..\\scintilla\\src\\EditModel.h	/^	SelectionPosition posDrag;$/;"	m	class:Scintilla::EditModel	typeref:typename:SelectionPosition	access:public
posDrop	..\\scintilla\\src\\Editor.h	/^	SelectionPosition posDrop;$/;"	m	class:Scintilla::Editor	typeref:typename:SelectionPosition	access:protected
posLineStart	..\\scintilla\\src\\PositionCache.h	/^	Sci::Position posLineStart;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:Sci::Position	access:private
posRelative	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_PositionU posRelative;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_PositionU	access:private
posStart	..\\scintilla\\src\\AutoComplete.h	/^	Sci::Position posStart;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:Sci::Position	access:public
posStartCallTip	..\\scintilla\\src\\CallTip.h	/^	Sci::Position posStartCallTip;$/;"	m	class:Scintilla::CallTip	typeref:typename:Sci::Position	access:public
posTopLine	..\\scintilla\\src\\Editor.h	/^	Sci::Position posTopLine;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
position	..\\scintilla\\gtk\\PlatGTK.cxx	/^	XYPOSITION position;$/;"	m	class:ClusterIterator	typeref:typename:XYPOSITION	file:	access:public
position	..\\scintilla\\include\\Scintilla.h	/^	Sci_Position position;$/;"	m	struct:SCNotification	typeref:typename:Sci_Position	access:public
position	..\\scintilla\\lexlib\\SparseState.h	/^		Sci_Position position;$/;"	m	struct:Scintilla::SparseState::State	typeref:typename:Sci_Position	access:public
position	..\\scintilla\\src\\CellBuffer.h	/^	Sci::Position position;$/;"	m	class:Scintilla::Action	typeref:typename:Sci::Position	access:public
position	..\\scintilla\\src\\Document.cxx	/^	Sci::Position position;$/;"	m	class:__anon1ef09aa80111::ByteIterator	typeref:typename:Sci::Position	file:	access:public
position	..\\scintilla\\src\\Document.cxx	/^	Sci::Position position;$/;"	m	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:Sci::Position	file:	access:private
position	..\\scintilla\\src\\Document.h	/^	Sci::Position position;$/;"	m	class:Scintilla::DocModification	typeref:typename:Sci::Position	access:public
position	..\\scintilla\\src\\Selection.h	/^	Sci::Position position;$/;"	m	class:Scintilla::SelectionPosition	typeref:typename:Sci::Position	access:private
position	..\\scite\\src\\SciTEBase.h	/^	int position;$/;"	m	struct:SelectedRange	typeref:typename:int	access:public
positionFirst	..\\scintilla\\lexlib\\SparseState.h	/^	Sci_Position positionFirst;$/;"	m	class:Scintilla::SparseState	typeref:typename:Sci_Position	access:private
positionStart	..\\scintilla\\gtk\\PlatGTK.cxx	/^	XYPOSITION positionStart;$/;"	m	class:ClusterIterator	typeref:typename:XYPOSITION	file:	access:public
positions	..\\scintilla\\src\\PositionCache.h	/^	std::unique_ptr<XYPOSITION []> positions;$/;"	m	class:Scintilla::PositionCacheEntry	typeref:typename:std::unique_ptr<XYPOSITION[]>	access:private
positions	..\\scintilla\\src\\PositionCache.h	/^	std::unique_ptr<XYPOSITION[]> positions;$/;"	m	class:Scintilla::LineLayout	typeref:typename:std::unique_ptr<XYPOSITION[]>	access:public
posrelat	..\\scintilla\\lua\\src\\lstrlib.c	/^static ptrdiff_t posrelat (ptrdiff_t pos, size_t len) {$/;"	f	typeref:typename:ptrdiff_t	file:	signature:(ptrdiff_t pos,size_t len)
ppc	..\\scite\\src\\SciTEProps.cxx	/^		PreProcKind ppc;$/;"	m	struct:SciTEBase::ReadProperties::__anon357025aa0108	typeref:typename:PreProcKind	file:	access:public
ppcDummy	..\\scite\\src\\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind /;"	e	enum:SciTEBase::PreProcKind	access:public
ppcEnd	..\\scite\\src\\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind /;"	e	enum:SciTEBase::PreProcKind	access:public
ppcMiddle	..\\scite\\src\\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind /;"	e	enum:SciTEBase::PreProcKind	access:public
ppcNone	..\\scite\\src\\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind /;"	e	enum:SciTEBase::PreProcKind	access:public
ppcStart	..\\scite\\src\\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind /;"	e	enum:SciTEBase::PreProcKind	access:public
pprops	..\\scintilla\\lexlib\\Accessor.h	/^	PropSetSimple *pprops;$/;"	m	class:Scintilla::Accessor	typeref:typename:PropSetSimple *	access:public
precheck	..\\scintilla\\lua\\src\\ldebug.c	/^static int precheck (const Proto *pt) {$/;"	f	typeref:typename:int	file:	signature:(const Proto * pt)
preeditPos	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^	int preeditPos;$/;"	m	class:ScintillaEditBase	typeref:typename:int	access:private
preeditString	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^	QString preeditString;$/;"	m	class:ScintillaEditBase	typeref:typename:QString	access:private
prefix	..\\scite\\src\\IFaceTable.h	/^	const char *prefix;$/;"	m	struct:IFaceObject	typeref:typename:const char *	access:public
prefixexp	..\\scintilla\\lua\\src\\lparser.c	/^static void prefixexp (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * v)
preinit_state	..\\scintilla\\lua\\src\\lstate.c	/^static void preinit_state (lua_State *L, global_State *g) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,global_State * g)
prepcompile	..\\scintilla\\lua\\src\\lptree.c	/^static Instruction *prepcompile (lua_State *L, Pattern *p, int idx) {$/;"	f	typeref:typename:Instruction *	file:	signature:(lua_State * L,Pattern * p,int idx)
preprocOfString	..\\scite\\src\\SciTEBase.h	/^	std::map<std::string, PreProcKind> preprocOfString; \/\/\/< Map preprocessor keywords to positi/;"	m	class:SciTEBase	typeref:typename:std::map<std::string,PreProcKind>	access:protected
preprocessorSymbol	..\\scite\\src\\SciTEBase.h	/^	char preprocessorSymbol;	\/\/\/< Preprocessor symbol (in C, #)$/;"	m	class:SciTEBase	typeref:typename:char	access:protected
preprs	..\\scintilla\\src\\PositionCache.h	/^	const SpecialRepresentations *preprs;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:const SpecialRepresentations *	access:private
present	..\\scite\\scripts\\CheckPropsDoc.py	/^def present(l, n):$/;"	f	access:public	signature:(l, n)
prev	..\\scintilla\\lua\\src\\lobject.h	/^      struct UpVal *prev;$/;"	m	struct:UpVal::__anonae4e9c5f040a::__anonae4e9c5f0508	typeref:struct:UpVal *	access:public
prev	..\\scintilla\\lua\\src\\lparser.c	/^  struct LHS_assign *prev;$/;"	m	struct:LHS_assign	typeref:struct:LHS_assign *	file:	access:public
prev	..\\scintilla\\lua\\src\\lparser.h	/^  struct FuncState *prev;  \/* enclosing function *\/$/;"	m	struct:FuncState	typeref:struct:FuncState *	access:public
prev_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * prev_xpm[] = {$/;"	v	typeref:typename:const char * []
previous	..\\scintilla\\lua\\src\\ldo.c	/^  struct lua_longjmp *previous;$/;"	m	struct:lua_longjmp	typeref:struct:lua_longjmp *	file:	access:public
previous	..\\scintilla\\lua\\src\\lparser.c	/^  struct BlockCnt *previous;  \/* chain *\/$/;"	m	struct:BlockCnt	typeref:struct:BlockCnt *	file:	access:public
previousHeightOutput	..\\scite\\src\\SciTEBase.h	/^	int previousHeightOutput;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
primary	..\\scintilla\\gtk\\ScintillaGTK.h	/^	SelectionText primary;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:SelectionText	access:private
primarySelection	..\\scintilla\\src\\EditModel.h	/^	bool primarySelection;$/;"	m	class:Scintilla::EditModel	typeref:typename:bool	access:public
primaryexp	..\\scintilla\\lua\\src\\lparser.c	/^static void primaryexp (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * v)
printCPPFile	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def printCPPFile(f, options):$/;"	f	access:public	signature:(f, options)
printCtag	..\\scite\\scripts\\CheckMentioned.py	/^def printCtag(ident, path):$/;"	f	access:public	signature:(ident, path)
printHFile	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def printHFile(f, options):$/;"	f	access:public	signature:(f, options)
printHFile	..\\scintilla\\scripts\\HFacer.py	/^def printHFile(f):$/;"	f	access:public	signature:(f)
printIFaceTableCXXFile	..\\scite\\scripts\\IFaceTableGen.py	/^def printIFaceTableCXXFile(faceAndIDs):$/;"	f	access:public	signature:(faceAndIDs)
printIFaceTableHTMLFile	..\\scite\\scripts\\IFaceTableGen.py	/^def printIFaceTableHTMLFile(faceAndIDs):$/;"	f	access:public	signature:(faceAndIDs)
printLexHFile	..\\scintilla\\scripts\\HFacer.py	/^def printLexHFile(f):$/;"	f	access:public	signature:(f)
printParameters	..\\scintilla\\src\\EditView.h	/^	PrintParameters printParameters;$/;"	m	class:Scintilla::EditView	typeref:typename:PrintParameters	access:public
printPyFile	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def printPyFile(f, options):$/;"	f	access:public	signature:(f, options)
printSettings	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkPrintSettings *printSettings;$/;"	m	class:SciTEGTK	typeref:typename:GtkPrintSettings *	file:	access:protected
printTypeSystemFile	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def printTypeSystemFile(f, options):$/;"	f	access:public	signature:(f, options)
printWrapped	..\\scintilla\\scripts\\ScintillaData.py	/^def printWrapped(text):$/;"	f	access:public	signature:(text)
print_usage	..\\scintilla\\lua\\src\\lua.c	/^static void print_usage (void) {$/;"	f	typeref:typename:void	file:	signature:(void)
print_version	..\\scintilla\\lua\\src\\lua.c	/^static void print_version (void) {$/;"	f	typeref:typename:void	file:	signature:(void)
printcap	..\\scintilla\\lua\\src\\lpprint.c	/^static void printcap (Capture *cap) {$/;"	f	typeref:typename:void	file:	signature:(Capture * cap)
printcapkind	..\\scintilla\\lua\\src\\lpprint.c	/^static void printcapkind (int kind) {$/;"	f	typeref:typename:void	file:	signature:(int kind)
printcaplist	..\\scintilla\\lua\\src\\lpprint.c	/^void printcaplist (Capture *cap, Capture *limit) {$/;"	f	typeref:typename:void	signature:(Capture * cap,Capture * limit)
printcharset	..\\scintilla\\lua\\src\\lpprint.c	/^void printcharset (const byte *st) {$/;"	f	typeref:typename:void	signature:(const byte * st)
printinst	..\\scintilla\\lua\\src\\lpprint.c	/^static void printinst (const Instruction *op, const Instruction *p) {$/;"	f	typeref:typename:void	file:	signature:(const Instruction * op,const Instruction * p)
printjmp	..\\scintilla\\lua\\src\\lpprint.c	/^static void printjmp (const Instruction *op, const Instruction *p) {$/;"	f	typeref:typename:void	file:	signature:(const Instruction * op,const Instruction * p)
printktable	..\\scintilla\\lua\\src\\lpprint.c	/^void printktable (lua_State *L, int idx) {$/;"	f	typeref:typename:void	signature:(lua_State * L,int idx)
printktable	..\\scintilla\\lua\\src\\lpprint.h	/^#define printktable(/;"	d	signature:(L,idx)
printpatt	..\\scintilla\\lua\\src\\lpprint.c	/^void printpatt (Instruction *p, int n) {$/;"	f	typeref:typename:void	signature:(Instruction * p,int n)
printpatt	..\\scintilla\\lua\\src\\lpprint.h	/^#define printpatt(/;"	d	signature:(p,n)
printtree	..\\scintilla\\lua\\src\\lpprint.c	/^void printtree (TTree *tree, int ident) {$/;"	f	typeref:typename:void	signature:(TTree * tree,int ident)
printtree	..\\scintilla\\lua\\src\\lpprint.h	/^#define printtree(/;"	d	signature:(tree,i)
priority	..\\scintilla\\lua\\src\\lparser.c	/^} priority[] = {  \/* ORDER OPR *\/$/;"	v	typeref:typename:const struct __anon613de0d00108[]
progname	..\\scintilla\\lua\\src\\lua.c	/^static const char *progname = LUA_PROGNAME;$/;"	v	typeref:typename:const char *	file:
progname	..\\scintilla\\lua\\src\\luac.c	/^static const char* progname=PROGNAME;	\/* actual program name *\/$/;"	v	typeref:typename:const char *	file:
prop	..\\scite\\src\\LuaExtension.cxx	/^	const IFaceProperty *prop;$/;"	m	struct:IFacePropertyBinding	typeref:typename:const IFaceProperty *	file:	access:public
propAbbrevFileName	..\\scite\\src\\SciTEIO.cxx	/^const GUI::gui_char propAbbrevFileName[] = GUI_TEXT("abbrev.properties");$/;"	v	typeref:typename:const GUI::gui_char[]
propDirectoryFileName	..\\scite\\src\\SciTEProps.cxx	/^const GUI::gui_char propDirectoryFileName[] = GUI_TEXT("SciTEDirectory.properties");$/;"	v	typeref:typename:const GUI::gui_char[]
propGlobalFileName	..\\scite\\src\\SciTEIO.cxx	/^const GUI::gui_char propGlobalFileName[] = GUI_TEXT("SciTEGlobal.properties");$/;"	v	typeref:typename:const GUI::gui_char[]
propLocalFileName	..\\scite\\src\\SciTEProps.cxx	/^const GUI::gui_char propLocalFileName[] = GUI_TEXT("SciTE.properties");$/;"	v	typeref:typename:const GUI::gui_char[]
propName	..\\scite\\src\\SciTEProps.cxx	/^		const char *propName;$/;"	m	struct:SciTEBase::ReadProperties::__anon357025aa0108	typeref:typename:const char *	file:	access:public
propToFile	..\\scite\\scripts\\CheckPropsDoc.py	/^propToFile = {}$/;"	v	access:public
propToFileKeys	..\\scite\\scripts\\CheckPropsDoc.py	/^propToFileKeys = list(propToFile.keys())$/;"	v	access:public
propUserFileName	..\\scite\\src\\SciTEIO.cxx	/^const GUI::gui_char propUserFileName[] = GUI_TEXT(".SciTEUser.properties");$/;"	v	typeref:typename:const GUI::gui_char[]
propUserFileName	..\\scite\\src\\SciTEIO.cxx	/^const GUI::gui_char propUserFileName[] = GUI_TEXT("SciTEUser.properties");$/;"	v	typeref:typename:const GUI::gui_char[]
propagateall	..\\scintilla\\lua\\src\\lgc.c	/^static size_t propagateall (global_State *g) {$/;"	f	typeref:typename:size_t	file:	signature:(global_State * g)
propagatemark	..\\scintilla\\lua\\src\\lgc.c	/^static l_mem propagatemark (global_State *g) {$/;"	f	typeref:typename:l_mem	file:	signature:(global_State * g)
properties	..\\scite\\src\\IFaceTable.cxx	/^const IFaceProperty * const IFaceTable::properties = ifaceProperties;$/;"	m	class:IFaceTable	typeref:typename:const IFaceProperty * const
properties	..\\scite\\src\\IFaceTable.h	/^	static const IFaceProperty * const properties;$/;"	m	class:IFaceTable	typeref:typename:const IFaceProperty * const	access:public
propertiesPaths	..\\scite\\scripts\\CheckPropsDoc.py	/^propertiesPaths = []$/;"	v	access:public
propertiesSet	..\\scite\\scripts\\CheckPropsDoc.py	/^propertiesSet = {}$/;"	v	access:public
propertiesToForward	..\\scite\\src\\SciTEProps.cxx	/^static const char *propertiesToForward[] = {$/;"	v	typeref:typename:const char * []	file:
propertyCount	..\\scite\\src\\IFaceTable.cxx	/^const int IFaceTable::propertyCount = ifacePropertyCount;$/;"	m	class:IFaceTable	typeref:typename:const int
propertyCount	..\\scite\\src\\IFaceTable.h	/^	static const int propertyCount;$/;"	m	class:IFaceTable	typeref:typename:const int	access:public
propertyName	..\\scite\\scripts\\CheckPropsDoc.py	/^				propertyName = parts[1]$/;"	v	access:public
propertyNames	..\\scite\\scripts\\CheckPropsDoc.py	/^propertyNames = {}$/;"	v	access:public
props	..\\scintilla\\lexlib\\LexerBase.h	/^	PropSetSimple props;$/;"	m	class:Scintilla::LexerBase	typeref:typename:PropSetSimple	access:protected
props	..\\scintilla\\src\\ScintillaBase.cxx	/^	PropSetSimple props;$/;"	m	class:Scintilla::LexState	typeref:typename:PropSetSimple	file:	access:private
props	..\\scite\\src\\PropSetFile.h	/^	mapss props;$/;"	m	class:PropSetFile	typeref:typename:mapss	access:private
props	..\\scite\\src\\SciTEBase.h	/^	PropSetFile props;$/;"	m	class:Buffer	typeref:typename:PropSetFile	access:public
props	..\\scite\\src\\SciTEBase.h	/^	PropSetFile props;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsAbbrev	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsAbbrev;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsBase	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsBase;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsDirectory	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsDirectory;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsDiscovered	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsDiscovered;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsEmbed	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsEmbed;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsFile	..\\scite\\scripts\\CheckPropsDoc.py	/^	propsFile = open(propPath)$/;"	v	access:public
propsFile	..\\scite\\scripts\\CheckPropsDoc.py	/^propsFile = open(propsFileName, "rt")$/;"	v	access:public
propsFileName	..\\scite\\scripts\\CheckPropsDoc.py	/^propsFileName = os.path.join(srcDir, "SciTEGlobal.properties")$/;"	v	access:public
propsLocal	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsLocal;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsPlatform	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsPlatform;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsSession	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsSession;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsStatus	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsStatus;	\/\/ Not attached to a file but need SetInteger method.$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
propsUser	..\\scite\\src\\SciTEBase.h	/^	PropSetFile propsUser;$/;"	m	class:SciTEBase	typeref:typename:PropSetFile	access:protected
ps	..\\scintilla\\lexlib\\OptionSet.h	/^			plcos ps;$/;"	m	union:Scintilla::OptionSet::Option::__anon960ffb3b010a	typeref:typename:plcos	access:public
ps	..\\scintilla\\lua\\src\\lptree.h	/^    int ps;  \/* occasional second sibling *\/$/;"	m	union:TTree::__anond9e754e8010a	typeref:typename:int	access:public
pscin	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^	ScintillaGTKAccessible *pscin;$/;"	m	struct:ScintillaObjectAccessiblePrivate	typeref:typename:ScintillaGTKAccessible *	file:	access:public
pscin	..\\scintilla\\include\\ScintillaWidget.h	/^	void *pscin;$/;"	m	struct:_ScintillaObject	typeref:typename:void *	access:public
pscript	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	PangoScript pscript;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:PangoScript	file:	access:public
psd	..\\scite\\gtk\\SciTEGTK.cxx	/^	StripDefinition *psd;$/;"	m	class:UserStrip	typeref:typename:StripDefinition *	file:	access:public
psd	..\\scite\\win32\\Strips.h	/^	std::unique_ptr<StripDefinition> psd;$/;"	m	class:UserStrip	typeref:typename:std::unique_ptr<StripDefinition>	access:private
psurf	..\\scintilla\\gtk\\PlatGTK.cxx	/^	cairo_surface_t *psurf;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:cairo_surface_t *	file:	access:private
pszKeywords	..\\scite\\win32\\SciTEWin.cxx	/^	const wchar_t *pszKeywords;$/;"	m	struct:XHH_AKLINK	typeref:typename:const wchar_t *	file:	access:public
pszMsgText	..\\scite\\win32\\SciTEWin.cxx	/^	wchar_t *pszMsgText;$/;"	m	struct:XHH_AKLINK	typeref:typename:wchar_t *	file:	access:public
pszMsgTitle	..\\scite\\win32\\SciTEWin.cxx	/^	wchar_t *pszMsgTitle;$/;"	m	struct:XHH_AKLINK	typeref:typename:wchar_t *	file:	access:public
pszUrl	..\\scite\\win32\\SciTEWin.cxx	/^	wchar_t *pszUrl;$/;"	m	struct:XHH_AKLINK	typeref:typename:wchar_t *	file:	access:public
pszWindow	..\\scite\\win32\\SciTEWin.cxx	/^	wchar_t *pszWindow;$/;"	m	struct:XHH_AKLINK	typeref:typename:wchar_t *	file:	access:public
ptMouseLast	..\\scintilla\\src\\Editor.h	/^	Point ptMouseLast;$/;"	m	class:Scintilla::Editor	typeref:typename:Point	access:protected
ptStartDrag	..\\scite\\src\\SciTEBase.h	/^	GUI::Point ptStartDrag;$/;"	m	class:SciTEBase	typeref:typename:GUI::Point	access:protected
ptop	..\\scintilla\\lua\\src\\lpcap.h	/^  int ptop;  \/* index of last argument to 'match' *\/$/;"	m	struct:CapState	typeref:typename:int	access:public
ptr	..\\scintilla\\win32\\ScintillaWin.cxx	/^	void *ptr;$/;"	m	class:GlobalMemory	typeref:typename:void *	file:	access:public
ptr	..\\scite\\src\\GUI.h	/^	sptr_t ptr;$/;"	m	class:GUI::ScintillaWindow	typeref:typename:sptr_t	access:private
pulldowns	..\\scite\\gtk\\SciTEGTK.cxx	/^	std::map<std::string, GtkWidget *> pulldowns;$/;"	m	class:SciTEGTK	typeref:typename:std::map<std::string,GtkWidget * >	file:	access:protected
push_captures	..\\scintilla\\lua\\src\\lstrlib.c	/^static int push_captures (MatchState *ms, const char *s, const char *e) {$/;"	f	typeref:typename:int	file:	signature:(MatchState * ms,const char * s,const char * e)
push_iface_function	..\\scite\\src\\LuaExtension.cxx	/^static int push_iface_function(lua_State *L, const char *name) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * name)
push_iface_propval	..\\scite\\src\\LuaExtension.cxx	/^static int push_iface_propval(lua_State *L, const char *name) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * name)
push_onecapture	..\\scintilla\\lua\\src\\lstrlib.c	/^static void push_onecapture (MatchState *ms, int i, const char *s,$/;"	f	typeref:typename:void	file:	signature:(MatchState * ms,int i,const char * s,const char * e)
push_pane_object	..\\scite\\src\\LuaExtension.cxx	/^void push_pane_object(lua_State *L, ExtensionAPI::Pane p) {$/;"	f	typeref:typename:void	signature:(lua_State * L,ExtensionAPI::Pane p)
pushcapture	..\\scintilla\\lua\\src\\lpcap.c	/^static int pushcapture (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
pushclosure	..\\scintilla\\lua\\src\\lparser.c	/^static void pushclosure (LexState *ls, FuncState *func, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,FuncState * func,expdesc * v)
pusherror	..\\scintilla\\lua\\src\\loadlib.c	/^static void pusherror (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
pushline	..\\scintilla\\lua\\src\\lua.c	/^static int pushline (lua_State *L, int firstline) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int firstline)
pushluaval	..\\scintilla\\lua\\src\\lpcap.c	/^#define pushluaval(/;"	d	file:	signature:(cs)
pushnestedvalues	..\\scintilla\\lua\\src\\lpcap.c	/^static int pushnestedvalues (CapState *cs, int addextra) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs,int addextra)
pushnexttemplate	..\\scintilla\\lua\\src\\loadlib.c	/^static const char *pushnexttemplate (lua_State *L, const char *path) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,const char * path)
pushonenestedvalue	..\\scintilla\\lua\\src\\lpcap.c	/^static void pushonenestedvalue (CapState *cs) {$/;"	f	typeref:typename:void	file:	signature:(CapState * cs)
pushresult	..\\scintilla\\lua\\src\\liolib.c	/^static int pushresult (lua_State *L, int i, const char *filename) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int i,const char * filename)
pushstr	..\\scintilla\\lua\\src\\lobject.c	/^static void pushstr (lua_State *L, const char *str) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * str)
pvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define pvalue(/;"	d	signature:(o)
pxpm	..\\scintilla\\src\\LineMarker.h	/^	std::unique_ptr<XPM> pxpm;$/;"	m	class:Scintilla::LineMarker	typeref:typename:std::unique_ptr<XPM>	access:public
querycap	..\\scintilla\\lua\\src\\lpcap.c	/^static int querycap (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
quitting	..\\scite\\src\\SciTEBase.h	/^	bool quitting;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
r	..\\scintilla\\lua\\src\\llex.h	/^  lua_Number r;$/;"	m	union:__anoncfedf8d1010a	typeref:typename:lua_Number	access:public
r	..\\scite\\src\\Credits.cxx	/^	int r;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:public
radiogroups	..\\scite\\gtk\\SciTEGTK.cxx	/^	std::map<std::string, GSList *> radiogroups;$/;"	m	class:SciTEGTK	typeref:typename:std::map<std::string,GSList * >	file:	access:protected
raise_error	..\\scite\\src\\LuaExtension.cxx	/^inline void raise_error(lua_State *L, const char *errMsg=NULL) {$/;"	f	typeref:typename:void	signature:(lua_State * L,const char * errMsg=NULL)
randomValue	..\\scite\\src\\Credits.cxx	/^	int randomValue;$/;"	m	class:__anon1b46962c0111::RandomColour	typeref:typename:int	file:	access:private
rangeRectangular	..\\scintilla\\src\\Selection.h	/^	SelectionRange rangeRectangular;$/;"	m	class:Scintilla::Selection	typeref:typename:SelectionRange	access:private
ranges	..\\scintilla\\src\\Selection.h	/^	std::vector<SelectionRange> ranges;$/;"	m	class:Scintilla::Selection	typeref:typename:std::vector<SelectionRange>	access:private
rangesSaved	..\\scintilla\\src\\Selection.h	/^	std::vector<SelectionRange> rangesSaved;$/;"	m	class:Scintilla::Selection	typeref:typename:std::vector<SelectionRange>	access:private
rawgco2ts	..\\scintilla\\lua\\src\\lstate.h	/^#define rawgco2ts(/;"	d	signature:(o)
rawgco2u	..\\scintilla\\lua\\src\\lstate.h	/^#define rawgco2u(/;"	d	signature:(o)
rawtsvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define rawtsvalue(/;"	d	signature:(o)
rawuvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define rawuvalue(/;"	d	signature:(o)
rc	..\\scintilla\\include\\Scintilla.h	/^	struct Sci_Rectangle rc;$/;"	m	struct:Sci_RangeToFormat	typeref:struct:Sci_Rectangle	access:public
rcPage	..\\scintilla\\include\\Scintilla.h	/^	struct Sci_Rectangle rcPage;$/;"	m	struct:Sci_RangeToFormat	typeref:struct:Sci_Rectangle	access:public
rcPaint	..\\scintilla\\src\\Editor.h	/^	PRectangle rcPaint;$/;"	m	class:Scintilla::Editor	typeref:typename:PRectangle	access:protected
rcPreSize	..\\scintilla\\win32\\PlatWin.cxx	/^	PRectangle rcPreSize;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:PRectangle	file:	access:private
rcWorkArea	..\\scite\\win32\\SciTEWin.h	/^	RECT rcWorkArea;$/;"	m	class:SciTEWin	typeref:typename:RECT	access:protected
read	..\\scite\\src\\SciTEBase.h	/^	bool read;$/;"	m	class:Localization	typeref:typename:bool	access:public
read	..\\scite\\src\\Utf8_16.cxx	/^Utf8_16::utf16 Utf16_Iter::read(const ubyte* pRead) const {$/;"	f	class:Utf16_Iter	typeref:typename:Utf8_16::utf16	signature:(const ubyte * pRead) const
readAll	..\\scite\\src\\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anonf95580a60203	access:public
readAll	..\\scite\\src\\SciTEIO.cxx	/^	bool readAll;$/;"	m	class:BufferedFile	typeref:typename:bool	file:	access:private
readBlockSize	..\\scite\\src\\FilePath.cxx	/^static const size_t readBlockSize = 64 * 1024;$/;"	v	typeref:typename:const size_t	file:
readInterface	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def readInterface(cleanGenerated):$/;"	f	access:public	signature:(cleanGenerated)
readOnly	..\\scintilla\\src\\CellBuffer.h	/^	bool readOnly;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:bool	access:private
readSoFar	..\\scite\\src\\FileWorker.h	/^	long readSoFar;$/;"	m	class:FileLoader	typeref:typename:long	access:public
read_chars	..\\scintilla\\lua\\src\\liolib.c	/^static int read_chars (lua_State *L, FILE *f, size_t n) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,FILE * f,size_t n)
read_line	..\\scintilla\\lua\\src\\liolib.c	/^static int read_line (lua_State *L, FILE *f) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,FILE * f)
read_long_string	..\\scintilla\\lua\\src\\llex.c	/^static void read_long_string (LexState *ls, SemInfo *seminfo, int sep) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,SemInfo * seminfo,int sep)
read_number	..\\scintilla\\lua\\src\\liolib.c	/^static int read_number (lua_State *L, FILE *f) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,FILE * f)
read_numeral	..\\scintilla\\lua\\src\\llex.c	/^static void read_numeral (LexState *ls, SemInfo *seminfo) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,SemInfo * seminfo)
read_string	..\\scintilla\\lua\\src\\llex.c	/^static void read_string (LexState *ls, int del, SemInfo *seminfo) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int del,SemInfo * seminfo)
readable	..\\scintilla\\lua\\src\\loadlib.c	/^static int readable (const char *filename) {$/;"	f	typeref:typename:int	file:	signature:(const char * filename)
reader	..\\scintilla\\lua\\src\\lzio.h	/^  lua_Reader reader;$/;"	m	struct:Zio	typeref:typename:lua_Reader	access:public
reading	..\\scite\\src\\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anonf95580a60203	access:public
reallocprog	..\\scintilla\\lua\\src\\lpcode.c	/^void reallocprog (lua_State *L, Pattern *p, int nsize) {$/;"	f	typeref:typename:void	signature:(lua_State * L,Pattern * p,int nsize)
reallymarkobject	..\\scintilla\\lua\\src\\lgc.c	/^static void reallymarkobject (global_State *g, GCObject *o) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g,GCObject * o)
reason	..\\scintilla\\gtk\\ScintillaGTK.h	/^		TickReason reason;$/;"	m	struct:Scintilla::ScintillaGTK::TimeThunk	typeref:typename:TickReason	access:public
receive_command	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^	def receive_command(self, wParam, lParam):$/;"	m	class:Form	access:public	signature:(self, wParam, lParam)
receive_notification	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^	def receive_notification(self, scn):$/;"	m	class:Form	access:public	signature:(self, scn)
recentFileStack	..\\scite\\src\\SciTEBase.h	/^	RecentFile recentFileStack[fileStackMax];$/;"	m	class:SciTEBase	typeref:typename:RecentFile[]	access:protected
recfield	..\\scintilla\\lua\\src\\lparser.c	/^static void recfield (LexState *ls, struct ConsControl *cc) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,struct ConsControl * cc)
recording	..\\scite\\src\\SciTEBase.h	/^	bool recording;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
recordingMacro	..\\scintilla\\src\\Editor.h	/^	bool recordingMacro;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
rectDown	..\\scintilla\\src\\CallTip.h	/^	PRectangle rectDown;    \/\/ rectangle of last down arrow in the tip$/;"	m	class:Scintilla::CallTip	typeref:typename:PRectangle	access:private
rectUp	..\\scintilla\\src\\CallTip.h	/^	PRectangle rectUp;      \/\/ rectangle of last up angle in the tip$/;"	m	class:Scintilla::CallTip	typeref:typename:PRectangle	access:private
rectangular	..\\scintilla\\src\\Editor.h	/^	bool rectangular;$/;"	m	class:Scintilla::SelectionText	typeref:typename:bool	access:public
rectangularSelectionModifier	..\\scintilla\\gtk\\ScintillaGTK.h	/^	int rectangularSelectionModifier;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:int	access:private
rectangularSelectionModifier	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	int rectangularSelectionModifier;$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:int	access:private
redo	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::redo() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
redo_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * redo_xpm[] = {$/;"	v	typeref:typename:const char * []
ref	..\\scintilla\\win32\\ScintillaWin.cxx	/^	int ref;$/;"	m	class:FormatEnumerator	typeref:typename:int	file:	access:public
refCount	..\\scintilla\\src\\Document.h	/^	int refCount;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:private
reference	..\\scintilla\\src\\Document.cxx	/^	typedef char& reference;$/;"	t	class:__anon1ef09aa80111::ByteIterator	typeref:typename:char &	file:	access:public
reference	..\\scintilla\\src\\Document.cxx	/^	typedef wchar_t& reference;$/;"	t	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:wchar_t &	file:	access:public
regExp	..\\scite\\src\\SciTEBase.h	/^	bool regExp;$/;"	m	class:Searcher	typeref:typename:bool	access:public
regex	..\\scintilla\\src\\Document.h	/^	std::unique_ptr<RegexSearchBase> regex;$/;"	m	class:Scintilla::Document	typeref:typename:std::unique_ptr<RegexSearchBase>	access:private
regex_x_xpm	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char * regex_x_xpm[] = {$/;"	v	typeref:typename:const char * []	file:
registerlocalvar	..\\scintilla\\lua\\src\\lparser.c	/^static int registerlocalvar (LexState *ls, TString *varname) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls,TString * varname)
registry	..\\scintilla\\lua\\src\\lstate.h	/^#define registry(/;"	d	signature:(L)
rehash	..\\scintilla\\lua\\src\\ltable.c	/^static void rehash (lua_State *L, Table *t, const TValue *ek) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,Table * t,const TValue * ek)
remarkupvals	..\\scintilla\\lua\\src\\lgc.c	/^static void remarkupvals (global_State *g) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g)
removeAction	..\\scintilla\\src\\CellBuffer.h	/^enum actionType { insertAction, removeAction, startAction, containerAction };$/;"	e	enum:Scintilla::actionType	access:public
removePrivate	..\\scite\\scripts\\tags2api.py	/^removePrivate=1$/;"	v	access:public
removedyncap	..\\scintilla\\lua\\src\\lpvm.c	/^static int removedyncap (lua_State *L, Capture *capture,$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,Capture * capture,int level,int last)
removeentry	..\\scintilla\\lua\\src\\lgc.c	/^static void removeentry (Node *n) {$/;"	f	typeref:typename:void	file:	signature:(Node * n)
removevalues	..\\scintilla\\lua\\src\\lcode.c	/^static void removevalues (FuncState *fs, int list) {$/;"	f	typeref:typename:void	file:	signature:(FuncState * fs,int list)
removevars	..\\scintilla\\lua\\src\\lparser.c	/^static void removevars (LexState *ls, int tolevel) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int tolevel)
renderTargetValid	..\\scintilla\\win32\\ScintillaWin.cxx	/^	bool renderTargetValid;$/;"	m	class:ScintillaWin	typeref:typename:bool	file:	access:private
renderer	..\\scintilla\\gtk\\PlatGTK.cxx	/^	GtkCellRenderer* renderer;$/;"	m	class:ListBoxX	typeref:typename:GtkCellRenderer *	file:	access:private
repaintFullWindow	..\\scintilla\\gtk\\ScintillaGTK.h	/^	bool repaintFullWindow;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:bool	access:private
repeatstat	..\\scintilla\\lua\\src\\lparser.c	/^static void repeatstat (LexState *ls, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int line)
replaceStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	ReplaceStrip replaceStrip;$/;"	m	class:SciTEGTK	typeref:typename:ReplaceStrip	file:	access:protected
replaceStrip	..\\scite\\win32\\SciTEWin.h	/^	ReplaceStrip replaceStrip;$/;"	m	class:SciTEWin	typeref:typename:ReplaceStrip	access:protected
replaceWhat	..\\scite\\src\\SciTEBase.h	/^	std::string replaceWhat;$/;"	m	class:Searcher	typeref:typename:std::string	access:public
replace_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * replace_xpm[] = {$/;"	v	typeref:typename:const char * []
replacing	..\\scite\\src\\SciTEBase.h	/^	bool replacing;$/;"	m	class:Searcher	typeref:typename:bool	access:public
report	..\\scintilla\\lua\\src\\lua.c	/^static int report (lua_State *L, int status) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int status)
representation	..\\scintilla\\src\\PositionCache.h	/^	const Representation *representation;$/;"	m	struct:Scintilla::TextSegment	typeref:typename:const Representation *	access:public
reprs	..\\scintilla\\src\\EditModel.h	/^	SpecialRepresentations reprs;$/;"	m	class:Scintilla::EditModel	typeref:typename:SpecialRepresentations	access:public
requestPipeName	..\\scite\\gtk\\DirectorExtension.cxx	/^static char requestPipeName[MAX_PATH];$/;"	v	typeref:typename:char[]	file:
resdyncaptures	..\\scintilla\\lua\\src\\lpvm.c	/^static int resdyncaptures (lua_State *L, int fr, int curr, int limit) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int fr,int curr,int limit)
reserved	..\\scintilla\\lua\\src\\lobject.h	/^    lu_byte reserved;$/;"	m	struct:TString::__anonae4e9c5f0208	typeref:typename:lu_byte	access:public
reset	..\\scite\\src\\Utf8_16.cxx	/^void Utf16_Iter::reset() {$/;"	f	class:Utf16_Iter	typeref:typename:void	signature:()
reset	..\\scite\\src\\Utf8_16.cxx	/^void Utf8_Iter::reset() {$/;"	f	class:Utf8_Iter	typeref:typename:void	signature:()
reset2bits	..\\scintilla\\lua\\src\\lgc.h	/^#define reset2bits(/;"	d	signature:(x,b1,b2)
resetbit	..\\scintilla\\lua\\src\\lgc.h	/^#define resetbit(/;"	d	signature:(x,b)
resetbits	..\\scintilla\\lua\\src\\lgc.h	/^#define resetbits(/;"	d	signature:(x,m)
resethookcount	..\\scintilla\\lua\\src\\ldebug.h	/^#define resethookcount(/;"	d	signature:(L)
resetstack	..\\scintilla\\lua\\src\\ldo.c	/^static void resetstack (lua_State *L, int status) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int status)
resize	..\\scintilla\\lua\\src\\ltable.c	/^static void resize (lua_State *L, Table *t, int nasize, int nhsize) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,Table * t,int nasize,int nhsize)
resizeEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::resizeEvent(QResizeEvent *)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QResizeEvent *)
resizeEvent	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^	def resizeEvent(self, e):$/;"	m	class:Form	access:public	signature:(self, e)
resizeHit	..\\scintilla\\win32\\PlatWin.cxx	/^	int resizeHit;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:int	file:	access:private
resourceFileName	..\\scite\\scripts\\CheckPropsDoc.py	/^resourceFileName = srcRoot + "\/win32\/SciTERes.rc"$/;"	v	access:public
resourceSet	..\\scite\\scripts\\CheckPropsDoc.py	/^resourceSet = list(resourceSet.keys())$/;"	v	access:public
resourceSet	..\\scite\\scripts\\CheckPropsDoc.py	/^resourceSet = {}$/;"	v	access:public
restore_stack_limit	..\\scintilla\\lua\\src\\ldo.c	/^static void restore_stack_limit (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
restoreci	..\\scintilla\\lua\\src\\ldo.h	/^#define restoreci(/;"	d	signature:(L,n)
restorestack	..\\scintilla\\lua\\src\\ldo.h	/^#define restorestack(/;"	d	signature:(L,n)
resume	..\\scintilla\\lua\\src\\ldo.c	/^static void resume (lua_State *L, void *ud) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,void * ud)
resume_error	..\\scintilla\\lua\\src\\ldo.c	/^static int resume_error (lua_State *L, const char *msg) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const char * msg)
retrieveFeatures	..\\scite\\scripts\\CheckMentioned.py	/^def retrieveFeatures():$/;"	f	access:public	signature:()
retstat	..\\scintilla\\lua\\src\\lparser.c	/^static void retstat (LexState *ls) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls)
returnOutputToCommand	..\\scite\\src\\SciTEBase.h	/^	bool returnOutputToCommand;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
returnType	..\\scite\\src\\IFaceTable.h	/^	IFaceType returnType;$/;"	m	struct:IFaceFunction	typeref:typename:IFaceType	access:public
reverseArrowCursor	..\\scintilla\\win32\\PlatWin.cxx	/^static HCURSOR reverseArrowCursor = NULL;$/;"	v	typeref:typename:HCURSOR	file:
reverseFind	..\\scite\\src\\SciTEBase.h	/^	bool reverseFind;$/;"	m	class:Searcher	typeref:typename:bool	access:public
rgba_data	..\\scintilla\\gtk\\PlatGTK.cxx	/^	const RGBAImage *rgba_data;$/;"	m	struct:ListImage	typeref:typename:const RGBAImage *	file:	access:public
rgnUpdate	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GdkRegion *rgnUpdate;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:GdkRegion *	access:private
rgnUpdate	..\\scintilla\\gtk\\ScintillaGTK.h	/^	cairo_rectangle_list_t *rgnUpdate;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:cairo_rectangle_list_t *	access:private
right	..\\scintilla\\include\\Platform.h	/^	XYPOSITION right;$/;"	m	class:Scintilla::PRectangle	typeref:typename:XYPOSITION	access:public
right	..\\scintilla\\include\\Scintilla.h	/^	int right;$/;"	m	struct:Sci_Rectangle	typeref:typename:int	access:public
right	..\\scintilla\\lua\\src\\lparser.c	/^  lu_byte right; \/* right priority *\/$/;"	m	struct:__anon613de0d00108	typeref:typename:lu_byte	file:	access:public
right	..\\scite\\src\\GUI.h	/^	int right;$/;"	m	class:GUI::Rectangle	typeref:typename:int	access:public
rightMarginWidth	..\\scintilla\\src\\ViewStyle.h	/^	int rightMarginWidth;	\/\/\/< Spacing margin on right of text$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
rlActive	..\\scite\\src\\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	e	enum:PropSetFile::ReadLineState	access:public
rlConditionFalse	..\\scite\\src\\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	e	enum:PropSetFile::ReadLineState	access:public
rlExcludedModule	..\\scite\\src\\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	e	enum:PropSetFile::ReadLineState	access:public
rootgc	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *rootgc;  \/* list of all collectable objects *\/$/;"	m	struct:global_State	typeref:typename:GCObject *	access:public
rows	..\\scite\\gtk\\Widget.h	/^	int rows;$/;"	m	class:WTable	typeref:typename:int	access:private
rpmB	..\\scite\\scripts\\makerpms.py	/^	rpmB = "scite-" + vPoint + "-1.i386.rpm"$/;"	v	access:public
rpmBin	..\\scite\\scripts\\makerpms.py	/^rpmBin = "\/usr\/src\/redhat\/RPMS\/i386\/"$/;"	v	access:public
rpmRoot	..\\scite\\scripts\\makerpms.py	/^rpmRoot = "\/usr\/src\/redhat\/SOURCES\/"$/;"	v	access:public
rpmS	..\\scite\\scripts\\makerpms.py	/^	rpmS = "scite-" + vPoint + "-1.src.rpm"$/;"	v	access:public
rpmSource	..\\scite\\scripts\\makerpms.py	/^rpmSource = "\/usr\/src\/redhat\/SRPMS\/"$/;"	v	access:public
rpmVFileName	..\\scite\\scripts\\makerpms.py	/^	rpmVFileName = rpmRoot + tgzV$/;"	v	access:public
rs	..\\scintilla\\src\\Decoration.h	/^	RunStyles<Sci::Position, int> rs;$/;"	m	class:Scintilla::Decoration	typeref:typename:RunStyles<Sci::Position,int>	access:public
runGenerator	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def runGenerator(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
runProgram	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def runProgram(args, exitOnFailure):$/;"	f	access:public	signature:(args, exitOnFailure)
runargs	..\\scintilla\\lua\\src\\lua.c	/^static int runargs (lua_State *L, char **argv, int n) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,char ** argv,int n)
runtime_check	..\\scintilla\\lua\\src\\lvm.c	/^#define runtime_check(/;"	d	file:	signature:(L,c)
runtimecap	..\\scintilla\\lua\\src\\lpcap.c	/^int runtimecap (CapState *cs, Capture *close, const char *s, int *rem) {$/;"	f	typeref:typename:int	signature:(CapState * cs,Capture * close,const char * s,int * rem)
s	..\\scintilla\\lua\\src\\lauxlib.c	/^  const char *s;$/;"	m	struct:LoadS	typeref:typename:const char *	file:	access:public
s	..\\scintilla\\lua\\src\\lparser.h	/^    struct { int info, aux; } s;$/;"	m	union:expdesc::__anon613de0d5020a	typeref:struct:expdesc::__anon613de0d5020a::__anon613de0d50308	access:public
s	..\\scintilla\\lua\\src\\lpcap.c	/^      const char *s;  \/* ... starts here *\/$/;"	m	struct:StrAux::__anond6d1f967010a::__anond6d1f9670208	typeref:typename:const char *	file:	access:public
s	..\\scintilla\\lua\\src\\lpcap.c	/^    } s;$/;"	m	union:StrAux::__anond6d1f967010a	typeref:struct:StrAux::__anond6d1f967010a::__anond6d1f9670208	file:	access:public
s	..\\scintilla\\lua\\src\\lpcap.h	/^  const char *s;  \/* original string *\/$/;"	m	struct:CapState	typeref:typename:const char *	access:public
s	..\\scintilla\\lua\\src\\lpcap.h	/^  const char *s;  \/* subject position *\/$/;"	m	struct:Capture	typeref:typename:const char *	access:public
s	..\\scintilla\\lua\\src\\lpvm.c	/^  const char *s;  \/* saved position (or NULL for calls) *\/$/;"	m	struct:Stack	typeref:typename:const char *	file:	access:public
s	..\\scintilla\\src\\Editor.h	/^	std::string s;$/;"	m	class:Scintilla::SelectionText	typeref:typename:std::string	access:private
sMSDEVColumnSelect	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static const QString sMSDEVColumnSelect("MSDEVColumnSelect");$/;"	v	typeref:typename:const QString	file:
sMimeRectangularMarker	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static const QString sMimeRectangularMarker("text\/x-rectangular-marker");$/;"	v	typeref:typename:const QString	file:
sScintillaRecMimeType	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static const QString sScintillaRecMimeType("text\/x-scintilla.utf16-plain-text.rectangular");$/;"	v	typeref:typename:const QString	file:
sScintillaRecPboardType	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static const QString sScintillaRecPboardType("com.scintilla.utf16-plain-text.rectangular");$/;"	v	typeref:typename:const QString	file:
sWrappedMSDEVColumnSelect	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static const QString sWrappedMSDEVColumnSelect("application\/x-qt-windows-mime;value=\\"MSDEVCol/;"	v	typeref:typename:const QString	file:
s_send_cnt	..\\scite\\gtk\\DirectorExtension.cxx	/^static int s_send_cnt = 0;$/;"	v	typeref:typename:int	file:
s_send_pipes	..\\scite\\gtk\\DirectorExtension.cxx	/^static PipeEntry s_send_pipes[MAX_PIPES];$/;"	v	typeref:typename:PipeEntry[]	file:
sacHover	..\\scintilla\\src\\Indicator.h	/^	StyleAndColour sacHover;$/;"	m	class:Scintilla::Indicator	typeref:typename:StyleAndColour	access:public
sacNormal	..\\scintilla\\src\\Indicator.h	/^	StyleAndColour sacNormal;$/;"	m	class:Scintilla::Indicator	typeref:typename:StyleAndColour	access:public
saeCurrentPos	..\\scintilla\\src\\PositionCache.h	/^	unsigned int saeCurrentPos;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:unsigned int	access:private
saeNext	..\\scintilla\\src\\PositionCache.h	/^	int saeNext;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:int	access:private
sanitiseLine	..\\scintilla\\scripts\\Face.py	/^def sanitiseLine(line):$/;"	f	access:public	signature:(line)
save	..\\scintilla\\lua\\src\\llex.c	/^static void save (LexState *ls, int c) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int c)
saveBefore	..\\scite\\src\\JobQueue.h	/^	int saveBefore;$/;"	m	struct:JobMode	typeref:typename:int	access:public
saveCancelled	..\\scite\\src\\SciTEBase.h	/^		saveCancelled$/;"	e	enum:SciTEBase::SaveResult	access:public
saveCompleted	..\\scite\\src\\SciTEBase.h	/^		saveCompleted,$/;"	e	enum:SciTEBase::SaveResult	access:public
saveFormat	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	m	class:SciTEGTK	typeref:enum:SciTEGTK::FileFormat	file:	access:protected
savePoint	..\\scintilla\\src\\CellBuffer.h	/^	int savePoint;$/;"	m	class:Scintilla::UndoHistory	typeref:typename:int	access:private
save_and_next	..\\scintilla\\lua\\src\\llex.c	/^#define save_and_next(/;"	d	file:	signature:(ls)
saveci	..\\scintilla\\lua\\src\\ldo.h	/^#define saveci(/;"	d	signature:(L,p)
saved	..\\scite\\gtk\\SciTEGTK.cxx	/^	GdkRectangle saved;$/;"	m	class:SciTEGTK	typeref:typename:GdkRectangle	file:	access:protected
savedpc	..\\scintilla\\lua\\src\\lstate.h	/^  const Instruction *savedpc;  \/* `savedpc' of current function *\/$/;"	m	struct:lua_State	typeref:typename:const Instruction *	access:public
savedpc	..\\scintilla\\lua\\src\\lstate.h	/^  const Instruction *savedpc;$/;"	m	struct:CallInfo	typeref:typename:const Instruction *	access:public
savestack	..\\scintilla\\lua\\src\\ldo.h	/^#define savestack(/;"	d	signature:(L,p)
sbContextID	..\\scite\\gtk\\SciTEGTK.cxx	/^	guint sbContextID;$/;"	m	class:SciTEGTK	typeref:typename:guint	file:	access:protected
sbNum	..\\scite\\src\\SciTEBase.h	/^	int sbNum;	\/\/\/< Number of the currently displayed status bar information.$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
sbValue	..\\scite\\src\\SciTEBase.h	/^	std::string sbValue;	\/\/\/< Status bar text.$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
sbVisible	..\\scite\\src\\SciTEBase.h	/^	bool sbVisible;	\/\/\/< @c true if status bar is visible.$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
scChange	..\\scite\\src\\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand	access:public
scClicked	..\\scite\\src\\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand	access:public
scFocusIn	..\\scite\\src\\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand	access:public
scFocusOut	..\\scite\\src\\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand	access:public
scUnknown	..\\scite\\src\\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand	access:public
scale	..\\scintilla\\src\\XPM.h	/^	float scale;$/;"	m	class:Scintilla::RGBAImage	typeref:typename:float	access:private
scale	..\\scite\\win32\\Strips.h	/^	int scale;$/;"	m	class:Strip	typeref:typename:int	access:protected
scaleRGBAImage	..\\scintilla\\src\\Editor.h	/^	float scaleRGBAImage;$/;"	m	class:Scintilla::Editor	typeref:typename:float	access:protected
scanformat	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *scanformat (lua_State *L, const char *strfrmt, char *form) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,const char * strfrmt,char * form)
sci	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^		ScintillaGTK *sci;$/;"	m	class:ScintillaGTK::Paste::Helper	typeref:typename:ScintillaGTK *	file:	access:private
sci	..\\scintilla\\gtk\\ScintillaGTK.h	/^	_ScintillaObject *sci;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:_ScintillaObject *	access:private
sci	..\\scintilla\\gtk\\ScintillaGTKAccessible.h	/^	ScintillaGTK *sci;$/;"	m	class:Scintilla::ScintillaGTKAccessible	typeref:typename:ScintillaGTK *	access:private
sci	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^import ScintillaConstants as sci$/;"	I	access:public
sci	..\\scintilla\\scripts\\ScintillaData.py	/^    sci = ScintillaData("..\/")$/;"	v	access:public
sci	..\\scintilla\\win32\\ScintillaWin.cxx	/^	ScintillaWin *sci;$/;"	m	class:DataObject	typeref:typename:ScintillaWin *	file:	access:public
sci	..\\scintilla\\win32\\ScintillaWin.cxx	/^	ScintillaWin *sci;$/;"	m	class:DropSource	typeref:typename:ScintillaWin *	file:	access:public
sci	..\\scintilla\\win32\\ScintillaWin.cxx	/^	ScintillaWin *sci;$/;"	m	class:DropTarget	typeref:typename:ScintillaWin *	file:	access:public
sciView	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  ScintillaView* sciView;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:ScintillaView *	access:private
scia	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^		ScintillaGTKAccessible *scia;$/;"	m	struct:ScintillaGTKAccessible::PasteText::Helper	typeref:typename:ScintillaGTKAccessible *	file:	access:public
scintilla	..\\scintilla\\gtk\\ScintillaGTK.h	/^		ScintillaGTK *scintilla;$/;"	m	struct:Scintilla::ScintillaGTK::TimeThunk	typeref:typename:ScintillaGTK *	access:public
scintillaClassAtom	..\\scintilla\\win32\\ScintillaWin.cxx	/^	static ATOM scintillaClassAtom;$/;"	m	class:ScintillaWin	typeref:typename:ATOM	file:	access:private
scintillaClassAtom	..\\scintilla\\win32\\ScintillaWin.cxx	/^ATOM ScintillaWin::scintillaClassAtom = 0;$/;"	m	class:ScintillaWin	typeref:typename:ATOM
scintillaDirectory	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^scintillaDirectory = "..\/.."$/;"	v	access:public
scintillaDirectory	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^scintillaDirectory = "..\/.."$/;"	v	access:public
scintillaDirectory	..\\scite\\scripts\\commandsdoc.py	/^scintillaDirectory = os.path.join("..", "..", "scintilla")$/;"	v	access:public
scintillaScriptsDirectory	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^scintillaScriptsDirectory = os.path.join(scintillaDirectory, "scripts")$/;"	v	access:public
scintillaScriptsDirectory	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^scintillaScriptsDirectory = os.path.join(scintillaDirectory, "scripts")$/;"	v	access:public
scintillaScriptsDirectory	..\\scite\\scripts\\commandsdoc.py	/^scintillaScriptsDirectory = os.path.join(scintillaDirectory, "scripts")$/;"	v	access:public
scintilla_class_init	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void scintilla_class_init(ScintillaClass *klass) {$/;"	f	typeref:typename:void	file:	signature:(ScintillaClass * klass)
scintilla_class_parent_class	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static GObjectClass *scintilla_class_parent_class;$/;"	v	typeref:typename:GObjectClass *	file:
scintilla_delete	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void scintilla_delete(void *sci) {$/;"	f	typeref:typename:void	signature:(void * sci)
scintilla_get_clipboard	..\\scintilla\\curses\\ScintillaCurses.cxx	/^int scintilla_get_clipboard(void *sci, char *buffer) {$/;"	f	typeref:typename:int	signature:(void * sci,char * buffer)
scintilla_get_type	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GType scintilla_get_type() {$/;"	f	typeref:typename:GType	signature:()
scintilla_get_window	..\\scintilla\\curses\\ScintillaCurses.cxx	/^WINDOW *scintilla_get_window(void *sci) {$/;"	f	typeref:typename:WINDOW *	signature:(void * sci)
scintilla_init	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static void scintilla_init(ScintillaObject *sci) {$/;"	f	typeref:typename:void	file:	signature:(ScintillaObject * sci)
scintilla_marshal_VOID__INT_BOXED	..\\scintilla\\gtk\\scintilla-marshal.c	/^scintilla_marshal_VOID__INT_BOXED (GClosure     *closure,$/;"	f	typeref:typename:void	signature:(GClosure * closure,GValue * return_value G_GNUC_UNUSED,guint n_param_values,const GValue * param_values,gpointer invocation_hint G_GNUC_UNUSED,gpointer marshal_data)
scintilla_marshal_VOID__INT_OBJECT	..\\scintilla\\gtk\\scintilla-marshal.c	/^scintilla_marshal_VOID__INT_OBJECT (GClosure     *closure,$/;"	f	typeref:typename:void	signature:(GClosure * closure,GValue * return_value G_GNUC_UNUSED,guint n_param_values,const GValue * param_values,gpointer invocation_hint G_GNUC_UNUSED,gpointer marshal_data)
scintilla_new	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void *scintilla_new(void (*callback)(void *, int, void *, void *)) {$/;"	f	typeref:typename:void *	signature:(void (* callback)(void *,int,void *,void *))
scintilla_new	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GtkWidget* scintilla_new() {$/;"	f	typeref:typename:GtkWidget *	signature:()
scintilla_noutrefresh	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void scintilla_noutrefresh(void *sci) {$/;"	f	typeref:typename:void	signature:(void * sci)
scintilla_object_accessible_class_init	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_class_init(ScintillaObjectAccessibleClass *klass) {$/;"	f	typeref:typename:void	file:	signature:(ScintillaObjectAccessibleClass * klass)
scintilla_object_accessible_factory_class_init	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_factory_class_init(AtkObjectFactoryClass * klass) {$/;"	f	typeref:typename:void	file:	signature:(AtkObjectFactoryClass * klass)
scintilla_object_accessible_factory_create_accessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static AtkObject *scintilla_object_accessible_factory_create_accessible(GObject *obj) {$/;"	f	typeref:typename:AtkObject *	file:	signature:(GObject * obj)
scintilla_object_accessible_factory_get_accessible_type	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static GType scintilla_object_accessible_factory_get_accessible_type(void) {$/;"	f	typeref:typename:GType	file:	signature:(void)
scintilla_object_accessible_finalize	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_finalize(GObject *object) {$/;"	f	typeref:typename:void	file:	signature:(GObject * object)
scintilla_object_accessible_get_type	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static GType scintilla_object_accessible_get_type(GType parent_type G_GNUC_UNUSED) {$/;"	f	typeref:typename:GType	file:	signature:(GType parent_type G_GNUC_UNUSED)
scintilla_object_accessible_init	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_init(ScintillaObjectAccessible *accessible) {$/;"	f	typeref:typename:void	file:	signature:(ScintillaObjectAccessible * accessible)
scintilla_object_accessible_initialize	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_initialize(AtkObject *obj, gpointer data) {$/;"	f	typeref:typename:void	file:	signature:(AtkObject * obj,gpointer data)
scintilla_object_accessible_new	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static AtkObject *scintilla_object_accessible_new(GType parent_type, GObject *obj) {$/;"	f	typeref:typename:AtkObject *	file:	signature:(GType parent_type,GObject * obj)
scintilla_object_accessible_parent_class	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static gpointer scintilla_object_accessible_parent_class = NULL;$/;"	v	typeref:typename:gpointer	file:
scintilla_object_accessible_ref_state_set	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static AtkStateSet *scintilla_object_accessible_ref_state_set(AtkObject *accessible) {$/;"	f	typeref:typename:AtkStateSet *	file:	signature:(AtkObject * accessible)
scintilla_object_accessible_widget_set	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_widget_set(GtkAccessible *accessible) {$/;"	f	typeref:typename:void	file:	signature:(GtkAccessible * accessible)
scintilla_object_accessible_widget_unset	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^static void scintilla_object_accessible_widget_unset(GtkAccessible *accessible) {$/;"	f	typeref:typename:void	file:	signature:(GtkAccessible * accessible)
scintilla_object_get_type	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GType scintilla_object_get_type() {$/;"	f	typeref:typename:GType	signature:()
scintilla_object_new	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GtkWidget *scintilla_object_new() {$/;"	f	typeref:typename:GtkWidget *	signature:()
scintilla_object_send_message	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^gintptr scintilla_object_send_message(ScintillaObject *sci, unsigned int iMessage, uptr_t wParam/;"	f	typeref:typename:gintptr	signature:(ScintillaObject * sci,unsigned int iMessage,uptr_t wParam,sptr_t lParam)
scintilla_refresh	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void scintilla_refresh(void *sci) {$/;"	f	typeref:typename:void	signature:(void * sci)
scintilla_release_resources	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void scintilla_release_resources(void) {$/;"	f	typeref:typename:void	signature:(void)
scintilla_send_key	..\\scintilla\\curses\\ScintillaCurses.cxx	/^void scintilla_send_key(void *sci, int key, bool shift, bool ctrl, bool alt) {$/;"	f	typeref:typename:void	signature:(void * sci,int key,bool shift,bool ctrl,bool alt)
scintilla_send_message	..\\scintilla\\curses\\ScintillaCurses.cxx	/^sptr_t scintilla_send_message(void *sci, unsigned int iMessage, uptr_t wParam,$/;"	f	typeref:typename:sptr_t	signature:(void * sci,unsigned int iMessage,uptr_t wParam,sptr_t lParam)
scintilla_send_message	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^sptr_t scintilla_send_message(ScintillaObject *sci, unsigned int iMessage, uptr_t wParam, sptr_t/;"	f	typeref:typename:sptr_t	signature:(ScintillaObject * sci,unsigned int iMessage,uptr_t wParam,sptr_t lParam)
scintilla_send_mouse	..\\scintilla\\curses\\ScintillaCurses.cxx	/^bool scintilla_send_mouse(void *sci, int event, unsigned int time, int button,$/;"	f	typeref:typename:bool	signature:(void * sci,int event,unsigned int time,int button,int y,int x,bool shift,bool ctrl,bool alt)
scintilla_set_id	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^void scintilla_set_id(ScintillaObject *sci, uptr_t id) {$/;"	f	typeref:typename:void	signature:(ScintillaObject * sci,uptr_t id)
scintilla_signals	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^static gint scintilla_signals[LAST_SIGNAL] = { 0 };$/;"	v	typeref:typename:gint[]	file:
sciteExecutable	..\\scite\\gtk\\SciTEGTK.cxx	/^	FilePath sciteExecutable;$/;"	m	class:SciTEGTK	typeref:typename:FilePath	file:	access:protected
scite_lua_fopen	..\\scite\\win32\\SciTEWin.cxx	/^FILE *scite_lua_fopen(const char *filename, const char *mode) {$/;"	f	typeref:typename:FILE *	signature:(const char * filename,const char * mode)
scite_lua_popen	..\\scite\\win32\\SciTEWin.cxx	/^FILE *scite_lua_popen(const char *filename, const char *mode) {$/;"	f	typeref:typename:FILE *	signature:(const char * filename,const char * mode)
sclex	..\\scintilla\\scripts\\ScintillaData.py	/^        sclex = sci.sclexFromName[lexName]$/;"	v	access:public
scnotification	..\\scintilla\\curses\\jinx\\jinx.c	/^void scnotification(Scintilla *view, int msg, void *lParam, void *wParam) {$/;"	f	typeref:typename:void	signature:(Scintilla * view,int msg,void * lParam,void * wParam)
scnotification_get_type	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^GType scnotification_get_type(void) {$/;"	f	typeref:typename:GType	signature:(void)
scrollArea	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	QAbstractScrollArea *scrollArea;$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:QAbstractScrollArea *	access:private
scrollBarHPos	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int scrollBarVPos, scrollBarHPos; \/\/ positions of the scroll bars$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
scrollBarHeight	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int scrollBarHeight, scrollBarWidth; \/\/ height and width of the scroll bars$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
scrollBarVPos	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int scrollBarVPos, scrollBarHPos; \/\/ positions of the scroll bars$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
scrollBarWidth	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int scrollBarHeight, scrollBarWidth; \/\/ height and width of the scroll bars$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
scrollContentsBy	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^	void scrollContentsBy(int, int) override {}$/;"	f	class:ScintillaEditBase	typeref:typename:void	access:protected	signature:(int,int)
scrollHorizontal	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::scrollHorizontal(int value)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(int value)
scrollOutput	..\\scite\\src\\SciTEBase.h	/^	int scrollOutput;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
scrollPosition	..\\scite\\src\\SciTEBase.h	/^	int scrollPosition;$/;"	m	class:RecentFile	typeref:typename:int	access:public
scrollSpeed	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  int scrollSpeed;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:int	access:private
scrollTicks	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  int scrollTicks;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:int	access:private
scrollVertical	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::scrollVertical(int value)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(int value)
scrollWidth	..\\scintilla\\src\\Editor.h	/^	int scrollWidth;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
scrollbarh	..\\scintilla\\gtk\\ScintillaGTK.h	/^	Window scrollbarh;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:Window	access:private
scrollbarv	..\\scintilla\\gtk\\ScintillaGTK.h	/^	Window scrollbarv;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:Window	access:private
scroller	..\\scintilla\\gtk\\PlatGTK.cxx	/^	WindowID scroller;$/;"	m	class:ListBoxX	typeref:typename:WindowID	file:	access:private
sdBack	..\\scite\\src\\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags	access:public
sdCaseForce	..\\scite\\src\\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	e	enum:StyleDefinition::flags	access:public
sdChangeable	..\\scite\\src\\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	e	enum:StyleDefinition::flags	access:public
sdEOLFilled	..\\scite\\src\\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags	access:public
sdFont	..\\scite\\src\\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags	access:public
sdFore	..\\scite\\src\\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags	access:public
sdItalics	..\\scite\\src\\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags	access:public
sdNone	..\\scite\\src\\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags	access:public
sdSize	..\\scite\\src\\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags	access:public
sdUnderlined	..\\scite\\src\\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags	access:public
sdVisible	..\\scite\\src\\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	e	enum:StyleDefinition::flags	access:public
sdWeight	..\\scite\\src\\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags	access:public
search	..\\scintilla\\src\\Document.cxx	/^	RESearch search;$/;"	m	class:BuiltinRegex	typeref:typename:RESearch	file:	access:private
searchAnchor	..\\scintilla\\src\\Editor.h	/^	Sci::Position searchAnchor;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
searchFlags	..\\scintilla\\src\\Editor.h	/^	int searchFlags;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
searchLen	..\\scite\\src\\StringList.cxx	/^	size_t searchLen;$/;"	m	struct:__anon6836dfd10111::CompareString	typeref:typename:size_t	file:	access:public
searchLen	..\\scite\\src\\StringList.cxx	/^	size_t searchLen;$/;"	m	struct:__anon6836dfd10111::CompareStringInsensitive	typeref:typename:size_t	file:	access:public
searchStartPosition	..\\scite\\src\\SciTEBase.h	/^	int searchStartPosition;$/;"	m	class:Searcher	typeref:typename:int	access:public
searchStrip	..\\scite\\win32\\SciTEWin.h	/^	SearchStrip searchStrip;$/;"	m	class:SciTEWin	typeref:typename:SearchStrip	access:protected
search_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * search_xpm[] = {$/;"	v	typeref:typename:const char * []
searchvar	..\\scintilla\\lua\\src\\lparser.c	/^static int searchvar (FuncState *fs, TString *n) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,TString * n)
secondaryDistance	..\\scintilla\\lexlib\\SubStyles.h	/^	int secondaryDistance;$/;"	m	class:Scintilla::SubStyles	typeref:typename:int	access:private
seenOutput	..\\scite\\win32\\SciTEWin.h	/^	bool seenOutput;$/;"	m	class:CommandWorker	typeref:typename:bool	access:public
segStyle	..\\scite\\src\\ExportPDF.cxx	/^		char *segStyle;		\/\/ style of segment$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:char *	file:	access:private
segment	..\\scite\\src\\ExportPDF.cxx	/^		std::string segment;	\/\/ character data$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:std::string	file:	access:private
sel	..\\scintilla\\src\\EditModel.h	/^	Selection sel;$/;"	m	class:Scintilla::EditModel	typeref:typename:Selection	access:public
selAdditionalAlpha	..\\scintilla\\src\\ViewStyle.h	/^	int selAdditionalAlpha;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
selAdditionalBackground	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired selAdditionalBackground;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
selAdditionalForeground	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired selAdditionalForeground;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
selAlpha	..\\scintilla\\src\\ViewStyle.h	/^	int selAlpha;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
selAndEdge	..\\scintilla\\src\\PositionCache.h	/^	std::vector<int> selAndEdge;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:std::vector<int>	access:private
selBackground2	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired selBackground2;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
selChar	..\\scintilla\\src\\Editor.h	/^	enum { selChar, selWord, selSubLine, selWholeLine } selectionType;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450403	access:public
selColours	..\\scintilla\\src\\ViewStyle.h	/^	ForeBackColours selColours;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ForeBackColours	access:public
selEOLFilled	..\\scintilla\\src\\ViewStyle.h	/^	bool selEOLFilled;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
selLines	..\\scintilla\\src\\Selection.h	/^	enum selTypes { noSel, selStream, selRectangle, selLines, selThin };$/;"	e	enum:Scintilla::Selection::selTypes	access:public
selRectangle	..\\scintilla\\src\\Selection.h	/^	enum selTypes { noSel, selStream, selRectangle, selLines, selThin };$/;"	e	enum:Scintilla::Selection::selTypes	access:public
selStream	..\\scintilla\\src\\Selection.h	/^	enum selTypes { noSel, selStream, selRectangle, selLines, selThin };$/;"	e	enum:Scintilla::Selection::selTypes	access:public
selSubLine	..\\scintilla\\src\\Editor.h	/^	enum { selChar, selWord, selSubLine, selWholeLine } selectionType;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450403	access:public
selThin	..\\scintilla\\src\\Selection.h	/^	enum selTypes { noSel, selStream, selRectangle, selLines, selThin };$/;"	e	enum:Scintilla::Selection::selTypes	access:public
selType	..\\scintilla\\src\\Selection.h	/^	selTypes selType;$/;"	m	class:Scintilla::Selection	typeref:typename:selTypes	access:public
selTypes	..\\scintilla\\src\\Selection.h	/^	enum selTypes { noSel, selStream, selRectangle, selLines, selThin };$/;"	g	class:Scintilla::Selection	access:public
selWholeLine	..\\scintilla\\src\\Editor.h	/^	enum { selChar, selWord, selSubLine, selWholeLine } selectionType;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450403	access:public
selWord	..\\scintilla\\src\\Editor.h	/^	enum { selChar, selWord, selSubLine, selWholeLine } selectionType;$/;"	e	enum:Scintilla::Editor::__anon8e1f0c450403	access:public
selbar	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired selbar;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
selbarlight	..\\scintilla\\src\\ViewStyle.h	/^	ColourDesired selbarlight;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ColourDesired	access:public
selection	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int selection;$/;"	m	class:ListBoxImpl	typeref:typename:int	file:	access:private
selection	..\\scite\\src\\SciTEBase.h	/^	SelectedRange selection;$/;"	m	class:RecentFile	typeref:typename:SelectedRange	access:public
selectionChange	..\\scintilla\\include\\Platform.h	/^	enum class EventType { selectionChange, doubleClick } event;$/;"	e	enum:Scintilla::ListBoxEvent::EventType	access:public
selectionChanged	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListWidget::selectionChanged() {$/;"	f	class:Scintilla::ListWidget	typeref:typename:void	signature:()
selectionType	..\\scintilla\\src\\Editor.h	/^	enum { selChar, selWord, selSubLine, selWholeLine } selectionType;$/;"	m	class:Scintilla::Editor	typeref:enum:Scintilla::Editor::__anon8e1f0c450403	access:protected
seminfo	..\\scintilla\\lua\\src\\llex.h	/^  SemInfo seminfo;$/;"	m	struct:Token	typeref:typename:SemInfo	access:public
send	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^sptr_t ScintillaEditBase::send($/;"	f	class:ScintillaEditBase	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,sptr_t lParam) const
sends	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^sptr_t ScintillaEditBase::sends($/;"	f	class:ScintillaEditBase	typeref:typename:sptr_t	signature:(unsigned int iMessage,uptr_t wParam,const char * s) const
sensitive	..\\scintilla\\src\\ViewStyle.h	/^	bool sensitive;$/;"	m	class:Scintilla::MarginStyle	typeref:typename:bool	access:public
sentinel	..\\scintilla\\lua\\src\\loadlib.c	/^#define sentinel	/;"	d	file:
sentinel_	..\\scintilla\\lua\\src\\loadlib.c	/^static const int sentinel_ = 0;$/;"	v	typeref:typename:const int	file:
sepBuild	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	sepBuild = SepBuilder()$/;"	v	access:public
separator	..\\scintilla\\src\\AutoComplete.h	/^	char separator;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:char	access:private
seqaux	..\\scintilla\\lua\\src\\lptree.c	/^static TTree *seqaux (TTree *tree, TTree *sib, int sibsize) {$/;"	f	typeref:typename:TTree *	file:	signature:(TTree * tree,TTree * sib,int sibsize)
set	..\\scite\\src\\Utf8_16.cxx	/^void Utf16_Iter::set$/;"	f	class:Utf16_Iter	typeref:typename:void	signature:(const ubyte * pBuf,size_t nLen,encodingType eEncoding,ubyte * endSurrogate)
set	..\\scite\\src\\Utf8_16.cxx	/^void Utf8_Iter::set$/;"	f	class:Utf8_Iter	typeref:typename:void	signature:(const ubyte * pBuf,size_t nLen,encodingType eEncoding)
set2	..\\scintilla\\lua\\src\\ltablib.c	/^static void set2 (lua_State *L, int i, int j) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int i,int j)
set2bits	..\\scintilla\\lua\\src\\lgc.h	/^#define set2bits(/;"	d	signature:(x,b1,b2)
setAlpha	..\\scintilla\\lexlib\\CharacterSet.h	/^		setAlpha=setLower|setUpper,$/;"	e	enum:Scintilla::CharacterSet::setBase	access:public
setAlphaNum	..\\scintilla\\lexlib\\CharacterSet.h	/^		setAlphaNum=setAlpha|setDigits$/;"	e	enum:Scintilla::CharacterSet::setBase	access:public
setBase	..\\scintilla\\lexlib\\CharacterSet.h	/^	enum setBase {$/;"	g	class:Scintilla::CharacterSet	access:public
setCTStyleColor	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	void setCTStyleColor(CGColor *inColor)$/;"	f	class:QuartzTextStyle	typeref:typename:void	access:public	signature:(CGColor * inColor)
setContext	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    inline void setContext (CGContextRef context)$/;"	f	class:QuartzTextLayout	typeref:typename:void	access:public	signature:(CGContextRef context)
setDelegate	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^void ListWidget::setDelegate(IListBoxDelegate *lbDelegate)$/;"	f	class:Scintilla::ListWidget	typeref:typename:void	signature:(IListBoxDelegate * lbDelegate)
setDigits	..\\scintilla\\lexlib\\CharacterSet.h	/^		setDigits=4,$/;"	e	enum:Scintilla::CharacterSet::setBase	access:public
setEncoding	..\\scite\\src\\Utf8_16.cxx	/^void Utf8_16_Write::setEncoding(Utf8_16::encodingType eType) {$/;"	f	class:Utf8_16_Write	typeref:typename:void	signature:(Utf8_16::encodingType eType)
setFontRef	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	void setFontRef(CTFontRef inRef, int characterSet_)$/;"	f	class:QuartzTextStyle	typeref:typename:void	access:public	signature:(CTFontRef inRef,int characterSet_)
setLower	..\\scintilla\\lexlib\\CharacterSet.h	/^		setLower=1,$/;"	e	enum:Scintilla::CharacterSet::setBase	access:public
setNone	..\\scintilla\\lexlib\\CharacterSet.h	/^		setNone=0,$/;"	e	enum:Scintilla::CharacterSet::setBase	access:public
setStyle	..\\scite\\src\\ExportPDF.cxx	/^		void setStyle(char *buff, int style_) {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:(char * buff,int style_)
setText	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    inline void setText( const UInt8* buffer, size_t byteLength, CFStringEncoding encoding, cons/;"	f	class:QuartzTextLayout	typeref:typename:void	access:public	signature:(const UInt8 * buffer,size_t byteLength,CFStringEncoding encoding,const QuartzTextStyle & r)
setUpper	..\\scintilla\\lexlib\\CharacterSet.h	/^		setUpper=2,$/;"	e	enum:Scintilla::CharacterSet::setBase	access:public
set_code_page	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::set_code_page(int code_page) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int code_page)
set_current_indicator	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::set_current_indicator(int indic) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int indic)
set_eol_mode	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::set_eol_mode(int eol_mode) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int eol_mode)
set_read_only	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::set_read_only(bool read_only) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(bool read_only)
set_save_point	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::set_save_point() {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:()
set_style_for	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::set_style_for(int length, char style) {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:(int length,char style)
set_undo_collection	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^bool ScintillaDocument::set_undo_collection(bool collect_undo) {$/;"	f	class:ScintillaDocument	typeref:typename:bool	signature:(bool collect_undo)
setarrayvector	..\\scintilla\\lua\\src\\ltable.c	/^static void setarrayvector (lua_State *L, Table *t, int size) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,Table * t,int size)
setbits	..\\scintilla\\lua\\src\\lgc.h	/^#define setbits(/;"	d	signature:(x,m)
setboolfield	..\\scintilla\\lua\\src\\loslib.c	/^static void setboolfield (lua_State *L, const char *key, int value) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * key,int value)
setbvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setbvalue(/;"	d	signature:(obj,x)
setchar	..\\scintilla\\lua\\src\\lptypes.h	/^#define setchar(/;"	d	signature:(cs,b)
setclvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setclvalue(/;"	d	signature:(L,obj,x)
setfenv	..\\scintilla\\lua\\src\\loadlib.c	/^static void setfenv (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
setfield	..\\scintilla\\lua\\src\\loslib.c	/^static void setfield (lua_State *L, const char *key, int value) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * key,int value)
setfile	..\\scite\\src\\Utf8_16.cxx	/^void Utf8_16_Write::setfile(FILE *pFile) {$/;"	f	class:Utf8_16_Write	typeref:typename:void	signature:(FILE * pFile)
sethvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define sethvalue(/;"	d	signature:(L,obj,x)
sethvalue2s	..\\scintilla\\lua\\src\\lobject.h	/^#define sethvalue2s	/;"	d
setn	..\\scintilla\\lua\\src\\ltablib.c	/^static int setn (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
setnilvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setnilvalue(/;"	d	signature:(obj)
setnodevector	..\\scintilla\\lua\\src\\ltable.c	/^static void setnodevector (lua_State *L, Table *t, int size) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,Table * t,int size)
setnvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setnvalue(/;"	d	signature:(obj,x)
setobj	..\\scintilla\\lua\\src\\lobject.h	/^#define setobj(/;"	d	signature:(L,obj1,obj2)
setobj2n	..\\scintilla\\lua\\src\\lobject.h	/^#define setobj2n	/;"	d
setobj2s	..\\scintilla\\lua\\src\\lobject.h	/^#define setobj2s	/;"	d
setobj2t	..\\scintilla\\lua\\src\\lobject.h	/^#define setobj2t	/;"	d
setobjs2s	..\\scintilla\\lua\\src\\lobject.h	/^#define setobjs2s	/;"	d
setobjt2t	..\\scintilla\\lua\\src\\lobject.h	/^#define setobjt2t	/;"	d
setoffset	..\\scintilla\\lua\\src\\lpcode.c	/^static void setoffset (CompileState *compst, int instruction, int offset) {$/;"	f	typeref:typename:void	file:	signature:(CompileState * compst,int instruction,int offset)
setpath	..\\scintilla\\lua\\src\\loadlib.c	/^static void setpath (lua_State *L, const char *fieldname, const char *envname,$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * fieldname,const char * envname,const char * def)
setprogdir	..\\scintilla\\lua\\src\\loadlib.c	/^#define setprogdir(/;"	d	file:	signature:(L)
setprogdir	..\\scintilla\\lua\\src\\loadlib.c	/^static void setprogdir (lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L)
setptvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setptvalue(/;"	d	signature:(L,obj,x)
setptvalue2s	..\\scintilla\\lua\\src\\lobject.h	/^#define setptvalue2s	/;"	d
setpvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setpvalue(/;"	d	signature:(obj,x)
setsvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setsvalue(/;"	d	signature:(L,obj,x)
setsvalue2n	..\\scintilla\\lua\\src\\lobject.h	/^#define setsvalue2n	/;"	d
setsvalue2s	..\\scintilla\\lua\\src\\lobject.h	/^#define setsvalue2s	/;"	d
settabsi	..\\scintilla\\lua\\src\\ldblib.c	/^static void settabsi (lua_State *L, const char *i, int v) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * i,int v)
settabss	..\\scintilla\\lua\\src\\ldblib.c	/^static void settabss (lua_State *L, const char *i, const char *v) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const char * i,const char * v)
setter	..\\scite\\src\\IFaceTable.h	/^	int setter;$/;"	m	struct:IFaceProperty	typeref:typename:int	access:public
setthreshold	..\\scintilla\\lua\\src\\lgc.c	/^#define setthreshold(/;"	d	file:	signature:(g)
setthvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setthvalue(/;"	d	signature:(L,obj,x)
setttype	..\\scintilla\\lua\\src\\lobject.h	/^#define setttype(/;"	d	signature:(obj,tt)
setuvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define setuvalue(/;"	d	signature:(L,obj,x)
sfCopy	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
sfHTML	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
sfNone	..\\scite\\src\\SciTEBase.h	/^	    sfNone = 0, 		\/\/ Default$/;"	e	enum:SciTEBase::SaveFlags	access:public
sfPDF	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
sfProgressVisible	..\\scite\\src\\SciTEBase.h	/^	    sfProgressVisible = 1, 	\/\/ Show in background save strip$/;"	e	enum:SciTEBase::SaveFlags	access:public
sfRTF	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
sfSource	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
sfSynchronous	..\\scite\\src\\SciTEBase.h	/^	    sfSynchronous = 16	\/\/ Write synchronously blocking UI$/;"	e	enum:SciTEBase::SaveFlags	access:public
sfTEX	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
sfXML	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum FileFormat { sfSource, sfCopy, sfHTML, sfRTF, sfPDF, sfTEX, sfXML } saveFormat;$/;"	e	enum:SciTEGTK::FileFormat	file:	access:public
shortCutItemList	..\\scite\\src\\SciTEBase.h	/^	std::vector<ShortcutItem> shortCutItemList;$/;"	m	class:SciTEBase	typeref:typename:std::vector<ShortcutItem>	access:protected
short_src	..\\scintilla\\lua\\src\\lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:char[]	access:public
short_src	..\\scite\\lua\\include\\lua.h	/^  char short_src[LUA_IDSIZE]; \/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:char[]	access:public
showAllMatches	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	e	enum:FindReplaceStrip::IncrementalBehaviour	file:	access:public
showAllMatches	..\\scite\\win32\\Strips.h	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	e	enum:FindReplaceStrip::IncrementalBehaviour	access:public
showCaretLineBackground	..\\scintilla\\src\\ViewStyle.h	/^	bool showCaretLineBackground;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
shuttingDown	..\\scite\\gtk\\DirectorExtension.cxx	/^static bool shuttingDown = false;$/;"	v	typeref:typename:bool	file:
shuttingDown	..\\scite\\win32\\DirectorExtension.cxx	/^static bool shuttingDown = false;$/;"	v	typeref:typename:bool	file:
sib1	..\\scintilla\\lua\\src\\lptree.h	/^#define sib1(/;"	d	signature:(t)
sib2	..\\scintilla\\lua\\src\\lptree.h	/^#define sib2(/;"	d	signature:(t)
simple	..\\scite\\gtk\\SciTEGTK.cxx	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	e	enum:FindReplaceStrip::IncrementalBehaviour	file:	access:public
simple	..\\scite\\win32\\Strips.h	/^	enum IncrementalBehaviour { simple, incremental, showAllMatches };$/;"	e	enum:FindReplaceStrip::IncrementalBehaviour	access:public
simpleexp	..\\scintilla\\lua\\src\\lparser.c	/^static void simpleexp (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * v)
singleByte	..\\scintilla\\gtk\\PlatGTK.cxx	/^enum encodingType { singleByte, UTF8, dbcs};$/;"	e	enum:encodingType	file:	access:public
singlematch	..\\scintilla\\lua\\src\\lstrlib.c	/^static int singlematch (int c, const char *p, const char *ep) {$/;"	f	typeref:typename:int	file:	signature:(int c,const char * p,const char * ep)
singlestep	..\\scintilla\\lua\\src\\lgc.c	/^static l_mem singlestep (lua_State *L) {$/;"	f	typeref:typename:l_mem	file:	signature:(lua_State * L)
singletonMime	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^static ScintillaRectangularMime *singletonMime = 0;$/;"	v	typeref:typename:ScintillaRectangularMime *	file:
singlevar	..\\scintilla\\lua\\src\\lparser.c	/^static void singlevar (LexState *ls, expdesc *var) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * var)
singlevaraux	..\\scintilla\\lua\\src\\lparser.c	/^static int singlevaraux (FuncState *fs, TString *n, expdesc *var, int base) {$/;"	f	typeref:typename:int	file:	signature:(FuncState * fs,TString * n,expdesc * var,int base)
siz	..\\scintilla\\lua\\src\\lpcap.h	/^  byte siz;  \/* size of full capture + 1 (0 = not a full capture) *\/$/;"	m	struct:Capture	typeref:typename:byte	access:public
size	..\\scintilla\\include\\Platform.h	/^	float size;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:float	access:public
size	..\\scintilla\\lexlib\\CharacterSet.h	/^	int size;$/;"	m	class:Scintilla::CharacterSet	typeref:typename:int	access:private
size	..\\scintilla\\lexlib\\SparseState.h	/^	size_t size() const {$/;"	f	class:Scintilla::SparseState	typeref:typename:size_t	access:public	signature:() const
size	..\\scintilla\\lua\\src\\lauxlib.c	/^  size_t size;$/;"	m	struct:LoadS	typeref:typename:size_t	file:	access:public
size	..\\scintilla\\lua\\src\\lstate.h	/^  int size;$/;"	m	struct:stringtable	typeref:typename:int	access:public
size	..\\scintilla\\src\\Style.h	/^	int size;$/;"	m	struct:Scintilla::FontSpecification	typeref:typename:int	access:public
size	..\\scintilla\\win32\\PlatWin.cxx	/^	float size;$/;"	m	class:Scintilla::FontCached	typeref:typename:float	file:	access:private
size	..\\scite\\src\\FileWorker.h	/^	long size;$/;"	m	struct:FileWorker	typeref:typename:long	access:public
size	..\\scite\\src\\SciTEBase.h	/^	int size;$/;"	m	class:BufferList	typeref:typename:int	access:public
size	..\\scite\\src\\StyleDefinition.h	/^	int size;$/;"	m	class:StyleDefinition	typeref:typename:int	access:public
sizeCclosure	..\\scintilla\\lua\\src\\lfunc.h	/^#define sizeCclosure(/;"	d	signature:(n)
sizeFailure	..\\scintilla\\gtk\\Converter.h	/^const gsize sizeFailure = static_cast<gsize>(-1);$/;"	v	namespace:Scintilla	typeref:typename:const gsize
sizeFractional	..\\scite\\src\\StyleDefinition.h	/^	float sizeFractional;$/;"	m	class:StyleDefinition	typeref:typename:float	access:public
sizeLclosure	..\\scintilla\\lua\\src\\lfunc.h	/^#define sizeLclosure(/;"	d	signature:(n)
sizeRGBAImage	..\\scintilla\\src\\Editor.h	/^	Point sizeRGBAImage;$/;"	m	class:Scintilla::Editor	typeref:typename:Point	access:protected
sizeZoomed	..\\scintilla\\src\\Style.h	/^	int sizeZoomed;$/;"	m	struct:Scintilla::FontMeasurements	typeref:typename:int	access:public
size_ci	..\\scintilla\\lua\\src\\lstate.h	/^  int size_ci;  \/* size of array `base_ci' *\/$/;"	m	struct:lua_State	typeref:typename:int	access:public
sizearray	..\\scintilla\\lua\\src\\lobject.h	/^  int sizearray;  \/* size of `array' array *\/$/;"	m	struct:Table	typeref:typename:int	access:public
sizecode	..\\scintilla\\lua\\src\\lobject.h	/^  int sizecode;$/;"	m	struct:Proto	typeref:typename:int	access:public
sizei	..\\scintilla\\lua\\src\\lpcode.c	/^int sizei (const Instruction *i) {$/;"	f	typeref:typename:int	signature:(const Instruction * i)
sizek	..\\scintilla\\lua\\src\\lobject.h	/^  int sizek;  \/* size of `k' *\/$/;"	m	struct:Proto	typeref:typename:int	access:public
sizelineinfo	..\\scintilla\\lua\\src\\lobject.h	/^  int sizelineinfo;$/;"	m	struct:Proto	typeref:typename:int	access:public
sizelocvars	..\\scintilla\\lua\\src\\lobject.h	/^  int sizelocvars;$/;"	m	struct:Proto	typeref:typename:int	access:public
sizenode	..\\scintilla\\lua\\src\\lobject.h	/^#define sizenode(/;"	d	signature:(t)
sizep	..\\scintilla\\lua\\src\\lobject.h	/^  int sizep;  \/* size of `p' *\/$/;"	m	struct:Proto	typeref:typename:int	access:public
sizestring	..\\scintilla\\lua\\src\\lstring.h	/^#define sizestring(/;"	d	signature:(s)
sizeudata	..\\scintilla\\lua\\src\\lstring.h	/^#define sizeudata(/;"	d	signature:(u)
sizeupvalues	..\\scintilla\\lua\\src\\lobject.h	/^  int sizeupvalues;$/;"	m	struct:Proto	typeref:typename:int	access:public
skip_sep	..\\scintilla\\lua\\src\\llex.c	/^static int skip_sep (LexState *ls) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls)
sleepTime	..\\scite\\src\\FileWorker.h	/^	int sleepTime;$/;"	m	struct:FileWorker	typeref:typename:int	access:public
slopSize	..\\scintilla\\lexlib\\LexAccessor.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	e	enum:Scintilla::LexAccessor::__anonb2de87d20203	access:public
slopSize	..\\scite\\src\\StyleWriter.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	e	enum:TextReader::__anon931737210203	access:public
small_scroller_class_init	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void small_scroller_class_init(SmallScrollerClass *klass) {$/;"	f	typeref:typename:void	file:	signature:(SmallScrollerClass * klass)
small_scroller_init	..\\scintilla\\gtk\\PlatGTK.cxx	/^static void small_scroller_init(SmallScroller *){}$/;"	f	typeref:typename:void	file:	signature:(SmallScroller *)
smoothScrollX	..\\scintilla\\gtk\\ScintillaGTK.h	/^	gdouble smoothScrollX;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:gdouble	access:private
smoothScrollY	..\\scintilla\\gtk\\ScintillaGTK.h	/^	gdouble smoothScrollY;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:gdouble	access:private
someStylesForceCase	..\\scintilla\\src\\ViewStyle.h	/^	bool someStylesForceCase;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
someStylesProtected	..\\scintilla\\src\\ViewStyle.h	/^	bool someStylesProtected;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
sort	..\\scintilla\\lua\\src\\ltablib.c	/^static int sort (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
sortMatrix	..\\scintilla\\src\\AutoComplete.h	/^	std::vector<int> sortMatrix;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:std::vector<int>	access:private
sort_comp	..\\scintilla\\lua\\src\\ltablib.c	/^static int sort_comp (lua_State *L, int a, int b) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int a,int b)
sorted	..\\scite\\src\\StringList.h	/^	bool sorted;$/;"	m	class:StringList	typeref:typename:bool	access:private
sortedNoCase	..\\scite\\src\\StringList.h	/^	bool sortedNoCase;$/;"	m	class:StringList	typeref:typename:bool	access:private
source	..\\scintilla\\lua\\src\\llex.h	/^  TString *source;  \/* current source name *\/$/;"	m	struct:LexState	typeref:typename:TString *	access:public
source	..\\scintilla\\lua\\src\\lobject.h	/^  TString  *source;$/;"	m	struct:Proto	typeref:typename:TString *	access:public
source	..\\scintilla\\lua\\src\\lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
source	..\\scite\\lua\\include\\lua.h	/^  const char *source;	\/* (S) *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
space	..\\scite\\win32\\Strips.h	/^	int space;$/;"	m	class:Strip	typeref:typename:int	access:protected
spaceWidth	..\\scintilla\\src\\Style.h	/^	XYPOSITION spaceWidth;$/;"	m	struct:Scintilla::FontMeasurements	typeref:typename:XYPOSITION	access:public
spaceWidth	..\\scintilla\\src\\ViewStyle.h	/^	XYPOSITION spaceWidth;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:XYPOSITION	access:public
specified	..\\scite\\src\\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	m	class:StyleDefinition	typeref:enum:StyleDefinition::flags	access:public
splitPane	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *splitPane;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
splitVertical	..\\scite\\src\\SciTEBase.h	/^	bool splitVertical;	\/\/\/< @c true if the split bar between editor and output is vertical.$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
sptr_t	..\\scintilla\\include\\Scintilla.h	/^typedef intptr_t sptr_t;$/;"	t	typeref:typename:intptr_t
sqt	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^	Scintilla::ScintillaQt *sqt;$/;"	m	class:ScintillaEditBase	typeref:typename:Scintilla::ScintillaQt *	access:private
srcDir	..\\scite\\scripts\\CheckPropsDoc.py	/^srcDir = os.path.join(srcRoot, "src")$/;"	v	access:public
srcFile	..\\scite\\scripts\\CheckPropsDoc.py	/^		srcFile = open(srcPath)$/;"	v	access:public
srcLine	..\\scite\\scripts\\CheckPropsDoc.py	/^				srcLine = grabQuoted(srcLine)$/;"	v	access:public
srcLine	..\\scite\\scripts\\CheckPropsDoc.py	/^		srcLine = stripComment(srcLine).strip()$/;"	v	access:public
srcPaths	..\\scite\\scripts\\CheckPropsDoc.py	/^srcPaths = []$/;"	v	access:public
srcRoot	..\\scite\\scripts\\CheckMentioned.py	/^srcRoot = "..\/.."$/;"	v	access:public
srcRoot	..\\scite\\scripts\\CheckPropsDoc.py	/^srcRoot = "..\/..\/scite"$/;"	v	access:public
srcRoot	..\\scite\\scripts\\IFaceTableGen.py	/^srcRoot = "..\/.."$/;"	v	access:public
srcRoot	..\\scite\\scripts\\RegenerateSource.py	/^srcRoot = "..\/.."$/;"	v	access:public
srcRoot	..\\scite\\scripts\\makerpms.py	/^srcRoot = "..\/..\/"$/;"	v	access:public
src_end	..\\scintilla\\lua\\src\\lstrlib.c	/^  const char *src_end;  \/* end (`\\0') of source string *\/$/;"	m	struct:MatchState	typeref:typename:const char *	file:	access:public
src_init	..\\scintilla\\lua\\src\\lstrlib.c	/^  const char *src_init;  \/* init of source string *\/$/;"	m	struct:MatchState	typeref:typename:const char *	file:	access:public
stDefaultTabProc	..\\scite\\win32\\SciTEWinBar.cxx	/^static WNDPROC stDefaultTabProc = NULL;$/;"	v	typeref:typename:WNDPROC	file:
sta	..\\scintilla\\src\\RESearch.h	/^	int sta;$/;"	m	class:Scintilla::RESearch	typeref:typename:int	access:private
stack	..\\scintilla\\lua\\src\\lstate.h	/^  StkId stack;  \/* stack base *\/$/;"	m	struct:lua_State	typeref:typename:StkId	access:public
stack	..\\scite\\src\\SciTEBase.h	/^	int *stack;$/;"	m	class:BufferList	typeref:typename:int *	access:protected
stackBufferLength	..\\scintilla\\win32\\PlatWin.cxx	/^const int stackBufferLength = 1000;$/;"	v	namespace:Scintilla	typeref:typename:const int
stack_init	..\\scintilla\\lua\\src\\lstate.c	/^static void stack_init (lua_State *L1, lua_State *L) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L1,lua_State * L)
stack_last	..\\scintilla\\lua\\src\\lstate.h	/^  StkId stack_last;  \/* last free slot in the stack *\/$/;"	m	struct:lua_State	typeref:typename:StkId	access:public
stackcurrent	..\\scite\\src\\SciTEBase.h	/^	int stackcurrent;$/;"	m	class:BufferList	typeref:typename:int	access:protected
stackidx	..\\scintilla\\lua\\src\\lptypes.h	/^#define stackidx(/;"	d	signature:(ptop)
stacksize	..\\scintilla\\lua\\src\\lstate.h	/^  int stacksize;$/;"	m	struct:lua_State	typeref:typename:int	access:public
standardTimerID	..\\scintilla\\win32\\ScintillaWin.cxx	/^	enum { invalidTimerID, standardTimerID, idleTimerID, fineTimerStart };$/;"	e	enum:ScintillaWin::__anon5333cfc50203	file:	access:public
start	..\\scintilla\\src\\Document.h	/^	Sci::Position start;$/;"	m	class:Scintilla::Range	typeref:typename:Sci::Position	access:public
start	..\\scintilla\\src\\Editor.h	/^	Sci::Line start;	\/\/ When there are wraps pending, will be in document range$/;"	m	struct:Scintilla::WrapPending	typeref:typename:Sci::Line	access:public
start	..\\scintilla\\src\\PositionCache.h	/^	int start;$/;"	m	struct:Scintilla::TextSegment	typeref:typename:int	access:public
start	..\\scintilla\\src\\Selection.h	/^	SelectionPosition start;$/;"	m	struct:Scintilla::SelectionSegment	typeref:typename:SelectionPosition	access:public
startAction	..\\scintilla\\src\\CellBuffer.h	/^enum actionType { insertAction, removeAction, startAction, containerAction };$/;"	e	enum:Scintilla::actionType	access:public
startByteHasReprs	..\\scintilla\\src\\PositionCache.h	/^	short startByteHasReprs[0x100];$/;"	m	class:Scintilla::SpecialRepresentations	typeref:typename:short[0x100]	access:private
startCalltipWord	..\\scite\\src\\SciTEBase.h	/^	int startCalltipWord;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
startFile	..\\scite\\scripts\\commandsdoc.py	/^startFile = """$/;"	v	access:public
startHighlight	..\\scintilla\\src\\CallTip.h	/^	int startHighlight;    \/\/ character offset to start and...$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:private
startImpl	..\\scite\\scripts\\tags2api.py	/^						startImpl = curDef.find("{")$/;"	v	access:public
startLen	..\\scintilla\\src\\AutoComplete.h	/^	Sci::Position startLen;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:Sci::Position	access:public
startPDF	..\\scite\\src\\ExportPDF.cxx	/^		void startPDF() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:()
startPage	..\\scite\\src\\ExportPDF.cxx	/^		void startPage() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:void	file:	access:public	signature:()
startPos	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position startPos;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:private
startPos	..\\scintilla\\src\\Document.cxx	/^	Sci::Position startPos;$/;"	m	class:__anon1ef09aa80111::RESearchRange	typeref:typename:Sci::Position	file:	access:public
startPos	..\\scite\\src\\LuaExtension.cxx	/^	int startPos;$/;"	m	struct:PaneMatchObject	typeref:typename:int	file:	access:public
startPos	..\\scite\\src\\LuaExtension.cxx	/^	unsigned int startPos;$/;"	m	struct:StylingContext	typeref:typename:unsigned int	file:	access:public
startPos	..\\scite\\src\\StyleWriter.h	/^	int startPos;$/;"	m	class:TextReader	typeref:typename:int	access:protected
startPosStyling	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position startPosStyling;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:private
startSeg	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_PositionU startSeg;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:Sci_PositionU	access:private
startSeg	..\\scite\\src\\StyleWriter.h	/^	unsigned int startSeg;$/;"	m	class:StyleWriter	typeref:typename:unsigned int	access:protected
start_capture	..\\scintilla\\lua\\src\\lstrlib.c	/^static const char *start_capture (MatchState *ms, const char *s,$/;"	f	typeref:typename:const char *	file:	signature:(MatchState * ms,const char * s,const char * p,int what)
start_styling	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^void ScintillaDocument::start_styling(int position, char flags) {$/;"	f	class:ScintillaDocument	typeref:typename:void	signature:(int position,char flags)
startedByDirector	..\\scite\\gtk\\DirectorExtension.cxx	/^static bool startedByDirector = false;$/;"	v	typeref:typename:bool	file:
startedByDirector	..\\scite\\win32\\DirectorExtension.cxx	/^static bool startedByDirector = false;$/;"	v	typeref:typename:bool	file:
startpc	..\\scintilla\\lua\\src\\lobject.h	/^  int startpc;  \/* first point where variable is active *\/$/;"	m	struct:LocVar	typeref:typename:int	access:public
starts	..\\scintilla\\lexlib\\WordList.h	/^	int starts[256];$/;"	m	class:Scintilla::WordList	typeref:typename:int[256]	access:private
starts	..\\scintilla\\src\\CellBuffer.h	/^	Partitioning<int> starts;$/;"	m	class:Scintilla::LineVector	typeref:typename:Partitioning<int>	access:private
starts	..\\scintilla\\src\\RunStyles.h	/^	std::unique_ptr<Partitioning<DISTANCE>> starts;$/;"	m	class:Scintilla::RunStyles	typeref:typename:std::unique_ptr<Partitioning<DISTANCE>>	access:private
starts	..\\scintilla\\src\\SparseVector.h	/^	std::unique_ptr<Partitioning<Sci::Position>> starts;$/;"	m	class:Scintilla::SparseVector	typeref:typename:std::unique_ptr<Partitioning<Sci::Position>>	access:private
startswith	..\\scite\\src\\PropSetFile.cxx	/^static bool startswith(const std::string &s, const char *keybase) {$/;"	f	typeref:typename:bool	file:	signature:(const std::string & s,const char * keybase)
startupScript	..\\scite\\src\\LuaExtension.cxx	/^static std::string startupScript;$/;"	v	typeref:typename:std::string	file:
startupTimestamp	..\\scite\\gtk\\SciTEGTK.cxx	/^	guint32 startupTimestamp;$/;"	m	class:SciTEGTK	typeref:typename:guint32	file:	access:protected
stat	..\\scite\\src\\FilePath.cxx	/^static int stat(const wchar_t *path, struct _stat *buffer) {$/;"	f	typeref:typename:int	file:	signature:(const wchar_t * path,struct _stat * buffer)
stat	..\\scite\\src\\FilePath.cxx	/^static int stat(const wchar_t *path, struct _stat64i32 *buffer) {$/;"	f	typeref:typename:int	file:	signature:(const wchar_t * path,struct _stat64i32 * buffer)
state	..\\scintilla\\lexlib\\StyleContext.h	/^	int state;$/;"	m	class:Scintilla::StyleContext	typeref:typename:int	access:public
state	..\\scintilla\\src\\Editor.h	/^	bool state;$/;"	m	class:Scintilla::Idler	typeref:typename:bool	access:public
state	..\\scite\\src\\LuaExtension.cxx	/^	int state;$/;"	m	struct:StylingContext	typeref:typename:int	file:	access:public
stateVector	..\\scintilla\\lexlib\\SparseState.h	/^	typedef std::vector<State> stateVector;$/;"	t	class:Scintilla::SparseState	typeref:typename:std::vector<State>	access:private
state_size	..\\scintilla\\lua\\src\\lstate.c	/^#define state_size(/;"	d	file:	signature:(x)
statement	..\\scintilla\\lua\\src\\lparser.c	/^static int statement (LexState *ls) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls)
statementEnd	..\\scite\\src\\SciTEBase.h	/^	StyleAndWords statementEnd;$/;"	m	class:SciTEBase	typeref:typename:StyleAndWords	access:protected
statementIndent	..\\scite\\src\\SciTEBase.h	/^	StyleAndWords statementIndent;$/;"	m	class:SciTEBase	typeref:typename:StyleAndWords	access:protected
statementLookback	..\\scite\\src\\SciTEBase.h	/^	int statementLookback;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
states	..\\scintilla\\lexlib\\SparseState.h	/^	stateVector states;$/;"	m	class:Scintilla::SparseState	typeref:typename:stateVector	access:private
statesOfDelay	..\\scite\\src\\SciTEBase.h	/^	} statesOfDelay;$/;"	m	struct:CurrentWordHighlight	typeref:enum:CurrentWordHighlight::__anonf95580a60603	access:public
staticBuild	..\\scite\\win32\\SciTEWin.h	/^	bool staticBuild;$/;"	m	class:SciTEWin	typeref:typename:bool	access:protected
statnames	..\\scintilla\\lua\\src\\lbaselib.c	/^static const char *const statnames[] =$/;"	v	typeref:typename:const char * const[]	file:
status	..\\scintilla\\lua\\src\\ldo.c	/^  volatile int status;  \/* error code *\/$/;"	m	struct:lua_longjmp	typeref:typename:volatile int	file:	access:public
status	..\\scintilla\\lua\\src\\ldump.c	/^ int status;$/;"	m	struct:__anonbc205f790108	typeref:typename:int	file:	access:public
status	..\\scintilla\\lua\\src\\lstate.h	/^  lu_byte status;$/;"	m	struct:lua_State	typeref:typename:lu_byte	access:public
status	..\\scintilla\\lua\\src\\lua.c	/^  int status;$/;"	m	struct:Smain	typeref:typename:int	file:	access:public
status	..\\scite\\src\\GUI.h	/^	sptr_t status;$/;"	m	class:GUI::ScintillaWindow	typeref:typename:sptr_t	access:public
status	..\\scite\\src\\GUI.h	/^	sptr_t status;$/;"	m	struct:GUI::ScintillaFailure	typeref:typename:sptr_t	access:public
statusPosWidth	..\\scite\\src\\SciTEBase.h	/^    statusPosWidth = 256$/;"	e	enum:__anonf95580a60403	access:public
stepLength	..\\scintilla\\src\\Partitioning.h	/^	T stepLength;$/;"	m	class:Scintilla::Partitioning	typeref:typename:T	access:private
stepPartition	..\\scintilla\\src\\Partitioning.h	/^	T stepPartition;$/;"	m	class:Scintilla::Partitioning	typeref:typename:T	access:private
stopChars	..\\scintilla\\src\\AutoComplete.h	/^	std::string stopChars;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:std::string	access:private
stop_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * stop_xpm[] = {$/;"	v	typeref:typename:const char * []
storers	..\\scite\\src\\SciTEBase.h	/^	int storers;$/;"	m	struct:BackgroundActivities	typeref:typename:int	access:public
str	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	gchar *str;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:gchar *	file:	access:public
str_byte	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_byte (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_char	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_char (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_checkname	..\\scintilla\\lua\\src\\lparser.c	/^static TString *str_checkname (LexState *ls) {$/;"	f	typeref:typename:TString *	file:	signature:(LexState * ls)
str_dump	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_dump (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_find	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_find (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_find_aux	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_find_aux (lua_State *L, int find) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int find)
str_format	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_format (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_gsub	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_gsub (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_len	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_len (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_lower	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_lower (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_match	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_match (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_rep	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_rep (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_reverse	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_reverse (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_sub	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_sub (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
str_upper	..\\scintilla\\lua\\src\\lstrlib.c	/^static int str_upper (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
strchr	..\\scite\\src\\FilePath.cxx	/^static wchar_t *strchr(wchar_t *str, wchar_t c) {$/;"	f	typeref:typename:wchar_t *	file:	signature:(wchar_t * str,wchar_t c)
strcmp	..\\scite\\src\\FilePath.cxx	/^static int strcmp(const wchar_t *a, const wchar_t *b) {$/;"	f	typeref:typename:int	file:	signature:(const wchar_t * a,const wchar_t * b)
strcpy	..\\scite\\src\\FilePath.cxx	/^static wchar_t *strcpy(wchar_t *strDestination, const wchar_t *strSource) {$/;"	f	typeref:typename:wchar_t *	file:	signature:(wchar_t * strDestination,const wchar_t * strSource)
stringLength	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^	CFIndex stringLength;$/;"	m	class:QuartzTextLayout	typeref:typename:CFIndex	access:private
stringRep	..\\scintilla\\src\\PositionCache.h	/^	std::string stringRep;$/;"	m	class:Scintilla::Representation	typeref:typename:std::string	access:public
stringcap	..\\scintilla\\lua\\src\\lpcap.c	/^static void stringcap (luaL_Buffer *b, CapState *cs) {$/;"	f	typeref:typename:void	file:	signature:(luaL_Buffer * b,CapState * cs)
stringmark	..\\scintilla\\lua\\src\\lgc.c	/^#define stringmark(/;"	d	file:	signature:(s)
stringtable	..\\scintilla\\lua\\src\\lstate.h	/^typedef struct stringtable {$/;"	s
stringtable	..\\scintilla\\lua\\src\\lstate.h	/^} stringtable;$/;"	t	typeref:struct:stringtable
strip	..\\scintilla\\lua\\src\\ldump.c	/^ int strip;$/;"	m	struct:__anonbc205f790108	typeref:typename:int	file:	access:public
stripCloseState	..\\scite\\win32\\Strips.h	/^	enum stripCloseState { csNone, csOver, csClicked, csClickedOver } closeState;$/;"	g	class:Strip	access:protected
stripComment	..\\scite\\scripts\\CheckPropsDoc.py	/^def stripComment(s):$/;"	f	access:public	signature:(s)
stripping	..\\scintilla\\lua\\src\\luac.c	/^static int stripping=0;			\/* strip debug information? *\/$/;"	v	typeref:typename:int	file:
strlen	..\\scite\\src\\FilePath.cxx	/^static size_t strlen(const wchar_t *str) {$/;"	f	typeref:typename:size_t	file:	signature:(const wchar_t * str)
strlib	..\\scintilla\\lua\\src\\lstrlib.c	/^static const luaL_Reg strlib[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
strrchr	..\\scite\\src\\FilePath.cxx	/^static wchar_t *strrchr(wchar_t *str, wchar_t c) {$/;"	f	typeref:typename:wchar_t *	file:	signature:(wchar_t * str,wchar_t c)
strt	..\\scintilla\\lua\\src\\lstate.h	/^  stringtable strt;  \/* hash table for strings *\/$/;"	m	struct:global_State	typeref:typename:stringtable	access:public
stw	..\\scite\\win32\\UniqueInstance.h	/^	SciTEWin *stw;	\/\/\/< Access to SciTEWin interface$/;"	m	class:UniqueInstance	typeref:typename:SciTEWin *	access:private
style	..\\scintilla\\src\\CellBuffer.h	/^	SplitVector<char> style;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:SplitVector<char>	access:private
style	..\\scintilla\\src\\Document.h	/^	size_t style;$/;"	m	struct:Scintilla::StyledText	typeref:typename:size_t	access:public
style	..\\scintilla\\src\\Indicator.h	/^	int style;$/;"	m	struct:Scintilla::StyleAndColour	typeref:typename:int	access:public
style	..\\scintilla\\src\\PerLine.cxx	/^	short style;	\/\/ Style IndividualStyles implies array of styles$/;"	m	struct:AnnotationHeader	typeref:typename:short	file:	access:public
style	..\\scintilla\\src\\ViewStyle.h	/^	int style;$/;"	m	class:Scintilla::MarginStyle	typeref:typename:int	access:public
style	..\\scite\\src\\ExportPDF.cxx	/^		PDFStyle *style;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:PDFStyle *	file:	access:public
style	..\\scite\\src\\StyleDefinition.h	/^	int style;$/;"	m	struct:IndicatorDefinition	typeref:typename:int	access:public
styleBuf	..\\scintilla\\lexlib\\LexAccessor.h	/^	char styleBuf[bufferSize];$/;"	m	class:Scintilla::LexAccessor	typeref:typename:char[]	access:private
styleBuf	..\\scite\\src\\StyleWriter.h	/^	char styleBuf[bufferSize];$/;"	m	class:StyleWriter	typeref:typename:char[]	access:protected
styleClock	..\\scintilla\\src\\Document.h	/^	int styleClock;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:private
styleClock	..\\scintilla\\src\\PositionCache.h	/^	int styleClock;$/;"	m	class:Scintilla::LineLayoutCache	typeref:typename:int	access:private
styleCurrent	..\\scite\\src\\ExportPDF.cxx	/^		int styleCurrent, stylePrev;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:int	file:	access:private
styleDict	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	CFMutableDictionaryRef styleDict;$/;"	m	class:QuartzTextStyle	typeref:typename:CFMutableDictionaryRef	access:private
styleFirst	..\\scintilla\\lexlib\\SubStyles.h	/^	int styleFirst;$/;"	m	class:Scintilla::SubStyles	typeref:typename:int	access:private
styleIdleID	..\\scintilla\\gtk\\ScintillaGTK.h	/^	guint styleIdleID;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:guint	access:private
styleMatch	..\\scite\\src\\MatchMarker.h	/^	int styleMatch;$/;"	m	class:MatchMarker	typeref:typename:int	access:private
styleNumber	..\\scintilla\\src\\PositionCache.h	/^	unsigned int styleNumber:8;$/;"	m	class:Scintilla::PositionCacheEntry	typeref:typename:unsigned int:8	access:private
styleNumber	..\\scite\\src\\SciTEBase.h	/^	int styleNumber;$/;"	m	struct:StyleAndWords	typeref:typename:int	access:public
stylePrev	..\\scite\\src\\ExportPDF.cxx	/^		int styleCurrent, stylePrev;$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:int	file:	access:private
styleSubable	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^static const char styleSubable[] = { 0 };$/;"	v	typeref:typename:const char[]	file:
styleSubable	..\\scintilla\\lexlib\\LexerBase.cxx	/^static const char styleSubable[] = { 0 };$/;"	v	typeref:typename:const char[]	file:
style_at	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^char ScintillaDocument::style_at(int position) {$/;"	f	class:ScintillaDocument	typeref:typename:char	signature:(int position)
styler	..\\scintilla\\lexlib\\StyleContext.h	/^	LexAccessor &styler;$/;"	m	class:Scintilla::StyleContext	typeref:typename:LexAccessor &	access:private
styler	..\\scite\\src\\LuaExtension.cxx	/^	StyleWriter *styler;$/;"	m	struct:StylingContext	typeref:typename:StyleWriter *	file:	access:public
styles	..\\scintilla\\src\\Document.h	/^	const unsigned char *styles;$/;"	m	struct:Scintilla::StyledText	typeref:typename:const unsigned char *	access:public
styles	..\\scintilla\\src\\PositionCache.h	/^	std::unique_ptr<unsigned char[]> styles;$/;"	m	class:Scintilla::LineLayout	typeref:typename:std::unique_ptr<unsigned char[]>	access:public
styles	..\\scintilla\\src\\RunStyles.h	/^	std::unique_ptr<SplitVector<STYLE>> styles;$/;"	m	class:Scintilla::RunStyles	typeref:typename:std::unique_ptr<SplitVector<STYLE>>	access:private
styles	..\\scintilla\\src\\ViewStyle.h	/^	std::vector<Style> styles;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:std::vector<Style>	access:public
stylesAvailable	..\\scintilla\\lexlib\\SubStyles.h	/^	int stylesAvailable;$/;"	m	class:Scintilla::SubStyles	typeref:typename:int	access:private
stylesValid	..\\scintilla\\src\\Editor.h	/^	bool stylesValid;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
subBreak	..\\scintilla\\src\\PositionCache.h	/^	int subBreak;$/;"	m	class:Scintilla::BreakFinder	typeref:typename:int	access:private
subProcessGroupId	..\\scite\\win32\\SciTEWin.h	/^	DWORD subProcessGroupId;$/;"	m	class:SciTEWin	typeref:typename:DWORD	access:protected
subStyleBases	..\\scite\\src\\SciTEBase.h	/^	std::vector<char> subStyleBases;$/;"	m	class:SciTEBase	typeref:typename:std::vector<char>	access:protected
subexpr	..\\scintilla\\lua\\src\\lparser.c	/^static BinOpr subexpr (LexState *ls, expdesc *v, unsigned int limit) {$/;"	f	typeref:typename:BinOpr	file:	signature:(LexState * ls,expdesc * v,unsigned int limit)
substance	..\\scintilla\\src\\CellBuffer.h	/^	SplitVector<char> substance;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:SplitVector<char>	access:private
substcap	..\\scintilla\\lua\\src\\lpcap.c	/^static void substcap (luaL_Buffer *b, CapState *cs) {$/;"	f	typeref:typename:void	file:	signature:(luaL_Buffer * b,CapState * cs)
substituted	..\\scintilla\\src\\Document.cxx	/^	std::string substituted;$/;"	m	class:BuiltinRegex	typeref:typename:std::string	file:	access:private
superPS	..\\scite\\src\\PropSetFile.h	/^	PropSetFile *superPS;$/;"	m	class:PropSetFile	typeref:typename:PropSetFile *	access:public
sur	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  Surface *sur; \/\/ window surface to draw on$/;"	m	class:ScintillaCurses	typeref:typename:Surface *	file:	access:private
surf	..\\scintilla\\src\\Editor.h	/^	std::unique_ptr<Surface> surf;$/;"	m	class:Scintilla::AutoSurface	typeref:typename:std::unique_ptr<Surface>	access:private
surface	..\\scintilla\\src\\MarginView.cxx	/^		Surface *surface;$/;"	m	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:Surface *	file:	access:public
svalue	..\\scintilla\\lua\\src\\lobject.h	/^#define svalue(/;"	d	signature:(o)
sw	..\\scite\\src\\StyleWriter.h	/^	GUI::ScintillaWindow &sw;$/;"	m	class:TextReader	typeref:typename:GUI::ScintillaWindow &	access:protected
swapped	..\\scite\\src\\Utf8_16.cxx	/^static int swapped(int v) {$/;"	f	typeref:typename:int	file:	signature:(int v)
sweepgc	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject **sweepgc;  \/* position of sweep in `rootgc' *\/$/;"	m	struct:global_State	typeref:typename:GCObject **	access:public
sweeplist	..\\scintilla\\lua\\src\\lgc.c	/^static GCObject **sweeplist (lua_State *L, GCObject **p, lu_mem count) {$/;"	f	typeref:typename:GCObject **	file:	signature:(lua_State * L,GCObject ** p,lu_mem count)
sweepstrgc	..\\scintilla\\lua\\src\\lstate.h	/^  int sweepstrgc;  \/* position of sweep in `strt' *\/$/;"	m	struct:global_State	typeref:typename:int	access:public
sweepwholelist	..\\scintilla\\lua\\src\\lgc.c	/^#define sweepwholelist(/;"	d	file:	signature:(L,p)
symbexec	..\\scintilla\\lua\\src\\ldebug.c	/^static Instruction symbexec (const Proto *pt, int lastpc, int reg) {$/;"	f	typeref:typename:Instruction	file:	signature:(const Proto * pt,int lastpc,int reg)
symbols	..\\scite\\scripts\\CheckMentioned.py	/^symbols = {}$/;"	v	access:public
symmetricCaseConversionRanges	..\\scintilla\\src\\CaseConvert.cxx	/^int symmetricCaseConversionRanges[] = {$/;"	v	namespace:__anon1fb76d660111	typeref:typename:int[]
symmetricCaseConversions	..\\scintilla\\src\\CaseConvert.cxx	/^int symmetricCaseConversions[] = {$/;"	v	namespace:__anon1fb76d660111	typeref:typename:int[]
sysCaretBitmap	..\\scintilla\\win32\\ScintillaWin.cxx	/^	HBITMAP sysCaretBitmap;$/;"	m	class:ScintillaWin	typeref:typename:HBITMAP	file:	access:private
sysCaretHeight	..\\scintilla\\win32\\ScintillaWin.cxx	/^	int sysCaretHeight;$/;"	m	class:ScintillaWin	typeref:typename:int	file:	access:private
sysCaretWidth	..\\scintilla\\win32\\ScintillaWin.cxx	/^	int sysCaretWidth;$/;"	m	class:ScintillaWin	typeref:typename:int	file:	access:private
syslib	..\\scintilla\\lua\\src\\loslib.c	/^static const luaL_Reg syslib[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
t	..\\scintilla\\lua\\src\\llex.h	/^  Token t;  \/* current token *\/$/;"	m	struct:LexState	typeref:typename:Token	access:public
t	..\\scintilla\\lua\\src\\lparser.c	/^  expdesc *t;  \/* table descriptor *\/$/;"	m	struct:ConsControl	typeref:typename:expdesc *	file:	access:public
t	..\\scintilla\\lua\\src\\lparser.h	/^  int t;  \/* patch list of `exit when true' *\/$/;"	m	struct:expdesc	typeref:typename:int	access:public
tBackslash	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anonf95580a60703	access:public
tCase	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anonf95580a60703	access:public
tRegExp	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anonf95580a60703	access:public
tUp	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anonf95580a60703	access:public
tWord	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anonf95580a60703	access:public
tWrap	..\\scite\\src\\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anonf95580a60703	access:public
tabArrowHeight	..\\scintilla\\src\\EditView.h	/^	int tabArrowHeight; \/\/ draw arrow heads this many pixels above\/below line midpoint$/;"	m	class:Scintilla::EditView	typeref:typename:int	access:public
tabDrawMode	..\\scintilla\\src\\ViewStyle.h	/^	TabDrawMode tabDrawMode;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:TabDrawMode	access:public
tabHideOne	..\\scite\\src\\SciTEBase.h	/^	bool tabHideOne; \/\/ Hide tab bar if one buffer is opened only$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
tabInChars	..\\scintilla\\src\\Document.h	/^	int tabInChars;$/;"	m	class:Scintilla::Document	typeref:typename:int	access:public
tabIndents	..\\scintilla\\src\\Document.h	/^	bool tabIndents;$/;"	m	class:Scintilla::Document	typeref:typename:bool	access:public
tabMultiLine	..\\scite\\src\\SciTEBase.h	/^	bool tabMultiLine;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
tabSize	..\\scintilla\\src\\CallTip.h	/^	int tabSize;            \/\/ Tab size in pixels, <=0 no TAB expand$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:private
tabVisible	..\\scite\\src\\SciTEBase.h	/^	bool tabVisible;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
tabWidth	..\\scintilla\\src\\ViewStyle.h	/^	XYPOSITION tabWidth;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:XYPOSITION	access:public
tabWidthMinimumPixels	..\\scintilla\\src\\EditView.h	/^	int tabWidthMinimumPixels;$/;"	m	class:Scintilla::EditView	typeref:typename:int	access:public
tab_funcs	..\\scintilla\\lua\\src\\ltablib.c	/^static const luaL_Reg tab_funcs[] = {$/;"	v	typeref:typename:const luaL_Reg[]	file:
tableSize	..\\scite\\src\\ExportPDF.cxx	/^		long *offsetList, tableSize;$/;"	m	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:long *	file:	access:private
tableUser	..\\scite\\gtk\\SciTEGTK.cxx	/^	WTable tableUser;$/;"	m	class:UserStrip	typeref:typename:WTable	file:	access:public
tablecap	..\\scintilla\\lua\\src\\lpcap.c	/^static int tablecap (CapState *cs) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs)
tabstops	..\\scintilla\\src\\PerLine.h	/^	SplitVector<std::unique_ptr<TabstopList>> tabstops;$/;"	m	class:Scintilla::LineTabstops	typeref:typename:SplitVector<std::unique_ptr<TabstopList>>	access:private
tag	..\\scintilla\\lua\\src\\lptree.h	/^  byte tag;$/;"	m	struct:TTree	typeref:typename:byte	access:public
tag_error	..\\scintilla\\lua\\src\\lauxlib.c	/^static void tag_error (lua_State *L, int narg, int tag) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,int narg,int tag)
tagnames	..\\scintilla\\lua\\src\\lpprint.c	/^static const char *tagnames[] = {$/;"	v	typeref:typename:const char * []	file:
tags	..\\scintilla\\lexlib\\LexAccessor.h	/^	const char *tags;$/;"	m	struct:Scintilla::LexicalClass	typeref:typename:const char *	access:public
tagstk	..\\scintilla\\src\\RESearch.h	/^	Sci::Position tagstk[MAXTAG];  \/* subpat tag stack *\/$/;"	m	class:Scintilla::RESearch	typeref:typename:Sci::Position[]	access:private
tail	..\\scintilla\\src\\LineMarker.h	/^	enum typeOfFold { undefined, head, body, tail, headWithTail };$/;"	e	enum:Scintilla::LineMarker::typeOfFold	access:public
tailcalls	..\\scintilla\\lua\\src\\lstate.h	/^  int tailcalls;  \/* number of tail calls lost under this entry *\/$/;"	m	struct:CallInfo	typeref:typename:int	access:public
target	..\\scintilla\\lua\\src\\lpcode.c	/^#define target(/;"	d	file:	signature:(code,i)
targetEnd	..\\scintilla\\src\\Editor.h	/^	Sci::Position targetEnd;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
targetStart	..\\scintilla\\src\\Editor.h	/^	Sci::Position targetStart;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
tbLarge	..\\scite\\win32\\SciTEWin.h	/^	bool tbLarge;$/;"	m	class:SciTEWin	typeref:typename:bool	access:protected
tbVisible	..\\scite\\src\\SciTEBase.h	/^	bool tbVisible;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
tconcat	..\\scintilla\\lua\\src\\ltablib.c	/^static int tconcat (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
tdLongArrow	..\\scintilla\\src\\ViewStyle.h	/^enum TabDrawMode {tdLongArrow=0, tdStrikeOut=1};$/;"	e	enum:Scintilla::TabDrawMode	access:public
tdStrikeOut	..\\scintilla\\src\\ViewStyle.h	/^enum TabDrawMode {tdLongArrow=0, tdStrikeOut=1};$/;"	e	enum:Scintilla::TabDrawMode	access:public
technology	..\\scintilla\\include\\Platform.h	/^	int technology;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:int	access:public
technology	..\\scintilla\\src\\Editor.h	/^	int technology;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
technology	..\\scintilla\\src\\ViewStyle.h	/^	int technology;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
technology	..\\scintilla\\win32\\PlatWin.cxx	/^	int technology;$/;"	m	class:Scintilla::FontCached	typeref:typename:int	file:	access:private
technology	..\\scintilla\\win32\\PlatWin.cxx	/^	int technology;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:int	file:	access:private
technology	..\\scintilla\\win32\\PlatWin.cxx	/^	int technology;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:int	file:	access:public
tentativeMain	..\\scintilla\\src\\Selection.h	/^	bool tentativeMain;$/;"	m	class:Scintilla::Selection	typeref:typename:bool	access:private
tentativePoint	..\\scintilla\\src\\CellBuffer.h	/^	int tentativePoint;$/;"	m	class:Scintilla::UndoHistory	typeref:typename:int	access:private
term_color	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int term_color(ColourDesired color) {$/;"	f	typeref:typename:int	file:	signature:(ColourDesired color)
term_color	..\\scintilla\\curses\\ScintillaCurses.cxx	/^static int term_color(int color) { return color; }$/;"	f	typeref:typename:int	file:	signature:(int color)
term_color_pair	..\\scintilla\\curses\\ScintillaCurses.cxx	/^#define term_color_pair(/;"	d	file:	signature:(f,b)
test2bits	..\\scintilla\\lua\\src\\lgc.h	/^#define test2bits(/;"	d	signature:(x,b1,b2)
testAMode	..\\scintilla\\lua\\src\\lopcodes.h	/^#define testAMode(/;"	d	signature:(m)
testTMode	..\\scintilla\\lua\\src\\lopcodes.h	/^#define testTMode(/;"	d	signature:(m)
test_eof	..\\scintilla\\lua\\src\\liolib.c	/^static int test_eof (lua_State *L, FILE *f) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,FILE * f)
test_then_block	..\\scintilla\\lua\\src\\lparser.c	/^static int test_then_block (LexState *ls) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls)
testbit	..\\scintilla\\lua\\src\\lgc.h	/^#define testbit(/;"	d	signature:(x,b)
testbits	..\\scintilla\\lua\\src\\lgc.h	/^#define testbits(/;"	d	signature:(x,m)
testchar	..\\scintilla\\lua\\src\\lptypes.h	/^#define testchar(/;"	d	signature:(st,c)
testnext	..\\scintilla\\lua\\src\\lparser.c	/^static int testnext (LexState *ls, int c) {$/;"	f	typeref:typename:int	file:	signature:(LexState * ls,int c)
testpattern	..\\scintilla\\lua\\src\\lptree.c	/^static int testpattern (lua_State *L, int idx) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int idx)
texStyle	..\\scite\\src\\ExportTEX.cxx	/^static char* texStyle(int style) {$/;"	f	typeref:typename:char *	file:	signature:(int style)
text	..\\scintilla\\include\\Scintilla.h	/^	const char *text;$/;"	m	struct:SCNotification	typeref:typename:const char *	access:public
text	..\\scintilla\\src\\Document.h	/^	const char *text;	\/**< Only valid for changes to text, not for changes to style. *\/$/;"	m	class:Scintilla::DocModification	typeref:typename:const char *	access:public
text	..\\scintilla\\src\\Document.h	/^	const char *text;$/;"	m	struct:Scintilla::StyledText	typeref:typename:const char *	access:public
text	..\\scintilla\\win32\\PlatWin.cxx	/^	const char *text;$/;"	m	struct:Scintilla::ListItemData	typeref:typename:const char *	file:	access:public
text	..\\scite\\src\\StripDefinition.h	/^	GUI::gui_string text;$/;"	m	class:UserControl	typeref:typename:GUI::gui_string	access:public
textClose	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textClose = "_Close";$/;"	v	typeref:typename:const char *	file:
textFind	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textFind = "F_ind";$/;"	v	typeref:typename:const char *	file:
textFindNext	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textFindNext = "_Find Next";$/;"	v	typeref:typename:const char *	file:
textFindNext	..\\scite\\win32\\Strips.cxx	/^static const char *textFindNext = "&Find Next";$/;"	v	typeref:typename:const char *	file:
textFindPrompt	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textFindPrompt = "Fi_nd:";$/;"	v	typeref:typename:const char *	file:
textFindPrompt	..\\scite\\win32\\Strips.cxx	/^static const char *textFindPrompt = "Fi&nd:";$/;"	v	typeref:typename:const char *	file:
textFromRun	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def textFromRun(args):$/;"	f	access:public	signature:(args)
textHasChanged	..\\scite\\src\\SciTEBase.h	/^	bool textHasChanged;$/;"	m	struct:CurrentWordHighlight	typeref:typename:bool	access:public
textInSelection	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textInSelection = "In _Selection";$/;"	v	typeref:typename:const char *	file:
textInSelection	..\\scite\\win32\\Strips.cxx	/^static const char *textInSelection = "In &Selection";$/;"	v	typeref:typename:const char *	file:
textLayout	..\\scintilla\\cocoa\\PlatCocoa.h	/^  std::unique_ptr<QuartzTextLayout> textLayout;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:std::unique_ptr<QuartzTextLayout>	access:private
textMarkAll	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textMarkAll = "_Mark All";$/;"	v	typeref:typename:const char *	file:
textMarkAll	..\\scite\\win32\\Strips.cxx	/^static const char *textMarkAll = "&Mark All";$/;"	v	typeref:typename:const char *	file:
textMatch	..\\scite\\src\\MatchMarker.h	/^	std::string textMatch;$/;"	m	class:MatchMarker	typeref:typename:std::string	access:private
textReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textReplace = "_Replace";$/;"	v	typeref:typename:const char *	file:
textReplace	..\\scite\\win32\\Strips.cxx	/^static const char *textReplace = "&Replace";$/;"	v	typeref:typename:const char *	file:
textReplaceAll	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textReplaceAll = "Replace _All";$/;"	v	typeref:typename:const char *	file:
textReplaceAll	..\\scite\\win32\\Strips.cxx	/^static const char *textReplaceAll = "Replace &All";$/;"	v	typeref:typename:const char *	file:
textReplaceInBuffers	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textReplaceInBuffers = "Replace In _Buffers";$/;"	v	typeref:typename:const char *	file:
textReplacePrompt	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char *textReplacePrompt = "Rep_lace:";$/;"	v	typeref:typename:const char *	file:
textReplacePrompt	..\\scite\\win32\\Strips.cxx	/^static const char *textReplacePrompt = "Rep&lace:";$/;"	v	typeref:typename:const char *	file:
textStart	..\\scintilla\\src\\ViewStyle.h	/^	int textStart;	\/\/\/< Starting x position of text within the view$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
tgzFileName	..\\scite\\scripts\\makerpms.py	/^tgzFileName = srcRoot + "scite.tgz"$/;"	v	access:public
tgzV	..\\scite\\scripts\\makerpms.py	/^tgzV = "scite" + vFull + ".tgz"$/;"	v	access:public
tgzVFileName	..\\scite\\scripts\\makerpms.py	/^tgzVFileName = srcRoot + tgzV$/;"	v	access:public
th	..\\scintilla\\lua\\src\\lstate.h	/^  struct lua_State th;  \/* thread *\/$/;"	m	union:GCObject	typeref:struct:lua_State	access:public
theEdge	..\\scintilla\\src\\ViewStyle.h	/^	EdgeProperties theEdge;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:EdgeProperties	access:public
theInstance	..\\scintilla\\src\\ExternalLexer.cxx	/^std::unique_ptr<LexerManager> LexerManager::theInstance;$/;"	m	class:LexerManager	typeref:typename:std::unique_ptr<LexerManager>
theInstance	..\\scintilla\\src\\ExternalLexer.h	/^	static std::unique_ptr<LexerManager> theInstance;$/;"	m	class:Scintilla::LexerManager	typeref:typename:std::unique_ptr<LexerManager>	access:private
theMultiEdge	..\\scintilla\\src\\ViewStyle.h	/^	std::vector<EdgeProperties> theMultiEdge;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:std::vector<EdgeProperties>	access:public
thvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define thvalue(/;"	d	signature:(o)
tickCaret	..\\scintilla\\src\\Editor.h	/^	enum TickReason { tickCaret, tickScroll, tickWiden, tickDwell, tickPlatform };$/;"	e	enum:Scintilla::Editor::TickReason	access:public
tickDwell	..\\scintilla\\src\\Editor.h	/^	enum TickReason { tickCaret, tickScroll, tickWiden, tickDwell, tickPlatform };$/;"	e	enum:Scintilla::Editor::TickReason	access:public
tickPlatform	..\\scintilla\\src\\Editor.h	/^	enum TickReason { tickCaret, tickScroll, tickWiden, tickDwell, tickPlatform };$/;"	e	enum:Scintilla::Editor::TickReason	access:public
tickScroll	..\\scintilla\\src\\Editor.h	/^	enum TickReason { tickCaret, tickScroll, tickWiden, tickDwell, tickPlatform };$/;"	e	enum:Scintilla::Editor::TickReason	access:public
tickSize	..\\scintilla\\src\\Editor.h	/^	enum {tickSize = 100};$/;"	e	enum:Scintilla::Timer::__anon8e1f0c450103	access:public
tickWiden	..\\scintilla\\src\\Editor.h	/^	enum TickReason { tickCaret, tickScroll, tickWiden, tickDwell, tickPlatform };$/;"	e	enum:Scintilla::Editor::TickReason	access:public
tickerID	..\\scintilla\\src\\Editor.h	/^	TickerID tickerID;$/;"	m	class:Scintilla::Timer	typeref:typename:TickerID	access:public
tickerID	..\\scite\\win32\\SciTEWinBar.cxx	/^enum { tickerID = 100 };$/;"	e	enum:__anon9c574aa40203	file:	access:public
ticking	..\\scintilla\\src\\Editor.h	/^	bool ticking;$/;"	m	class:Scintilla::Timer	typeref:typename:bool	access:public
ticksToDwell	..\\scintilla\\src\\Editor.h	/^	int ticksToDwell;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
ticksToWait	..\\scintilla\\src\\Editor.h	/^	int ticksToWait;$/;"	m	class:Scintilla::Timer	typeref:typename:int	access:public
time	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^	QTime time;$/;"	m	class:ScintillaEditBase	typeref:typename:QTime	access:private
timeBetweenProgress	..\\scite\\src\\FileWorker.cxx	/^const double timeBetweenProgress = 0.4;$/;"	v	typeref:typename:const double
timeCommands	..\\scite\\src\\JobQueue.h	/^	bool timeCommands;$/;"	m	class:JobQueue	typeref:typename:bool	access:public
timer	..\\scintilla\\gtk\\ScintillaGTK.h	/^		guint timer;$/;"	m	struct:Scintilla::ScintillaGTK::TimeThunk	typeref:typename:guint	access:public
timer	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^static QElapsedTimer timer;$/;"	v	namespace:Scintilla	typeref:typename:QElapsedTimer	file:
timer	..\\scintilla\\src\\Editor.h	/^	Timer timer;$/;"	m	class:Scintilla::Editor	typeref:typename:Timer	access:protected
timerAutoSave	..\\scite\\src\\SciTEBase.h	/^	enum { timerAutoSave=1 };$/;"	e	enum:SciTEBase::__anonf95580a61103	access:public
timerEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^void ScintillaQt::timerEvent(QTimerEvent *event)$/;"	f	class:ScintillaQt	typeref:typename:void	signature:(QTimerEvent * event)
timerID	..\\scite\\gtk\\SciTEGTK.cxx	/^	guint timerID;$/;"	m	class:SciTEGTK	typeref:typename:guint	file:	access:protected
timerMask	..\\scite\\src\\SciTEBase.h	/^	int timerMask;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
timerTarget	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  TimerTarget* timerTarget;$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:TimerTarget *	access:private
timers	..\\scintilla\\cocoa\\ScintillaCocoa.h	/^  NSTimer *timers[tickPlatform+1];$/;"	m	class:Scintilla::ScintillaCocoa	typeref:typename:NSTimer * []	access:public
timers	..\\scintilla\\gtk\\ScintillaGTK.h	/^	TimeThunk timers[tickDwell+1];$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:TimeThunk[]	access:private
timers	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	int timers[tickDwell+1];$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:int[]	access:private
timers	..\\scintilla\\win32\\ScintillaWin.cxx	/^	UINT_PTR timers[tickDwell+1];$/;"	m	class:ScintillaWin	typeref:typename:UINT_PTR[]	file:	access:private
tinsert	..\\scintilla\\lua\\src\\ltablib.c	/^static int tinsert (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
tlen	..\\scintilla\\win32\\PlatWin.cxx	/^	int tlen;	\/\/ Using int instead of size_t as most Win32 APIs take int.$/;"	m	class:Scintilla::TextWide	typeref:typename:int	file:	access:public
tmname	..\\scintilla\\lua\\src\\lstate.h	/^  TString *tmname[TM_N];  \/* array with tag-method names *\/$/;"	m	struct:global_State	typeref:typename:TString * []	access:public
tmudata	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *tmudata;  \/* last element of list of userdata to be GC *\/$/;"	m	struct:global_State	typeref:typename:GCObject *	access:public
toStart	..\\scite\\src\\Utf8_16.cxx	/^void Utf8_Iter::toStart() {$/;"	f	class:Utf8_Iter	typeref:typename:void	signature:()
tocharset	..\\scintilla\\lua\\src\\lpcode.c	/^int tocharset (TTree *tree, Charset *cs) {$/;"	f	typeref:typename:int	signature:(TTree * tree,Charset * cs)
tofile	..\\scintilla\\lua\\src\\liolib.c	/^static FILE *tofile (lua_State *L) {$/;"	f	typeref:typename:FILE *	file:	signature:(lua_State * L)
tofilep	..\\scintilla\\lua\\src\\liolib.c	/^#define tofilep(/;"	d	file:	signature:(L)
toggleCase	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleCase;$/;"	m	class:DialogFindInFiles	typeref:typename:WToggle	file:	access:public
toggleCase	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleCase;$/;"	m	class:DialogFindReplace	typeref:typename:WToggle	file:	access:public
toggleRegExp	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleRegExp;$/;"	m	class:DialogFindReplace	typeref:typename:WToggle	file:	access:public
toggleReverse	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleReverse;$/;"	m	class:DialogFindReplace	typeref:typename:WToggle	file:	access:public
toggleUnSlash	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleUnSlash;$/;"	m	class:DialogFindReplace	typeref:typename:WToggle	file:	access:public
toggleUseTabs	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleUseTabs;$/;"	m	class:DialogTabSize	typeref:typename:WToggle	file:	access:public
toggleWord	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleWord;$/;"	m	class:DialogFindInFiles	typeref:typename:WToggle	file:	access:public
toggleWord	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleWord;$/;"	m	class:DialogFindReplace	typeref:typename:WToggle	file:	access:public
toggleWrap	..\\scite\\gtk\\SciTEGTK.cxx	/^	WToggle toggleWrap;$/;"	m	class:DialogFindReplace	typeref:typename:WToggle	file:	access:public
toggles	..\\scite\\gtk\\SciTEGTK.cxx	/^const static SearchOption toggles[] = {$/;"	v	typeref:typename:const SearchOption[]	file:
toggles	..\\scite\\win32\\Strips.cxx	/^static SearchOption toggles[] = {$/;"	v	typeref:typename:SearchOption[]	file:
token	..\\scintilla\\include\\Scintilla.h	/^	int token;		\/* SCN_MODIFIED with SC_MOD_CONTAINER *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
token	..\\scintilla\\lua\\src\\llex.h	/^  int token;$/;"	m	struct:Token	typeref:typename:int	access:public
token	..\\scintilla\\src\\Document.h	/^	Sci::Position token;$/;"	m	class:Scintilla::DocModification	typeref:typename:Sci::Position	access:public
tonumber	..\\scintilla\\lua\\src\\lvm.h	/^#define tonumber(/;"	d	signature:(o,n)
toolMax	..\\scite\\src\\SciTEBase.h	/^	enum { toolMax = 50 };$/;"	e	enum:SciTEBase::__anonf95580a61003	access:public
toolbarDetachable	..\\scite\\gtk\\SciTEGTK.cxx	/^	int toolbarDetachable;$/;"	m	class:SciTEGTK	typeref:typename:int	file:	access:protected
toolbarUsersPressableButtons	..\\scite\\win32\\SciTEWin.h	/^	TArray<int,int> toolbarUsersPressableButtons;$/;"	m	class:SciTEWin	typeref:typename:TArray<int,int>	access:protected
tooltipText	..\\scite\\win32\\SciTEWin.h	/^	GUI::gui_char tooltipText[MAX_PATH*2 + 1];$/;"	m	class:SciTEWin	typeref:typename:GUI::gui_char[]	access:protected
top	..\\scintilla\\include\\Platform.h	/^	XYPOSITION top;$/;"	m	class:Scintilla::PRectangle	typeref:typename:XYPOSITION	access:public
top	..\\scintilla\\include\\Scintilla.h	/^	int top;$/;"	m	struct:Sci_Rectangle	typeref:typename:int	access:public
top	..\\scintilla\\lua\\src\\lstate.h	/^  StkId	top;  \/* top for this function *\/$/;"	m	struct:CallInfo	typeref:typename:StkId	access:public
top	..\\scintilla\\lua\\src\\lstate.h	/^  StkId top;  \/* first free slot in the stack *\/$/;"	m	struct:lua_State	typeref:typename:StkId	access:public
top	..\\scite\\src\\GUI.h	/^	int top;$/;"	m	class:GUI::Rectangle	typeref:typename:int	access:public
topLine	..\\scintilla\\src\\Editor.h	/^		Sci::Line topLine;$/;"	m	struct:Scintilla::Editor::XYScrollPosition	typeref:typename:Sci::Line	access:public
topLine	..\\scintilla\\src\\Editor.h	/^	Sci::Line topLine;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Line	access:protected
topMost	..\\scite\\src\\SciTEBase.h	/^	bool topMost;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
toproto	..\\scintilla\\lua\\src\\luac.c	/^#define toproto(/;"	d	file:	signature:(L,i)
tostate	..\\scintilla\\lua\\src\\lstate.c	/^#define tostate(/;"	d	file:	signature:(l)
tostore	..\\scintilla\\lua\\src\\lparser.c	/^  int tostore;  \/* number of array elements pending to be stored *\/$/;"	m	struct:ConsControl	typeref:typename:int	file:	access:public
tostring	..\\scintilla\\lua\\src\\lvm.h	/^#define tostring(/;"	d	signature:(L,o)
totalProgress	..\\scite\\src\\SciTEBase.h	/^	int totalProgress;$/;"	m	struct:BackgroundActivities	typeref:typename:int	access:public
totalWork	..\\scite\\src\\SciTEBase.h	/^	int totalWork;$/;"	m	struct:BackgroundActivities	typeref:typename:int	access:public
totalbytes	..\\scintilla\\lua\\src\\lstate.h	/^  lu_mem totalbytes;  \/* number of bytes currently allocated *\/$/;"	m	struct:global_State	typeref:typename:lu_mem	access:public
toutf8	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  void toutf8(int code, char *s, int *len) {$/;"	f	class:ScintillaCurses	typeref:typename:void	file:	access:private	signature:(int code,char * s,int * len)
traceback	..\\scintilla\\lua\\src\\lua.c	/^static int traceback (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
tracebackEnabled	..\\scite\\src\\LuaExtension.cxx	/^static bool tracebackEnabled = true;$/;"	v	typeref:typename:bool	file:
traceexec	..\\scintilla\\lua\\src\\lvm.c	/^static void traceexec (lua_State *L, const Instruction *pc) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,const Instruction * pc)
trackLineWidth	..\\scintilla\\src\\EditModel.h	/^	bool trackLineWidth;$/;"	m	class:Scintilla::EditModel	typeref:typename:bool	access:public
trackedMouseLeave	..\\scintilla\\win32\\ScintillaWin.cxx	/^	bool trackedMouseLeave;$/;"	m	class:ScintillaWin	typeref:typename:bool	file:	access:private
traverseclosure	..\\scintilla\\lua\\src\\lgc.c	/^static void traverseclosure (global_State *g, Closure *cl) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g,Closure * cl)
traverseproto	..\\scintilla\\lua\\src\\lgc.c	/^static void traverseproto (global_State *g, Proto *f) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g,Proto * f)
traversestack	..\\scintilla\\lua\\src\\lgc.c	/^static void traversestack (global_State *g, lua_State *l) {$/;"	f	typeref:typename:void	file:	signature:(global_State * g,lua_State * l)
traversetable	..\\scintilla\\lua\\src\\lgc.c	/^static int traversetable (global_State *g, Table *h) {$/;"	f	typeref:typename:int	file:	signature:(global_State * g,Table * h)
treatstackoption	..\\scintilla\\lua\\src\\ldblib.c	/^static void treatstackoption (lua_State *L, lua_State *L1, const char *fname) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,lua_State * L1,const char * fname)
tree	..\\scintilla\\lua\\src\\lptree.h	/^  TTree tree[1];$/;"	m	struct:Pattern	typeref:typename:TTree[1]	access:public
treeViewGetRowHeight	..\\scintilla\\gtk\\PlatGTK.cxx	/^static int treeViewGetRowHeight(GtkTreeView *view) {$/;"	f	typeref:typename:int	file:	signature:(GtkTreeView * view)
treebuffer	..\\scintilla\\lua\\src\\lptypes.h	/^#define treebuffer(/;"	d	signature:(t)
tremove	..\\scintilla\\lua\\src\\ltablib.c	/^static int tremove (lua_State *L) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L)
triedKill	..\\scite\\gtk\\SciTEGTK.cxx	/^	bool triedKill;$/;"	m	class:SciTEGTK	typeref:typename:bool	file:	access:protected
trydecpoint	..\\scintilla\\lua\\src\\llex.c	/^static void trydecpoint (LexState *ls, SemInfo *seminfo) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,SemInfo * seminfo)
tryfuncTM	..\\scintilla\\lua\\src\\ldo.c	/^static StkId tryfuncTM (lua_State *L, StkId func) {$/;"	f	typeref:typename:StkId	file:	signature:(lua_State * L,StkId func)
ts	..\\scintilla\\lua\\src\\llex.h	/^  TString *ts;$/;"	m	union:__anoncfedf8d1010a	typeref:typename:TString *	access:public
ts	..\\scintilla\\lua\\src\\lstate.h	/^  union TString ts;$/;"	m	union:GCObject	typeref:union:TString	access:public
tsv	..\\scintilla\\lua\\src\\lobject.h	/^  } tsv;$/;"	m	union:TString	typeref:struct:TString::__anonae4e9c5f0208	access:public
tsvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define tsvalue(/;"	d	signature:(o)
ttisboolean	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisboolean(/;"	d	signature:(o)
ttisfunction	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisfunction(/;"	d	signature:(o)
ttislightuserdata	..\\scintilla\\lua\\src\\lobject.h	/^#define ttislightuserdata(/;"	d	signature:(o)
ttisnil	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisnil(/;"	d	signature:(o)
ttisnumber	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisnumber(/;"	d	signature:(o)
ttisstring	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisstring(/;"	d	signature:(o)
ttistable	..\\scintilla\\lua\\src\\lobject.h	/^#define ttistable(/;"	d	signature:(o)
ttisthread	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisthread(/;"	d	signature:(o)
ttisuserdata	..\\scintilla\\lua\\src\\lobject.h	/^#define ttisuserdata(/;"	d	signature:(o)
ttype	..\\scintilla\\lua\\src\\lobject.h	/^#define ttype(/;"	d	signature:(o)
tvk	..\\scintilla\\lua\\src\\lobject.h	/^  TValue tvk;$/;"	m	union:TKey	typeref:typename:TValue	access:public
twoto	..\\scintilla\\lua\\src\\lobject.h	/^#define twoto(/;"	d	signature:(x)
txtInit	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^txtInit =	"int main(int argc, char **argv) {\\n" \\$/;"	v	access:public
txtToken	..\\scintilla\\lua\\src\\llex.c	/^static const char *txtToken (LexState *ls, int token) {$/;"	f	typeref:typename:const char *	file:	signature:(LexState * ls,int token)
typeAliases	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^typeAliases = {$/;"	v	access:public
typeOfFold	..\\scintilla\\src\\LineMarker.h	/^	enum typeOfFold { undefined, head, body, tail, headWithTail };$/;"	g	class:Scintilla::LineMarker	access:public
types	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  char types[IMAGE_MAX + 1][5]; \/\/ UTF-8 character plus terminating '\\0'$/;"	m	class:ListBoxImpl	typeref:typename:char[][5]	file:	access:private
typesep	..\\scintilla\\src\\AutoComplete.h	/^	char typesep; \/\/ Type seperator$/;"	m	class:Scintilla::AutoComplete	typeref:typename:char	access:private
u	..\\scintilla\\lua\\src\\lobject.h	/^  } u;$/;"	m	struct:UpVal	typeref:union:UpVal::__anonae4e9c5f040a	access:public
u	..\\scintilla\\lua\\src\\lparser.h	/^  } u;$/;"	m	struct:expdesc	typeref:union:expdesc::__anon613de0d5020a	access:public
u	..\\scintilla\\lua\\src\\lpcap.c	/^  } u;$/;"	m	struct:StrAux	typeref:union:StrAux::__anond6d1f967010a	file:	access:public
u	..\\scintilla\\lua\\src\\lptree.h	/^  } u;$/;"	m	struct:TTree	typeref:union:TTree::__anond9e754e8010a	access:public
u	..\\scintilla\\lua\\src\\lstate.h	/^  union Udata u;$/;"	m	union:GCObject	typeref:union:Udata	access:public
ubyte	..\\scite\\src\\Utf8_16.h	/^	typedef unsigned char ubyte;$/;"	t	class:Utf8_16	typeref:typename:unsigned char	access:public
ucButton	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType	access:public
ucCombo	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType	access:public
ucDefaultButton	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType	access:public
ucEdit	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType	access:public
ucStatic	..\\scite\\src\\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType	access:public
uchar	..\\scintilla\\lua\\src\\lstrlib.c	/^#define uchar(/;"	d	file:	signature:(c)
ud	..\\scintilla\\lua\\src\\lapi.c	/^  void *ud;$/;"	m	struct:CCallS	typeref:typename:void *	file:	access:public
ud	..\\scintilla\\lua\\src\\lstate.h	/^  void *ud;         \/* auxiliary data to `frealloc' *\/$/;"	m	struct:global_State	typeref:typename:void *	access:public
uh	..\\scintilla\\src\\CellBuffer.h	/^	UndoHistory uh;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:UndoHistory	access:private
uid24	..\\scintilla\\scripts\\LexGen.py	/^def uid24():$/;"	f	access:public	signature:()
unSlash	..\\scite\\src\\SciTEBase.h	/^	bool unSlash;$/;"	m	class:Searcher	typeref:typename:bool	access:public
unbound_search	..\\scintilla\\lua\\src\\ltable.c	/^static int unbound_search (Table *t, unsigned int j) {$/;"	f	typeref:typename:int	file:	signature:(Table * t,unsigned int j)
undefined	..\\scintilla\\src\\LineMarker.h	/^	enum typeOfFold { undefined, head, body, tail, headWithTail };$/;"	e	enum:Scintilla::LineMarker::typeOfFold	access:public
under	..\\scintilla\\src\\Indicator.h	/^	bool under;$/;"	m	class:Scintilla::Indicator	typeref:typename:bool	access:public
under	..\\scite\\src\\StyleDefinition.h	/^	bool under;$/;"	m	struct:IndicatorDefinition	typeref:typename:bool	access:public
underIndicator	..\\scite\\src\\SciTEBase.h	/^	bool underIndicator;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
underline	..\\scintilla\\src\\Style.h	/^	bool underline;$/;"	m	class:Scintilla::Style	typeref:typename:bool	access:public
underlined	..\\scite\\src\\StyleDefinition.h	/^	bool underlined;$/;"	m	class:StyleDefinition	typeref:typename:bool	access:public
underscoreName	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def underscoreName(s):$/;"	f	access:public	signature:(s)
understoodTypes	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^understoodTypes = ["", "void", "int", "bool", "position",$/;"	v	access:public
undo	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^int ScintillaDocument::undo() {$/;"	f	class:ScintillaDocument	typeref:typename:int	signature:()
undoSequenceDepth	..\\scintilla\\src\\CellBuffer.h	/^	int undoSequenceDepth;$/;"	m	class:Scintilla::UndoHistory	typeref:typename:int	access:private
undo_xpm	..\\scite\\gtk\\pixmapsGNOME.h	/^static const char * undo_xpm[] = {$/;"	v	typeref:typename:const char * []
uni16BE	..\\scite\\src\\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode	access:public
uni16LE	..\\scite\\src\\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode	access:public
uni8Bit	..\\scite\\src\\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode	access:public
uniCookie	..\\scite\\src\\Cookie.h	/^    uniCookie = 4$/;"	e	enum:UniMode	access:public
uniStr	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	gunichar *uniStr;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:gunichar *	file:	access:public
uniStrLen	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	glong uniStrLen;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:glong	file:	access:public
uniUTF8	..\\scite\\src\\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode	access:public
unicodeMode	..\\scintilla\\cocoa\\PlatCocoa.h	/^  bool unicodeMode;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:bool	access:private
unicodeMode	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	bool unicodeMode;$/;"	m	class:Scintilla::ListBoxImpl	typeref:typename:bool	file:	access:private
unicodeMode	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	bool unicodeMode;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:bool	access:private
unicodeMode	..\\scintilla\\win32\\PlatWin.cxx	/^	bool unicodeMode;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:bool	file:	access:private
unicodeMode	..\\scintilla\\win32\\PlatWin.cxx	/^	bool unicodeMode;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:bool	file:	access:private
unicodeMode	..\\scintilla\\win32\\PlatWin.cxx	/^	bool unicodeMode;$/;"	m	class:Scintilla::SurfaceGDI	typeref:typename:bool	file:	access:private
unicodeMode	..\\scite\\src\\FileWorker.h	/^	UniMode unicodeMode;$/;"	m	class:FileLoader	typeref:typename:UniMode	access:public
unicodeMode	..\\scite\\src\\FileWorker.h	/^	UniMode unicodeMode;$/;"	m	class:FileStorer	typeref:typename:UniMode	access:public
unicodeMode	..\\scite\\src\\SciTEBase.h	/^	UniMode unicodeMode;$/;"	m	class:Buffer	typeref:typename:UniMode	access:public
unicodeReplacementChar	..\\scintilla\\src\\UniConversion.h	/^const int unicodeReplacementChar = 0xFFFD;$/;"	v	namespace:Scintilla	typeref:typename:const int
uninteresting	..\\scite\\scripts\\CheckMentioned.py	/^uninteresting = {$/;"	v	access:public
uniqueInstance	..\\scite\\gtk\\SciTEGTK.cxx	/^	char uniqueInstance[MAX_PATH];$/;"	m	class:SciTEGTK	typeref:typename:char[]	file:	access:protected
uniqueInstance	..\\scite\\win32\\SciTEWin.h	/^	UniqueInstance uniqueInstance;$/;"	m	class:SciTEWin	typeref:typename:UniqueInstance	access:protected
unlink	..\\scite\\src\\FilePath.cxx	/^static int unlink(const wchar_t *filename) {$/;"	f	typeref:typename:int	file:	signature:(const wchar_t * filename)
unlinkupval	..\\scintilla\\lua\\src\\lfunc.c	/^static void unlinkupval (UpVal *uv) {$/;"	f	typeref:typename:void	file:	signature:(UpVal * uv)
unmakemask	..\\scintilla\\lua\\src\\ldblib.c	/^static char *unmakemask (int mask, char *smask) {$/;"	f	typeref:typename:char *	file:	signature:(int mask,char * smask)
unquote	..\\scite\\gtk\\SciTEGTK.cxx	/^static void unquote(char *s) {$/;"	f	typeref:typename:void	file:	signature:(char * s)
upTo	..\\scintilla\\src\\Editor.h	/^	Sci::Position upTo;$/;"	m	class:Scintilla::WorkNeeded	typeref:typename:Sci::Position	access:public
up_x_xpm	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char * up_x_xpm[] = {$/;"	v	typeref:typename:const char * []	file:
updateCaseConvert	..\\scintilla\\scripts\\GenerateCaseConvert.py	/^def updateCaseConvert():$/;"	f	access:public	signature:()
updateCharacterCategory	..\\scintilla\\scripts\\GenerateCharacterCategory.py	/^def updateCharacterCategory(filename):$/;"	f	access:public	signature:(filename)
updatecache	..\\scintilla\\lua\\src\\lpcap.c	/^static int updatecache (CapState *cs, int v) {$/;"	f	typeref:typename:int	file:	signature:(CapState * cs,int v)
updated	..\\scintilla\\include\\Scintilla.h	/^	int updated;	\/* SCN_UPDATEUI *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
uptr_t	..\\scintilla\\include\\Scintilla.h	/^typedef uintptr_t uptr_t;$/;"	t	typeref:typename:uintptr_t
upval	..\\scintilla\\lua\\src\\lparser.c	/^  lu_byte upval;  \/* true if some variable in the block is an upvalue *\/$/;"	m	struct:BlockCnt	typeref:typename:lu_byte	file:	access:public
upvaldesc	..\\scintilla\\lua\\src\\lparser.h	/^typedef struct upvaldesc {$/;"	s
upvaldesc	..\\scintilla\\lua\\src\\lparser.h	/^} upvaldesc;$/;"	t	typeref:struct:upvaldesc
upvals	..\\scintilla\\lua\\src\\lobject.h	/^  UpVal *upvals[1];$/;"	m	struct:LClosure	typeref:typename:UpVal * [1]	access:public
upvalue	..\\scintilla\\lua\\src\\lobject.h	/^  TValue upvalue[1];$/;"	m	struct:CClosure	typeref:typename:TValue[1]	access:public
upvalues	..\\scintilla\\lua\\src\\lobject.h	/^  TString **upvalues;  \/* upvalue names *\/$/;"	m	struct:Proto	typeref:typename:TString **	access:public
upvalues	..\\scintilla\\lua\\src\\lparser.h	/^  upvaldesc upvalues[LUAI_MAXUPVALUES];  \/* upvalues *\/$/;"	m	struct:FuncState	typeref:typename:upvaldesc[]	access:public
uriDropped	..\\scintilla\\qt\\ScintillaEditPy\\testsepq.py	/^def uriDropped():$/;"	f	access:public	signature:()
usage	..\\scintilla\\lua\\src\\luac.c	/^static void usage(const char* message)$/;"	f	typeref:typename:void	file:	signature:(const char * message)
usage	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^def usage():$/;"	f	access:public	signature:()
usage	..\\scintilla\\qt\\ScintillaEdit\\WidgetGen.py	/^def usage():$/;"	f	access:public	signature:()
usage	..\\scintilla\\win32\\PlatWin.cxx	/^	int usage;$/;"	m	class:Scintilla::FontCached	typeref:typename:int	file:	access:private
useCount	..\\scintilla\\src\\PositionCache.h	/^	int useCount;$/;"	m	class:Scintilla::LineLayoutCache	typeref:typename:int	access:private
useMonoFont	..\\scite\\src\\SciTEBase.h	/^	bool useMonoFont;$/;"	m	class:Buffer	typeref:typename:bool	access:public
usePerformanceCounter	..\\scintilla\\win32\\PlatWin.cxx	/^static bool usePerformanceCounter = false;$/;"	v	namespace:Scintilla	typeref:typename:bool	file:
usePerformanceCounter	..\\scite\\win32\\GUIWin.cxx	/^static bool usePerformanceCounter = false;$/;"	v	namespace:GUI	typeref:typename:bool	file:
useStyleCallTip	..\\scintilla\\src\\CallTip.h	/^	bool useStyleCallTip;   \/\/ if true, STYLE_CALLTIP should be used$/;"	m	class:Scintilla::CallTip	typeref:typename:bool	access:private
useTabs	..\\scintilla\\src\\Document.h	/^	bool useTabs;$/;"	m	class:Scintilla::Document	typeref:typename:bool	access:public
useThickFrame	..\\scintilla\\gtk\\PlatGTK.cxx	/^	bool useThickFrame;$/;"	m	class:ListBoxX	typeref:typename:bool	file:	access:private
useThickFrame	..\\scintilla\\win32\\PlatWin.cxx	/^	bool useThickFrame;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:bool	file:	access:private
user	..\\scite\\gtk\\Widget.h	/^	void *user;$/;"	m	class:WCheckDraw	typeref:typename:void *	access:private
userData	..\\scintilla\\src\\Document.h	/^		void *userData;$/;"	m	struct:Scintilla::Document::WatcherWithUserData	typeref:typename:void *	access:public
userStrip	..\\scite\\gtk\\SciTEGTK.cxx	/^	UserStrip userStrip;$/;"	m	class:SciTEGTK	typeref:typename:UserStrip	file:	access:protected
userStrip	..\\scite\\win32\\SciTEWin.h	/^	UserStrip userStrip;$/;"	m	class:SciTEWin	typeref:typename:UserStrip	access:protected
utf16	..\\scite\\src\\Utf8_16.h	/^	typedef unsigned short utf16; \/\/ 16 bits$/;"	t	class:Utf8_16	typeref:typename:unsigned short	access:public
utf16Folded	..\\scintilla\\win32\\ScintillaWin.cxx	/^	std::vector<wchar_t> utf16Folded;$/;"	m	class:CaseFolderDBCS	typeref:typename:std::vector<wchar_t>	file:	access:private
utf16Mixed	..\\scintilla\\win32\\ScintillaWin.cxx	/^	std::vector<wchar_t> utf16Mixed;$/;"	m	class:CaseFolderDBCS	typeref:typename:std::vector<wchar_t>	file:	access:private
utf8	..\\scite\\src\\Utf8_16.h	/^	typedef unsigned char utf8; \/\/ 8 bits$/;"	t	class:Utf8_16	typeref:typename:unsigned char	access:public
utf8LengthFromLead	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^static size_t utf8LengthFromLead(unsigned char uch)$/;"	f	namespace:Scintilla	typeref:typename:size_t	file:	signature:(unsigned char uch)
utf8LineEnds	..\\scintilla\\src\\CellBuffer.h	/^	int utf8LineEnds;$/;"	m	class:Scintilla::CellBuffer	typeref:typename:int	access:private
utf8Start3	..\\scintilla\\src\\UniConversion.cxx	/^const unsigned char utf8Start3 = 0xE0;$/;"	v	namespace:Scintilla	typeref:typename:const unsigned char
utf8Start4	..\\scintilla\\src\\UniConversion.cxx	/^const unsigned char utf8Start4 = 0xF0;$/;"	v	namespace:Scintilla	typeref:typename:const unsigned char
uv	..\\scintilla\\lua\\src\\lobject.h	/^  } uv;$/;"	m	union:Udata	typeref:struct:Udata::__anonae4e9c5f0308	access:public
uv	..\\scintilla\\lua\\src\\lstate.h	/^  struct UpVal uv;$/;"	m	union:GCObject	typeref:struct:UpVal	access:public
uvalue	..\\scintilla\\lua\\src\\lobject.h	/^#define uvalue(/;"	d	signature:(o)
uvhead	..\\scintilla\\lua\\src\\lstate.h	/^  UpVal uvhead;  \/* head of double-linked list of all open upvalues *\/$/;"	m	struct:global_State	typeref:typename:UpVal	access:public
v	..\\scintilla\\lua\\src\\lobject.h	/^  TValue *v;  \/* points to stack or to its own value *\/$/;"	m	struct:UpVal	typeref:typename:TValue *	access:public
v	..\\scintilla\\lua\\src\\lparser.c	/^  expdesc v;  \/* last list item read *\/$/;"	m	struct:ConsControl	typeref:typename:expdesc	file:	access:public
v	..\\scintilla\\lua\\src\\lparser.c	/^  expdesc v;  \/* variable (global, local, upvalue, or indexed) *\/$/;"	m	struct:LHS_assign	typeref:typename:expdesc	file:	access:public
vComma	..\\scite\\scripts\\makerpms.py	/^vComma = vFull[0] + ", " + vFull[1] + ", " + vFull[2] + ", 0"$/;"	v	access:public
vFull	..\\scite\\scripts\\makerpms.py	/^vFull = vers.read().strip()$/;"	v	access:public
vMax	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	int vMax, hMax;   \/\/ Scroll bar maximums.$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:int	access:private
vPage	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.h	/^	int vPage, hPage; \/\/ Scroll bar page sizes.$/;"	m	class:Scintilla::ScintillaQt	typeref:typename:int	access:private
vPoint	..\\scite\\scripts\\makerpms.py	/^vPoint = vFull[0] + "." + vFull[1:]$/;"	v	access:public
val	..\\scintilla\\src\\CallTip.h	/^	std::string val;$/;"	m	class:Scintilla::CallTip	typeref:typename:std::string	access:private
val	..\\scintilla\\win32\\PlatWin.cxx	/^		DWORD val;$/;"	m	union:Scintilla::dwordFromBGRA::__anon82a12833010a	typeref:typename:DWORD	file:	access:public
val2str	..\\scintilla\\lua\\src\\lptree.c	/^static const char *val2str (lua_State *L, int idx) {$/;"	f	typeref:typename:const char *	file:	signature:(lua_State * L,int idx)
valid	..\\scite\\src\\SciTEIO.cxx	/^	size_t valid;$/;"	m	class:BufferedFile	typeref:typename:size_t	file:	access:private
validLen	..\\scintilla\\lexlib\\LexAccessor.h	/^	Sci_Position validLen;$/;"	m	class:Scintilla::LexAccessor	typeref:typename:Sci_Position	access:private
validLen	..\\scite\\src\\StyleWriter.h	/^	int validLen;$/;"	m	class:StyleWriter	typeref:typename:int	access:protected
validLevel	..\\scintilla\\src\\PositionCache.h	/^	enum validLevel { llInvalid, llCheckTextAndStyle, llPositions, llLines } validity;$/;"	g	class:Scintilla::LineLayout	access:public
validUTF8	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	gboolean validUTF8;$/;"	m	class:__anon9c9cef500311::PreEditString	typeref:typename:gboolean	file:	access:public
validity	..\\scintilla\\src\\PositionCache.h	/^	enum validLevel { llInvalid, llCheckTextAndStyle, llPositions, llLines } validity;$/;"	m	class:Scintilla::LineLayout	typeref:enum:Scintilla::LineLayout::validLevel	access:public
valiswhite	..\\scintilla\\lua\\src\\lgc.h	/^#define valiswhite(/;"	d	signature:(x)
value	..\\scintilla\\lexlib\\LexAccessor.h	/^	int value;$/;"	m	struct:Scintilla::LexicalClass	typeref:typename:int	access:public
value	..\\scintilla\\lexlib\\SparseState.h	/^		T value;$/;"	m	struct:Scintilla::SparseState::State	typeref:typename:T	access:public
value	..\\scintilla\\lua\\src\\lobject.h	/^    TValue value;  \/* the value (when closed) *\/$/;"	m	union:UpVal::__anonae4e9c5f040a	typeref:typename:TValue	access:public
value	..\\scite\\src\\Containers.h	/^		VALUE value;$/;"	m	struct:TMap::Association	typeref:typename:VALUE	access:public
value	..\\scite\\src\\IFaceTable.h	/^	int value;$/;"	m	struct:IFaceConstant	typeref:typename:int	access:public
value	..\\scite\\src\\IFaceTable.h	/^	int value;$/;"	m	struct:IFaceFunction	typeref:typename:int	access:public
value	..\\scite\\src\\StyleDefinition.cxx	/^		int value;$/;"	m	struct:IndicatorDefinition::ParseIndicatorDefinition::__anon3a004e980108	typeref:typename:int	file:	access:public
valueAfter	..\\scintilla\\lexlib\\CharacterSet.h	/^	bool valueAfter;$/;"	m	class:Scintilla::CharacterSet	typeref:typename:bool	access:private
valueType	..\\scite\\src\\IFaceTable.h	/^	IFaceType valueType;$/;"	m	struct:IFaceProperty	typeref:typename:IFaceType	access:public
value_type	..\\scintilla\\src\\Document.cxx	/^	typedef char value_type;$/;"	t	class:__anon1ef09aa80111::ByteIterator	typeref:typename:char	file:	access:public
value_type	..\\scintilla\\src\\Document.cxx	/^	typedef wchar_t value_type;$/;"	t	class:__anon1ef09aa80111::UTF8Iterator	typeref:typename:wchar_t	file:	access:public
valuecached	..\\scintilla\\lua\\src\\lpcap.h	/^  int valuecached;  \/* value stored in cache slot *\/$/;"	m	struct:CapState	typeref:typename:int	access:public
values	..\\scintilla\\src\\SparseVector.h	/^	std::unique_ptr<SplitVector<T>> values;$/;"	m	class:Scintilla::SparseVector	typeref:typename:std::unique_ptr<SplitVector<T>>	access:private
var	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^	const char *var;$/;"	m	struct:VarChain	typeref:typename:const char *	file:	access:public
var	..\\scite\\src\\PropSetFile.cxx	/^	const char *var;$/;"	m	struct:VarChain	typeref:typename:const char *	file:	access:public
varname	..\\scintilla\\lua\\src\\lobject.h	/^  TString *varname;$/;"	m	struct:LocVar	typeref:typename:TString *	access:public
verFileName	..\\scite\\scripts\\makerpms.py	/^verFileName = srcRoot + "scintilla\/version.txt"$/;"	v	access:public
verifyerror	..\\scintilla\\lua\\src\\lptree.c	/^static int verifyerror (lua_State *L, int *passed, int npassed) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,int * passed,int npassed)
verifygrammar	..\\scintilla\\lua\\src\\lptree.c	/^static void verifygrammar (lua_State *L, TTree *grammar) {$/;"	f	typeref:typename:void	file:	signature:(lua_State * L,TTree * grammar)
verifyrule	..\\scintilla\\lua\\src\\lptree.c	/^static int verifyrule (lua_State *L, TTree *tree, int *passed, int npassed,$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,TTree * tree,int * passed,int npassed,int nullable)
vers	..\\scite\\scripts\\makerpms.py	/^vers = open(verFileName)$/;"	v	access:public
verticalDeviceResolution	..\\scintilla\\cocoa\\PlatCocoa.h	/^  int verticalDeviceResolution;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	access:private
verticalOffset	..\\scintilla\\src\\CallTip.h	/^	int verticalOffset; \/\/ pixel offset up or down of the calltip with respect to the line$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:public
verticalScrollBarVisible	..\\scintilla\\src\\Editor.h	/^	bool verticalScrollBarVisible;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
verticalScrollBarWidth	..\\scintilla\\gtk\\ScintillaGTK.h	/^	int verticalScrollBarWidth;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:int	access:private
view	..\\scintilla\\src\\Editor.h	/^	EditView view;$/;"	m	class:Scintilla::Editor	typeref:typename:EditView	access:protected
viewEOL	..\\scintilla\\src\\ViewStyle.h	/^	bool viewEOL;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:bool	access:public
viewIndentationGuides	..\\scintilla\\src\\ViewStyle.h	/^	IndentView viewIndentationGuides;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:IndentView	access:public
viewOptions	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^QStyleOptionViewItem ListWidget::viewOptions() const$/;"	f	class:Scintilla::ListWidget	typeref:typename:QStyleOptionViewItem	signature:() const
viewWhitespace	..\\scintilla\\src\\ViewStyle.h	/^	WhiteSpaceVisibility viewWhitespace;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:WhiteSpaceVisibility	access:public
virtualSpace	..\\scintilla\\src\\Selection.h	/^	Sci::Position virtualSpace;$/;"	m	class:Scintilla::SelectionPosition	typeref:typename:Sci::Position	access:private
virtualSpaceOptions	..\\scintilla\\src\\Editor.h	/^	int virtualSpaceOptions;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
visHeightEditor	..\\scite\\src\\SciTEBase.h	/^	int visHeightEditor;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
visHeightStatus	..\\scite\\src\\SciTEBase.h	/^	int visHeightStatus;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
visHeightTab	..\\scite\\src\\SciTEBase.h	/^	int visHeightTab;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
visHeightTools	..\\scite\\src\\SciTEBase.h	/^	int visHeightTools;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
visible	..\\scintilla\\src\\ContractionState.h	/^	std::unique_ptr<RunStyles<Sci::Line, char>> visible;$/;"	m	class:Scintilla::ContractionState	typeref:typename:std::unique_ptr<RunStyles<Sci::Line,char>>	access:private
visible	..\\scintilla\\src\\Style.h	/^	bool visible;$/;"	m	class:Scintilla::Style	typeref:typename:bool	access:public
visible	..\\scite\\gtk\\Widget.h	/^	bool visible;$/;"	m	class:Strip	typeref:typename:bool	access:public
visible	..\\scite\\src\\StyleDefinition.h	/^	bool visible;$/;"	m	class:StyleDefinition	typeref:typename:bool	access:public
visible	..\\scite\\win32\\SciTEWin.h	/^	bool visible;$/;"	m	struct:Band	typeref:typename:bool	access:public
visible	..\\scite\\win32\\Strips.h	/^	bool visible;$/;"	m	class:Strip	typeref:typename:bool	access:public
visiblePolicy	..\\scintilla\\src\\Editor.h	/^	int visiblePolicy;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
visibleProgress	..\\scite\\src\\FileWorker.h	/^	bool visibleProgress;$/;"	m	class:FileStorer	typeref:typename:bool	access:public
visibleRows	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	int visibleRows;$/;"	m	class:Scintilla::ListBoxImpl	typeref:typename:int	file:	access:private
visibleSlop	..\\scintilla\\src\\Editor.h	/^	int visibleSlop;$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
vs	..\\scintilla\\src\\Editor.h	/^	ViewStyle vs;$/;"	m	class:Scintilla::Editor	typeref:typename:ViewStyle	access:protected
vtDataObject	..\\scintilla\\win32\\ScintillaWin.cxx	/^static VFunction *vtDataObject[] = {$/;"	v	typeref:typename:VFunction * []	file:
vtDropSource	..\\scintilla\\win32\\ScintillaWin.cxx	/^static VFunction *vtDropSource[] = {$/;"	v	typeref:typename:VFunction * []	file:
vtDropTarget	..\\scintilla\\win32\\ScintillaWin.cxx	/^static VFunction *vtDropTarget[] = {$/;"	v	typeref:typename:VFunction * []	file:
vtFormatEnumerator	..\\scintilla\\win32\\ScintillaWin.cxx	/^static VFunction *vtFormatEnumerator[] = {$/;"	v	typeref:typename:VFunction * []	file:
vtbl	..\\scintilla\\win32\\ScintillaWin.cxx	/^	VFunction **vtbl;$/;"	m	class:DataObject	typeref:typename:VFunction **	file:	access:public
vtbl	..\\scintilla\\win32\\ScintillaWin.cxx	/^	VFunction **vtbl;$/;"	m	class:DropSource	typeref:typename:VFunction **	file:	access:public
vtbl	..\\scintilla\\win32\\ScintillaWin.cxx	/^	VFunction **vtbl;$/;"	m	class:DropTarget	typeref:typename:VFunction **	file:	access:public
vtbl	..\\scintilla\\win32\\ScintillaWin.cxx	/^	VFunction **vtbl;$/;"	m	class:FormatEnumerator	typeref:typename:VFunction **	file:	access:public
w	..\\scite\\src\\StripDefinition.h	/^	GUI::Window w;$/;"	m	class:UserControl	typeref:typename:GUI::Window	access:public
wButton	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton wButton;$/;"	m	class:FindStrip	typeref:typename:WButton	file:	access:public
wButton	..\\scite\\win32\\Strips.h	/^	GUI::Window wButton;$/;"	m	class:FindStrip	typeref:typename:GUI::Window	access:private
wButton	..\\scite\\win32\\Strips.h	/^	GUI::Window wButton;$/;"	m	class:SearchStrip	typeref:typename:GUI::Window	access:private
wButtonFind	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton wButtonFind;$/;"	m	class:ReplaceStrip	typeref:typename:WButton	file:	access:public
wButtonFind	..\\scite\\win32\\Strips.h	/^	GUI::Window wButtonFind;$/;"	m	class:ReplaceStrip	typeref:typename:GUI::Window	access:private
wButtonMarkAll	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton wButtonMarkAll;$/;"	m	class:FindStrip	typeref:typename:WButton	file:	access:public
wButtonMarkAll	..\\scite\\win32\\Strips.h	/^	GUI::Window wButtonMarkAll;$/;"	m	class:FindStrip	typeref:typename:GUI::Window	access:private
wButtonReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton wButtonReplace;$/;"	m	class:ReplaceStrip	typeref:typename:WButton	file:	access:public
wButtonReplace	..\\scite\\win32\\Strips.h	/^	GUI::Window wButtonReplace;$/;"	m	class:ReplaceStrip	typeref:typename:GUI::Window	access:private
wButtonReplaceAll	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton wButtonReplaceAll;$/;"	m	class:ReplaceStrip	typeref:typename:WButton	file:	access:public
wButtonReplaceAll	..\\scite\\win32\\Strips.h	/^	GUI::Window wButtonReplaceAll;$/;"	m	class:ReplaceStrip	typeref:typename:GUI::Window	access:private
wButtonReplaceInSelection	..\\scite\\gtk\\SciTEGTK.cxx	/^	WButton wButtonReplaceInSelection;$/;"	m	class:ReplaceStrip	typeref:typename:WButton	file:	access:public
wButtonReplaceInSelection	..\\scite\\win32\\Strips.h	/^	GUI::Window wButtonReplaceInSelection;$/;"	m	class:ReplaceStrip	typeref:typename:GUI::Window	access:private
wCallTip	..\\scintilla\\src\\CallTip.h	/^	Window wCallTip;$/;"	m	class:Scintilla::CallTip	typeref:typename:Window	access:public
wCheck	..\\scite\\gtk\\SciTEGTK.cxx	/^	WCheckDraw wCheck[checks];$/;"	m	class:FindStrip	typeref:typename:WCheckDraw[]	file:	access:public
wCheck	..\\scite\\gtk\\SciTEGTK.cxx	/^	WCheckDraw wCheck[checks];$/;"	m	class:ReplaceStrip	typeref:typename:WCheckDraw[]	file:	access:public
wCheckBE	..\\scite\\win32\\Strips.h	/^	GUI::Window wCheckBE;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wCheckCase	..\\scite\\win32\\Strips.h	/^	GUI::Window wCheckCase;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wCheckRE	..\\scite\\win32\\Strips.h	/^	GUI::Window wCheckRE;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wCheckUp	..\\scite\\win32\\Strips.h	/^	GUI::Window wCheckUp;$/;"	m	class:FindStrip	typeref:typename:GUI::Window	access:private
wCheckWord	..\\scite\\win32\\Strips.h	/^	GUI::Window wCheckWord;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wCheckWrap	..\\scite\\win32\\Strips.h	/^	GUI::Window wCheckWrap;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wComboFiles	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry wComboFiles;$/;"	m	class:DialogFindInFiles	typeref:typename:WComboBoxEntry	file:	access:public
wComboFind	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry wComboFind;$/;"	m	class:DialogFindReplace	typeref:typename:WComboBoxEntry	file:	access:public
wComboFind	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry wComboFind;$/;"	m	class:FindReplaceStrip	typeref:typename:WComboBoxEntry	file:	access:public
wComboFindInFiles	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry wComboFindInFiles;$/;"	m	class:DialogFindInFiles	typeref:typename:WComboBoxEntry	file:	access:public
wComboReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry wComboReplace;$/;"	m	class:DialogFindReplace	typeref:typename:WComboBoxEntry	file:	access:public
wComboReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^	WComboBoxEntry wComboReplace;$/;"	m	class:ReplaceStrip	typeref:typename:WComboBoxEntry	file:	access:public
wContent	..\\scite\\src\\SciTEBase.h	/^	GUI::Window wContent;    \/\/\/< Contains wEditor and wOutput$/;"	m	class:SciTEBase	typeref:typename:GUI::Window	access:protected
wCorrespondent	..\\scite\\win32\\DirectorExtension.cxx	/^static HWND wCorrespondent = 0;$/;"	v	typeref:typename:HWND	file:
wDirector	..\\scite\\win32\\DirectorExtension.cxx	/^static HWND wDirector = 0;$/;"	v	typeref:typename:HWND	file:
wDraw	..\\scintilla\\src\\CallTip.h	/^	Window wDraw;$/;"	m	class:Scintilla::CallTip	typeref:typename:Window	access:public
wEditor	..\\scite\\src\\SciTEBase.h	/^	GUI::ScintillaWindow wEditor;$/;"	m	class:SciTEBase	typeref:typename:GUI::ScintillaWindow	access:protected
wExplanation	..\\scite\\gtk\\SciTEGTK.cxx	/^	WStatic wExplanation;$/;"	m	class:BackgroundStrip	typeref:typename:WStatic	file:	access:public
wExplanation	..\\scite\\win32\\Strips.h	/^	GUI::Window wExplanation;$/;"	m	class:BackgroundStrip	typeref:typename:GUI::Window	access:private
wFindInFiles	..\\scite\\win32\\SciTEWin.h	/^	GUI::Window wFindInFiles;$/;"	m	class:SciTEWin	typeref:typename:GUI::Window	access:protected
wFindReplace	..\\scite\\win32\\SciTEWin.h	/^	GUI::Window wFindReplace;$/;"	m	class:SciTEWin	typeref:typename:GUI::Window	access:protected
wFocus	..\\scite\\win32\\SciTEWin.h	/^	HWND wFocus;$/;"	m	class:SciTEWin	typeref:typename:HWND	access:protected
wIncrement	..\\scite\\src\\SciTEBase.h	/^	GUI::Window wIncrement;$/;"	m	class:SciTEBase	typeref:typename:GUI::Window	access:protected
wIncrementPanel	..\\scite\\gtk\\SciTEGTK.cxx	/^	GtkWidget *wIncrementPanel;$/;"	m	class:SciTEGTK	typeref:typename:GtkWidget *	file:	access:protected
wMain	..\\scintilla\\src\\Editor.h	/^	Window wMain;	\/\/\/< The Scintilla parent window$/;"	m	class:Scintilla::Editor	typeref:typename:Window	access:protected
wMargin	..\\scintilla\\src\\Editor.h	/^	Window wMargin;	\/\/\/< May be separate when using a scroll view for wMain$/;"	m	class:Scintilla::Editor	typeref:typename:Window	access:protected
wOutput	..\\scite\\src\\SciTEBase.h	/^	GUI::ScintillaWindow wOutput;$/;"	m	class:SciTEBase	typeref:typename:GUI::ScintillaWindow	access:protected
wParam	..\\scintilla\\include\\Scintilla.h	/^	uptr_t wParam;	\/* SCN_MACRORECORD *\/$/;"	m	struct:SCNotification	typeref:typename:uptr_t	access:public
wParameters	..\\scite\\win32\\SciTEWin.h	/^	GUI::Window wParameters;$/;"	m	class:SciTEWin	typeref:typename:GUI::Window	access:protected
wPreedit	..\\scintilla\\gtk\\ScintillaGTK.h	/^	Window wPreedit;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:Window	access:private
wPreeditDraw	..\\scintilla\\gtk\\ScintillaGTK.h	/^	Window wPreeditDraw;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:Window	access:private
wProgress	..\\scite\\gtk\\SciTEGTK.cxx	/^	WProgress wProgress;$/;"	m	class:BackgroundStrip	typeref:typename:WProgress	file:	access:public
wProgress	..\\scite\\win32\\Strips.h	/^	GUI::Window wProgress;$/;"	m	class:BackgroundStrip	typeref:typename:GUI::Window	access:private
wReceiver	..\\scite\\win32\\DirectorExtension.cxx	/^static HWND wReceiver = 0;$/;"	v	typeref:typename:HWND	file:
wReplace	..\\scite\\win32\\Strips.h	/^	GUI::Window wReplace;$/;"	m	class:ReplaceStrip	typeref:typename:GUI::Window	access:private
wSciTE	..\\scite\\src\\SciTEBase.h	/^	GUI::Window wSciTE;  \/\/\/< Contains wToolBar, wTabBar, wContent, and wStatusBar$/;"	m	class:SciTEBase	typeref:typename:GUI::Window	access:protected
wSelection	..\\scintilla\\gtk\\ScintillaGTK.h	/^	Window wSelection;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:Window	access:private
wStaticFind	..\\scite\\gtk\\SciTEGTK.cxx	/^	WStatic wStaticFind;$/;"	m	class:FindStrip	typeref:typename:WStatic	file:	access:public
wStaticFind	..\\scite\\gtk\\SciTEGTK.cxx	/^	WStatic wStaticFind;$/;"	m	class:ReplaceStrip	typeref:typename:WStatic	file:	access:public
wStaticFind	..\\scite\\win32\\Strips.h	/^	GUI::Window wStaticFind;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wStaticFind	..\\scite\\win32\\Strips.h	/^	GUI::Window wStaticFind;$/;"	m	class:SearchStrip	typeref:typename:GUI::Window	access:private
wStaticReplace	..\\scite\\gtk\\SciTEGTK.cxx	/^	WStatic wStaticReplace;$/;"	m	class:ReplaceStrip	typeref:typename:WStatic	file:	access:public
wStaticReplace	..\\scite\\win32\\Strips.h	/^	GUI::Window wStaticReplace;$/;"	m	class:ReplaceStrip	typeref:typename:GUI::Window	access:private
wStatusBar	..\\scite\\src\\SciTEBase.h	/^	GUI::Window wStatusBar;$/;"	m	class:SciTEBase	typeref:typename:GUI::Window	access:protected
wTabBar	..\\scite\\src\\SciTEBase.h	/^	GUI::Window wTabBar;$/;"	m	class:SciTEBase	typeref:typename:GUI::Window	access:protected
wText	..\\scintilla\\gtk\\ScintillaGTK.h	/^	Window wText;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:Window	access:private
wText	..\\scite\\win32\\Strips.h	/^	GUI::Window wText;$/;"	m	class:FindReplaceStrip	typeref:typename:GUI::Window	access:protected
wText	..\\scite\\win32\\Strips.h	/^	GUI::Window wText;$/;"	m	class:SearchStrip	typeref:typename:GUI::Window	access:private
wToolBar	..\\scite\\src\\SciTEBase.h	/^	GUI::Window wToolBar;$/;"	m	class:SciTEBase	typeref:typename:GUI::Window	access:protected
wToolBarBox	..\\scite\\gtk\\SciTEGTK.cxx	/^	GUI::Window wToolBarBox;$/;"	m	class:SciTEGTK	typeref:typename:GUI::Window	file:	access:protected
wToolTip	..\\scite\\win32\\Strips.h	/^	GUI::Window wToolTip;$/;"	m	class:Strip	typeref:typename:GUI::Window	access:protected
warnExecuteKO	..\\scite\\src\\SciTEBase.h	/^    warnExecuteKO$/;"	e	enum:__anonf95580a60503	access:public
warnExecuteOK	..\\scite\\src\\SciTEBase.h	/^    warnExecuteOK,$/;"	e	enum:__anonf95580a60503	access:public
warnFindWrapped	..\\scite\\src\\SciTEBase.h	/^    warnFindWrapped = 1,$/;"	e	enum:__anonf95580a60503	access:public
warnNoOtherBookmark	..\\scite\\src\\SciTEBase.h	/^    warnNoOtherBookmark,$/;"	e	enum:__anonf95580a60503	access:public
warnNotFound	..\\scite\\src\\SciTEBase.h	/^    warnNotFound,$/;"	e	enum:__anonf95580a60503	access:public
warnWrongFile	..\\scite\\src\\SciTEBase.h	/^    warnWrongFile,$/;"	e	enum:__anonf95580a60503	access:public
watcher	..\\scintilla\\src\\Document.h	/^		DocWatcher *watcher;$/;"	m	struct:Scintilla::Document::WatcherWithUserData	typeref:typename:DocWatcher *	access:public
watchers	..\\scintilla\\src\\Document.h	/^	std::vector<WatcherWithUserData> watchers;$/;"	m	class:Scintilla::Document	typeref:typename:std::vector<WatcherWithUserData>	access:private
wcwidth	..\\scintilla\\curses\\ScintillaCurses.cxx	/^#define wcwidth(/;"	d	file:	signature:(_)
weak	..\\scintilla\\lua\\src\\lstate.h	/^  GCObject *weak;  \/* list of weak tables (to be cleared) *\/$/;"	m	struct:global_State	typeref:typename:GCObject *	access:public
weakRef	..\\scintilla\\gtk\\ScintillaGTK.h	/^	GObject *weakRef;$/;"	m	class:Scintilla::GObjectWatcher	typeref:typename:GObject *	access:private
weight	..\\scintilla\\include\\Platform.h	/^	int weight;$/;"	m	struct:Scintilla::FontParameters	typeref:typename:int	access:public
weight	..\\scintilla\\src\\Style.h	/^	int weight;$/;"	m	struct:Scintilla::FontSpecification	typeref:typename:int	access:public
weight	..\\scite\\src\\StyleDefinition.h	/^	int weight;$/;"	m	class:StyleDefinition	typeref:typename:int	access:public
what	..\\scintilla\\lua\\src\\lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
what	..\\scite\\lua\\include\\lua.h	/^  const char *what;	\/* (S) `Lua', `C', `main', `tail' *\/$/;"	m	struct:lua_Debug	typeref:typename:const char *	access:public
wheelDelta	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.h	/^	int wheelDelta;$/;"	m	class:ScintillaEditBase	typeref:typename:int	access:private
wheelDelta	..\\scintilla\\win32\\PlatWin.cxx	/^	int wheelDelta; \/\/ mouse wheel residue$/;"	m	class:Scintilla::ListBoxX	typeref:typename:int	file:	access:private
wheelDelta	..\\scintilla\\win32\\ScintillaWin.cxx	/^	int wheelDelta; \/\/\/< Wheel delta from roll$/;"	m	class:ScintillaWin	typeref:typename:int	file:	access:private
wheelEvent	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^void ScintillaEditBase::wheelEvent(QWheelEvent *event)$/;"	f	class:ScintillaEditBase	typeref:typename:void	signature:(QWheelEvent * event)
wheelMouseIntensity	..\\scintilla\\gtk\\ScintillaGTK.h	/^	gint wheelMouseIntensity;$/;"	m	class:Scintilla::ScintillaGTK	typeref:typename:gint	access:private
whilestat	..\\scintilla\\lua\\src\\lparser.c	/^static void whilestat (LexState *ls, int line) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,int line)
white2gray	..\\scintilla\\lua\\src\\lgc.c	/^#define white2gray(/;"	d	file:	signature:(x)
whitespaceCharacters	..\\scite\\src\\SciTEBase.h	/^	std::string whitespaceCharacters;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
whitespaceColours	..\\scintilla\\src\\ViewStyle.h	/^	ForeBackColours whitespaceColours;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:ForeBackColours	access:public
whitespaceSize	..\\scintilla\\src\\ViewStyle.h	/^	int whitespaceSize;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
wholeWord	..\\scite\\src\\SciTEBase.h	/^	bool wholeWord;$/;"	m	class:Searcher	typeref:typename:bool	access:public
wid	..\\scintilla\\include\\Platform.h	/^	WindowID wid;$/;"	m	class:Scintilla::Window	typeref:typename:WindowID	access:protected
wid	..\\scite\\src\\GUI.h	/^	WindowID wid;$/;"	m	class:GUI::Window	typeref:typename:WindowID	access:protected
widCached	..\\scintilla\\gtk\\PlatGTK.cxx	/^	WindowID widCached;$/;"	m	class:ListBoxX	typeref:typename:WindowID	file:	access:private
widestItem	..\\scintilla\\win32\\PlatWin.cxx	/^	const char *widestItem;$/;"	m	class:Scintilla::ListBoxX	typeref:typename:const char *	file:	access:private
width	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int height, width;$/;"	m	class:ListBoxImpl	typeref:typename:int	file:	access:private
width	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  int width, height; \/\/ window dimensions$/;"	m	class:ScintillaCurses	typeref:typename:int	file:	access:private
width	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position width;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:public
width	..\\scintilla\\src\\ViewStyle.h	/^	int width;$/;"	m	class:Scintilla::MarginStyle	typeref:typename:int	access:public
width	..\\scintilla\\src\\XPM.h	/^	int width;$/;"	m	class:Scintilla::RGBAImage	typeref:typename:int	access:private
width	..\\scintilla\\src\\XPM.h	/^	int width;$/;"	m	class:Scintilla::XPM	typeref:typename:int	access:private
width	..\\scintilla\\src\\XPM.h	/^	mutable int width;	\/\/\/< Memorize largest width of the set.$/;"	m	class:Scintilla::RGBAImageSet	typeref:typename:int	access:private
widthAllocated	..\\scite\\src\\StripDefinition.h	/^	int widthAllocated;$/;"	m	class:UserControl	typeref:typename:int	access:public
widthAllocated	..\\scite\\src\\StripDefinition.h	/^	int widthAllocated;$/;"	m	struct:ColumnWidth	typeref:typename:int	access:public
widthArrow	..\\scintilla\\src\\CallTip.h	/^	int widthArrow;$/;"	m	class:Scintilla::CallTip	typeref:typename:int	access:public
widthBytes	..\\scintilla\\src\\Document.h	/^		unsigned int widthBytes;$/;"	m	struct:Scintilla::Document::CharacterExtracted	typeref:typename:unsigned int	access:public
widthCombo	..\\scite\\gtk\\Widget.h	/^	enum { heightButton=23, heightStatic=12, widthCombo=20};$/;"	e	enum:Strip::__anon7c5ac8350203	access:public
widthDesired	..\\scite\\src\\StripDefinition.h	/^	int widthDesired;$/;"	m	class:UserControl	typeref:typename:int	access:public
widthDesired	..\\scite\\src\\StripDefinition.h	/^	int widthDesired;$/;"	m	struct:ColumnWidth	typeref:typename:int	access:public
widthLBDefault	..\\scintilla\\src\\AutoComplete.h	/^	int widthLBDefault;$/;"	m	class:Scintilla::AutoComplete	typeref:typename:int	access:public
widthLine	..\\scintilla\\src\\PositionCache.h	/^	int widthLine;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
widthNext	..\\scintilla\\lexlib\\StyleContext.h	/^	Sci_Position widthNext;$/;"	m	class:Scintilla::StyleContext	typeref:typename:Sci_Position	access:public
widths	..\\scite\\src\\StripDefinition.h	/^	std::vector<ColumnWidth> widths;$/;"	m	class:StripDefinition	typeref:typename:std::vector<ColumnWidth>	access:public
willRedrawAll	..\\scintilla\\src\\Editor.h	/^	bool willRedrawAll;$/;"	m	class:Scintilla::Editor	typeref:typename:bool	access:protected
win	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  WINDOW *win;$/;"	m	class:SurfaceImpl	typeref:typename:WINDOW *	file:	access:private
win	..\\scite\\win32\\SciTEWin.h	/^	GUI::Window win;$/;"	m	struct:Band	typeref:typename:GUI::Window	access:public
winMode	..\\scite\\scripts\\tags2api.py	/^winMode = 1$/;"	v	access:public
winPlace	..\\scite\\win32\\SciTEWin.h	/^	WINDOWPLACEMENT winPlace;$/;"	m	class:SciTEWin	typeref:typename:WINDOWPLACEMENT	access:protected
window	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^QWidget *window(WindowID wid)$/;"	f	namespace:Scintilla::__anon1e21bbec0111	typeref:typename:QWidget *	signature:(WindowID wid)
windowName	..\\scite\\src\\SciTEBase.h	/^	GUI::gui_string windowName;$/;"	m	class:SciTEBase	typeref:typename:GUI::gui_string	access:protected
windowOpts	..\\scintilla\\win32\\PlatWin.cxx	/^long windowOpts=WS_POPUP;$/;"	v	namespace:Scintilla	typeref:typename:long
word1_x_xpm	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char * word1_x_xpm[] = {$/;"	v	typeref:typename:const char * []	file:
wordCharacters	..\\scite\\src\\SciTEBase.h	/^	std::string wordCharacters;$/;"	m	class:SciTEBase	typeref:typename:std::string	access:protected
wordListDescriptions	..\\scintilla\\lexlib\\LexerModule.h	/^	const char * const * wordListDescriptions;$/;"	m	class:Scintilla::LexerModule	typeref:typename:const char * const *	access:protected
wordLists	..\\scintilla\\lexlib\\LexerSimple.h	/^	std::string wordLists;$/;"	m	class:Scintilla::LexerSimple	typeref:typename:std::string	access:private
wordLists	..\\scintilla\\lexlib\\OptionSet.h	/^	std::string wordLists;$/;"	m	class:Scintilla::OptionSet	typeref:typename:std::string	access:private
wordSelectAnchorEndPos	..\\scintilla\\src\\Editor.h	/^	Sci::Position wordSelectAnchorEndPos;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
wordSelectAnchorStartPos	..\\scintilla\\src\\Editor.h	/^	Sci::Position wordSelectAnchorStartPos;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
wordSelectInitialCaretPos	..\\scintilla\\src\\Editor.h	/^	Sci::Position wordSelectInitialCaretPos;$/;"	m	class:Scintilla::Editor	typeref:typename:Sci::Position	access:protected
wordToStyle	..\\scintilla\\lexlib\\SubStyles.h	/^	std::map<std::string, int> wordToStyle;$/;"	m	class:Scintilla::WordClassifier	typeref:typename:std::map<std::string,int>	access:private
words	..\\scintilla\\lexlib\\WordList.h	/^	char **words;$/;"	m	class:Scintilla::WordList	typeref:typename:char **	access:private
words	..\\scintilla\\win32\\PlatWin.cxx	/^	std::vector<char> words;$/;"	m	class:Scintilla::LineToItem	typeref:typename:std::vector<char>	file:	access:private
words	..\\scite\\src\\SciTEBase.h	/^	std::string words;$/;"	m	struct:StyleAndWords	typeref:typename:std::string	access:public
words	..\\scite\\src\\StringList.h	/^	std::vector<char *> words;$/;"	m	class:StringList	typeref:typename:std::vector<char * >	access:private
wordsNoCase	..\\scite\\src\\StringList.h	/^	std::vector<char *> wordsNoCase;$/;"	m	class:StringList	typeref:typename:std::vector<char * >	access:private
workItems	..\\scintilla\\src\\Editor.h	/^	enum workItems {$/;"	g	class:Scintilla::WorkNeeded	access:public
workNeeded	..\\scintilla\\src\\Editor.h	/^	WorkNeeded workNeeded;$/;"	m	class:Scintilla::Editor	typeref:typename:WorkNeeded	access:protected
workNone	..\\scintilla\\src\\Editor.h	/^		workNone=0,$/;"	e	enum:Scintilla::WorkNeeded::workItems	access:public
workStyle	..\\scintilla\\src\\Editor.h	/^		workStyle=1,$/;"	e	enum:Scintilla::WorkNeeded::workItems	access:public
workUpdateUI	..\\scintilla\\src\\Editor.h	/^		workUpdateUI=2$/;"	e	enum:Scintilla::WorkNeeded::workItems	access:public
wrap	..\\scite\\src\\SciTEBase.h	/^	bool wrap;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
wrapFind	..\\scite\\src\\SciTEBase.h	/^	bool wrapFind;$/;"	m	class:Searcher	typeref:typename:bool	access:public
wrapIndent	..\\scintilla\\src\\PositionCache.h	/^	XYPOSITION wrapIndent; \/\/ In pixels$/;"	m	class:Scintilla::LineLayout	typeref:typename:XYPOSITION	access:public
wrapIndentMode	..\\scintilla\\src\\ViewStyle.h	/^	int wrapIndentMode; \/\/ SC_WRAPINDENT_FIXED, _SAME, _INDENT$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
wrapMarkerPaddingRight	..\\scintilla\\src\\MarginView.h	/^	int wrapMarkerPaddingRight; \/\/ right-most pixel padding of wrap markers$/;"	m	class:Scintilla::MarginView	typeref:typename:int	access:public
wrapOutput	..\\scite\\src\\SciTEBase.h	/^	bool wrapOutput;$/;"	m	class:SciTEBase	typeref:typename:bool	access:protected
wrapPending	..\\scintilla\\src\\Editor.h	/^	WrapPending wrapPending;$/;"	m	class:Scintilla::Editor	typeref:typename:WrapPending	access:protected
wrapState	..\\scintilla\\src\\EditView.h	/^	WrapMode wrapState;$/;"	m	struct:Scintilla::PrintParameters	typeref:typename:WrapMode	access:public
wrapState	..\\scintilla\\src\\ViewStyle.h	/^	WrapMode wrapState;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:WrapMode	access:public
wrapStyle	..\\scite\\src\\SciTEBase.h	/^	int wrapStyle;$/;"	m	class:SciTEBase	typeref:typename:int	access:protected
wrapVisualFlags	..\\scintilla\\src\\ViewStyle.h	/^	int wrapVisualFlags;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
wrapVisualFlagsLocation	..\\scintilla\\src\\ViewStyle.h	/^	int wrapVisualFlagsLocation;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
wrapVisualStartIndent	..\\scintilla\\src\\ViewStyle.h	/^	int wrapVisualStartIndent;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
wrapWidth	..\\scintilla\\src\\EditModel.h	/^	int wrapWidth;$/;"	m	class:Scintilla::EditModel	typeref:typename:int	access:public
wrapWidthInfinite	..\\scintilla\\src\\PositionCache.h	/^	enum { wrapWidthInfinite = 0x7ffffff };$/;"	e	enum:Scintilla::LineLayout::__anon8a9e19270103	access:public
write	..\\scite\\src\\ExportPDF.cxx	/^		void write(const char *objectData) {$/;"	f	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:void	file:	access:public	signature:(const char * objectData)
write	..\\scite\\src\\ExportPDF.cxx	/^		void write(int objectData) {$/;"	f	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:void	file:	access:public	signature:(int objectData)
writeVariables	..\\scintilla\\qt\\ScintillaEditPy\\sepbuild.py	/^	def writeVariables(self):$/;"	m	class:SepBuilder	access:public	signature:(self)
writer	..\\scintilla\\lua\\src\\ldump.c	/^ lua_Writer writer;$/;"	m	struct:__anonbc205f790108	typeref:typename:lua_Writer	file:	access:public
writer	..\\scintilla\\lua\\src\\lstrlib.c	/^static int writer (lua_State *L, const void* b, size_t size, void* B) {$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const void * b,size_t size,void * B)
writer	..\\scintilla\\lua\\src\\luac.c	/^static int writer(lua_State* L, const void* p, size_t size, void* u)$/;"	f	typeref:typename:int	file:	signature:(lua_State * L,const void * p,size_t size,void * u)
writtenSoFar	..\\scite\\src\\FileWorker.h	/^	long writtenSoFar;$/;"	m	class:FileStorer	typeref:typename:long	access:public
wsAll	..\\scintilla\\src\\Editor.h	/^	enum class WrapScope {wsAll, wsVisible, wsIdle};$/;"	e	enum:Scintilla::Editor::WrapScope	access:public
wsIdle	..\\scintilla\\src\\Editor.h	/^	enum class WrapScope {wsAll, wsVisible, wsIdle};$/;"	e	enum:Scintilla::Editor::WrapScope	access:public
wsInconsistent	..\\scintilla\\lexlib\\Accessor.h	/^enum { wsSpace=1, wsTab=2, wsSpaceTab=4, wsInconsistent=8 };$/;"	e	enum:Scintilla::__anone0534fc90103	access:public
wsInvisible	..\\scintilla\\src\\ViewStyle.h	/^enum WhiteSpaceVisibility {wsInvisible=0, wsVisibleAlways=1, wsVisibleAfterIndent=2, wsVisibleOn/;"	e	enum:Scintilla::WhiteSpaceVisibility	access:public
wsSpace	..\\scintilla\\lexlib\\Accessor.h	/^enum { wsSpace=1, wsTab=2, wsSpaceTab=4, wsInconsistent=8 };$/;"	e	enum:Scintilla::__anone0534fc90103	access:public
wsSpaceTab	..\\scintilla\\lexlib\\Accessor.h	/^enum { wsSpace=1, wsTab=2, wsSpaceTab=4, wsInconsistent=8 };$/;"	e	enum:Scintilla::__anone0534fc90103	access:public
wsTab	..\\scintilla\\lexlib\\Accessor.h	/^enum { wsSpace=1, wsTab=2, wsSpaceTab=4, wsInconsistent=8 };$/;"	e	enum:Scintilla::__anone0534fc90103	access:public
wsVisible	..\\scintilla\\src\\Editor.h	/^	enum class WrapScope {wsAll, wsVisible, wsIdle};$/;"	e	enum:Scintilla::Editor::WrapScope	access:public
wsVisibleAfterIndent	..\\scintilla\\src\\ViewStyle.h	/^enum WhiteSpaceVisibility {wsInvisible=0, wsVisibleAlways=1, wsVisibleAfterIndent=2, wsVisibleOn/;"	e	enum:Scintilla::WhiteSpaceVisibility	access:public
wsVisibleAlways	..\\scintilla\\src\\ViewStyle.h	/^enum WhiteSpaceVisibility {wsInvisible=0, wsVisibleAlways=1, wsVisibleAfterIndent=2, wsVisibleOn/;"	e	enum:Scintilla::WhiteSpaceVisibility	access:public
wsVisibleOnlyInIndent	..\\scintilla\\src\\ViewStyle.h	/^enum WhiteSpaceVisibility {wsInvisible=0, wsVisibleAlways=1, wsVisibleAfterIndent=2, wsVisibleOn/;"	e	enum:Scintilla::WhiteSpaceVisibility	access:public
x	..\\scintilla\\cocoa\\PlatCocoa.h	/^  float x;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:float	access:private
x	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int x;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	file:	access:private
x	..\\scintilla\\include\\Platform.h	/^	XYPOSITION x;$/;"	m	class:Scintilla::Point	typeref:typename:XYPOSITION	access:public
x	..\\scintilla\\include\\Scintilla.h	/^	int x;			\/* SCN_DWELLSTART, SCN_DWELLEND *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
x	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	float x, y;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:float	access:private
x	..\\scintilla\\src\\PositionCache.h	/^	double x;$/;"	m	class:Scintilla::PointDocument	typeref:typename:double	access:public
x	..\\scintilla\\win32\\PlatWin.cxx	/^	int x, y;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:int	file:	access:private
x	..\\scite\\src\\GUI.h	/^	int x;$/;"	m	class:GUI::Point	typeref:typename:int	access:public
xBase	..\\scintilla\\src\\MarginView.cxx	/^		int xBase;$/;"	m	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:int	file:	access:public
xCaretMargin	..\\scintilla\\src\\Editor.h	/^	int xCaretMargin;	\/\/\/< Ensure this many pixels visible on both sides of caret$/;"	m	class:Scintilla::Editor	typeref:typename:int	access:protected
xDir	..\\scintilla\\src\\MarginView.cxx	/^		int xDir;$/;"	m	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:int	file:	access:public
xHighlightGuide	..\\scintilla\\src\\PositionCache.h	/^	int xHighlightGuide;$/;"	m	class:Scintilla::LineLayout	typeref:typename:int	access:public
xOffset	..\\scintilla\\src\\EditModel.h	/^	int xOffset;		\/\/\/< Horizontal scrolled amount in pixels$/;"	m	class:Scintilla::EditModel	typeref:typename:int	access:public
xOffset	..\\scintilla\\src\\Editor.h	/^		int xOffset;$/;"	m	struct:Scintilla::Editor::XYScrollPosition	typeref:typename:int	access:public
xPos	..\\scite\\src\\ExportPDF.cxx	/^		double xPos, yPos;	\/\/ position tracking for line wrapping$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:double	file:	access:private
xa	..\\scintilla\\src\\MarginView.cxx	/^	enum { xa = 1 }; \/\/ gap before start$/;"	e	enum:Scintilla::DrawWrapMarker::__anon0397dfc20103	file:	access:public
xpmImages	..\\scite\\gtk\\SciTEGTK.cxx	/^static const char **xpmImages[] = {$/;"	v	typeref:typename:const char ** []	file:
xref	..\\scite\\src\\ExportPDF.cxx	/^		long xref() {$/;"	f	class:SciTEBase::SaveToPDF::PDFObjectTracker	typeref:typename:long	file:	access:public	signature:()
xysDefault	..\\scintilla\\src\\Editor.h	/^		xysDefault=xysUseMargin|xysVertical|xysHorizontal};$/;"	e	enum:Scintilla::Editor::XYScrollOptions	access:public
xysHorizontal	..\\scintilla\\src\\Editor.h	/^		xysHorizontal=0x4,$/;"	e	enum:Scintilla::Editor::XYScrollOptions	access:public
xysUseMargin	..\\scintilla\\src\\Editor.h	/^		xysUseMargin=0x1,$/;"	e	enum:Scintilla::Editor::XYScrollOptions	access:public
xysVertical	..\\scintilla\\src\\Editor.h	/^		xysVertical=0x2,$/;"	e	enum:Scintilla::Editor::XYScrollOptions	access:public
y	..\\scintilla\\cocoa\\PlatCocoa.h	/^  float y;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:float	access:private
y	..\\scintilla\\gtk\\PlatGTK.cxx	/^	int y;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:int	file:	access:private
y	..\\scintilla\\include\\Platform.h	/^	XYPOSITION y;$/;"	m	class:Scintilla::Point	typeref:typename:XYPOSITION	access:public
y	..\\scintilla\\include\\Scintilla.h	/^	int y;		\/* SCN_DWELLSTART, SCN_DWELLEND *\/$/;"	m	struct:SCNotification	typeref:typename:int	access:public
y	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.h	/^	float x, y;$/;"	m	class:Scintilla::SurfaceImpl	typeref:typename:float	access:private
y	..\\scintilla\\src\\PositionCache.h	/^	double y;$/;"	m	class:Scintilla::PointDocument	typeref:typename:double	access:public
y	..\\scintilla\\win32\\PlatWin.cxx	/^	int x, y;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:int	file:	access:private
y	..\\scite\\src\\GUI.h	/^	int y;$/;"	m	class:GUI::Point	typeref:typename:int	access:public
yAscent	..\\scintilla\\win32\\PlatWin.cxx	/^	FLOAT yAscent;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:FLOAT	file:	access:private
yAscent	..\\scintilla\\win32\\PlatWin.cxx	/^	FLOAT yAscent;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:FLOAT	file:	access:public
yBase	..\\scintilla\\src\\MarginView.cxx	/^		int yBase;$/;"	m	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:int	file:	access:public
yDescent	..\\scintilla\\win32\\PlatWin.cxx	/^	FLOAT yDescent;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:FLOAT	file:	access:private
yDescent	..\\scintilla\\win32\\PlatWin.cxx	/^	FLOAT yDescent;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:FLOAT	file:	access:public
yDir	..\\scintilla\\src\\MarginView.cxx	/^		int yDir;$/;"	m	struct:Scintilla::DrawWrapMarker::Relative	typeref:typename:int	file:	access:public
yInternalLeading	..\\scintilla\\win32\\PlatWin.cxx	/^	FLOAT yInternalLeading;$/;"	m	class:Scintilla::SurfaceD2D	typeref:typename:FLOAT	file:	access:private
yInternalLeading	..\\scintilla\\win32\\PlatWin.cxx	/^	FLOAT yInternalLeading;$/;"	m	struct:Scintilla::FormatAndMetrics	typeref:typename:FLOAT	file:	access:public
yPos	..\\scite\\src\\ExportPDF.cxx	/^		double xPos, yPos;	\/\/ position tracking for line wrapping$/;"	m	class:SciTEBase::SaveToPDF::PDFRender	typeref:typename:double	file:	access:private
yindex	..\\scintilla\\lua\\src\\lparser.c	/^static void yindex (LexState *ls, expdesc *v) {$/;"	f	typeref:typename:void	file:	signature:(LexState * ls,expdesc * v)
z	..\\scintilla\\lua\\src\\ldo.c	/^  ZIO *z;$/;"	m	struct:SParser	typeref:typename:ZIO *	file:	access:public
z	..\\scintilla\\lua\\src\\llex.h	/^  ZIO *z;  \/* input stream *\/$/;"	m	struct:LexState	typeref:typename:ZIO *	access:public
zgetc	..\\scintilla\\lua\\src\\lzio.h	/^#define zgetc(/;"	d	signature:(z)
zoomLevel	..\\scintilla\\src\\ViewStyle.h	/^	int zoomLevel;$/;"	m	class:Scintilla::ViewStyle	typeref:typename:int	access:public
~Action	..\\scintilla\\src\\CellBuffer.cxx	/^Action::~Action() {$/;"	f	class:Action	signature:()
~AutoComplete	..\\scintilla\\src\\AutoComplete.cxx	/^AutoComplete::~AutoComplete() {$/;"	f	class:AutoComplete	signature:()
~AutoLineLayout	..\\scintilla\\src\\EditView.h	/^	~AutoLineLayout() {$/;"	f	class:Scintilla::AutoLineLayout	access:public	signature:()
~AutoSurface	..\\scintilla\\src\\Editor.h	/^	~AutoSurface() {$/;"	f	class:Scintilla::AutoSurface	access:public	signature:()
~BreakFinder	..\\scintilla\\src\\PositionCache.cxx	/^BreakFinder::~BreakFinder() {$/;"	f	class:BreakFinder	signature:()
~BufferList	..\\scite\\src\\SciTEBuffers.cxx	/^BufferList::~BufferList() {$/;"	f	class:BufferList	signature:()
~BufferedFile	..\\scite\\src\\SciTEIO.cxx	/^	~BufferedFile() {$/;"	f	class:BufferedFile	file:	access:public	signature:()
~BuiltinRegex	..\\scintilla\\src\\Document.cxx	/^	~BuiltinRegex() override {$/;"	f	class:BuiltinRegex	file:	access:public	signature:()
~CallTip	..\\scintilla\\src\\CallTip.cxx	/^CallTip::~CallTip() {$/;"	f	class:CallTip	signature:()
~CaseFolder	..\\scintilla\\src\\CaseFolder.cxx	/^CaseFolder::~CaseFolder() {$/;"	f	class:CaseFolder	signature:()
~CaseFolderASCII	..\\scintilla\\src\\Editor.cxx	/^	~CaseFolderASCII() override {$/;"	f	class:CaseFolderASCII	file:	access:public	signature:()
~CaseFolderTable	..\\scintilla\\src\\CaseFolder.cxx	/^CaseFolderTable::~CaseFolderTable() {$/;"	f	class:CaseFolderTable	signature:()
~CaseMapper	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	~CaseMapper() {$/;"	f	struct:__anon9c9cef500411::CaseMapper	file:	access:public	signature:()
~CellBuffer	..\\scintilla\\src\\CellBuffer.cxx	/^CellBuffer::~CellBuffer() {$/;"	f	class:CellBuffer	signature:()
~CharacterIndexer	..\\scintilla\\src\\RESearch.h	/^	virtual ~CharacterIndexer() {$/;"	f	class:Scintilla::CharacterIndexer	access:public	signature:()
~CharacterSet	..\\scintilla\\lexlib\\CharacterSet.h	/^	~CharacterSet() {$/;"	f	class:Scintilla::CharacterSet	access:public	signature:()
~ClusterIterator	..\\scintilla\\gtk\\PlatGTK.cxx	/^	~ClusterIterator() {$/;"	f	class:ClusterIterator	file:	access:public	signature:()
~ContractionState	..\\scintilla\\src\\ContractionState.cxx	/^ContractionState::~ContractionState() {$/;"	f	class:ContractionState	signature:()
~Converter	..\\scintilla\\gtk\\Converter.h	/^	~Converter() {$/;"	f	class:Scintilla::Converter	access:public	signature:()
~Decoration	..\\scintilla\\src\\Decoration.cxx	/^Decoration::~Decoration() {$/;"	f	class:Decoration	signature:()
~DecorationList	..\\scintilla\\src\\Decoration.cxx	/^DecorationList::~DecorationList() {$/;"	f	class:DecorationList	signature:()
~DefaultLexer	..\\scintilla\\lexlib\\DefaultLexer.cxx	/^DefaultLexer::~DefaultLexer() {$/;"	f	class:DefaultLexer	signature:()
~DocWatcher	..\\scintilla\\src\\Document.h	/^	virtual ~DocWatcher() {}$/;"	f	class:Scintilla::DocWatcher	access:public	signature:()
~Document	..\\scintilla\\src\\Document.cxx	/^Document::~Document() {$/;"	f	class:Document	signature:()
~DocumentIndexer	..\\scintilla\\src\\Document.cxx	/^	~DocumentIndexer() override {$/;"	f	class:__anon1ef09aa80111::DocumentIndexer	file:	access:public	signature:()
~DynamicLibrary	..\\scintilla\\include\\Platform.h	/^	virtual ~DynamicLibrary() {}$/;"	f	class:Scintilla::DynamicLibrary	access:public	signature:()
~DynamicLibraryImpl	..\\scintilla\\gtk\\PlatGTK.cxx	/^	~DynamicLibraryImpl() override {$/;"	f	class:DynamicLibraryImpl	file:	access:public	signature:()
~DynamicLibraryImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	virtual ~DynamicLibraryImpl() {$/;"	f	class:Scintilla::DynamicLibraryImpl	file:	access:public	signature:()
~DynamicLibraryImpl	..\\scintilla\\win32\\PlatWin.cxx	/^	~DynamicLibraryImpl() override {$/;"	f	class:Scintilla::DynamicLibraryImpl	file:	access:public	signature:()
~EditModel	..\\scintilla\\src\\EditModel.cxx	/^EditModel::~EditModel() {$/;"	f	class:EditModel	signature:()
~EditView	..\\scintilla\\src\\EditView.cxx	/^EditView::~EditView() {$/;"	f	class:EditView	signature:()
~Editor	..\\scintilla\\src\\Editor.cxx	/^Editor::~Editor() {$/;"	f	class:Editor	signature:()
~Extension	..\\scite\\src\\Extender.h	/^	virtual ~Extension() {}$/;"	f	class:Extension	access:public	signature:()
~ExtensionAPI	..\\scite\\src\\Extender.h	/^	virtual ~ExtensionAPI() {$/;"	f	class:ExtensionAPI	access:public	signature:()
~FileLoader	..\\scite\\src\\FileWorker.cxx	/^FileLoader::~FileLoader() {$/;"	f	class:FileLoader	signature:()
~FileReader	..\\scite\\src\\SciTEIO.cxx	/^	~FileReader() {$/;"	f	class:FileReader	file:	access:public	signature:()
~FileStorer	..\\scite\\src\\FileWorker.cxx	/^FileStorer::~FileStorer() {$/;"	f	class:FileStorer	signature:()
~FileWorker	..\\scite\\src\\FileWorker.cxx	/^FileWorker::~FileWorker() {$/;"	f	class:FileWorker	signature:()
~Font	..\\scintilla\\curses\\ScintillaCurses.cxx	/^Font::~Font() {}$/;"	f	class:Font	signature:()
~Font	..\\scintilla\\gtk\\PlatGTK.cxx	/^Font::~Font() {}$/;"	f	class:Font	signature:()
~Font	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^Font::~Font()$/;"	f	class:Scintilla::Font	signature:()
~Font	..\\scintilla\\win32\\PlatWin.cxx	/^Font::~Font() {$/;"	f	class:Scintilla::Font	signature:()
~FontAlias	..\\scintilla\\src\\Style.cxx	/^FontAlias::~FontAlias() {$/;"	f	class:FontAlias	signature:()
~FontAndCharacterSet	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^	~FontAndCharacterSet() {$/;"	f	class:Scintilla::FontAndCharacterSet	file:	access:public	signature:()
~FontCached	..\\scintilla\\win32\\PlatWin.cxx	/^	~FontCached() override {}$/;"	f	class:Scintilla::FontCached	file:	access:private	signature:()
~FontHandle	..\\scintilla\\gtk\\PlatGTK.cxx	/^	~FontHandle() {$/;"	f	class:FontHandle	file:	access:public	signature:()
~FontNames	..\\scintilla\\src\\ViewStyle.cxx	/^FontNames::~FontNames() {$/;"	f	class:FontNames	signature:()
~FontRealised	..\\scintilla\\src\\ViewStyle.cxx	/^FontRealised::~FontRealised() {$/;"	f	class:FontRealised	signature:()
~FormatAndMetrics	..\\scintilla\\win32\\PlatWin.cxx	/^	~FormatAndMetrics() {$/;"	f	struct:Scintilla::FormatAndMetrics	file:	access:public	signature:()
~GObjectWatcher	..\\scintilla\\gtk\\ScintillaGTK.h	/^	virtual ~GObjectWatcher() {$/;"	f	class:Scintilla::GObjectWatcher	access:public	signature:()
~GTKMutex	..\\scite\\gtk\\GTKMutex.cxx	/^	virtual ~GTKMutex() {$/;"	f	class:GTKMutex	file:	access:private	signature:()
~GlobalMemory	..\\scintilla\\win32\\ScintillaWin.cxx	/^	~GlobalMemory() {$/;"	f	class:GlobalMemory	file:	access:public	signature:()
~HanjaDic	..\\scintilla\\win32\\HanjaDic.cxx	/^	~HanjaDic() {$/;"	f	class:Scintilla::HanjaDict::HanjaDic	file:	access:public	signature:()
~IMContext	..\\scintilla\\win32\\ScintillaWin.cxx	/^	~IMContext() {$/;"	f	class:__anon5333cfc50111::IMContext	file:	access:public	signature:()
~JobQueue	..\\scite\\src\\JobQueue.h	/^	~JobQueue() {$/;"	f	class:JobQueue	access:public	signature:()
~KeyMap	..\\scintilla\\src\\KeyMap.cxx	/^KeyMap::~KeyMap() {$/;"	f	class:KeyMap	signature:()
~LMMinder	..\\scintilla\\src\\ExternalLexer.cxx	/^LMMinder::~LMMinder() {$/;"	f	class:LMMinder	signature:()
~LexInterface	..\\scintilla\\src\\Document.h	/^	virtual ~LexInterface() {$/;"	f	class:Scintilla::LexInterface	access:public	signature:()
~LexState	..\\scintilla\\src\\ScintillaBase.cxx	/^LexState::~LexState() {$/;"	f	class:LexState	signature:()
~LexerBase	..\\scintilla\\lexlib\\LexerBase.cxx	/^LexerBase::~LexerBase() {$/;"	f	class:LexerBase	signature:()
~LexerLibrary	..\\scintilla\\src\\ExternalLexer.cxx	/^LexerLibrary::~LexerLibrary() {$/;"	f	class:LexerLibrary	signature:()
~LexerManager	..\\scintilla\\src\\ExternalLexer.cxx	/^LexerManager::~LexerManager() {$/;"	f	class:LexerManager	signature:()
~LexerModule	..\\scintilla\\lexlib\\LexerModule.h	/^	virtual ~LexerModule() {$/;"	f	class:Scintilla::LexerModule	access:public	signature:()
~LineAnnotation	..\\scintilla\\src\\PerLine.cxx	/^LineAnnotation::~LineAnnotation() {$/;"	f	class:LineAnnotation	signature:()
~LineLayout	..\\scintilla\\src\\PositionCache.cxx	/^LineLayout::~LineLayout() {$/;"	f	class:LineLayout	signature:()
~LineLayoutCache	..\\scintilla\\src\\PositionCache.cxx	/^LineLayoutCache::~LineLayoutCache() {$/;"	f	class:LineLayoutCache	signature:()
~LineLevels	..\\scintilla\\src\\PerLine.cxx	/^LineLevels::~LineLevels() {$/;"	f	class:LineLevels	signature:()
~LineMarker	..\\scintilla\\src\\LineMarker.cxx	/^LineMarker::~LineMarker() {$/;"	f	class:LineMarker	signature:()
~LineMarkers	..\\scintilla\\src\\PerLine.cxx	/^LineMarkers::~LineMarkers() {$/;"	f	class:LineMarkers	signature:()
~LineState	..\\scintilla\\src\\PerLine.cxx	/^LineState::~LineState() {$/;"	f	class:LineState	signature:()
~LineTabstops	..\\scintilla\\src\\PerLine.cxx	/^LineTabstops::~LineTabstops() {$/;"	f	class:LineTabstops	signature:()
~LineToItem	..\\scintilla\\win32\\PlatWin.cxx	/^	~LineToItem() {$/;"	f	class:Scintilla::LineToItem	file:	access:public	signature:()
~LineVector	..\\scintilla\\src\\CellBuffer.cxx	/^LineVector::~LineVector() {$/;"	f	class:LineVector	signature:()
~ListBox	..\\scintilla\\curses\\ScintillaCurses.cxx	/^ListBox::~ListBox() {}$/;"	f	class:ListBox	signature:()
~ListBox	..\\scintilla\\gtk\\PlatGTK.cxx	/^ListBox::~ListBox() {$/;"	f	class:ListBox	signature:()
~ListBox	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListBox::~ListBox() {}$/;"	f	class:Scintilla::ListBox	signature:()
~ListBox	..\\scintilla\\win32\\PlatWin.cxx	/^ListBox::~ListBox() {$/;"	f	class:Scintilla::ListBox	signature:()
~ListBoxImpl	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  ~ListBoxImpl() {}$/;"	f	class:ListBoxImpl	file:	access:public	signature:()
~ListBoxImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListBoxImpl::~ListBoxImpl() {}$/;"	f	class:Scintilla::ListBoxImpl	signature:()
~ListBoxX	..\\scintilla\\gtk\\PlatGTK.cxx	/^	~ListBoxX() override {$/;"	f	class:ListBoxX	file:	access:public	signature:()
~ListBoxX	..\\scintilla\\win32\\PlatWin.cxx	/^	~ListBoxX() override {$/;"	f	class:Scintilla::ListBoxX	file:	access:public	signature:()
~ListWidget	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^ListWidget::~ListWidget() {}$/;"	f	class:Scintilla::ListWidget	signature:()
~Lock	..\\scite\\src\\Mutex.h	/^	~Lock() {$/;"	f	class:Lock	access:public	signature:()
~LuaExtension	..\\scite\\src\\LuaExtension.cxx	/^LuaExtension::~LuaExtension() {}$/;"	f	class:LuaExtension	signature:()
~MarkerHandleSet	..\\scintilla\\src\\PerLine.cxx	/^MarkerHandleSet::~MarkerHandleSet() {$/;"	f	class:MarkerHandleSet	signature:()
~MatchMarker	..\\scite\\src\\MatchMarker.cxx	/^MatchMarker::~MatchMarker() {$/;"	f	class:MatchMarker	signature:()
~MultiplexExtension	..\\scite\\src\\MultiplexExtension.cxx	/^MultiplexExtension::~MultiplexExtension() {$/;"	f	class:MultiplexExtension	signature:()
~Mutex	..\\scite\\src\\Mutex.h	/^	virtual ~Mutex() {}$/;"	f	class:Mutex	access:public	signature:()
~OptionSet	..\\scintilla\\lexlib\\OptionSet.h	/^	virtual ~OptionSet() {$/;"	f	class:Scintilla::OptionSet	access:public	signature:()
~PDFObjectTracker	..\\scite\\src\\ExportPDF.cxx	/^		~PDFObjectTracker() {$/;"	f	class:SciTEBase::SaveToPDF::PDFObjectTracker	file:	access:public	signature:()
~PDFRender	..\\scite\\src\\ExportPDF.cxx	/^		~PDFRender() {$/;"	f	class:SciTEBase::SaveToPDF::PDFRender	file:	access:public	signature:()
~Partitioning	..\\scintilla\\src\\Partitioning.h	/^	~Partitioning() {$/;"	f	class:Scintilla::Partitioning	access:public	signature:()
~PerLine	..\\scintilla\\src\\CellBuffer.h	/^	virtual ~PerLine() {}$/;"	f	class:Scintilla::PerLine	access:public	signature:()
~PipeEntry	..\\scite\\gtk\\DirectorExtension.cxx	/^	~PipeEntry() {$/;"	f	struct:PipeEntry	file:	access:public	signature:()
~Platform	..\\scintilla\\include\\Platform.h	/^	~Platform() {}$/;"	f	class:Scintilla::Platform	access:public	signature:()
~PositionCache	..\\scintilla\\src\\PositionCache.cxx	/^PositionCache::~PositionCache() {$/;"	f	class:PositionCache	signature:()
~PositionCacheEntry	..\\scintilla\\src\\PositionCache.cxx	/^PositionCacheEntry::~PositionCacheEntry() {$/;"	f	class:PositionCacheEntry	signature:()
~PreEditString	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^	~PreEditString() {$/;"	f	class:__anon9c9cef500311::PreEditString	file:	access:public	signature:()
~PropSetFile	..\\scite\\src\\PropSetFile.cxx	/^PropSetFile::~PropSetFile() {$/;"	f	class:PropSetFile	signature:()
~PropSetSimple	..\\scintilla\\lexlib\\PropSetSimple.cxx	/^PropSetSimple::~PropSetSimple() {$/;"	f	class:PropSetSimple	signature:()
~QuartzTextLayout	..\\scintilla\\cocoa\\QuartzTextLayout.h	/^    ~QuartzTextLayout()$/;"	f	class:QuartzTextLayout	access:public	signature:()
~QuartzTextStyle	..\\scintilla\\cocoa\\QuartzTextStyle.h	/^	~QuartzTextStyle()$/;"	f	class:QuartzTextStyle	access:public	signature:()
~RESearch	..\\scintilla\\src\\RESearch.cxx	/^RESearch::~RESearch() {$/;"	f	class:RESearch	signature:()
~RGBAImage	..\\scintilla\\src\\XPM.cxx	/^RGBAImage::~RGBAImage() {$/;"	f	class:RGBAImage	signature:()
~RGBAImageSet	..\\scintilla\\src\\XPM.cxx	/^RGBAImageSet::~RGBAImageSet() {$/;"	f	class:RGBAImageSet	signature:()
~RegexSearchBase	..\\scintilla\\src\\Document.h	/^	virtual ~RegexSearchBase() {}$/;"	f	class:Scintilla::RegexSearchBase	access:public	signature:()
~RunStyles	..\\scintilla\\src\\RunStyles.cxx	/^RunStyles<DISTANCE, STYLE>::~RunStyles() {$/;"	f	class:RunStyles	signature:()
~SciTEBase	..\\scite\\src\\SciTEBase.cxx	/^SciTEBase::~SciTEBase() {$/;"	f	class:SciTEBase	signature:()
~SciTEGTK	..\\scite\\gtk\\SciTEGTK.cxx	/^SciTEGTK::~SciTEGTK() {}$/;"	f	class:SciTEGTK	signature:()
~SciTEWin	..\\scite\\win32\\SciTEWin.cxx	/^SciTEWin::~SciTEWin() {$/;"	f	class:SciTEWin	signature:()
~ScintillaBase	..\\scintilla\\src\\ScintillaBase.cxx	/^ScintillaBase::~ScintillaBase() {$/;"	f	class:ScintillaBase	signature:()
~ScintillaCurses	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  ~ScintillaCurses() {$/;"	f	class:ScintillaCurses	file:	access:public	signature:()
~ScintillaDocument	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^ScintillaDocument::~ScintillaDocument() {$/;"	f	class:ScintillaDocument	signature:()
~ScintillaEditBase	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaEditBase.cpp	/^ScintillaEditBase::~ScintillaEditBase() {}$/;"	f	class:ScintillaEditBase	signature:()
~ScintillaGTK	..\\scintilla\\gtk\\ScintillaGTK.cxx	/^ScintillaGTK::~ScintillaGTK() {$/;"	f	class:ScintillaGTK	signature:()
~ScintillaGTKAccessible	..\\scintilla\\gtk\\ScintillaGTKAccessible.cxx	/^ScintillaGTKAccessible::~ScintillaGTKAccessible() {$/;"	f	class:ScintillaGTKAccessible	signature:()
~ScintillaQt	..\\scintilla\\qt\\ScintillaEditBase\\ScintillaQt.cpp	/^ScintillaQt::~ScintillaQt()$/;"	f	class:ScintillaQt	signature:()
~ScintillaWin	..\\scintilla\\win32\\ScintillaWin.cxx	/^ScintillaWin::~ScintillaWin() {}$/;"	f	class:ScintillaWin	signature:()
~Selection	..\\scintilla\\src\\Selection.cxx	/^Selection::~Selection() {$/;"	f	class:Selection	signature:()
~SelectionText	..\\scintilla\\src\\Editor.h	/^	~SelectionText() {$/;"	f	class:Scintilla::SelectionText	access:public	signature:()
~SparseVector	..\\scintilla\\src\\SparseVector.h	/^	~SparseVector() {$/;"	f	class:Scintilla::SparseVector	access:public	signature:()
~SplitVector	..\\scintilla\\src\\SplitVector.h	/^	~SplitVector() {$/;"	f	class:Scintilla::SplitVector	access:public	signature:()
~SplitVectorWithRangeAdd	..\\scintilla\\src\\Partitioning.h	/^	~SplitVectorWithRangeAdd() {$/;"	f	class:Scintilla::SplitVectorWithRangeAdd	access:public	signature:()
~StringList	..\\scite\\src\\StringList.h	/^	~StringList() { Clear(); }$/;"	f	class:StringList	access:public	signature:()
~Strip	..\\scite\\gtk\\Widget.h	/^	virtual ~Strip() {$/;"	f	class:Strip	access:public	signature:()
~Style	..\\scintilla\\src\\Style.cxx	/^Style::~Style() {$/;"	f	class:Style	signature:()
~Surface	..\\scintilla\\include\\Platform.h	/^	virtual ~Surface() {}$/;"	f	class:Scintilla::Surface	access:public	signature:()
~SurfaceD2D	..\\scintilla\\win32\\PlatWin.cxx	/^SurfaceD2D::~SurfaceD2D() {$/;"	f	class:Scintilla::SurfaceD2D	signature:()
~SurfaceGDI	..\\scintilla\\win32\\PlatWin.cxx	/^SurfaceGDI::~SurfaceGDI() {$/;"	f	class:Scintilla::SurfaceGDI	signature:()
~SurfaceImpl	..\\scintilla\\curses\\ScintillaCurses.cxx	/^  ~SurfaceImpl() { Release(); }$/;"	f	class:SurfaceImpl	file:	access:public	signature:()
~SurfaceImpl	..\\scintilla\\gtk\\PlatGTK.cxx	/^SurfaceImpl::~SurfaceImpl() {$/;"	f	class:SurfaceImpl	signature:()
~SurfaceImpl	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^SurfaceImpl::~SurfaceImpl()$/;"	f	class:Scintilla::SurfaceImpl	signature:()
~TList	..\\scite\\src\\Containers.h	/^	~TList() {$/;"	f	class:TList	access:public	signature:()
~TMap	..\\scite\\src\\Containers.h	/^	~TMap() {$/;"	f	class:TMap	access:public	signature:()
~ThreadLockMinder	..\\scite\\gtk\\SciTEGTK.cxx	/^	~ThreadLockMinder() {$/;"	f	class:ThreadLockMinder	file:	access:public	signature:()
~UndoGroup	..\\scintilla\\src\\Document.h	/^	~UndoGroup() {$/;"	f	class:Scintilla::UndoGroup	access:public	signature:()
~UndoHistory	..\\scintilla\\src\\CellBuffer.cxx	/^UndoHistory::~UndoHistory() {$/;"	f	class:UndoHistory	signature:()
~UniqueInstance	..\\scite\\win32\\UniqueInstance.cxx	/^UniqueInstance::~UniqueInstance() {$/;"	f	class:UniqueInstance	signature:()
~Utf8_16_Read	..\\scite\\src\\Utf8_16.cxx	/^Utf8_16_Read::~Utf8_16_Read() {$/;"	f	class:Utf8_16_Read	signature:()
~Utf8_16_Write	..\\scite\\src\\Utf8_16.cxx	/^Utf8_16_Write::~Utf8_16_Write() {$/;"	f	class:Utf8_16_Write	signature:()
~VarBuffer	..\\scintilla\\win32\\PlatWin.cxx	/^	~VarBuffer() {$/;"	f	class:Scintilla::VarBuffer	file:	access:public	signature:()
~ViewStyle	..\\scintilla\\src\\ViewStyle.cxx	/^ViewStyle::~ViewStyle() {$/;"	f	class:ViewStyle	signature:()
~WCheckDraw	..\\scite\\gtk\\Widget.cxx	/^WCheckDraw::~WCheckDraw() {$/;"	f	class:WCheckDraw	signature:()
~WatcherHelper	..\\scintilla\\qt\\ScintillaEdit\\ScintillaDocument.cpp	/^WatcherHelper::~WatcherHelper() {$/;"	f	class:WatcherHelper	signature:()
~WinMutex	..\\scite\\win32\\WinMutex.cxx	/^	virtual ~WinMutex() { ::DeleteCriticalSection(&cs); }$/;"	f	class:WinMutex	file:	access:private	signature:()
~Window	..\\scintilla\\curses\\ScintillaCurses.cxx	/^Window::~Window() {}$/;"	f	class:Window	signature:()
~Window	..\\scintilla\\gtk\\PlatGTK.cxx	/^Window::~Window() {}$/;"	f	class:Window	signature:()
~Window	..\\scintilla\\qt\\ScintillaEditBase\\PlatQt.cpp	/^Window::~Window() {}$/;"	f	class:Scintilla::Window	signature:()
~Window	..\\scintilla\\win32\\PlatWin.cxx	/^Window::~Window() {$/;"	f	class:Scintilla::Window	signature:()
~WordList	..\\scintilla\\lexlib\\WordList.cxx	/^WordList::~WordList() {$/;"	f	class:WordList	signature:()
~Worker	..\\scite\\src\\Worker.h	/^	virtual ~Worker() {$/;"	f	struct:Worker	access:public	signature:()
~XPM	..\\scintilla\\src\\XPM.cxx	/^XPM::~XPM() {$/;"	f	class:XPM	signature:()
