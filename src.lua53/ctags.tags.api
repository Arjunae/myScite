AbandonAutomaticSave()void Buffer::
AbandonAutomaticSave()void SciTEBase::
AbandonPaint()bool ScintillaGTK::
AbandonPaint()bool Editor::
AbbrevCmd()void SciTEGTK::
AbbrevDialog()bool SciTEGTK::
AbbrevDialog()bool SciTEWin::
AbbrevDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
AbbrevMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
AbbrevResponse(int responseID)void SciTEGTK::
AboutDialog()void SciTEGTK::
AboutDialog()void SciTEWin::
AboutDialogWithBuild(int staticBuild_)void SciTEWin::
AboutDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
AboutMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
AbsolutePath()FilePath FilePath::
AcceptToOpenFiles(bool bAccept)bool UniqueInstance::
Accessor(IDocument *pAccess_, PropSetSimple *pprops_)::
Action()::
Action(Action &&other)	
Activate(bool activeApp)void SciTEBase::
ActivateBuffer(int)	virtual bool 
ActivateBuffer(int index)bool LuaExtension::
ActivateBuffer(int index)bool MultiplexExtension::
ActivateSignal(GtkWidget *, FindStrip *pStrip)void FindStrip::
ActivateSignal(GtkWidget *, ReplaceStrip *pStrip)void ReplaceStrip::
ActivateSignal(GtkWidget *, UserStrip *pStrip)void UserStrip::
ActivateWindow(const char *timestamp)void SciTEGTK::
ActivateWindow(const char *)void SciTEWin::
ActivatesDefault()void WComboBoxEntry::
ActivatesDefault()void WEntry::
Active()bool AutoComplete::
Active()bool WCheckDraw::
Active()bool WToggle::
Add(int character, const char *conversion)	void 
Add(Sci::Position increment)	void 
Add(int ident, RGBAImage *image)void RGBAImageSet::
Add(GtkWidget *child, int width, bool expand, int xpadding, int ypadding)void WTable::
Add(ARG_TYPE newElement)	int 
Add()int BufferList::
AddChar(char ch)void Editor::
AddCharUTF(const char *s, unsigned int len, bool treatAsDBCS)void Editor::
AddCharUTF(const char *s, unsigned int len, bool treatAsDBCS)void ScintillaBase::
AddCharUTF16(wchar_t const *wcs, unsigned int wclen)void ScintillaWin::
AddCommand(const std::string &command, const FilePath &directory, JobSubsystem jobType, const std::string &input, int flags)void JobQueue::
AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input, int flags)void SciTEBase::
AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input, int flags)void SciTEWin::
AddData(char *data, Sci_Position length)int SCI_METHOD Document::
AddFileToBuffer(const BufferState &bufferState)bool SciTEBase::
AddFileToStack(const FilePath &file, SelectedRange selection, int scrollPos)void SciTEBase::
AddFuture(int index, Buffer::FutureDo fd)void BufferList::
AddHead(ARG_TYPE newElement)	T_POSITION 
AddLexerModule(LexerModule *plm)void Catalogue::
AddMBButton(GtkWidget *dialog, const char *label, int val, GtkAccelGroup *accel_group, bool isDefault)GtkWidget
AddMark(Sci::Line line, int markerNum)int Document::
AddMark(Sci::Line line, int markerNum, Sci::Line lines)int LineMarkers::
AddMarkSet(Sci::Line line, int valueSet)void Document::
AddRange(Sci::Line lineStart, Sci::Line lineEnd)	bool 
AddRectangularToMime(QMimeData *mimeData, QString su)static void 
AddRef()int Document::
AddRef()STDMETHODIMP_
AddSelection(int startChar, int endChar)gboolean ScintillaGTKAccessible::
AddSelection(AtkText *text, gint start, gint end)gboolean ScintillaGTKAccessible::AtkTextIface::
AddSelection(SelectionRange range)void Selection::
AddSelectionWithoutTrim(SelectionRange range)void Selection::
AddSendPipe(int fd, const char *name)static void 
AddStyledText(char *buffer, Sci::Position appendLength)void Editor::
AddStyledText(GUI::ScintillaWindow &wsci, const char *s, int attr)static void 
AddSymmetric(enum CaseConversion conversion, int lower,int upper)void 
AddTabstop(Sci::Line line, int x)bool EditView::
AddTabstop(Sci::Line line, int x)bool LineTabstops::
AddTail(ARG_TYPE newElement)	T_POSITION 
AddTextAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, gchar *value)static AtkAttributeSet
AddTextColorAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, const ColourDesired &colour)static AtkAttributeSet
AddTextIntAttribute(AtkAttributeSet *attributes, AtkTextAttribute attr, gint i)static AtkAttributeSet
AddToPopUp(const char *label, int cmd, bool enabled)void ScintillaGTK::
AddToPopUp(const char *label, int cmd, bool enabled)void ScintillaQt::
AddToPopUp(const char *label, int cmd, bool enabled)void ScintillaWin::
AddToPopUp(const char *label, int cmd, bool enabled)void SciTEGTK::
AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked)void Strip::
AddToPopUp(const char *label, int cmd, bool enabled)void SciTEWin::
AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked)void FindStrip::
AddToPopUp(GUI::Menu &popup, const char *label, int cmd, bool checked)void ReplaceStrip::
AddToolBar()void SciTEGTK::
AddToolButton(const char *text, int cmd, GtkWidget *toolbar_icon)GtkWidget
AddToolSpace(GtkToolbar *toolbar)static void 
AddUndoAction(Sci::Position token, bool mayCoalesce)	void 
AddWString(std::wstring wcs)void ScintillaWin::
AddWatcher(DocWatcher *watcher, void *userData)bool Document::
AdjustWindowRect(PRectangle *rc)void ListBoxX::
AfterName(const GUI::gui_char *s)static GUI::gui_char 
AllFour(DWORD *pixels, int width, int height, int x, int y, DWORD val)static void 
AllOnFor(int position)int DecorationList::
AllSame()bool RunStyles::
AllSameAs(int value)bool RunStyles::
AllocItem(const char *text, int pixId)	void 
AllocStyles(size_t sizeNew)void ViewStyle::
Allocate()ListBox
Allocate(int)Surface
Allocate(int styleBase, int numberStyles)	int 
Allocate(int firstStyle_, int lenStyles_)	void 
Allocate()ListBox
Allocate(int)Surface
Allocate(Sci::Position newSize)	void 
Allocate(int growSize)	void 
Allocate(size_t length_)void LineLayoutCache::
Allocate()ListBox
Allocate(int technology)Surface
Allocate(size_t bytes)	void 
Allocate(int maxSize)void BufferList::
AllocateAnnotation(int length, int style)static char
AllocateExtendedStyles(int numberStyles)int ViewStyle::
AllocateForLevel(Sci::Line linesOnScreen, Sci::Line linesInDoc)void LineLayoutCache::
AllocateGraphics(const ViewStyle &vsDraw)void EditView::
AllocateGraphics()void Editor::
AllocateGraphics(const ViewStyle &vsDraw)void MarginView::
AllocateSubStyles(int styleBase, int numberStyles)int LexState::
AllowVirtualSpace(int virtualSpaceOptions, bool rectangular)static bool 
AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill, ColourDesired outline, int alphaOutline, int )void SurfaceImpl::
AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill, ColourDesired outline, int alphaOutline, int )void SurfaceD2D::
AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill, ColourDesired outline, int alphaOutline, int )void SurfaceGDI::
AnnotationBoxedOrIndented(int annotationVisible)static bool 
AnnotationClearAll()void Document::
AnnotationLines(Sci::Line line)int Document::
AnnotationSetStyle(Sci::Line line, int style)void Document::
AnnotationSetStyles(Sci::Line line, const unsigned char *styles)void Document::
AnnotationSetText(Sci::Line line, const char *text)void Document::
AnnotationStyledText(Sci::Line line)StyledText Document::
Annotations()LineAnnotation
Append(char *s, int type)void ListBoxX::
Append(char *s, int type)void ListBoxImpl::
Append(char *, int)void ListBoxX::
AppendIfNotPresent(const std::string &s)	void 
AppendList(const std::string &s, char sep = Ã)	void 
AppendListItem(const char *text, const char *numword)void ListBoxX::
AppendName(const char *name)	void 
AppendText(const char *text)void WComboBoxEntry::
ApplyStep(int partitionUpTo)	void 
ArrayFromStringList(char *stringList, bool onlyLineEnds = false)static std::vector
ArrayFromWordList(char *wordlist, int *len, bool onlyLineEnds = false)static char
AsInternal()const GUI::gui_char
AsLong()	long 
AsUTF8()std::string FilePath::
AsVector()	std::vector
Ascent(Font &font_)XYPOSITION SurfaceImpl::
Ascent(Font &font)XYPOSITION SurfaceImpl::
Ascent(Font &font_)XYPOSITION SurfaceD2D::
Ascent(Font &font_)XYPOSITION SurfaceGDI::
AskMacroList()void SciTEBase::
Assert(const char *c, const char *file, int line)void Platform::
AssignCmdKey(int key, int modifiers, unsigned int msg)void KeyMap::
AssignKey(int key, int mods, int cmd)void SciTEBase::
At(int n)	std::string 
AtLineEnd(lua_State *L)	static int 
AtLineStart(lua_State *L)	static int 
AttachResponse(GtkWidget *w, SciTEGTK *object)inline void 
AutoComplete()::
AutoCompleteCancel()void ScintillaBase::
AutoCompleteCharacterAdded(char ch)void ScintillaBase::
AutoCompleteCharacterDeleted()void ScintillaBase::
AutoCompleteCompleted(char ch, unsigned int completionMethod)void ScintillaBase::
AutoCompleteDoubleClick(void *p)void ScintillaBase::
AutoCompleteGetCurrent()int ScintillaBase::
AutoCompleteGetCurrentText(char *buffer)int ScintillaBase::
AutoCompleteInsert(Sci::Position startPos, int removeLen, const char *text, int textLen)void ScintillaBase::
AutoCompleteMove(int delta)void ScintillaBase::
AutoCompleteMoveToCurrentWord()void ScintillaBase::
AutoCompleteStart(int lenEntered, const char *list)void ScintillaBase::
AutoLineLayout(LineLayoutCache &llc_, LineLayout *ll_)	
AutoSurface(Editor *ed, int technology = -1)	
AutoSurface(SurfaceID sid, Editor *ed, int technology = -1)	
AutomaticIndentation(char ch)void SciTEBase::
AverageCharWidth(Font &font_)XYPOSITION SurfaceImpl::
AverageCharWidth(Font &font)XYPOSITION SurfaceImpl::
AverageCharWidth(Font &font_)XYPOSITION SurfaceD2D::
AverageCharWidth(Font &font_)XYPOSITION SurfaceGDI::
BackAsLong()long StyleDefinition::
BackStep(int partitionDownTo)	void 
Background(int marksOfLine, bool caretActive, bool lineContainsCaret)ColourOptional ViewStyle::
BackgroundStrip()	
BackgroundStrip()	
Band(bool visible_, int height_, bool expands_, GUI::Window win_)	
BarButtonIn()	
BarButtonIn(int _id, int _cmd)	
Base()	int 
BaseName()FilePath FilePath::
BaseStyle(int subStyle)	int 
BaseWin()	
BaseWin()	
BeginPrint(GtkPrintOperation *operation, GtkPrintContext *context, SciTEGTK *scitew)void SciTEGTK::
BeginPrintThis(GtkPrintOperation *operation, GtkPrintContext *context)void SciTEGTK::
BeginUndoAction()	void 
BlockFromBaseStyle(int baseStyle)	int 
BlockFromStyle(int style)	int 
BookmarkAdd(int lineno)void SciTEBase::
BookmarkDelete(int lineno)void SciTEBase::
BookmarkNext(bool forwardScan, bool select)void SciTEBase::
BookmarkPresent(int lineno)bool SciTEBase::
BookmarkSelectAll()void SciTEBase::
BookmarkToggle(int lineno)void SciTEBase::
BoundsContains(PRectangle rcBounds, HRGN hRgnBounds, PRectangle rcCheck)static bool 
BraceMatch(Sci::Position position, Sci::Position )Sci::Position Document::
BraceMatch(bool editor)void SciTEBase::
BraceOpposite(char ch)static char 
BreakFinder(const LineLayout *ll_, const Selection *psel, Range lineRange_, Sci::Position posLineStart_, int xStart, bool breakForSelection, const Document *pdoc_, const SpecialRepresentations *preprs_, const ViewStyle *pvsDraw)::
BrowseCallbackProc(HWND hwnd, UINT uMsg, LPARAM, LPARAM pData)static int __stdcall 
BrushColor(ColourDesired back)void SurfaceGDI::
BrushColour(ColourDesired back)void SurfaceImpl::
Buffer()	
BufferContainsNull()	bool 
BufferList()::
BufferPointer()	const char
BufferPointer()	T
BufferedFile(const FilePath &fPath)	explicit 
BuffersMenu()void SciTEBase::
BuiltinRegex(CharClassify *charClassTable)	explicit 
ButtonDown(Point pt, unsigned int curTime, bool shift, bool ctrl, bool alt)void Editor::
ButtonDown(Point pt, unsigned int curTime, bool shift, bool ctrl, bool alt)void ScintillaBase::
ButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers)void Editor::
ButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers)void ScintillaBase::
ButtonMove(Point pt)void Editor::
ButtonMoveWithModifiers(Point pt, int modifiers)void Editor::
ButtonPress(GtkWidget *, GdkEventButton* ev, gpointer p)static gboolean 
ButtonSignal(GtkWidget *, gpointer data)void SciTEGTK::
ButtonUp(Point pt, unsigned int curTime, bool ctrl)void Editor::
ButtonsPress(GtkWidget *, GdkEventButton *event, Strip *pstrip)gint Strip::
ByteIterator(const Document *doc_ = 0, Sci::Position position_ = 0)	
ByteOffsetFromCharacterOffset(Sci::Position characterOffset)	Sci::Position 
ByteOffsetFromCharacterOffset(Sci::Position startByte, int characterOffset)	Sci::Position 
ByteRangeFromCharacterRange(int startChar, int endChar, Sci::Position& startByte, Sci::Position& endByte)	void 
BytesForDocument(const QString &text)QByteArray ScintillaQt::
BytesFromLead(int leadByte)static int 
BytesResult(sptr_t lParam, const unsigned char *val, size_t len)sptr_t Editor::
CLANG_ANALYZER_NORETURN(const char *c, const char *file, int line)	static void Assert
CRectContains(const cairo_rectangle_t &crcContainer, const cairo_rectangle_t &crcTest)static bool 
CRectListContains(const cairo_rectangle_list_t *crcListContainer, const cairo_rectangle_t &crcTest)static bool 
CTWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ScintillaWin::
CalcLargestMarkerHeight()void ViewStyle::
CalculateColumnWidths(int widthToAllocate)	void 
CalculateMarginWidthAndMask()void ViewStyle::
Call(self, message, wParam=0, lParam=0)	def 
Call(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0)	int 
CallBackAction(void*)typedef void
CallChildren(unsigned int msg, uptr_t wParam, sptr_t lParam)void SciTEBase::
CallFocused(unsigned int msg, uptr_t wParam, sptr_t lParam)int SciTEBase::
CallFocusedElseDefault(int defaultValue, unsigned int msg, uptr_t wParam, sptr_t lParam)int SciTEBase::
CallNamedFunction(const char *name)static bool 
CallNamedFunction(const char *name, const char *arg)static bool 
CallNamedFunction(const char *name, int numberArg, const char *stringArg)static bool 
CallNamedFunction(const char *name, int numberArg, int numberArg2)static bool 
CallPane(int destination, unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t SciTEBase::
CallPointer(unsigned int msg, uptr_t wParam, void *s)	int 
CallReturnPointer(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0)	sptr_t 
CallSearchOnAllWindows()void UniqueInstance::
CallString(unsigned int msg, uptr_t wParam, const char *s)	int 
CallTip()::
CallTipCancel()void CallTip::
CallTipClick()void ScintillaBase::
CallTipShow(Point pt, const char *defn)void ScintillaBase::
CallTipStart(Sci::Position pos, Point pt, int textHeight, const char *defn, const char *faceName, int fontSize_, int codePage_, int characterSet, int technology, Window &wParent)PRectangle CallTip::
CallbackData(SciTEGTK *pSciTE_, int cmd_, Worker *pWorker_)	
Caller(HWND hDlg, UINT message, LPARAM lParam)static SciTEWin
CanCall()	bool 
CanDeferToLastStep(const DocModification &mh)static bool 
CanEliminate(const DocModification &mh)static bool 
CanMakeRoom(bool maySaveIfDirty)bool SciTEBase::
CanPaste()bool Editor::
CanPaste()bool ScintillaWin::
CanRedo()	bool 
CanUndo()	bool 
Cancel()void AutoComplete::
Cancel()void FileLoader::
Cancel()void FileStorer::
Cancel()	virtual void 
CancelLoad()void Buffer::
CancelModes()void Editor::
CancelModes()void ScintillaBase::
Cancelled()	long 
Cancelling()	bool 
Caret()::
CaretFromEdge()int ListBoxX::
CaretFromEdge()int ListBoxImpl::
CaretFromEdge()int ListBoxX::
CaretSetPeriod(int period)void Editor::
CaseConvert(int character, enum CaseConversion conversion)const char
CaseConvertString(char *converted, size_t sizeConverted, const char *mixed, size_t lenMixed, enum CaseConversion conversion)size_t 
CaseConvertString(const std::string &s, enum CaseConversion conversion)std::string 
CaseConverter()	
CaseFolderASCII()	
CaseFolderDBCS(const char *charSet_)	explicit 
CaseFolderDBCS(QTextCodec *codec_)	explicit 
CaseFolderDBCS(UINT cp_)	explicit 
CaseFolderForEncoding()CaseFolder
CaseFolderTable()::
CaseFolderUnicode()::
CaseMapString(const std::string &s, int caseMapping)std::string ScintillaGTK::
CaseMapString(const std::string &s, int caseMapping)std::string ScintillaQt::
CaseMapString(const std::string &s, int caseMapping)std::string Editor::
CaseMapString(const std::string &s, int caseMapping)std::string ScintillaWin::
CaseMapper(const std::string &sUTF8, bool toUpperCase)	
CategoriseCharacter(int character)CharacterCategory 
CentreItem(int n)void ListBoxX::
ChSet(unsigned char c)void RESearch::
ChSetWithCase(unsigned char c, bool caseSensitive)void RESearch::
ChangeCaseOfSelection(int caseMapping)void Editor::
ChangeDocument(Document *oldDoc, Document *newDoc)void ScintillaGTKAccessible::
ChangeFunction(WCheckDraw *cd, void *user)	typedef void
ChangeInsertion(const char *s, Sci::Position length)void Document::
ChangeLexerState(Sci_Position start, Sci_Position end)	void 
ChangeLexerState(Sci_Position start, Sci_Position end)void SCI_METHOD Document::
ChangeScrollPos(int barType, Sci::Position pos)void ScintillaWin::
ChangeSize()void Editor::
ChangeState(int state_)	void 
ChangeState(lua_State *L)	static int 
CharAdded(int utf32)void SciTEBase::
CharAddedOutput(int ch)void SciTEBase::
CharAt(Sci::Position position)	char 
CharAt(lua_State *L)	static int 
CharClassify()::
CharPtrFromSPtr(sptr_t lParam)static char
CharacterAfter(Sci::Position position)Document::CharacterExtracted Document::
CharacterBefore(Sci::Position position)Document::CharacterExtracted Document::
CharacterConversion(int character_=0, const char *conversion_=Ó)		
CharacterExtracted(unsigned int character_, unsigned int widthBytes_)		
CharacterInSelection(Sci::Position posCharacter)int Selection::
CharacterOffsetFromByteOffset(Sci::Position byteOffset)	Sci::Position 
CharacterRangeFromByteRange(Sci::Position startByte, Sci::Position endByte, int *startChar, int *endChar)	void 
CharacterSet(const CharacterSet &other)	
CharacterSet(setBase base=setNone, const char *initialSet=Ó, int size_=0x80, bool valueAfter_=false)	
CharacterSetID(int characterSet)const char
CharacterSetID()const char
CharacterSetID(int characterSet)const char
CharacterSetIDOfDocument()const char
CharacterSetOfDocument()int ScintillaQt::
Check()void ContractionState::
Check()void RunStyles::
Check()	void 
CheckAMenuItem(int wIDCheckItem, bool val)void SciTEGTK::
CheckAMenuItem(int wIDCheckItem, bool val)void SciTEWin::
CheckButton(const GUI::Window &wButton, bool checked)static void 
CheckButtons()void FindStrip::
CheckButtons()void ReplaceStrip::
CheckCommonDialogError()void SciTEWin::
CheckEnvironment(ExtensionAPI *host)static void 
CheckEnvironment(ExtensionAPI *phost)static void 
CheckFiles(root)def 
CheckForChangeOutsidePaint(Range r)void Editor::
CheckForRunningInstance(int argc, char *argv[])bool SciTEGTK::
CheckForScintillaFailure(int statusFailure)void SciTEWin::
CheckMenus()void SciTEGTK::
CheckMenus()void SciTEBase::
CheckMenus()void SciTEWin::
CheckMenusClipboard()void SciTEGTK::
CheckMenusClipboard()void SciTEBase::
CheckMessage(UINT message, WPARAM wParam, LPARAM lParam)LRESULT UniqueInstance::
CheckModificationForWrap(DocModification mh)void Editor::
CheckOtherInstance()void UniqueInstance::
CheckReadOnly()void Document::
CheckReload()void SciTEBase::
CheckStartupScript()static bool 
CheckToolbarButton(HWND wTools, int id, bool enable)static void 
Checked(int id)	bool 
ChildFocus(GtkWidget *widget)void FindStrip::
ChildFocus(GtkWidget *widget)void ReplaceStrip::
ChildFocus(GtkWidget *widget)void UserStrip::
ChildFocus(GtkWidget *widget)void Strip::
ChildFocusSignal(GtkContainer * , GtkWidget *widget, Strip *pStrip)gboolean Strip::
Chomp(std::string &s, int ch)static void 
ChooseSaveName(const FilePath &directory, const char *title, const GUI::gui_char *filesFilter, const char *ext)FilePath SciTEWin::
ChooseStrategy(int eff)static QFont::StyleStrategy 
Chrome()ColourDesired Platform::
ChromeHighlight()ColourDesired Platform::
ClaimSelection()void ScintillaGTK::
ClaimSelection()void ScintillaQt::
ClaimSelection()void ScintillaWin::
Clamp(int val, int minVal, int maxVal)int Platform::
ClampPositionIntoDocument(Sci::Position pos)Sci::Position Document::
ClampPositionIntoDocument(SelectionPosition sp)SelectionPosition Editor::
ClassInit(OBJECT_CLASS* object_class, GtkWidgetClass *widget_class, GtkContainerClass *container_class)void ScintillaGTK::
ClassNameOfWindow(HWND hWnd)GUI::gui_string 
Classifier(int baseStyle)	const Word
Clear()void ListBoxX::
Clear()void SurfaceImpl::
Clear()	void 
Clear()void WordList::
Clear()void ListBoxImpl::
Clear()void ContractionState::
Clear()	void 
Clear()void Editor::
Clear()	void 
Clear()void LexerManager::
Clear()void KeyMap::
Clear()void PositionCache::
Clear()void PositionCacheEntry::
Clear()void SpecialRepresentations::
Clear()void RESearch::
Clear()void Selection::
Clear()void FontMeasurements::
Clear(ColourDesired fore_, ColourDesired back_, int size_, const char *fontName_, int characterSet_, int weight_, bool italic_, bool eolFilled_, bool underline_, ecaseForced caseForce_, bool visible_, bool changeable_, bool hotspot_)void Style::
Clear()void FontNames::
Clear()void RGBAImageSet::
Clear()	void 
Clear()void ListBoxX::
Clear()bool DirectorExtension::
Clear()	void 
Clear()bool LuaExtension::
Clear()bool MultiplexExtension::
Clear()void PropSetFile::
Clear()void StringList::
Clear()bool DirectorExtension::
ClearAll()void Editor::
ClearAll()void LineAnnotation::
ClearAllTabstops()void EditView::
ClearBeforeExecute()	bool 
ClearBeforeTentativeStart()void Editor::
ClearDocument()void SciTEBase::
ClearDocumentStyle()void Editor::
ClearFont()void FontAlias::
ClearJobs()void JobQueue::
ClearLevels()void Document::
ClearLevels()void LineLevels::
ClearList()void WComboBoxEntry::
ClearRegisteredImages()void ListBoxX::
ClearRegisteredImages()void ListBoxImpl::
ClearRegisteredImages()void ListBoxX::
ClearRepresentation(const char *charBytes)void SpecialRepresentations::
ClearSelection(bool retainMultipleSelections)void Editor::
ClearStyles()void ViewStyle::
ClearTabstops(Sci::Line line)bool EditView::
ClearTabstops(Sci::Line line)bool LineTabstops::
ClearTo(const Style &source)void Style::
ClearValue(int partition)	void 
ClearVirtualSpace()	void 
ClickNotified()	bool 
ClickSignal(GtkWidget *w, UserStrip *pStrip)void UserStrip::
ClickThis(GtkWidget *w)void UserStrip::
ClientFromScreen(HWND hWnd, GUI::Point ptScreen)GUI::Point 
ClipboardClearSelection(GtkClipboard *, void *data)void ScintillaGTK::
ClipboardGetSelection(GtkClipboard *, GtkSelectionData *selection_data, guint info, void *data)void ScintillaGTK::
Close()	void 
Close(Point pt1, Point pt2, Point threshold)static bool 
Close()void FindStrip::
Close()void ReplaceStrip::
Close()void UserStrip::
Close()void Strip::
Close(bool updateUI, bool loadingSession, bool makingRoomForNew)void SciTEBase::
Close()void BackgroundStrip::
Close()void FindReplaceStrip::
Close()void SearchStrip::
Close()void Strip::
Close()void UserStrip::
CloseAllBuffers(bool loadingSession)void SciTEBase::
CloseArea()GUI::Rectangle Strip::
CloseTab(int tab)void SciTEBase::
ClusterIterator(PangoLayout *layout, int len)	
CmpString(const char *a, const char *b)static bool 
CmpStringNoCase(const char *a, const char *b)static bool 
CodePage()int SCI_METHOD Document::
CodePage()int Editor::
CodePageFamily()EncodingFamily Document::
CodePageFromCharSet(DWORD characterSet, UINT documentCodePage)UINT 
CodePageFromCharSet(DWORD characterSet, UINT documentCodePage)static UINT 
CodePageFromName(const std::string &encodingName)static int 
CodePageOfDocument()UINT ScintillaWin::
CodingCookieValue(const char *buf, size_t length)UniMode 
ColourDesired(long lcol=0)	
ColourDesired(unsigned int red, unsigned int green, unsigned int blue)	
ColourFromCode(int ch)ColourDesired XPM::
ColourFromString(const std::string &s)Colour 
ColourOfProperty(const PropSetFile &props, const char *key, Colour colourDefault)Colour 
ColourOptional(0,0,0), bool isSet_=false)	
ColourOptional(uptr_t wParam, sptr_t lParam)	
ColourRGB(unsigned int red, unsigned int green, unsigned int blue)inline Colour 
ColourTo(Sci_PositionU pos, int chAttr)	void 
ColourTo(unsigned int pos, int chAttr)void StyleWriter::
Colourise(Sci::Position start, Sci::Position end)void LexInterface::
Colourize()	void 
ColumnWidth()	
CombineWith(MarkerHandleSet *other)void MarkerHandleSet::
ComboSelectionText(GUI::Window w)static std::string 
Command(int cmdId)void ScintillaBase::
Command(unsigned long wParam, long)void SciTEGTK::
Command(WPARAM wParam, LPARAM lParam)void SciTEWin::
Command(WPARAM )bool BackgroundStrip::
Command(WPARAM wParam)bool FindStrip::
Command(WPARAM wParam)bool ReplaceStrip::
Command(WPARAM wParam)bool SearchStrip::
Command(WPARAM )bool Strip::
Command(WPARAM wParam)bool UserStrip::
CommandExecute(const GUI::gui_char *command, const GUI::gui_char *directoryForRun)std::string 
CommandWorker()::
CommentString(prop)def 
Commit(GtkIMContext *, char *str, ScintillaGTK *sciThis)void ScintillaGTK::
CommitStackSelection()void BufferList::
CommitTentative()void Selection::
CommitThis(char *commitStr)void ScintillaGTK::
CompareCaseInsensitive(const char *a, const char *b)int 
CompareDevCap(HDC hdc, HDC hOtherDC, int nIndex)static bool 
CompareNCaseInsensitive(const char *a, const char *b, size_t len)int 
CompareNCaseInsensitive(const char *a, const char *b, size_t len)static int 
CompareNoCase(const char *a, const char *b)int 
CompareString(size_t searchLen_)	explicit 
CompareStringInsensitive(size_t searchLen_)	explicit 
Compile(const char *pattern, Sci::Position length, bool caseSensitive, bool posix)const char
Complete()	void 
Complete()bool MatchMarker::
CompleteLoading()void Buffer::
CompleteOpen(OpenCompletion oc)void SciTEBase::
CompleteStoring()void Buffer::
ContainerNeedsUpdate(int flags)void Editor::
Contains(PRectangle rc)	bool 
Contains(Point pt)	bool 
Contains(Range other)	bool 
Contains(Sci::Position pos)	bool 
Contains(int handle)bool MarkerHandleSet::
Contains(const char *charBytes, size_t len)bool SpecialRepresentations::
Contains(Sci::Position pos)bool SelectionRange::
Contains(SelectionPosition sp)bool SelectionRange::
Contains(s,sub)def 
Contains(Point pt)	bool 
Contains(std::string const &s, char ch)bool 
ContainsCharacter(Sci::Position pos)	bool 
ContainsCharacter(Sci::Position posCharacter)bool SelectionRange::
ContainsLineEnd(const char *s, Sci::Position length)	bool 
ContainsWholePixel(Point pt)	bool 
ContentArea()GtkWidget
ContentWin()	
Context(lua_State *L)	static Styling
ContextMenu(Point pt)void ScintillaBase::
ContextMenu(GUI::ScintillaWindow &wSource, GUI::Point pt, GUI::Window wCmd)void SciTEBase::
ContextMenuMessage(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT SciTEWin::
Continue()void MatchMarker::
ContinueCallTip()void SciTEBase::
ContinueExecute(int fromPoll)void SciTEGTK::
ContinueMacroList(const char *stext)void SciTEBase::
ContractedFoldNext(Sci::Line lineStart)Sci::Line Editor::
ContractedNext(Sci::Line lineDocStart)Sci::Line ContractionState::
ContractionState()::
ControlCharacterString(unsigned char ch)static const char
ControlGText(GUI::Window w)static GUI::gui_string 
ControlIDOfCommand(unsigned long wParam)int 
ControlIDOfWParam(WPARAM wParam)inline int 
ControlText(GUI::Window w)static std::string 
ControlWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ListBoxX::
ConversionString()		
Convert(char** src, gsize *srcleft, char **dst, gsize *dstleft)	gsize 
ConvertEncoding(const char *original, int codePage)static std::string 
ConvertIndentation(int tabSize, int useTabs)void SciTEBase::
ConvertLineEnds(int eolModeSet)void Document::
ConvertText(const char *s, size_t len, const char *charSetDest, const char *charSetSource, bool transliterations, bool silent)std::string 
ConvertToDocument()void
Converter()	
Converter(const char *charSetDestination, const char *charSetSource, bool transliterations)	
ConverterFor(enum CaseConversion conversion)ICaseConverter
ConverterForConversion(enum CaseConversion conversion)CaseConverter
CookieValue(const std::string &s)static UniMode 
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceImpl::
Copy()void ScintillaGTK::
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceImpl::
Copy()void ScintillaQt::
Copy(const SelectionText &other)	void 
Copy(const std::string &s_, int codePage_, int characterSet_, bool rectangular_, bool lineCopy_)	void 
Copy(Font &font_, const FontMeasurements &fm_)void Style::
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceD2D::
Copy(PRectangle rc, Point from, Surface &surfaceSource)void SurfaceGDI::
Copy()void ScintillaWin::
CopyAllowLine()void Editor::
CopyAllowLine()void ScintillaWin::
CopyAsRTF()	virtual void 
CopyAsRTF()void SciTEWin::
CopyData(COPYDATASTRUCT *pcds)LRESULT UniqueInstance::
CopyPath()void SciTEGTK::
CopyPath()	virtual void 
CopyPath()void SciTEWin::
CopyRangeToClipboard(Sci::Position start, Sci::Position end)void Editor::
CopySelectionRange(SelectionText *ss, bool allowLineCopy)void Editor::
CopyText(AtkEditableText *text, gint start, gint end)void ScintillaGTKAccessible::AtkEditableTextIface::
CopyText(int startChar, int endChar)void ScintillaGTKAccessible::
CopyText(int length, const char *text)void Editor::
CopyToClipboard(const SelectionText &selectedText)void ScintillaGTK::
CopyToClipboard(const SelectionText &selectedText)void ScintillaQt::
CopyToClipboard(const SelectionText &selectedText)void ScintillaWin::
CopyToModeClipboard(const SelectionText &selectedText, QClipboard::Mode clipboardMode_)void ScintillaQt::
CopyWithInsertion(input, commentPrefix, retainDefs, lists)def 
Count()size_t Selection::
Count()	int 
CountBackgroundActivities()BackgroundActivities BufferList::
CountBytes()int RGBAImage::
CountCharacters(Sci::Position startPos, Sci::Position endPos)Sci::Position Document::
CountLineEnds(int &linesCR, int &linesLF, int &linesCRLF)void SciTEBase::
CountUTF16(Sci::Position startPos, Sci::Position endPos)Sci::Position Document::
Create(const FontParameters &fp)void Font::
Create(Window &parent, int, Point, int, bool, int,bool)void ListBoxX::
Create()ILexer
Create(const FontParameters &fp)void Font::
Create(Window &parent, int , Point location, int , bool unicodeMode_, int)void ListBoxImpl::
Create(int indicator, int length)Decoration
Create(const FontParameters &fp)void Font::
Create(Window &parent_, int ctrlID_, Point location_, int lineHeight_, bool unicodeMode_, int technology_, bool useThickFrame_)void ListBoxX::
Create()Mutex
Create(const GUI::gui_string &title)void Dialog::
Create(GUI::gui_string text)void WButton::
Create(GUI::gui_string text, GCallback func, gpointer data)void WButton::
Create(const char **xpmImage, const GUI::gui_string &toolTip, GtkStyle *pStyle_)void WCheckDraw::
Create()void WComboBoxEntry::
Create(const GUI::gui_char *text)void WEntry::
Create()void WProgress::
Create(GUI::gui_string text)void WStatic::
Create(const GUI::gui_string &text)void WToggle::
Create()Mutex
CreateAndAddFont(const FontSpecification &fs)void ViewStyle::
CreateBuffers()void SciTEBase::
CreateButton(const char *text, size_t ident, bool check)GUI::Window Strip::
CreateCallTipWindow(PRectangle rc)void ScintillaGTK::
CreateCallTipWindow(PRectangle rc)void ScintillaQt::
CreateCallTipWindow(PRectangle )void ScintillaWin::
CreateIndentation(Sci::Position indent, int tabSize, bool insertSpaces)static std::string 
CreateIndentation(int indent, int tabSize, bool insertSpaces)static std::string 
CreateMenu()void SciTEGTK::
CreateNewFont(const FontParameters &fp)FontHandle
CreateParameterisedDialog(LPCWSTR lpTemplateName, DLGPROC lpProc)HWND SciTEWin::
CreatePipe(bool )void DirectorExtension::
CreatePopUp()void Menu::
CreateRegexSearch(CharClassify *charClassTable)RegexSearchBase
CreateSimilarSurface(GdkWindow *window, cairo_content_t content, int width, int height)static cairo_surface_t
CreateStrips(GtkWidget *boxMain)void SciTEGTK::
CreateSystemCaret()BOOL ScintillaWin::
CreateText(const char *text)GUI::Window Strip::
CreateTranslatedMenu(int n, SciTEItemFactoryEntry items[], int nRepeats, const char *prefix, int startNum, int startID, const char *radioStart)void SciTEGTK::
CreateUI()void SciTEGTK::
CreateUI()void SciTEWin::
Created()	bool 
Creation(GtkWidget *container)void BackgroundStrip::
Creation(GtkWidget *container)void FindStrip::
Creation(GtkWidget *container)void ReplaceStrip::
Creation(GtkWidget *container)void UserStrip::
Creation(GtkWidget *)void Strip::
Creation()void SciTEWin::
Creation()void BackgroundStrip::
Creation()void FindStrip::
Creation()void ReplaceStrip::
Creation()void SearchStrip::
Creation()void SearchStripBase::
Creation()void Strip::
Creation()void UserStrip::
CreditsWndProc(HWND hwnd, UINT uMsg, WPARAM wParam, LPARAM lParam)LRESULT CALLBACK 
Current(lua_State *L)	static int 
Current()int BufferList::
CurrentBuffer()	Buffer
CurrentBuffer()Buffer
CurrentBufferConst()	const Buffer
CurrentBufferConst()const Buffer
CurrentPosition()Sci::Position Editor::
CurrentWordHighlight()	
CursorUpOrDown(int direction, Selection::selTypes selt)void Editor::
CustomDraw(NMHDR *pnmh)LRESULT Strip::
Cut()void Editor::
CutText(AtkEditableText *text, gint start, gint end)void ScintillaGTKAccessible::AtkEditableTextIface::
CutText(int startChar, int endChar)void ScintillaGTKAccessible::
Cxx11RegexFindText(Document *doc, Sci::Position minPos, Sci::Position maxPos, const char *s, bool caseSensitive, Sci::Position *length, RESearch &search)Sci::Position 
D2DPenColour(ColourDesired fore, int alpha)void SurfaceD2D::
DBCS(unsigned char lead, unsigned char trail)		static CharacterExtracted 
DBCSCharLength(int codePage, const char *s)int Platform::
DBCSCharMaxLength()int Platform::
DWriteMapFontQuality(int extraFontFlag)static D2D1_TEXT_ANTIALIAS_MODE 
Data()	const char
DataObject()::
DataObject_AddRef(DataObject *pd)STDMETHODIMP_
DataObject_DAdvise(DataObject *, FORMATETC *, DWORD, IAdviseSink *, PDWORD)STDMETHODIMP 
DataObject_DUnadvise(DataObject *, DWORD)STDMETHODIMP 
DataObject_EnumDAdvise(DataObject *, IEnumSTATDATA **)STDMETHODIMP 
DataObject_EnumFormatEtc(DataObject *pd, DWORD dwDirection, IEnumFORMATETC **ppEnum)STDMETHODIMP 
DataObject_GetCanonicalFormatEtc(DataObject *pd, FORMATETC *, FORMATETC *pFEOut)STDMETHODIMP 
DataObject_GetData(DataObject *pd, FORMATETC *pFEIn, STGMEDIUM *pSTM)STDMETHODIMP 
DataObject_GetDataHere(DataObject *, FORMATETC *, STGMEDIUM *)STDMETHODIMP 
DataObject_QueryGetData(DataObject *pd, FORMATETC *pFE)STDMETHODIMP 
DataObject_QueryInterface(DataObject *pd, REFIID riid, PVOID *ppv)STDMETHODIMP 
DataObject_Release(DataObject *pd)STDMETHODIMP_
DataObject_SetData(DataObject *, FORMATETC *, STGMEDIUM *, BOOL)STDMETHODIMP 
DataOfGSD(GtkSelectionData *sd)static const guchar
Deallocate()void LineLayoutCache::
DebugDisplay(const char *s)void Platform::
DebugPrintf(const char *, ...)void Platform::
DebugPrintf(const char *format, ...)void Platform::
DebugPrintf(const char *, ...)void Platform::
DebugPrintf(const char *format, ...)void Platform::
DecodeMessage(const char *cdoc, std::string &sourcePath, int format, int &column)static int 
Decoration(int indicator_)::
DecorationFillRange(Sci_Position position, int value, Sci_Position fillLength)void SCI_METHOD Document::
DecorationFromIndicator(int indicator)Decoration
DecorationList()::
DecorationSetCurrentIndicator(int indicator)void SCI_METHOD Document::
DefWndProc(unsigned int, uptr_t, sptr_t)sptr_t ScintillaGTK::
DefWndProc(unsigned int, uptr_t, sptr_t)sptr_t ScintillaQt::
DefWndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::
DefaultFont()const char
DefaultFontSize()int Platform::
DefineMarker(int marker, int markerType, Colour fore, Colour back, Colour backSelected)void SciTEBase::
DefineProperty(const char *name, plcob pb, std::string description=Ó)	void 
DefineProperty(const char *name, plcoi pi, std::string description=Ó)	void 
DefineProperty(const char *name, plcos ps, std::string description=Ó)	void 
DefineWordListSets(const char * const wordListDescriptions[])	void 
DelChar(Sci::Position pos)void Document::
DelCharBack(Sci::Position pos)void Document::
DelCharBack(bool allowLineStartDeletion)void Editor::
DelWordOrLine(unsigned int iMessage)int Editor::
Delete(int position)	bool 
Delete(int indicator)void DecorationList::
Delete(int position)	void 
DeleteAll()	void 
DeleteAll()void RunStyles::
DeleteAll()	void 
DeleteAllMarks(int markerNum)void Document::
DeleteAnyEmpty()void DecorationList::
DeleteChars(Sci::Position pos, Sci::Position len)bool Document::
DeleteFileStackMenu()void SciTEBase::
DeleteFontObject(HFONT &font)static void 
DeleteInstance()void LexerManager::
DeleteLexerDecorations()void DecorationList::
DeleteLine(Sci::Line lineDoc)void ContractionState::
DeleteLines(Sci::Line lineDoc, Sci::Line lineCount)void ContractionState::
DeleteMark(Sci::Line line, int markerNum)void Document::
DeleteMark(Sci::Line line, int markerNum, bool all)bool LineMarkers::
DeleteMarkFromHandle(int markerHandle)void Document::
DeleteMarkFromHandle(int markerHandle)void LineMarkers::
DeletePosition(int position)	void 
DeleteRange(int position, int deleteLength)void DecorationList::
DeleteRange(int position, int deleteLength)void RunStyles::
DeleteRange(int position, int deleteLength)	void 
DeleteText(AtkEditableText *text, gint start, gint end)void ScintillaGTKAccessible::AtkEditableTextIface::
DeleteText(int startChar, int endChar)void ScintillaGTKAccessible::
DeleteUndoHistory()	void 
Delta(int difference)static int 
Descent(Font &font_)XYPOSITION SurfaceImpl::
Descent(Font &font)XYPOSITION SurfaceImpl::
Descent(Font &font_)XYPOSITION SurfaceD2D::
Descent(Font &font_)XYPOSITION SurfaceGDI::
DescribeProperty(const char *)const char
DescribeProperty(const char *name)	const char
DescribeProperty(const char *name)const char
DescribeWordListSets()const char
DescribeWordListSets()	const char
DescribeWordListSets()const char
Destroy()void Menu::
Destroy()void Window::
Destroy(GObject *object)void ScintillaGTK::
Destroy()void Menu::
Destroy()void Window::
Destroy()void Menu::
Destroy()void Window::
Destroy()void Menu::
Destroy()void Window::
Destroy()void Menu::
Destroy()void Window::
DestroyFindReplace()void SciTEGTK::
DestroyFindReplace()void SciTEWin::
DestroyMenuItem(int, int itemID)void SciTEGTK::
DestroyMenuItem(int menuNumber, int itemID)void SciTEWin::
DestroySystemCaret()BOOL ScintillaWin::
Destroyed()	virtual void 
Destruction()void FindStrip::
Destruction()void ReplaceStrip::
Destruction()void UserStrip::
Destruction()void BackgroundStrip::
Destruction()void FindStrip::
Destruction()void ReplaceStrip::
Destruction()void SearchStrip::
Destruction()void SearchStripBase::
Destruction()void Strip::
Destruction()void UserStrip::
DeviceHeightFont(int points)int SurfaceImpl::
DeviceHeightFont(int points)int SurfaceD2D::
DeviceHeightFont(int points)int SurfaceGDI::
Dialog(HWND hDlg_)	explicit 
DialogFilterFromProperty(const GUI::gui_char *filterProperty)GUI::gui_string SciTEWin::
DialogFindReplace(HWND hDlg_, bool advanced_)	
DialogHandled(GUI::WindowID id, MSG *pmsg)bool SciTEWin::
DialogParameters()	
DirectFunction( sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaGTK::
DirectFunction( sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaQt::
DirectFunction( sptr_t ptr, UINT iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::
DirectorExtension()	
DirectorExtension()	
DirectorExtension_ClassName("DirectorExtension")static TCHAR 
DirectorExtension_Register(HINSTANCE hInstance)static void 
DirectorExtension_WndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL 
Directory()FilePath FilePath::
DiscardOverdraw()void Editor::
DiscoverEOLSetting()void SciTEBase::
DiscoverIndentSetting()void SciTEBase::
DiscoverLanguage()std::string SciTEBase::
Display(GtkWidget *parent, bool modal)void Dialog::
DisplayAround(const RecentFile &rf)void SciTEBase::
DisplayCursor(Window::Cursor c)void ScintillaGTK::
DisplayCursor(Window::Cursor c)void Editor::
DisplayFromDoc(Sci::Line lineDoc)Sci::Line ContractionState::
DisplayFromPosition(Surface *surface, const EditModel &model, Sci::Position pos, const ViewStyle &vs)Sci::Line EditView::
DisplayFromPosition(Sci::Position pos)Sci::Line Editor::
DisplayLastFromDoc(Sci::Line lineDoc)Sci::Line ContractionState::
Dispose(GObject *object)void ScintillaGTK::
Dispose(LineLayout *ll)void LineLayoutCache::
DistanceToSecondaryStyles()	int 
DistanceToSecondaryStyles()int LexState::
DllMain(HINSTANCE hInstance, DWORD dwReason, LPVOID lpvReserved)extern
DoDialog(const TCHAR *resName, DLGPROC lpProc)int SciTEWin::
DoMenuCommand(int cmdID)void SciTEBase::
DoReplaceAll(bool inSelection)int SciTEBase::
DocFromDisplay(Sci::Line lineDisplay)Sci::Line ContractionState::
DocModification(int modificationType_, Sci::Position position_=0, Sci::Position length_=0, Sci::Line linesAdded_=0, const char *text_=0, Sci::Line line_=0)	
DocModification(int modificationType_, const Action &act, Sci::Line linesAdded_=0)	
Document()::
DocumentIndexer(Document *pdoc_, Sci::Position end_)	
DocumentLexState()LexState
DocumentModified()void Buffer::
DocumentPointFromView(Point ptView)PointDocument Editor::
DoubleClickTime()unsigned int Platform::
DragDataGet(GtkWidget *widget, GdkDragContext *context, GtkSelectionData *selection_data, guint info, guint)void ScintillaGTK::
DragDataReceived(GtkWidget *widget, GdkDragContext * , gint, gint, GtkSelectionData *selection_data, guint , guint)void ScintillaGTK::
DragDataReceived(GtkWidget *, GdkDragContext *context, gint , gint , GtkSelectionData *selectionData, guint , guint time, SciTEGTK *scitew)void SciTEGTK::
DragEnd(GtkWidget *widget, GdkDragContext * )void ScintillaGTK::
DragEnter(const Point &point)void ScintillaQt::
DragEnter(LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL, PDWORD pdwEffect)STDMETHODIMP ScintillaWin::
DragIsRectangularOK(CLIPFORMAT fmt)	bool 
DragLeave(GtkWidget *widget, GdkDragContext * , guint)void ScintillaGTK::
DragLeave()void ScintillaQt::
DragLeave()STDMETHODIMP ScintillaWin::
DragMotion(GtkWidget *widget, GdkDragContext *context, gint x, gint y, guint dragtime)gboolean ScintillaGTK::
DragMotionThis(GdkDragContext *context, gint x, gint y, guint dragtime)gboolean ScintillaGTK::
DragMove(const Point &point)void ScintillaQt::
DragOver(DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP ScintillaWin::
DragThreshold(Point ptStart, Point ptNow)bool ScintillaGTK::
DragThreshold(Point ptStart, Point ptNow)bool ScintillaQt::
DragThreshold(Point ptStart, Point ptNow)bool Editor::
DragThreshold(Point ptStart, Point ptNow)bool ScintillaWin::
Draw(Surface *surface, const PRectangle &rc, const PRectangle &rcLine, const PRectangle &rcCharacter, DrawState drawState, int value)void Indicator::
Draw(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, typeOfFold tFold, int marginStyle)void LineMarker::
Draw(Surface *surface, const PRectangle &rc)void XPM::
Draw(DRAWITEMSTRUCT *pDrawItem)void ListBoxX::
DrawAnnotation(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, int xStart, PRectangle rcLine, int subLine, DrawPhase phase)void EditView::
DrawBackground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, Range lineRange, Sci::Position posLineStart, int xStart, int subLine, ColourOptional background)void EditView::
DrawBlockCaret(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, int subLine, int xStart, Sci::Position offset, Sci::Position posCaret, PRectangle rcCaret, ColourDesired caretColour)static void 
DrawBox(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore, ColourDesired back)static void 
DrawCT(GtkWidget *widget, cairo_t *cr, CallTip *ctip)gboolean ScintillaGTK::
DrawCaretLineFramed(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, int subLine)static void 
DrawCarets(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line lineDoc, int xStart, PRectangle rcLine, int subLine)void EditView::
DrawChunk(Surface *surface, int &x, const char *s, int posStart, int posEnd, int ytext, PRectangle rcClient, bool highlight, bool draw)void CallTip::
DrawCircle(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore, ColourDesired back)static void 
DrawEOL(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, Sci::Line line, Sci::Position lineEnd, int xStart, int subLine, XYACCUMULATOR subLineStart, ColourOptional background)void EditView::
DrawEdgeLine(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, PRectangle rcLine, Range lineRange, int xStart)static void 
DrawFoldDisplayText(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, int xStart, PRectangle rcLine, int subLine, XYACCUMULATOR subLineStart, DrawPhase phase)void EditView::
DrawFoldLines(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, Sci::Line line, PRectangle rcLine)static void 
DrawForeground(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line lineVisible, PRectangle rcLine, Range lineRange, Sci::Position posLineStart, int xStart, int subLine, ColourOptional background)void EditView::
DrawFrame(Surface *surface, ColourDesired colour, int alpha, PRectangle rcFrame)static void 
DrawImeIndicator(int indicator, int len)void ScintillaGTK::
DrawImeIndicator(int indicator, int len)void ScintillaEditBase::
DrawImeIndicator(int indicator, int len)void ScintillaWin::
DrawIndentGuide(Surface *surface, Sci::Line lineVisible, int lineHeight, Sci::Position start, PRectangle rcSegment, bool highlight)void EditView::
DrawIndentGuidesOverEmpty(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, Sci::Line lineVisible, PRectangle rcLine, int xStart, int subLine)void EditView::
DrawIndicator(int indicNum, Sci::Position startPos, Sci::Position endPos, Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, int xStart, PRectangle rcLine, Sci::Position secondCharacter, int subLine, Indicator::DrawState drawState, int value)static void 
DrawIndicators(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, int xStart, PRectangle rcLine, int subLine, Sci::Position lineEnd, bool under, Sci::Position hoverIndicatorPos)static void 
DrawLine(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, Sci::Line lineVisible, int xStart, PRectangle rcLine, int subLine, DrawPhase phase)void EditView::
DrawLineMarkerFn(Surface *surface, PRectangle &rcWhole, Font &fontForCharacter, int tFold, int marginStyle, const void *lineMarker)typedef void
DrawMain(GtkWidget *widget, cairo_t *cr)gboolean ScintillaGTK::
DrawMarkUnderline(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, Sci::Line line, PRectangle rcLine)static void 
DrawMinus(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore)static void 
DrawPage(GtkPrintOperation *operation, GtkPrintContext *context, gint page_nr, SciTEGTK *scitew)void SciTEGTK::
DrawPageThis(GtkPrintOperation * , GtkPrintContext *context, gint page_nr)void SciTEGTK::
DrawPlus(Surface *surface, int centreX, int centreY, int armSize, ColourDesired fore)static void 
DrawPreedit(GtkWidget *widget, cairo_t *cr, ScintillaGTK *sciThis)gboolean ScintillaGTK::
DrawPreeditThis(GtkWidget *, cairo_t *cr)gboolean ScintillaGTK::
DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixelsImage)void SurfaceImpl::
DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixelsImage)void SurfaceD2D::
DrawRGBAImage(PRectangle rc, int width, int height, const unsigned char *pixelsImage)void SurfaceGDI::
DrawStyledText(Surface *surface, const ViewStyle &vs, int styleOffset, PRectangle rcText, const StyledText &st, size_t start, size_t length, DrawPhase phase)void 
DrawTabArrow(Surface *surface, PRectangle rcTab, int ymid, const ViewStyle &vsDraw)static void 
DrawTabArrowFn(Surface *surface, PRectangle rcTab, int ymid)typedef void
DrawText(GtkWidget *, cairo_t *cr, ScintillaGTK *sciThis)gboolean ScintillaGTK::
DrawTextBase(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceImpl::
DrawTextBlob(Surface *surface, const ViewStyle &vsDraw, PRectangle rcSegment, const char *s, ColourDesired textBack, ColourDesired textFore, bool fillBackground)static void 
DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::
DrawTextClipped(PRectangle rc, Font &font, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::
DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceD2D::
DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceGDI::
DrawTextCommon(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, UINT fuOptions)void SurfaceD2D::
DrawTextCommon(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, UINT fuOptions)void SurfaceGDI::
DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::
DrawTextNoClip(PRectangle rc, Font &font, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceImpl::
DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceD2D::
DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)void SurfaceGDI::
DrawTextNoClipPhase(Surface *surface, PRectangle rc, const Style &style, XYPOSITION ybase, const char *s, int len, DrawPhase phase)void 
DrawTextThis(cairo_t *cr)gboolean ScintillaGTK::
DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceImpl::
DrawTextTransparent(PRectangle rc, Font &font, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceImpl::
DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceD2D::
DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)void SurfaceGDI::
DrawThis(cairo_t *cr)gboolean ScintillaGTK::
DrawTranslucentLineState(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, PRectangle rcLine, int subLine)static void 
DrawTranslucentSelection(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, PRectangle rcLine, int subLine, Range lineRange, int xStart)static void 
DrawWrapIndentAndMarker(Surface *surface, const ViewStyle &vsDraw, const LineLayout *ll, int xStart, PRectangle rcLine, ColourOptional background, DrawWrapMarkerFn customDrawWrapMarker, bool caretActive)static void 
DrawWrapMarker(Surface *surface, PRectangle rcPlace, bool isEndMarker, ColourDesired wrapColour)void 
DrawWrapMarkerFn(Surface *surface, PRectangle rcPlace, bool isEndMarker, ColourDesired wrapColour)typedef void
Drop(GtkWidget *widget, GdkDragContext * , gint, gint, guint)gboolean ScintillaGTK::
Drop(const Point &point, const QMimeData *data, bool move)void ScintillaQt::
Drop(LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP ScintillaWin::
DropAdditionalRanges()void Selection::
DropAt(SelectionPosition position, const char *value, bool moving, bool rectangular)void Editor::
DropAt(SelectionPosition position, const char *value, size_t lengthValue, bool moving, bool rectangular)void Editor::
DropCaret()void Editor::
DropFiles(HDROP hdrop)void SciTEWin::
DropGraphics(bool freeObjects)void EditView::
DropGraphics(bool freeObjects)void Editor::
DropGraphics(bool freeObjects)void MarginView::
DropRenderTarget()void ScintillaWin::
DropSelection(size_t r)void Selection::
DropSource()::
DropSource_AddRef(DropSource *ds)STDMETHODIMP_
DropSource_GiveFeedback(DropSource *, DWORD)STDMETHODIMP 
DropSource_QueryContinueDrag(DropSource *, BOOL fEsc, DWORD grfKeyState)STDMETHODIMP 
DropSource_QueryInterface(DropSource *ds, REFIID riid, PVOID *ppv)STDMETHODIMP 
DropSource_Release(DropSource *ds)STDMETHODIMP_
DropTarget()::
DropTarget_AddRef(DropTarget *dt)STDMETHODIMP_
DropTarget_DragEnter(DropTarget *dt, LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP 
DropTarget_DragLeave(DropTarget *dt)STDMETHODIMP 
DropTarget_DragOver(DropTarget *dt, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP 
DropTarget_Drop(DropTarget *dt, LPDATAOBJECT pIDataSource, DWORD grfKeyState, POINTL pt, PDWORD pdwEffect)STDMETHODIMP 
DropTarget_QueryInterface(DropTarget *dt, REFIID riid, PVOID *ppv)STDMETHODIMP 
DropTarget_Release(DropTarget *dt)STDMETHODIMP_
DumpBlock(const void *b, size_t size, DumpState *D)static void 
DumpByte(int y, DumpState *D)static void 
DumpCode(const Proto *f, DumpState *D)static void 
DumpConstants(const Proto *f, DumpState *D)static void 
DumpDebug(const Proto *f, DumpState *D)static void 
DumpFunction(const Proto *f, TString *psource, DumpState *D)static void 
DumpHeader(DumpState *D)static void 
DumpInt(int x, DumpState *D)static void 
DumpInteger(lua_Integer x, DumpState *D)static void 
DumpNumber(lua_Number x, DumpState *D)static void 
DumpProtos(const Proto *f, DumpState *D)static void 
DumpString(const TString *s, DumpState *D)static void 
DumpUpvalues(const Proto *f, DumpState *D)static void 
Duplicate(bool forLine)void Editor::
Duration(bool reset)double ElapsedTime::
Duration()double FileWorker::
Duration(bool reset)double ElapsedTime::
DwellEnd(bool mouseMoved)void Editor::
DynamicLibraryImpl(const char *modulePath)	explicit 
DynamicLibraryImpl(const char *modulePath)	explicit 
DynamicLibraryImpl(const char *modulePath)	explicit 
EdgeProperties(0))	
EdgeProperties(uptr_t wParam, sptr_t lParam)	
EditColour(HWND hwnd, HDC hdc)LRESULT FindReplaceStrip::
EditColour(HWND hwnd, HDC hdc)LRESULT SearchStrip::
EditColour(HWND hwnd, HDC hdc)LRESULT Strip::
EditModel()::
EditView()::
Editor()::
EffectFromState(DWORD grfKeyState)DWORD ScintillaWin::
ElapsedTime()::
ElapsedTime()::
ElapsedTime()::
ElementAt(int nIndex)	TYPE
Elements()	int 
EliminateDuplicateWords(std::string &words)void SciTEBase::
Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceImpl::
Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceD2D::
Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceGDI::
Empty()	bool 
Empty()bool Decoration::
Empty()	bool 
Empty()bool MarkerHandleSet::
Empty()bool Selection::
Empty()	bool 
Enable(int id, bool enable)	void 
EnableAMenuItem(int wIDCheckItem, bool val)void SciTEGTK::
EnableAMenuItem(int wIDCheckItem, bool val)void SciTEWin::
EnableButton(HWND wTools, int id, bool enable)void 
Enabled()bool ScintillaGTKAccessible::
EncodeString(const std::string &s)std::string SciTEGTK::
EncodeString(const std::string &s)std::string SciTEBase::
EncodeString(const std::string &s)std::string SciTEWin::
EncodedFromUTF8(char *utf8, char *encoded)int ScintillaGTK::
EncodedFromUTF8(char *utf8, char *encoded)Sci::Position ScintillaWin::
Encoding()	Type 
End(int indicator, int position)int DecorationList::
End()	SelectionPosition 
EndLineStyle()int LineLayout::
EndMatches(GUI::gui_string const &s, GUI::gui_string const &end)static bool 
EndRun(int position)int RunStyles::
EndStackedTabbing()void SciTEBase::
EndStyling(lua_State *L)	static int 
EndUndoAction()	void 
EndsWith(GUI::gui_string const &s, GUI::gui_string const &end)bool 
EnsureAllChildrenVisible(int line, int level)void SciTEBase::
EnsureCaretVisible(bool useMargin, bool vert, bool horiz)void Editor::
EnsureData()void ContractionState::
EnsureData()	void 
EnsureFinalNewLine()void SciTEBase::
EnsureLength(int wantedLength)	void 
EnsureLineVisible(Sci::Line lineDoc, bool enforcePolicy)void Editor::
EnsureRangeVisible(GUI::ScintillaWindow &win, int posStart, int posEnd, bool enforcePolicy)void SciTEBase::
EnsureRenderTarget(HDC hdc)void ScintillaWin::
EnsureStyle(size_t index)void ViewStyle::
EnsureStyledTo(Sci::Position pos)void Document::
Entry()Gtk
EnumProperties(const char *propkind)void SciTEBase::
EqualCaseInsensitive(const char *a, const char *b)bool 
EscapeFilePathsForMenu(GUI::gui_string &path)static void 
EscapeHanja()void ScintillaWin::
EscapeSignal(GtkWidget *w, GdkEventKey *event, FindStrip *pStrip)gboolean FindStrip::
EscapeSignal(GtkWidget *w, GdkEventKey *event, ReplaceStrip *pStrip)gboolean ReplaceStrip::
EscapeSignal(GtkWidget *w, GdkEventKey *event, UserStrip *pStrip)gboolean UserStrip::
Evaluate(const char *key)std::string PropSetFile::
EventLoop()uptr_t SciTEWin::
Execute(CharacterIndexer &ci, Sci::Position lp, Sci::Position endp)int RESearch::
Execute()void SciTEGTK::
Execute()void FileLoader::
Execute()void FileStorer::
Execute()void SciTEBase::
Execute()	virtual void 
Execute()void CommandWorker::
Execute()void SciTEWin::
ExecuteHelp(const char *cmd)void SciTEWin::
ExecuteMacroCommand(const char *command)void SciTEBase::
ExecuteNext()void SciTEGTK::
ExecuteNext()void SciTEWin::
ExecuteOne(const Job &jobToRun)DWORD SciTEWin::
ExecuteOtherHelp(const char *cmd)void SciTEWin::
Exhausted()	bool 
Exists()bool FilePath::
Exists(const char *key)bool PropSetFile::
Exists(const GUI::gui_char *dir, const GUI::gui_char *path, FilePath *resultPath)bool SciTEBase::
Expand(const std::string &withVars, int maxExpands)std::string PropSetFile::
ExpandAllInPlace(const PropSetSimple &props, std::string &withVars, int maxExpands, const VarChain &blankVars)static int 
ExpandAllInPlace())static int 
ExpandFolds(int line, bool expand, int level)void SciTEBase::
ExpandLevels(Sci::Line sizeNew)void LineLevels::
ExpandLine(Sci::Line line)Sci::Line Editor::
Expose(GtkWidget *, GdkEventExpose *ose)gboolean ScintillaGTK::
ExposeCT(GtkWidget *widget, GdkEventExpose * , CallTip *ctip)gboolean ScintillaGTK::
ExposeMain(GtkWidget *widget, GdkEventExpose *ose)gboolean ScintillaGTK::
ExposePreedit(GtkWidget *widget, GdkEventExpose *ose, ScintillaGTK *sciThis)gboolean ScintillaGTK::
ExposePreeditThis(GtkWidget *widget, GdkEventExpose *)gboolean ScintillaGTK::
ExposeText(GtkWidget *widget, GdkEventExpose *ose, ScintillaGTK *sciThis)gboolean ScintillaGTK::
ExposeTextThis(GtkWidget * , GdkEventExpose *ose)gboolean ScintillaGTK::
Extend(SelectionPosition p)	void 
ExtendStyleRange(Sci::Position pos, int delta, bool singleLine)Sci::Position Document::
ExtendWordSelect(Sci::Position pos, int delta, bool onlyWordCharacters)Sci::Position Document::
Extension()FilePath FilePath::
ExtensionFileName()std::string SciTEBase::
ExternalLeading(Font &)XYPOSITION SurfaceImpl::
ExternalLeading(Font &font)XYPOSITION SurfaceImpl::
ExternalLeading(Font &)XYPOSITION SurfaceD2D::
ExternalLeading(Font &font_)XYPOSITION SurfaceGDI::
ExternalLexerModule(int language_, LexerFunction fnLexer_, const char *languageName_=0, LexerFunction fnFolder_=0)	
ExternalMarginWidth()int ViewStyle::
ExtractCharacter(Sci::Position position)Document::CharacterExtracted Document::
ExtractHeaders(filename)def 
ExtractLine(const char *buf, size_t length)std::string 
FRFindCmd()void SciTEGTK::
FRMarkAllCmd()void SciTEGTK::
FRReplaceAllCmd()void SciTEGTK::
FRReplaceCmd()void SciTEGTK::
FRReplaceInBuffersCmd()void SciTEGTK::
FRReplaceInSelectionCmd()void SciTEGTK::
FailedSaveMessageBox(const FilePath &filePathSaving)void SciTEBase::
FileLoader(WorkerListener *pListener_, ILoader *pLoader_, const FilePath &path_, size_t size_, FILE *fp_)::
FileNameExt()	FilePath 
FilePath(FilePath const &directory, FilePath const &name)::
FilePath(const GUI::gui_char *fileName_)::
FilePath(const GUI::gui_string &fileName_)::
FileReader(const FilePath &fPath, bool caseSensitive_)	
FileStorer(WorkerListener *pListener_, const char *documentBytes_, const FilePath &path_, size_t size_, FILE *fp_, UniMode unicodeMode_, bool visibleProgress_)::
FileWorker(WorkerListener *pListener_, const FilePath &path_, size_t size_, FILE *fp_)::
Fill(Sci_Position position)	void 
Fill(int position)void TextReader::
FillComboFromMemory(WComboBoxEntry *combo, const ComboMemory &mem, bool useTop = false)static void 
FillComboFromMemory(int id, const ComboMemory &mem, bool useTop = false)	void 
FillComboFromProps(WComboBoxEntry *combo, PropSetFile &props)static void 
FillComboFromProps(HWND combo, PropSetFile &props)static void 
FillCombos(Dialog &dlg, bool inFiles)void SciTEWin::
FillFields()void DialogFindInFiles::
FillFields()void DialogFindReplace::
FillFromMemory(const std::vector<std::string> &mem, bool useTop)void WComboBoxEntry::
FillFunctionDefinition(int pos )void SciTEBase::
FillLineRemainder(Surface *surface, const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, Sci::Line line, PRectangle rcArea, int subLine)void EditView::
FillRange(int &position, int value, int &fillLength)bool DecorationList::
FillRange(int &position, int value, int &fillLength)bool RunStyles::
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceImpl::
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceImpl::
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceImpl::
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceImpl::
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceD2D::
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceD2D::
FillRectangle(PRectangle rc, ColourDesired back)void SurfaceGDI::
FillRectangle(PRectangle rc, Surface &surfacePattern)void SurfaceGDI::
FillRun(Surface *surface, int code, int startX, int y, int x)void XPM::
FilterFromString(const std::string &values)static std::set
FilterSelections()void Editor::
Finalise()void ScintillaGTK::
Finalise()void ScintillaQt::
Finalise()void Editor::
Finalise()void ScintillaBase::
Finalise()void ScintillaWin::
Finalise()bool DirectorExtension::
Finalise()bool LuaExtension::
Finalise()bool MultiplexExtension::
Finalise()void SciTEBase::
Finalise()bool DirectorExtension::
Find(const char *prefix)int ListBoxX::
Find(int position)	typename stateVector::iterator 
Find(const char *prefix)int ListBoxImpl::
Find(int character)	const char
Find(const char *languageName)const LexerModule
Find(int language)const LexerModule
Find(int key, int modifiers)unsigned int KeyMap::
Find(int value, int start)int RunStyles::
Find(const FontSpecification &fs)FontRealised
Find(const char *)int ListBoxX::
Find()void SciTEGTK::
Find(T_POSITION)0)	T_POSITION 
Find()void SciTEWin::
FindBefore(XYPOSITION x, int lower, int upper)int LineLayout::
FindCaseInsensitive(const std::vector<std::string> &values, const std::string &s)static size_t 
FindCmd()void ReplaceStrip::
FindColumn(Sci::Line line, Sci::Position column)Sci::Position Document::
FindComboChanged(GtkEditable *, FindStrip *pStrip)void FindStrip::
FindComboChanged(GtkEditable *, ReplaceStrip *pStrip)void ReplaceStrip::
FindConstant(const char *name)int IFaceTable::
FindControl(int control)	UserControl
FindControl(int control)UserControl
FindCredits(historyFile)def 
FindDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
FindFunction(const char *name)int IFaceTable::
FindFunctionByConstantName(const char *name)int IFaceTable::
FindHasText()bool SciTEBase::
FindInFiles()void SciTEGTK::
FindInFiles()void SciTEWin::
FindInFilesBrowse()void SciTEGTK::
FindInFilesCmd()void SciTEGTK::
FindInFilesDotDot()void SciTEGTK::
FindInFilesResponse(int responseID)void SciTEGTK::
FindInTarget(std::string findWhatText, int startPosition, int endPosition)int SciTEBase::
FindIncrement()void SciTEGTK::
FindIncrement()void SciTEWin::
FindIncrementChanged()void SciTEGTK::
FindIncrementCompleteCmd()void SciTEGTK::
FindIncrementEscapeSignal(GtkWidget *w, GdkEventKey *event, SciTEGTK *scitew)gboolean SciTEGTK::
FindIncrementFocusOutSignal(GtkWidget *)gboolean SciTEGTK::
FindIncrementNext(bool select)void SciTEGTK::
FindIncrementSetColour(bool valid)void SciTEGTK::
FindIndex(int nIndex)	T_POSITION 
FindLanguageProperty(const char *pattern, const char *defaultValue)std::string SciTEBase::
FindLexersInXcode(xCodeProject)def 
FindMatchingBracePosition(bool editor, int &braceAtCaret, int &braceOpposite, bool sloppy)bool SciTEBase::
FindMatchingPreprocCondPosition( bool isForward, int &mppcAtCaret, int &mppcMatch)bool SciTEBase::
FindMatchingPreprocessorCondition( int &curLine, int direction, int condEnd1, int condEnd2)bool SciTEBase::
FindMaxAscentDescent()void ViewStyle::
FindMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
FindMessageBox(const std::string &msg, const std::string *findItem)void SciTEGTK::
FindMessageBox(const std::string &msg, const std::string *findItem)void SciTEWin::
FindModules(lexFile)def 
FindNext(bool reverseDirection, bool showWarnings, bool allowRegExp)int SciTEBase::
FindNextChange(int position, int end)int RunStyles::
FindNextCmd()void FindStrip::
FindOpenXmlTag(const char sel[], int nSize)std::string SciTEBase::
FindOrCreate(const FontParameters &fp)FontID FontCached::
FindOtherInstance()bool UniqueInstance::
FindPositionFromX(XYPOSITION x, Range range, bool charPosition)int LineLayout::
FindProperties(lexFile)def 
FindProperty(const char *name)int IFaceTable::
FindPropertyDocumentation(lexFile)def 
FindReplace(bool replace)void SciTEGTK::
FindReplace(bool replace)void SciTEWin::
FindReplaceAdvanced()bool SciTEBase::
FindReplaceGrabFields()void SciTEGTK::
FindReplaceResponse(int responseID)void SciTEGTK::
FindReplaceStrip()	
FindReplaceStrip()	
FindSectionInList(lines, markers)def 
FindStrip()	
FindStrip()	
FindText(Document *doc, Sci::Position minPos, Sci::Position maxPos, const char *s, bool caseSensitive, bool, bool, int flags, Sci::Position *length)long BuiltinRegex::
FindText(Sci::Position minPos, Sci::Position maxPos, const char *search, int flags, Sci::Position *length)long Document::
FindText( uptr_t wParam, sptr_t lParam)long Editor::
FineTickerAvailable()bool ScintillaGTK::
FineTickerAvailable()bool ScintillaQt::
FineTickerAvailable()bool Editor::
FineTickerAvailable()bool ScintillaWin::
FineTickerCancel(TickReason reason)void ScintillaGTK::
FineTickerCancel(TickReason reason)void ScintillaQt::
FineTickerCancel(TickReason )void Editor::
FineTickerCancel(TickReason reason)void ScintillaWin::
FineTickerRunning(TickReason reason)bool ScintillaGTK::
FineTickerRunning(TickReason reason)bool ScintillaQt::
FineTickerRunning(TickReason )bool Editor::
FineTickerRunning(TickReason reason)bool ScintillaWin::
FineTickerStart(TickReason reason, int millis, int )void ScintillaGTK::
FineTickerStart(TickReason reason, int millis, int )void ScintillaQt::
FineTickerStart(TickReason, int, int)void Editor::
FineTickerStart(TickReason reason, int millis, int tolerance)void ScintillaWin::
FinishedAdding()	void 
FinishedFuture(int index, Buffer::FutureDo fd)void BufferList::
FinishedJob()	bool 
First()	Sci::Position 
FixInvalidUTF8(const std::string &text)std::string 
FixName()void FilePath::
FixSelectionForClipboard()	void 
FlagFromCmd(int cmd)bool
Flags()	int 
FlashThisWindow( HWND hWnd, int duration)static void 
FlipBitmap(HBITMAP bitmap, int width, int height)static void 
Flush()	void 
Flush()void StyleWriter::
FlushCachedState()void SurfaceImpl::
FlushCachedState()void SurfaceD2D::
FlushCachedState()void SurfaceGDI::
FlushDrawing()HRESULT SurfaceD2D::
Focus(GtkDirectionType direction)gboolean FindStrip::
Focus(GtkDirectionType direction)gboolean ReplaceStrip::
Focus(GtkDirectionType direction)gboolean UserStrip::
Focus(GtkDirectionType )	virtual gboolean 
Focus()void BackgroundStrip::
Focus()void FindStrip::
Focus()void ReplaceStrip::
Focus()void SearchStrip::
Focus()void UserStrip::
FocusIn(GtkWidget *widget, GdkEventFocus * )gint ScintillaGTK::
FocusInThis(GtkWidget *)gint ScintillaGTK::
FocusOut(GtkWidget *widget, GdkEventFocus * )gint ScintillaGTK::
FocusOutThis(GtkWidget *)gint ScintillaGTK::
FocusSignal(GtkWidget * , GtkDirectionType direction, Strip *pStrip)gboolean Strip::
Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, WordList *keywordlists[], Accessor &styler)void LexerModule::
Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD LexerNoExceptions::
Fold(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD LexerSimple::
Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed)size_t CaseerTable::
Fold(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed)size_t CaseerUnicode::
FoldAll(int action)void Editor::
FoldAll()void SciTEBase::
FoldChanged(Sci::Line line, int levelNow, int levelPrev)void Editor::
FoldChanged(int line, int levelNow, int levelPrev)void SciTEBase::
FoldExpand(Sci::Line line, int action, int level)void Editor::
FoldLine(Sci::Line line, int action)void Editor::
Font()::
Font()::
FontAlias()::
FontAlias(const FontAlias &other)::
FontAndCharacterSet(int characterSet_, QFont *pfont)	
FontCached(const FontParameters &fp)::
FontCharacterSet(Font &f)static int 
FontHandle()	
FontHandle(PangoFontDescription *pfd_, int characterSet_)	
FontMeasurements()::
FontNames()::
FontParameters( const char *faceName_, float size_=10, int weight_=400, bool italic_=false, int extraFontFlag_=0, int technology_=0, int characterSet_=0)	
FontPointer(Font &f)static QFont
FontRealised()::
FontSpecification()	
ForAll(GtkCallback callback, gpointer callback_data)void ScintillaGTK::
ForeAsLong()long StyleDefinition::
Form(QDialog)class 
FormatAndMetrics(HFONT hfont_, int extraFontFlag_, int characterSet_)	
FormatAndMetrics(IDWriteTextFormat *pTextFormat_, int extraFontFlag_, int characterSet_, FLOAT yAscent_, FLOAT yDescent_, FLOAT yInternalLeading_)	
FormatEnumerator(int pos_, CLIPFORMAT formats_[], size_t formatsLen_)::
FormatEnumerator_AddRef(FormatEnumerator *fe)STDMETHODIMP_
FormatEnumerator_Clone(FormatEnumerator *fe, IEnumFORMATETC **ppenum)STDMETHODIMP 
FormatEnumerator_Next(FormatEnumerator *fe, ULONG celt, FORMATETC *rgelt, ULONG *pceltFetched)STDMETHODIMP 
FormatEnumerator_QueryInterface(FormatEnumerator *fe, REFIID riid, PVOID *ppv)STDMETHODIMP 
FormatEnumerator_Release(FormatEnumerator *fe)STDMETHODIMP_
FormatEnumerator_Reset(FormatEnumerator *fe)STDMETHODIMP 
FormatEnumerator_Skip(FormatEnumerator *fe, ULONG celt)STDMETHODIMP 
FormatRange(bool draw, Sci_RangeToFormat *pfr, Surface *surface, Surface *surfaceMeasure, const EditModel &model, const ViewStyle &vs)long EditView::
FormatRange(bool draw, Sci_RangeToFormat *pfr)long Editor::
Forward()	void 
Forward(Sci_Position nb)	void 
Forward(lua_State *L)	static int 
Forward()	void 
ForwardBytes(Sci_Position nb)	void 
ForwardPropertyToEditor(const char *key)void SciTEBase::
ForwardSetState(int state_)	void 
ForwardSetState(lua_State *L)	static int 
FractionalSize()int StyleDefinition::
Free()	void 
Free()void LineLayout::
FreeAssoc(Association* pAssoc)	void 
FreeNode(Node*pNode)	void 
FreeSubStyles()void LexState::
FromAccessible(GtkAccessible *accessible)ScintillaGTKAccessible
FromAccessible(AtkObject *accessible)	static ScintillaGTKAccessible
FromInts(int left_, int top_, int right_, int bottom_)	static PRectangle 
FromInts(int x_, int y_)	static Point 
FromLong(long lpoint)Point Point::
FromWidget(GtkWidget *widget)ScintillaGTK
FullPaint()void ScintillaGTK::
FullPaint()void ScintillaWin::
FullPaintDC(HDC hdc)void ScintillaWin::
FullScreenToggle()void SciTEWin::
Function(GtkDialog * , gint responseID, SciTEGTK *app)	static void 
Function(GtkWidget * , SciTEGTK *app)	static void 
Function(GtkWidget * , T *object)	static void 
GCTM(lua_State *L, int propagateerrors)static void 
GObjectWatcher(GObject *obj)	
GTKMutex()	
GapPosition()	Sci::Position 
GapPosition()	int 
GapTo(int position)	void 
Generate(inpath, outpath, commentPrefix, *lists)def 
GenerateFile(inpath, outpath, commentPrefix, retainDefs, *lists)def 
GenericPropertiesFile(const FilePath &filename)static bool 
Get(const char *key)const char
Get(int ident)RGBAImage
Get(int index)	ListItemData 
GetAbbrevPropertiesFileName()FilePath SciTEBase::
GetAcceleratorTable()	HACCEL 
GetAccessible(GtkWidget *widget)AtkObject
GetAccessibleThis(GtkWidget *widget)AtkObject
GetAssocAt(ARG_KEY key, unsigned int& nHash)	Association
GetAt(T_POSITION position)	TYPE 
GetAt(int nIndex)	TYPE 
GetAt(T_POSITION position)	TYPE
GetAttributesForStyle(unsigned int styleNum)AtkAttributeSet
GetBackslashExpression( const char *pattern, int &incr)int RESearch::
GetBlue()	unsigned int 
GetCTag()std::string SciTEBase::
GetCaretInLine()int SciTEBase::
GetCaretOffset(AtkText *text)gint ScintillaGTKAccessible::AtkTextIface::
GetCaretOffset()gint ScintillaGTKAccessible::
GetCharRange(char *buffer, Sci_Position position, Sci_Position lengthRetrieve)	void SCI_METHOD 
GetCharacterAndWidth(Sci_Position position, Sci_Position *pWidth)int SCI_METHOD Document::
GetCharacterAtOffset(AtkText *text, gint offset)gunichar ScintillaGTKAccessible::AtkTextIface::
GetCharacterAtOffset(int charOffset)gunichar ScintillaGTKAccessible::
GetCharacterCount(AtkText *text)gint ScintillaGTKAccessible::AtkTextIface::
GetCharacterCount()gint ScintillaGTKAccessible::
GetCharacterExtents(AtkText *text, gint offset, gint *x, gint *y, gint *width, gint *height, AtkCoordType coords)void ScintillaGTKAccessible::AtkTextIface::
GetCharacterExtents(int charOffset, gint *x, gint *y, gint *width, gint *height, AtkCoordType coords)void ScintillaGTKAccessible::
GetCharsOfClass(cc characterClass, unsigned char *buffer)int CharClassify::
GetCharsOfClass(CharClassify::cc characterClass, unsigned char *buffer)int Document::
GetClass(unsigned char ch)	cc 
GetClientDrawingRectangle()PRectangle Editor::
GetClientExtent()POINT ListBoxX::
GetClientPosition()PRectangle Window::
GetClientPosition()Rectangle Window::
GetClientRectangle()PRectangle ScintillaGTK::
GetClientRectangle()PRectangle Editor::
GetClientRectangle()GUI::Rectangle SciTEBase::
GetColumn(Sci::Position pos)Sci::Position Document::
GetCompositionString(DWORD dwIndex)	std::wstring 
GetConstantName(int value, char *nameOut, unsigned nameBufferLen, const char *prefix)int IFaceTable::
GetContext()  CGContextRef 
GetCount()	int 
GetCtrlID()	virtual int 
GetCtrlID()int ScintillaWin::
GetCurrent(char *s, Sci_PositionU len)void StyleContext::
GetCurrentIndicator()	int 
GetCurrentLine()std::string SciTEBase::
GetCurrentLineNumber()int SciTEBase::
GetCurrentLowered(char *s, Sci_PositionU len)void StyleContext::
GetCurrentScrollPosition()int SciTEBase::
GetCurrentValue()	int 
GetData(FORMATETC *pFEIn, STGMEDIUM *pSTM)STDMETHODIMP ScintillaWin::
GetDefaultAttributes(AtkText *text)AtkAttributeSet
GetDefaultAttributes()AtkAttributeSet
GetDefaultDirectory()FilePath SciTEGTK::
GetDefaultDirectory()FilePath SciTEWin::
GetDefaultPropertiesFileName()FilePath SciTEBase::
GetDesiredRect()PRectangle ListBoxX::
GetDesiredRect()PRectangle ListBoxImpl::
GetDesiredRect()PRectangle ListBoxX::
GetDirectoryPropertiesFileName()FilePath SciTEBase::
GetDocumentAt(int index)sptr_t SciTEBase::
GetDocumentByName(const FilePath &filename, bool excludeCurrent)int BufferList::
GetDocumentByWorker(const FileWorker *pFileWorker)int BufferList::
GetEndStyled()	Sci::Position 
GetErrorMessage(DWORD nRet)static GUI::gui_string 
GetExpanded(const char *key, char *result)int PropSetSimple::
GetExpanded(Sci::Line lineDoc)bool ContractionState::
GetExpandedString(const char *key)std::string PropSetFile::
GetFileLength()long long FilePath::
GetFileNameProperty(const char *name)std::string SciTEBase::
GetFilePosition()RecentFile SciTEBase::
GetFirst(const char *&key, const char *&val)bool PropSetFile::
GetFoldDisplayText(Sci::Line lineDoc)const char
GetFoldDisplayTextShown(Sci::Line lineDoc)bool ContractionState::
GetFoldParent(Sci::Line line)Sci::Line Document::
GetFrameWidth()int ViewStyle::
GetFullLine(const char *&fpc, size_t &lenData, char *s, size_t len)static bool 
GetGreen()	unsigned int 
GetGrowSize()	int 
GetGtkSelectionText(GtkSelectionData *selectionData, SelectionText &selText)void ScintillaGTK::
GetHWND()HWND ListBoxX::
GetHangulOfHanja(wchar_t *inout)int 
GetHashTableSize()	unsigned int 
GetHead()	TYPE 
GetHead()	TYPE
GetHeadPosition()	T_POSITION 
GetHeight(Sci::Line lineDoc)int ContractionState::
GetHeight()int RGBAImageSet::
GetHeight()	int 
GetHexaChar(unsigned char hd1, unsigned char hd2)static int 
GetHexaDigit(char ch)static int 
GetHighlightDelimiters(HighlightDelimiter &highlightDelimiter, Sci::Line line, Sci::Line lastLine)void Document::
GetHotSpotRange()Range Editor::
GetID()	FontID 
GetID()	MenuID 
GetID()	WindowID 
GetID()	MenuID 
GetID()	WindowID 
GetID()	GUI::WindowID 
GetImeAttributes()	std::vector
GetImeCaretPos(QInputMethodEvent *event)static int 
GetImeCaretPos()	unsigned int 
GetIndentState(int line)IndentationStatus SciTEBase::
GetInstance()LexerManager
GetInstance()uptr_t SciTEBase::
GetInstance()uptr_t SciTEWin::
GetInt(const char *key, int defaultValue)int PropSetSimple::
GetInt(const char *key, int defaultValue)int PropSetFile::
GetIntelliMouseParameters()void ScintillaWin::
GetLanguage()	int 
GetLastChild(Sci::Line lineParent, int level, Sci::Line lastLine)Sci::Line Document::
GetLevel(Sci_Position line)int SCI_METHOD Document::
GetLevel(Sci::Line line)int LineLevels::
GetLevel()	int 
GetLexInterface()LexInterface
GetLexerCountFn()typedef int
GetLexerFactoryFunction(unsigned int Index)typedef LexerFactoryFunction
GetLexerFunction(unsigned int Index)typedef void
GetLexerNameFn(unsigned int Index, char *name, int buflength)typedef void
GetLine(Sci_Position position)	Sci_Position 
GetLine(GUI::ScintillaWindow &win, int line)std::string SciTEBase::
GetLine(char *text, int sizeText, int line)void SciTEBase::
GetLine(int position)int TextReader::
GetLineEndTypes()	int 
GetLineEndTypesActive()	int 
GetLineEndTypesAllowed()	int 
GetLineIndentPosition(Sci::Line line)Sci::Position Document::
GetLineIndentPosition(int line)int SciTEBase::
GetLineIndentation(Sci_Position line)int SCI_METHOD Document::
GetLineIndentation(int line)int SciTEBase::
GetLineLength(int line)int SciTEBase::
GetLinePartsInStyle(int line, const StyleAndWords &saw)std::vector
GetLineState(Sci_Position line)	int 
GetLineState(Sci_Position line)int SCI_METHOD Document::
GetLineState(Sci::Line line)int LineState::
GetLineState(int line)int TextReader::
GetLocalPropertiesFileName()FilePath SciTEBase::
GetLongLong(const char *key, long long defaultValue)long long PropSetFile::
GetMarginCursor(Point pt)Window::Cursor Editor::
GetMark(Sci::Line line)int Document::
GetMatch(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, const std::string &wordCharacters, int wordIndex, Compare comp)	std::string 
GetMatches(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, char otherSeparator, bool exactLen, Compare comp)static std::string 
GetMaxLineState()Sci::Line Document::
GetMaxLineState()Sci::Line LineState::
GetMenuCommandAsInt(std::string commandName)int SciTEBase::
GetMonitorRect(Point pt)PRectangle Window::
GetNSelections(AtkText *text)gint ScintillaGTKAccessible::AtkTextIface::
GetNSelections()gint ScintillaGTKAccessible::
GetName()const char
GetNearestWord(const char *wordStart, size_t searchLen, bool ignoreCase, const std::string &wordCharacters, int wordIndex)std::string StringList::
GetNearestWords(const char *wordStart, size_t searchLen, const char *separators, bool ignoreCase , bool exactLen )std::string SciTEBase::
GetNearestWords( const char *wordStart, size_t searchLen, bool ignoreCase, char otherSeparator , bool exactLen )std::string StringList::
GetNewExpandString(const char *keybase, const char *filename)std::string PropSetFile::
GetNext(T_POSITION& rPosition)	TYPE 
GetNext(T_POSITION& rPosition)	TYPE
GetNext(const char *&key, const char *&val)bool PropSetFile::
GetNextAssoc(T_POSITION& rNextPosition, KEY& rKey, VALUE& rValue)	void 
GetNextChar()	void 
GetNextPropItem( const char *pStart, char *pPropItem, int maxLen)const char
GetNextTabstop(Sci::Line line, int x)int EditView::
GetNextTabstop(Sci::Line line, int x)int LineTabstops::
GetNumWordLists()int LexerModule::
GetOffsetAtPoint(AtkText *text, gint x, gint y, AtkCoordType coords)gint ScintillaGTKAccessible::AtkTextIface::
GetOffsetAtPoint(gint x, gint y, AtkCoordType coords)gint ScintillaGTKAccessible::
GetPaintDevice()QPaintDevice
GetPainter()QPainter
GetPosition()PRectangle Window::
GetPosition()Rectangle Window::
GetPreferredHeight(GtkWidget *widget, gint *minimalHeight, gint *naturalHeight)void ScintillaGTK::
GetPreferredWidth(GtkWidget *widget, gint *minimalWidth, gint *naturalWidth)void ScintillaGTK::
GetPrev(T_POSITION& rPosition)	TYPE 
GetPrev(T_POSITION& rPosition)	TYPE
GetPropertyInt(const char *key, int defaultValue)int Accessor::
GetPropertyInt(const char *propName)static int 
GetRTFNextControl(const char **style, char *control)static void 
GetRTFStyleChange(const char *last, const char *current)static std::string 
GetRange(T *buffer, int position, int retrieveLength)	void 
GetRange(GUI::ScintillaWindow &win, int start, int end, char *text)void SciTEBase::
GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEGTK::
GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEBase::
GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEWin::
GetRangeString(GUI::ScintillaWindow &win, int selStart, int selEnd)std::string SciTEBase::
GetRed()	unsigned int 
GetRelative(Sci_Position n)	int 
GetRelativeCharacter(Sci_Position n)	int 
GetRelativePosition(Sci_Position positionStart, Sci_Position characterOffset)Sci_Position SCI_METHOD Document::
GetRelativePositionUTF16(Sci::Position positionStart, Sci::Position characterOffset)Sci::Position Document::
GetReverseArrowCursor()static HCURSOR 
GetRowHeight()int ListBoxX::
GetRunAttributes(AtkText *text, gint offset, gint *start_offset, gint *end_offset)AtkAttributeSet
GetRunAttributes(int charOffset, int *startChar, int *endChar)AtkAttributeSet
GetScale()	float 
GetScaledHeight()	float 
GetScaledWidth()	float 
GetSciteDefaultHome()FilePath SciTEGTK::
GetSciteDefaultHome()FilePath SciTEWin::
GetSciteUserHome()FilePath SciTEGTK::
GetSciteUserHome()FilePath SciTEWin::
GetScriptableInterface(f)def 
GetScrollInfo(int nBar, LPSCROLLINFO lpsi)bool ScintillaWin::
GetSelectedRange()SelectedRange SciTEBase::
GetSelection()int ListBoxX::
GetSelection(GtkSelectionData *selection_data, guint info, SelectionText *text)void ScintillaGTK::
GetSelection(AtkText *text, gint selection_num, gint *start_pos, gint *end_pos)gchar
GetSelection(gint selection_num, int *startChar, int *endChar)gchar
GetSelection()int ListBoxImpl::
GetSelection()int AutoComplete::
GetSelection()int ListBoxX::
GetSelection()Sci_CharacterRange SciTEBase::
GetSeparator()char AutoComplete::
GetSize()	size_t 
GetSize()	int 
GetStartPosition()	T_POSITION 
GetStartSegment()	Sci_PositionU 
GetStartSegment()	unsigned int 
GetString(const char *key)std::string PropSetFile::
GetStringAtOffset(AtkText *text, gint offset, AtkTextGranularity granularity, gint *start_offset, gint *end_offset)gchar
GetStringAtOffset(int charOffset, AtkTextGranularity granularity, int *startChar, int *endChar)gchar
GetStyleAndWords(const char *base)StyleAndWords SciTEBase::
GetStyleClock()	int 
GetStyleRange(unsigned char *buffer, Sci::Position position, Sci::Position lengthRetrieve)	void 
GetSubStyleBases()const char
GetTag(char *tagValue, int tagNumber)Sci::Position Editor::
GetTail()	TYPE 
GetTail()	TYPE
GetTailPosition()	T_POSITION 
GetText(AtkText *text, int start_offset, int end_offset)gchar
GetText(int startChar, int endChar)gchar
GetText(uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::
GetTextAfterOffset(AtkText *text, int offset, AtkTextBoundary boundary_type, int *start_offset, int *end_offset)gchar
GetTextAfterOffset(int charOffset, AtkTextBoundary boundaryType, int *startChar, int *endChar)gchar
GetTextAtOffset(AtkText *text, gint offset, AtkTextBoundary boundary_type, gint *start_offset, gint *end_offset)gchar
GetTextAtOffset(int charOffset, AtkTextBoundary boundaryType, int *startChar, int *endChar)gchar
GetTextBeforeOffset(AtkText *text, int offset, AtkTextBoundary boundary_type, int *start_offset, int *end_offset)gchar
GetTextBeforeOffset(int charOffset, AtkTextBoundary boundaryType, int *startChar, int *endChar)gchar
GetTextLength()sptr_t ScintillaWin::
GetTextRangeUTF8(Sci::Position startByte, Sci::Position endByte)gchar
GetTextRectangle()PRectangle Editor::
GetTranslationToAbout(const char * const propname, bool retainIfNotFound)std::string SciTEBase::
GetTypesep()char AutoComplete::
GetUserPropertiesFileName()FilePath SciTEBase::
GetValue(int n, char *value, int len)void ListBoxX::
GetValue(int n, char *value, int len)void ListBoxImpl::
GetValue(int item)std::string AutoComplete::
GetValue(int n, char *value, int len)void ListBoxX::
GetValue(int control)std::string UserStrip::
GetVersion(LPCTSTR lpszDllName)static DWORD 
GetVisible(Sci::Line lineDoc)bool ContractionState::
GetVisible(int index)bool BufferList::
GetVisibleOriginInMain()Point Editor::
GetVisibleRows()int ListBoxX::
GetVisibleRows()int ListBoxImpl::
GetVisibleRows()int ListBoxX::
GetWidth()int RGBAImageSet::
GetWidth()	int 
GetWild(const char *keybase, const char *filename)std::string PropSetFile::
GetWildUsingStart(const PropSetFile &psStart, const char *keybase, const char *filename)std::string PropSetFile::
GetWindowPosition(int *left, int *top, int *width, int *height, int *maximize)void SciTEGTK::
GetWindowPosition(int *left, int *top, int *width, int *height, int *maximize)void SciTEWin::
GetWordListDescription(int index)const char
GetWorkingDirectory()FilePath FilePath::
GetterFunction()	IFaceFunction 
GlobalMemory()	
GlobalMemory(HGLOBAL hand_)	explicit 
GoLineDialog()void SciTEGTK::
GoLineDialog()void SciTEWin::
GoLineDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
GoLineMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
GoMatchingBrace(bool select)void SciTEBase::
GoMatchingPreprocCond(int direction, bool select)void SciTEBase::
GoMessage(int dir)void SciTEBase::
GoToLine(Sci::Line lineNo)void Editor::
GotoCmd()void SciTEGTK::
GotoLineEnsureVisible(int line)void SciTEBase::
GotoResponse(int responseID)void SciTEGTK::
GrabFields()void DialogFindInFiles::
GrabFields()void DialogFindReplace::
GrabFields()void FindStrip::
GrabFields()void ReplaceStrip::
GrabFields()void DialogFindReplace::
GrabMatches(CharacterIndexer &ci)void RESearch::
GrabToggles()void FindStrip::
GrabToggles()void ReplaceStrip::
GrepDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
GrepIntoDirectory(const FilePath &directory)bool SciTEBase::
GrepMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
GrepRecursive(GrepFlags gf, const FilePath &baseDir, const char *searchString, const GUI::gui_char *fileTypes)void SciTEBase::
GreyToAlpha(GdkPixbuf *ppb, GdkColor fore)static void 
GtkFromWinCaption(const char *text)static std::string 
HFont()HFONT FormatAndMetrics::
HJdictAvailable()	bool 
HackColour(int &n)	void 
HandleCompositionInline(uptr_t, sptr_t lParam)sptr_t ScintillaWin::
HandleCompositionWindowed(uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::
HandleCopyData(LPARAM lParam)static LRESULT 
HandleReplaceCommand(int cmd, bool reverseDirection)BOOL SciTEWin::
HandleReplaceCommand(int cmd, bool reverseFind)void ReplaceStrip::
HandleSaveAs(const char *savePath)bool SciTEGTK::
HandleStringMessage(const char *message)void DirectorExtension::
HandleXml(char ch)bool SciTEBase::
HanjaDic()	
HasCaretSizeChanged()bool ScintillaWin::
HasCaseFolder()bool Document::
HasClose()bool BackgroundStrip::
HasClose()bool Strip::
HasClose()bool UserStrip::
HasCommandToRun()	bool 
HasConnection()static bool 
HasFocus()bool Window::
HasFocusOnSelfOrChild()bool WComboBoxEntry::
HasMnemonic()bool WStatic::
HasNamedFunction(const char *name)static bool 
Hash(unsigned int styleNumber_, const char *s, unsigned int len_)unsigned int PositionCacheEntry::
HashFont(const FontParameters &fp)static int 
HashKey(ARG_KEY key)	unsigned int 
HaveMouseCapture()bool ScintillaGTK::
HaveMouseCapture()bool ScintillaQt::
HaveMouseCapture()bool ScintillaWin::
Height(Font &font_)XYPOSITION SurfaceImpl::
Height()	XYPOSITION 
Height(Font &font)XYPOSITION SurfaceImpl::
Height(Font &font_)XYPOSITION SurfaceD2D::
Height(Font &font_)XYPOSITION SurfaceGDI::
Height()	int 
Height()	virtual int 
HeightFromStyle(const FontSpecification &fs)int ViewStyle::
HexStringFromInteger(long i)gui_string 
HiWord(uptr_t l)static WORD 
HiddenLines()bool ContractionState::
HideKeyboardCues()static bool 
HideMatch()void SciTEBase::
HighShortFromLong(long x)	static short 
HighlightCurrentWord(bool highlight)void SciTEBase::
HighlightDelimiter()	
HmenuID(size_t id)inline HMENU 
HorizontalMove(unsigned int iMessage)int Editor::
HorizontalScrollMessage(WPARAM wParam)void ScintillaWin::
HorizontalScrollTo(int xPos)void Editor::
Hwnd()	HWND 
HwndFromString(const char *s)static HWND 
HwndOf(GUI::Window w)inline HWND 
IFaceFunctionIsScriptable(const IFaceFunction &f)inline bool 
IFacePropertyIsScriptable(const IFaceProperty &p)inline bool 
IFaceTypeIsNumeric(IFaceType t)inline bool 
IFaceTypeIsScriptable(IFaceType t, int index)inline bool 
IID_IHanjaDic(selectany)extern
IMContext(HWND hwnd_)	
IOSignal(GIOChannel *, GIOCondition, SciTEGTK *scitew)gboolean SciTEGTK::
Idle()bool Editor::
IdleCallback(gpointer pSci)gboolean ScintillaGTK::
IdleStyling()void Editor::
IdleWork()void ScintillaGTK::
IdleWork()void Editor::
Idler()::
IdlerTick(gpointer pSciTE)gboolean SciTEGTK::
ImageByteSwapped(int width, int height, const unsigned char *pixelsImage)static std::vector
ImageInset(1, 1)const Point ListBoxX::
ImeEndComposition()void ScintillaWin::
ImeOnReconvert(LPARAM lParam)LRESULT ScintillaWin::
ImeStartComposition()void ScintillaWin::
Import(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)void PropSetFile::
ImportMenu(int pos)void SciTEBase::
InGoodUTF8(Sci::Position pos, Sci::Position &start, Sci::Position &end)bool Document::
InLine(int offset, int line)bool LineLayout::
InList(const char *s)bool WordList::
InListAbbreviated(const char *s, const char marker)bool WordList::
InListAbridged(const char *s, const char marker)bool WordList::
InSelectionForEOL(Sci::Position pos)int Selection::
IncludesStyle(int style)	bool 
IncrementProgress(size_t increment)	void 
IncrementSearchMode()int SciTEBase::
IncrementStyleClock()void Document::
Indent(bool forwards, Sci::Line lineBottom, Sci::Line lineTop)void Document::
Indent(bool forwards)void Editor::
IndentAmount(Sci_Position line, int *flags, PFNIsCommentLeader pfnIsCommentLeader)int Accessor::
IndentOfBlock(int line)int SciTEBase::
IndentSize()	int 
IndexPropKey(const char *bufPrefix, int bufIndex, const char *bufAppendix)static std::string 
Indicator()	int 
Indicator()	
Indicator(0,0,0), bool under_=false, int fillAlpha_=30, int outlineAlpha_=50)	
IndicatorDefinition(const char *definition)::
IndicatorFill(Sci_Position start, Sci_Position end, int indicator, int value)	void 
Init(SurfaceID sid, WindowID wid)void SurfaceImpl::
Init(WindowID wid)void SurfaceImpl::
Init()void ScintillaGTK::
Init(SurfaceID sid, WindowID )void SurfaceImpl::
Init(WindowID wid)void SurfaceImpl::
Init()void ScintillaQt::
Init()void LineVector::
Init()void Document::
Init()void LineAnnotation::
Init()void LineLevels::
Init()void LineMarkers::
Init()void LineState::
Init()void LineTabstops::
Init()	void 
Init(size_t stylesSize_)void ViewStyle::
Init(const char *const *linesForm)void XPM::
Init(const char *textForm)void XPM::
Init(SurfaceID sid, WindowID)void SurfaceD2D::
Init(WindowID )void SurfaceD2D::
Init(SurfaceID sid, WindowID)void SurfaceGDI::
Init(WindowID )void SurfaceGDI::
Init()void ScintillaWin::
Init()void FilePath::
Init()	void 
Init(SciTEWin *stw_)void UniqueInstance::
InitBuffer(int)	virtual bool 
InitBuffer(int index)bool LuaExtension::
InitBuffer(int index)bool MultiplexExtension::
InitGlobalScope(bool checkProperties, bool forceReload = false)static bool 
InitHashTable(unsigned int hashSize, bool bAllocNow = true)	void 
InitPixMap(int width, int height, Surface *surface_, WindowID wid)void SurfaceImpl::
InitPixMap(int width, int height, Surface *surface, WindowID )void SurfaceImpl::
InitPixMap(int width, int height, Surface *surface_, WindowID)void SurfaceD2D::
InitPixMap(int width, int height, Surface *surface_, WindowID)void SurfaceGDI::
Initialise(ExtensionAPI *host_)bool DirectorExtension::
Initialise(ExtensionAPI *host_)bool LuaExtension::
Initialise(ExtensionAPI *host_)bool MultiplexExtension::
Initialise(ExtensionAPI *host_)bool DirectorExtension::
Initialise(bool resetToStart)void CommandWorker::
InitialiseBuffers()void SciTEBase::
Initialised()bool SurfaceImpl::
Initialised()	bool 
Initialised()bool SurfaceD2D::
Initialised()bool SurfaceGDI::
InputCodePage()static int 
Insert(int val)void BreakFinder::
Insert(int position, T v)	void 
Insert(Pane p, int pos, const char *s)void SciTEBase::
Insert(const std::string &s)	void 
InsertAfter(T_POSITION position, ARG_TYPE newElement)	T_POSITION 
InsertAt(int nIndex, ARG_TYPE newElement, int nCount = 1)	void 
InsertBefore(T_POSITION position, ARG_TYPE newElement)	T_POSITION 
InsertEmpty(int position, int insertLength)	void 
InsertFindInMemory()void Searcher::
InsertFromArray(int positionToInsert, const T s[], int positionFrom, int insertLength)	void 
InsertHandle(int handle, int markerNum)bool MarkerHandleSet::
InsertLine(Sci::Line line, Sci::Position position, bool lineStart)void LineVector::
InsertLine(Sci::Line lineDoc)void ContractionState::
InsertLine(Sci::Line line)void Document::
InsertLine(Sci::Line line)void LineAnnotation::
InsertLine(Sci::Line line)void LineLevels::
InsertLine(Sci::Line line)void LineMarkers::
InsertLine(Sci::Line line)void LineState::
InsertLine(Sci::Line line)void LineTabstops::
InsertLines(Sci::Line lineDoc, Sci::Line lineCount)void ContractionState::
InsertPartition(int partition, int pos)	void 
InsertPaste(const char *text, int len)void Editor::
InsertPasteShape(const char *text, int len, PasteShape shape)void Editor::
InsertSpace(int position, int insertLength)void DecorationList::
InsertSpace(int position, int insertLength)void RunStyles::
InsertSpace(int position, int insertLength)	void 
InsertString(Sci::Position position, const char *s, Sci::Position insertLength)Sci::Position Document::
InsertStringUTF8(Sci::Position bytePos, const gchar *utf8, Sci::Position lengthBytes)bool ScintillaGTKAccessible::
InsertText(AtkEditableText *text, const gchar *contents, gint length, gint *position)void ScintillaGTKAccessible::AtkEditableTextIface::
InsertText(const gchar *text, int lengthBytes, int *charPosition)void ScintillaGTKAccessible::
InsertText(Sci::Line line, Sci::Position delta)void LineVector::
InsertText(int partitionInsert, int delta)	void 
InsertValue(int position, int insertLength, T v)	void 
Instance()DirectorExtension
Instance()LuaExtension
Instance()DirectorExtension
IntFromHexByte(const char *hexByte)int 
IntFromHexDigit(int ch)int 
InternalGrep(GrepFlags gf, const GUI::gui_char *directory, const GUI::gui_char *fileTypes, const char *search, sptr_t &originalEnd)void SciTEBase::
InternalIsLeadByte(char ch)bool TextReader::
InternalLeading(Font &)XYPOSITION SurfaceImpl::
InternalLeading(Font & )XYPOSITION SurfaceImpl::
InternalLeading(Font &font_)XYPOSITION SurfaceD2D::
InternalLeading(Font &font_)XYPOSITION SurfaceGDI::
Intersect(SelectionSegment check)SelectionSegment SelectionRange::
Intersects(PRectangle other)	bool 
Invalidate(validLevel validity_)void LineLayout::
Invalidate(LineLayout::validLevel validity_)void LineLayoutCache::
InvalidateAll()void Window::
InvalidateCaret()void Editor::
InvalidateClose()void Strip::
InvalidateRange(Sci::Position start, Sci::Position end)void Editor::
InvalidateRectangle(PRectangle rc)void Window::
InvalidateSelection(SelectionRange newMain, bool invalidateWholeSelection)void Editor::
InvalidateStyleData()void Editor::
InvalidateStyleRedraw()void Editor::
InvalidateWholeSelection()void Editor::
InvertedLight(ColourDesired orig)static ColourDesired 
IsADigit(int ch)inline bool 
IsADigit(int ch, int base)inline bool 
IsASCII(int ch)inline bool 
IsASCIIPunctuationCharacter(unsigned int ch)static bool 
IsASCIIWordByte(unsigned char ch)bool Document::
IsASpace(int ch)inline bool 
IsASpace(unsigned int ch)inline bool 
IsASpace(unsigned int ch)static inline bool 
IsASpace(int ch)static bool 
IsASpaceCharacter(unsigned int ch)static bool 
IsASpaceOrTab(int ch)inline bool 
IsAbsolute()bool FilePath::
IsAllSpacesOrTabs(const char *s, unsigned int len)static inline bool 
IsAlphaNumeric(int ch)inline bool 
IsAlphabetic(unsigned int ch)inline bool 
IsArrowCharacter(char ch)static bool 
IsBodyOfFoldBlock(Sci::Line line)	bool 
IsBold()bool StyleDefinition::
IsBrace(char ch)static bool 
IsBufferAvailable()bool SciTEBase::
IsCollectingUndo()	bool 
IsCommentLine(const char *line)static bool 
IsCompatibleDC(HDC hOtherDC)bool ScintillaWin::
IsControlCharacter(int ch)static inline bool 
IsCrLf(Sci::Position pos)bool Document::
IsDBCSLeadByte(int codePage, char ch)bool Platform::
IsDBCSLeadByte(char ch)bool SCI_METHOD Document::
IsDBCSLeadByte(int codePage, char ch)bool Platform::
IsDBCSLeadByte(int codePage, char ch)bool 
IsDestroyed()	bool 
IsDirectory()bool FilePath::
IsDynamic()	bool 
IsEOLChar(char ch)static inline bool 
IsEmpty()	bool 
IsExecuting()	bool 
IsFileNewer(name1, name2)def 
IsFillUpChar(char ch)bool AutoComplete::
IsFoldBlockHighlighted(Sci::Line line)	bool 
IsHangul(const QChar qchar)bool ScintillaEditBase::
IsHanja(int hanja)	bool 
IsHeadOfFoldBlock(Sci::Line line)	bool 
IsHeader(x)def 
IsIdContinue(int character)bool 
IsIdPattern(int character)bool 
IsIdStart(int character)bool 
IsKeyDown(int)bool Platform::
IsKeyDown(int )bool Platform::
IsKeyDown(int key)bool Platform::
IsKeyDown(int key)inline bool 
IsLastStep(const DocModification &mh)static bool 
IsLeadByte(char ch)	bool 
IsLineEndChar(char c)static bool 
IsLineEndPosition(Sci::Position position)bool Document::
IsLineFrameOpaque(bool caretActive, bool lineContainsCaret)bool ViewStyle::
IsLinePreprocessorCondition(char *line)int SciTEBase::
IsLineStartPosition(Sci::Position position)bool Document::
IsLoading()	virtual bool 
IsLowerCase(int ch)inline bool 
IsOctalDigit(char ch)static bool 
IsPositionInLineEnd(Sci::Position position)bool Document::
IsPropertiesFile(const FilePath &filename)bool 
IsProtected()	bool 
IsReadOnly()	bool 
IsRectExtend(unsigned int iMessage)bool 
IsRectangular()bool Selection::
IsRectangularInMime(const QMimeData *mimeData)static bool 
IsRoot()bool FilePath::
IsSameOrChild(const GUI::Window &wParent, HWND wChild)static bool 
IsSavePoint()	bool 
IsSet()bool FilePath::
IsSingleChar()	bool 
IsSpaceOrTab(int ch)static inline bool 
IsSpaceOrTab(int ch)inline bool 
IsSpaceOrTab(char ch)static bool 
IsStdinBlocked()bool SciTEBase::
IsStdinBlocked()bool SciTEWin::
IsStopChar(char ch)bool AutoComplete::
IsSubordinate(int levelStart, int levelTry)static bool 
IsSwitchCharacter(GUI::gui_char ch)static bool 
IsTabCharacter(char ch)bool CallTip::
IsTailOfFoldBlock(Sci::Line line)	bool 
IsUTF8TrailByte(int ch)static bool 
IsUnicodeMode()bool Editor::
IsUntitled()bool FilePath::
IsUpperCase(int ch)inline bool 
IsValid()	bool 
IsValid(const std::string &name)bool ImportFilter::
IsWhiteLine(Sci::Line line)bool Document::
IsWord(unsigned char ch)	bool 
IsWordAt(Sci::Position start, Sci::Position end)bool Document::
IsWordCharacter(int ch)static bool 
IsWordEndAt(Sci::Position pos)bool Document::
IsWordPartSeparator(unsigned int ch)bool Document::
IsWordStartAt(Sci::Position pos)bool Document::
IsXidContinue(int character)bool 
IsXidStart(int character)bool 
Item(int id)	HWND 
ItemHeight()int ListBoxX::
ItemInset(0, 0)const Point ListBoxX::
ItemTextG(int id)	GUI::gui_string 
ItemTextU(int id)	std::string 
Job()	
Job(const std::string &command_, const FilePath &directory_, JobSubsystem jobType_, const std::string &input_, int flags_)	
JobMode(PropSetFile &props, int item, const char *fileNameExt)::
JobQueue()	
Key(GdkEventKey *event)gint SciTEGTK::
KeyCommand(unsigned int iMessage)int Editor::
KeyCommand(unsigned int iMessage)int ScintillaBase::
KeyDefault(int key, int modifiers)int ScintillaGTK::
KeyDefault(int, int)int Editor::
KeyDown(int key, bool shift, bool ctrl, bool alt, bool *consumed)int Editor::
KeyDown(GdkEventKey *event)bool FindStrip::
KeyDown(GdkEventKey *event)bool ReplaceStrip::
KeyDown(GdkEventKey *event)bool UserStrip::
KeyDown(GdkEventKey *event)bool Strip::
KeyDown(WPARAM wParam)LRESULT SciTEWin::
KeyDown(WPARAM key)bool BackgroundStrip::
KeyDown(WPARAM key)bool FindStrip::
KeyDown(WPARAM key)bool ReplaceStrip::
KeyDown(WPARAM key)bool SearchStrip::
KeyDown(WPARAM key)bool Strip::
KeyDown(WPARAM key)bool UserStrip::
KeyDownWithModifiers(int key, int modifiers, bool *consumed)int Editor::
KeyFromLabel(GUI::gui_string label)GUI::gui_char 
KeyFromString(const char *charBytes, size_t len)static inline int 
KeyMap()::
KeyMatch(const char *menuKey, int keyval, int modifiers)inline bool 
KeyMatch(const std::string &sKey, int keyval, int modifiers)inline bool 
KeyModifiers(int key_, int modifiers_)	
KeyPress(GtkWidget *widget, GdkEventKey *event)gboolean ScintillaGTK::
KeyPress(GtkWidget * , GdkEventKey *event, SciTEGTK *scitew)gint SciTEGTK::
KeyRelease(GtkWidget *widget, GdkEventKey *event)gboolean ScintillaGTK::
KeyRelease(GtkWidget * , GdkEventKey *event, SciTEGTK *scitew)gint SciTEGTK::
KeyThis(GdkEventKey *event)gboolean ScintillaGTK::
KeyTranslate(int keyIn)static int 
KeyUp(WPARAM wParam)LRESULT SciTEWin::
Knop(configuration or spaces)  
KoreanIME()bool ScintillaGTK::
KoreanIME()bool ScintillaWin::
L(for reader)  lua_State
LEintfloat(lua_Integer i, lua_Number f)static int 
LEnum(const TValue *l, const TValue *r)static int 
LTintfloat(lua_Integer i, lua_Number f)static int 
LTnum(const TValue *l, const TValue *r)static int 
Label(GtkWidget *child)void WTable::
Last()	Sci::Position 
Last()SelectionPosition Selection::
LayoutLine(const EditModel &model, Sci::Line line, Surface *surface, const ViewStyle &vstyle, LineLayout *ll, int width)void EditView::
LayoutUI()void SciTEGTK::
LenChar(Sci::Position pos)int Document::
Length()int ListBoxX::
Length()	Sci_Position 
Length()	int 
Length(int styleBase)	int 
Length()int WordList::
Length()int ListBoxImpl::
Length()	Sci_Position SCI_METHOD 
Length()	size_t 
Length(Sci::Line line)int LineAnnotation::
Length()int RunStyles::
Length()Sci::Position Selection::
Length()Sci::Position SelectionRange::
Length()	int 
Length()int ListBoxX::
Length()	int 
Length()	size_t 
Length()int TextReader::
LengthCurrent()	Sci_Position 
LengthDocument()int SciTEBase::
LengthOfGSD(GtkSelectionData *sd)static gint 
LengthWithTerminator()	size_t 
LengthWord(const char *word, char otherSeparator)static size_t 
LevelAt(Sci_Position line)	int 
LevelAt(lua_State *L)	static int 
LevelAt(int line)int TextReader::
LevelNumber(int level)inline int 
LevelNumber(int level)static int 
Levels()Line
Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, WordList *keywordlists[], Accessor &styler)void erModule::
Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD erNoExceptions::
Lex(Sci_PositionU startPos, Sci_Position lengthDoc, int initStyle, IDocument *pAccess)void SCI_METHOD erSimple::
LexAccessor(IDocument *pAccess_)	explicit 
LexInterface(Document *pdoc_)	explicit 
LexState(Document *pdoc_)::
LexerBase()::
LexerChanged()void Document::
LexerFactoryFunction()typedef ILexer
LexerFunction(*LexerFunction)typedef void
LexerLibrary(const char *moduleName_)::
LexerManager()::
LexerModule(int language_, LexerFactoryFunction fnFactory_, const char *languageName_, const char * const wordListDescriptions_[])::
LexerModule(int language_, LexerFunction fnLexer_, const char *languageName_, LexerFunction fnFolder_, const char *const wordListDescriptions_[])::
LexerSimple(const LexerModule *module_)::
Limits()SelectionSegment Selection::
LimitsForRectangularElseMain()SelectionSegment Selection::
Line(lua_State *L)	static int 
LineAnnotation()	
LineArea(int line)GUI::Rectangle Strip::
LineEnd(Sci_Position line)	Sci_Position 
LineEnd(Sci_Position line)Sci_Position SCI_METHOD Document::
LineEndPosition(Sci::Position position)Sci::Position Document::
LineEndString(int eolMode)static const char
LineEndTypesSupported()int Document::
LineEndTypesSupported()int LexInterface::
LineEndTypesSupported()int LexState::
LineEndWrapPosition(Sci::Position position)Sci::Position Editor::
LineFromHandle(int markerHandle)Sci::Line Document::
LineFromHandle(int markerHandle)Sci::Line LineMarkers::
LineFromLocation(Point pt)Sci::Line Editor::
LineFromPosition(Sci::Position pos)Sci::Line LineVector::
LineFromPosition(Sci::Position pos)	Sci::Line 
LineFromPosition(Sci_Position pos)Sci_Position SCI_METHOD Document::
LineLastVisible(int line)int LineLayout::
LineLayout(int maxLineLength_)::
LineLayoutCache()::
LineLength(size_t start)	size_t 
LineLevels()	
LineMarker()	
LineMarker(const LineMarker &)	
LineMarkers()	
LineNumber()	int 
LineRange(Sci::Line line)	Range 
LineRange(int lineStart_, int lineEnd_)	
LineReverse()void Editor::
LineSelection(Sci::Position lineCurrentPos_, Sci::Position lineAnchorPos_, bool wholeLine)void Editor::
LineStart(Sci_Position line)	Sci_Position 
LineStart(Sci::Line line)	Sci::Position 
LineStart(Sci_Position line)Sci_Position SCI_METHOD Document::
LineStart(int line)int LineLayout::
LineStart(int line)int TextReader::
LineState()	
LineState(lua_State *L)	static int 
LineTabstops()	
LineTo(int x_, int y_)void SurfaceImpl::
LineTo(int x_, int y_)void SurfaceD2D::
LineTo(int x_, int y_)void SurfaceGDI::
LineToItem()	
LineTranspose()void Editor::
LineVector()::
Lines()	Sci::Line 
Lines(Sci::Line line)int LineAnnotation::
Lines()int ReplaceStrip::
Lines()int Strip::
Lines()int UserStrip::
LinesAddedOrRemoved(Sci::Line lineOfPos, Sci::Line linesAdded)void EditView::
LinesBreak(GUI::ScintillaWindow *pSci)std::vector
LinesDisplayed()Sci::Line ContractionState::
LinesFormFromTextForm(const char *textForm)std::vector
LinesFromString(const std::string &s)std::vector
LinesInDoc()Sci::Line ContractionState::
LinesJoin()void Editor::
LinesOnScreen()Sci::Line Editor::
LinesOverlap()bool EditView::
LinesSplit(int pixelWidth)void Editor::
LinesToScroll()Sci::Line Editor::
LinesTotal()Sci::Line Document::
List(FilePathSet &directories, FilePathSet &files)void FilePath::
ListBox()::
ListBox()::
ListBoxImpl()::
ListBoxX()	
ListBoxX()	
ListBoxX_ClassName("ListBoxX")const TCHAR 
ListBoxX_Register()static bool 
ListBoxX_Unregister()bool 
ListFromString(const GUI::gui_string &args)inline std::vector
ListWidget(QWidget *parent)::
LoWord(uptr_t l)static WORD 
Load(const char *modulePath)DynamicLibrary
Load(const char *path)void LexerManager::
Load(const char *modulePath)DynamicLibrary
Load(const char *)bool DirectorExtension::
Load(const char *filename)bool LuaExtension::
Load(const char *filename)bool MultiplexExtension::
Load(const char *)bool DirectorExtension::
LoadBlock(LoadState *S, void *b, size_t size)static void 
LoadByte(LoadState *S)static lu_byte 
LoadCode(LoadState *S, Proto *f)static void 
LoadConstants(LoadState *S, Proto *f)static void 
LoadD2D()bool 
LoadDebug(LoadState *S, Proto *f)static void 
LoadFunction(LoadState *S, Proto *f, TString *psource)static void 
LoadInt(LoadState *S)static int 
LoadInteger(LoadState *S)static lua_Integer 
LoadNumber(LoadState *S)static lua_Number 
LoadProtos(LoadState *S, Proto *f)static void 
LoadSessionDialog()void SciTEGTK::
LoadSessionDialog()	virtual void 
LoadSessionDialog()void SciTEWin::
LoadSessionFile(const GUI::gui_char *sessionName)void SciTEBase::
LoadString(LoadState *S)static TString
LoadUpvalues(LoadState *S, Proto *f)static void 
LocaliseControl(HWND w)void SciTEWin::
LocaliseDialog(HWND wDialog)void SciTEWin::
LocaliseMenu(HMENU hmenu)void SciTEWin::
LocaliseMenus()void SciTEWin::
LocaliseMessage(const char *s, const GUI::gui_char *param0, const GUI::gui_char *param1, const GUI::gui_char *param2)GUI::gui_string SciTEBase::
Localization()	
LocationFromPosition(Surface *surface, const EditModel &model, SelectionPosition pos, Sci::Line topLine, const ViewStyle &vs, PointEnd pe)Point EditView::
LocationFromPosition(Sci::Position pos, PointEnd pe)Point Editor::
LocationFromPosition(SelectionPosition pos, PointEnd pe)Point Editor::
Lock(Mutex *mute_)	explicit 
Lock()	virtual void 
LogPixelsY()int SurfaceImpl::
LogPixelsY()int SurfaceD2D::
LogPixelsY()int SurfaceGDI::
LongFromTwoShorts(short a,short b)	static long 
LongFromTwoShorts(short a,short b)inline long 
Lookup(ARG_KEY key, VALUE& rValue)	bool 
LowShortFromLong(long x)	static short 
LowerCaseAZ(std::string &s)void 
LowerCaseAZChar(char c)static char 
Lowercase(GUI::gui_string &s)static void 
LuaExtension()::
LuaPanicFunction(lua_State *L)static int 
Main()size_t Selection::
MainAnchor()Sci::Position Selection::
MainCaret()Sci::Position Selection::
MainForAll(GtkContainer *container, gboolean include_internals, GtkCallback callback, gpointer callback_data)void ScintillaGTK::
MainHWND()HWND ScintillaWin::
MainHWND()HWND SciTEWin::
MaintainIndentation(char ch)void SciTEBase::
MakeAlias(Font &fontOrigin)void FontAlias::
MakeLongPath(const GUI::gui_char* shortPath, GUI::gui_string &longPath)static bool 
MakeLowerCase(int ch)inline int 
MakePipe(const char *pipeName)static bool 
MakeUpperCase(int ch)inline int 
MakeUpperCase(char ch)inline char 
Map(GtkWidget *widget)void ScintillaGTK::
MapImeIndicators(PangoAttrList *attrs, const char *u8Str)static std::vector
MapImeIndicators(QInputMethodEvent *event)static std::vector
MapImeIndicators(std::vector<BYTE> inputStyle)std::vector
MapThis()void ScintillaGTK::
MapWidget(GtkWidget *widget)static void 
MarginClearAll()void Document::
MarginClick(int position, int modifiers)bool SciTEBase::
MarginFromLocation(Point pt)int ViewStyle::
MarginSetStyle(Sci::Line line, int style)void Document::
MarginSetStyles(Sci::Line line, const unsigned char *styles)void Document::
MarginSetText(Sci::Line line, const char *text)void Document::
MarginStyle(int style_, int width_, int mask_)::
MarginStyledText(Sci::Line line)StyledText Document::
MarginView()::
Margins()LineAnnotation
MarkAll(MarkPurpose purpose)void SciTEBase::
MarkAllCmd()void FindStrip::
MarkIncremental()void FindReplaceStrip::
MarkValue(Sci::Line line)int LineMarkers::
MarkValue()int MarkerHandleSet::
MarkerHandleNumber(int handle_, int number_)	
MarkerHandleSet()::
MarkerNext(Sci::Line lineStart, int mask)Sci::Line Document::
MarkerNext(Sci::Line lineStart, int mask)Sci::Line LineMarkers::
Markers()Line
Match(Sci_Position pos, const char *s)	bool 
Match(char ch0)	bool 
Match(char ch0, char ch1)	bool 
Match(const char *s)	bool 
Match(lua_State *L)	static int 
Match(int pos, const char *s)bool TextReader::
MatchFlags(const Document *doc, Sci::Position startPos, Sci::Position endPos)std::regex_constants::match_flag_type 
MatchIgnoreCase(const char *s)bool StyleContext::
MatchKeyCode(long parsedKeyCode, int keyval, int modifiers)bool SciTEKeys::
MatchMarker()::
MatchOnLines(const Document *doc, const Regex &regexp, const RESearchRange &resr, RESearch &search)bool 
MatchWild(const char *pattern, size_t lenPattern, const char *fileName, bool caseSensitive)static bool 
Matches(const GUI::gui_char *pattern)bool FilePath::
MatchesWordOptions(bool word, bool wordStart, Sci::Position pos, Sci::Position length)bool Document::
MaxScrollPos()Sci::Line Editor::
MaxTrackSize()POINT ListBoxX::
Maximum(int a, int b)int Platform::
Maximum(int a, int b)inline int 
Maximum(int a, int b)int Platform::
Maximum(int a, int b)inline int 
MeasureLength(const char *s)static size_t 
MeasureStringWidth()	float 
MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions)void SurfaceImpl::
MeasureWidths(Font &font, const char *s, int len, XYPOSITION *positions)void SurfaceImpl::
MeasureWidths(Surface *surface, const ViewStyle &vstyle, unsigned int styleNumber, const char *s, unsigned int len, XYPOSITION *positions, const Document *pdoc)void PositionCache::
MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions)void SurfaceD2D::
MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions)void SurfaceGDI::
Menu()::
Menu()::
Menu()	
MenuAction(guint action)void FindStrip::
MenuAction(guint action)void ReplaceStrip::
MenuAction(guint )	virtual void 
MenuCommand(int cmdID, int source)void SciTEBase::
MenuItemFromAction(int itemID)GtkWidget
MenuPositionFunc(GtkMenu *, gint *x, gint *y, gboolean *, gpointer userData)static void 
MenuPositionFunc(GtkMenu *, gint *x, gint *y, gboolean *, gpointer userData)static void  
MenuSignal(GtkMenuItem *menuitem, SciTEGTK *scitew)void SciTEGTK::
MenuSignal(GtkMenuItem *menuItem, Strip *pStrip)void Strip::
Merge(const SparseState<T> &other, int ignoreAfter)	bool 
MergeMarkers(Sci::Line line)void LineMarkers::
MinClientWidth()int ListBoxX::
MinTrackSize()POINT ListBoxX::
MinimizeToTray()void SciTEWin::
MinimizeVirtualSpace()void SelectionRange::
Minimum(int a, int b)int Platform::
Minimum(int a, int b)inline int 
ModelessHandler(MSG *pmsg)bool SciTEWin::
ModifiedAt(Sci::Position pos)void Document::
ModifiedTime()time_t FilePath::
ModifierFlags(bool shift, bool ctrl, bool alt, bool meta, bool super)int Editor::
ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)bool ScintillaGTK::
ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)bool ScintillaQt::
ModifyScrollBars(Sci::Line nMax, Sci::Line nPage)bool ScintillaWin::
MonitorRectangleForWidget(GtkWidget *wid)GdkRectangle 
More()	bool 
More()bool BreakFinder::
More(lua_State *L)	static int 
Motion(GtkWidget *widget, GdkEventMotion *event)gint ScintillaGTK::
Mouse(GdkEventButton *event)gint SciTEGTK::
MouseButtonBounce()bool Platform::
MouseClick(Point pt)void CallTip::
MouseInClose(GUI::Point pt)bool Strip::
MouseLeave()void Editor::
MousePress(GtkWidget * , GdkEventButton *event, SciTEGTK *scitew)gint SciTEGTK::
MouseRelease(GtkWidget *widget, GdkEventButton *event)gint ScintillaGTK::
Move(XYPOSITION xDelta, XYPOSITION yDelta)	void 
Move(int delta)void AutoComplete::
MoveBack()void SciTEBase::
MoveCaretInsideView(bool ensureVisible)void Editor::
MoveExtends()bool Selection::
MoveForInsertDelete(bool insertion, Sci::Position startChange, Sci::Position length)void SelectionPosition::
MoveForInsertDelete(bool insertion, Sci::Position startChange, Sci::Position length)void SelectionRange::
MoveImeCarets(int pos)void ScintillaGTK::
MoveImeCarets(int offset)void ScintillaEditBase::
MoveImeCarets(Sci::Position offset)void ScintillaWin::
MovePositionForDeletion(Sci::Position position, Sci::Position startDeletion, Sci::Position length)static inline Sci::Position 
MovePositionForInsertion(Sci::Position position, Sci::Position startInsertion, Sci::Position length)static inline Sci::Position 
MovePositionOutsideChar(Sci::Position pos, Sci::Position moveDir, bool checkLineEnd)Sci::Position Document::
MovePositionOutsideChar(Sci::Position pos, Sci::Position moveDir, bool checkLineEnd)Sci::Position Editor::
MovePositionOutsideChar(SelectionPosition pos, Sci::Position moveDir, bool checkLineEnd)SelectionPosition Editor::
MovePositionSoVisible(Sci::Position pos, int moveDir)SelectionPosition Editor::
MovePositionSoVisible(SelectionPosition pos, int moveDir)SelectionPosition Editor::
MovePositionTo(Sci::Position newPos, Selection::selTypes selt, bool ensureVisible)void Editor::
MovePositionTo(SelectionPosition newPos, Selection::selTypes selt, bool ensureVisible)void Editor::
MovePositions(bool insertion, Sci::Position startChange, Sci::Position length)void Selection::
MoveSelectedLines(int lineDelta)void Editor::
MoveSelectedLinesDown()void Editor::
MoveSelectedLinesUp()void Editor::
MoveSplit(GUI::Point ptNewDrag)void SciTEBase::
MoveTabLeft()void SciTEBase::
MoveTabRight()void SciTEBase::
MoveTo(int x_, int y_)void SurfaceImpl::
MoveTo(int x_, int y_)void SurfaceD2D::
MoveTo(int x_, int y_)void SurfaceGDI::
MoveToStackTop(int index)void BufferList::
MovedCaret(SelectionPosition newPos, SelectionPosition previousPos, bool ensureVisible)void Editor::
MultiByteAccess()	IDocumentWithLineEnd
MultiByteLenFromIconv(const Converter &conv, const char *s, size_t len)static size_t 
MultipleSelectAdd(AddNumber addNumber)void Editor::
MultipleStyles(Sci::Line line)bool LineAnnotation::
MultiplexExtension()::
NS_ENUM(NSInteger, NotificationType)typedef 
NS_OPTIONS(NSUInteger, IBDisplay)typedef 
Name()FilePath FilePath::
NaturalDirection(unsigned int iMessage)int 
NcHitTest(WPARAM wParam, LPARAM lParam)LRESULT ListBoxX::
Need(workItems items_, Sci::Position pos)	void 
NeedShown(Sci::Position pos, Sci::Position len)void Editor::
NeedWrapping(Sci::Line docLineStart, Sci::Line docLineEnd)void Editor::
Needed()	bool 
NeedsDrawing(Sci::Line line)	bool 
NeedsOnClose()bool DirectorExtension::
NeedsOnClose()	virtual bool 
NeedsOnClose()bool LuaExtension::
NeedsOnClose()bool MultiplexExtension::
NeedsOnClose()bool DirectorExtension::
NeedsSave(int delayBeforeSave)bool Buffer::
NeedsWrap()	bool 
New()void SciTEBase::
NewAssoc()	Association
NewLine()void Editor::
NewLineInOutput()void SciTEBase::
NewNode(Node* pPrev, Node* pNext)	Node
NewerThan(const PositionCacheEntry &other)bool PositionCacheEntry::
Next()	void 
Next()TextSegment BreakFinder::
Next()	void 
Next(lua_State *L)	static int 
Next()void SciTEBase::
Next()	const char
Next(bool markAll, bool invertDirection)void FindStrip::
Next(bool select)void SearchStrip::
NextByte()	int 
NextCharacter(Sci::Position &pos, int moveDir)bool Document::
NextField(const char *s)static const char
NextInStack()void SciTEBase::
NextIncremental()void FindReplaceStrip::
NextIncremental(ChangingSource source)void FindReplaceStrip::
NextLine()void WTable::
NextPosition(Sci::Position pos, int moveDir)Sci::Position Document::
NextRandom()	int 
NextTab(Sci::Position pos, Sci::Position tabSize)static Sci::Position 
NextTabPos(int x)int CallTip::
NextTabstopPos(Sci::Line line, XYPOSITION x, XYPOSITION tabWidth)XYPOSITION EditView::
NextWordEnd(Sci::Position pos, int delta)Sci::Position Document::
NextWordStart(Sci::Position pos, int delta)Sci::Position Document::
NoMatchColour(HDC hdc)LRESULT SearchStripBase::
NormaliseSplit(int splitPos)int SciTEBase::
NormalizePath()FilePath FilePath::
NotificationToStripCommand(int notification)static StripCommand 
Notify(GtkWidget *, gint, SCNotification *nt)void ScintillaGTKAccessible::
Notify(SCNotification *notification)void SciTEGTK::
Notify(SCNotification *notification)void SciTEBase::
Notify(SCNotification *notification)void SciTEWin::
NotifyCaretMove()void Editor::
NotifyCaretMove()void ScintillaWin::
NotifyChange()void ScintillaGTK::
NotifyChange()void ScintillaQt::
NotifyChange()void ScintillaWin::
NotifyChar(int ch)void Editor::
NotifyClick(Point pt, bool shift, bool ctrl, bool alt)void Editor::
NotifyClick(Point pt, int modifiers)void Editor::
NotifyDeleted(Document *, void *)void WatcherHelper::
NotifyDeleted(Document *, void *)void Editor::
NotifyDoubleClick(Point pt, bool shift, bool ctrl, bool alt)void Editor::
NotifyDoubleClick(Point pt, int modifiers)void Editor::
NotifyDoubleClick(Point pt, int modifiers)void ScintillaWin::
NotifyDwelling(Point pt, bool state)void Editor::
NotifyErrorOccurred(Document *, void *, int status)void WatcherHelper::
NotifyErrorOccurred(Document *, void *, int status)void Editor::
NotifyFocus(bool focus)void ScintillaGTK::
NotifyFocus(bool focus)void ScintillaQt::
NotifyFocus(bool focus)void Editor::
NotifyFocus(bool focus)void ScintillaWin::
NotifyHotSpotClicked(Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::
NotifyHotSpotClicked(Sci::Position position, int modifiers)void Editor::
NotifyHotSpotDoubleClicked(Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::
NotifyHotSpotDoubleClicked(Sci::Position position, int modifiers)void Editor::
NotifyHotSpotReleaseClick(Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::
NotifyHotSpotReleaseClick(Sci::Position position, int modifiers)void Editor::
NotifyIndicatorClick(bool click, Sci::Position position, bool shift, bool ctrl, bool alt)void Editor::
NotifyIndicatorClick(bool click, Sci::Position position, int modifiers)void Editor::
NotifyKey(int key, int modifiers)void ScintillaGTK::
NotifyLexerChanged(Document *, void *)void WatcherHelper::
NotifyLexerChanged(Document *, void *)void Editor::
NotifyLexerChanged(Document *, void *)void ScintillaBase::
NotifyMacroRecord(unsigned int iMessage, uptr_t wParam, sptr_t lParam)void Editor::
NotifyMarginClick(Point pt, bool shift, bool ctrl, bool alt)bool Editor::
NotifyMarginClick(Point pt, int modifiers)bool Editor::
NotifyMarginRightClick(Point pt, int modifiers)bool Editor::
NotifyModified(Document *, DocModification mh, void *)void WatcherHelper::
NotifyModified(DocModification mh)void Document::
NotifyModified(Document *, DocModification mh, void *)void Editor::
NotifyModifyAttempt(Document *, void *)void WatcherHelper::
NotifyModifyAttempt()void Document::
NotifyModifyAttempt()void Editor::
NotifyModifyAttempt(Document *, void *)void Editor::
NotifyNeedShown(Sci::Position pos, Sci::Position len)void Editor::
NotifyPainted()void Editor::
NotifyParent(SCNotification scn)void ScintillaGTK::
NotifyParent(SCNotification scn)void ScintillaQt::
NotifyParent(SCNotification scn)void ScintillaWin::
NotifyReadOnly()void ScintillaGTKAccessible::
NotifySavePoint(Document *, void *, bool atSavePoint)void WatcherHelper::
NotifySavePoint(bool atSavePoint)void Document::
NotifySavePoint(Document *, void *, bool atSavePoint)void Editor::
NotifySavePoint(bool isSavePoint)void Editor::
NotifySignal(GtkWidget *, gint , SCNotification *notification, SciTEGTK *scitew)void SciTEGTK::
NotifyStyleNeeded(Document *, void *, Sci::Position endPos)void WatcherHelper::
NotifyStyleNeeded(Document *, void *, Sci::Position endStyleNeeded)void Editor::
NotifyStyleToNeeded(Sci::Position endStyleNeeded)void Editor::
NotifyStyleToNeeded(Sci::Position endStyleNeeded)void ScintillaBase::
NotifyURIDropped(const char *list)void ScintillaGTK::
NotifyUpdateUI()bool Editor::
NotifyZoom()void Editor::
NumberLines(const char *text)static int 
OP_ADD(C)
OP_BAND(C)
OP_BNOT(B)
OP_BOR(C)
OP_BXOR(C)
OP_CALL(A+B-1))
OP_CLOSURE(KPROTO[Bx])
OP_CONCAT(C)
OP_DIV(C)
OP_EQ(C)) ~= A)
OP_EXTRAARG(larger)
OP_FORLOOP(A+2)
OP_FORPREP(A+2)
OP_GETTABLE(C)
OP_GETTABUP(C)
OP_GETUPVAL(A)
OP_IDIV(C)
OP_JMP(A - 1)
OP_LE(C)) ~= A)
OP_LEN(B)
OP_LOADBOOL(C)
OP_LOADK(Bx)
OP_LOADKX(extra arg)
OP_LOADNIL(A+B)
OP_LT(C)) ~= A)
OP_MOD(C)
OP_MOVE(B)
OP_MUL(C)
OP_NEWTABLE(size = B,C)
OP_NOT(B)
OP_POW(C)
OP_RETURN(see note)
OP_SELF(C)
OP_SETLIST(A+i)
OP_SETTABLE(C)
OP_SETTABUP(C)
OP_SETUPVAL(A)
OP_SHL(C)
OP_SHR(C)
OP_SUB(C)
OP_TAILCALL(A+B-1))
OP_TEST(A) <=> C)
OP_TESTSET(B)
OP_TFORCALL(A+2))
OP_TFORLOOP(A+1)
OP_UNM(B)
OP_VARARG(A+B-2)
OctalEscape(s)def 
OmitXidContinue(int character)bool 
OmitXidStart(int character)bool 
OnBeforeSave(const char *)	virtual bool 
OnBeforeSave(const char *filename)bool LuaExtension::
OnBeforeSave(const char *filename)bool MultiplexExtension::
OnChar(char)bool DirectorExtension::
OnChar(char)	virtual bool 
OnChar(char ch)bool LuaExtension::
OnChar(char c)bool MultiplexExtension::
OnChar(char)bool DirectorExtension::
OnClick(int)	virtual bool 
OnClick(int modifiers)bool LuaExtension::
OnClick(int modifiers)bool MultiplexExtension::
OnClick(int)bool DirectorExtension::
OnClose(const char *path)bool DirectorExtension::
OnClose(const char *)	virtual bool 
OnClose(const char *filename)bool LuaExtension::
OnClose(const char *filename)bool MultiplexExtension::
OnClose(const char *path)bool DirectorExtension::
OnDoubleClick()void ListBoxX::
OnDoubleClick()bool DirectorExtension::
OnDoubleClick()	virtual bool 
OnDoubleClick()bool LuaExtension::
OnDoubleClick()bool MultiplexExtension::
OnDoubleClick()bool DirectorExtension::
OnDwellStart(int, const char *)	virtual bool 
OnDwellStart(int pos, const char *word)bool LuaExtension::
OnDwellStart(int pos, const char *word)bool MultiplexExtension::
OnExecute(const char *cmd)bool DirectorExtension::
OnExecute(const char *)	virtual bool 
OnExecute(const char *s)bool LuaExtension::
OnExecute(const char *cmd)bool MultiplexExtension::
OnExecute(const char *cmd)bool DirectorExtension::
OnIdle()void SciTEBase::
OnKey(int, int)	virtual bool 
OnKey(int keyval, int modifiers)bool LuaExtension::
OnKey(int keyval, int modifiers)bool MultiplexExtension::
OnMacro(const char *command, const char *params)bool DirectorExtension::
OnMacro(const char *, const char *)	virtual bool 
OnMacro(const char *p, const char *q)bool MultiplexExtension::
OnMacro(const char *command, const char *params)bool DirectorExtension::
OnMarginClick()bool DirectorExtension::
OnMarginClick()	virtual bool 
OnMarginClick()bool LuaExtension::
OnMarginClick()bool MultiplexExtension::
OnMarginClick()bool DirectorExtension::
OnOpen(const char *path)bool DirectorExtension::
OnOpen(const char *)	virtual bool 
OnOpen(const char *filename)bool LuaExtension::
OnOpen(const char *filename)bool MultiplexExtension::
OnOpen(const char *path)bool DirectorExtension::
OnSave(const char *path)bool DirectorExtension::
OnSave(const char *)	virtual bool 
OnSave(const char *filename)bool LuaExtension::
OnSave(const char *filename)bool MultiplexExtension::
OnSave(const char *path)bool DirectorExtension::
OnSavePointLeft()bool DirectorExtension::
OnSavePointLeft()	virtual bool 
OnSavePointLeft()bool LuaExtension::
OnSavePointLeft()bool MultiplexExtension::
OnSavePointLeft()bool DirectorExtension::
OnSavePointReached()bool DirectorExtension::
OnSavePointReached()	virtual bool 
OnSavePointReached()bool LuaExtension::
OnSavePointReached()bool MultiplexExtension::
OnSavePointReached()bool DirectorExtension::
OnStyle(unsigned int, int, int, StyleWriter *)bool DirectorExtension::
OnStyle(unsigned int, int, int, StyleWriter *)	virtual bool 
OnStyle(unsigned int startPos, int lengthDoc, int initStyle, StyleWriter *styler)bool LuaExtension::
OnStyle(unsigned int p, int q, int r, StyleWriter *s)bool MultiplexExtension::
OnStyle(unsigned int, int, int, StyleWriter *)bool DirectorExtension::
OnSwitchFile(const char *path)bool DirectorExtension::
OnSwitchFile(const char *)	virtual bool 
OnSwitchFile(const char *filename)bool LuaExtension::
OnSwitchFile(const char *filename)bool MultiplexExtension::
OnSwitchFile(const char *path)bool DirectorExtension::
OnTimer()void SciTEBase::
OnUpdateUI()bool DirectorExtension::
OnUpdateUI()	virtual bool 
OnUpdateUI()bool LuaExtension::
OnUpdateUI()bool MultiplexExtension::
OnUpdateUI()bool DirectorExtension::
OnUserListSelection(int, const char *)	virtual bool 
OnUserListSelection(int listType, const char *selection)bool LuaExtension::
OnUserListSelection(int listType, const char *selection)bool MultiplexExtension::
OnUserStrip(int , int )	virtual bool 
OnUserStrip(int control, int change)bool LuaExtension::
OnUserStrip(int control, int change)bool MultiplexExtension::
OneToOne()	bool 
Open(const char *charSetDestination, const char *charSetSource, bool transliterations)	void 
Open(const GUI::gui_char *mode)FILE
Open(const FilePath &file, OpenFlags of)bool SciTEBase::
OpenClipboardRetry(HWND hwnd)static bool 
OpenCurrentFile(long long fileSize, bool suppressMessage, bool asynchronous)void SciTEBase::
OpenDialog(const FilePath &directory, const char *filter)bool SciTEGTK::
OpenDialog(const FilePath &directory, const GUI::gui_char *filesFilter)bool SciTEWin::
OpenFilesFromStdin()void SciTEBase::
OpenFromStdin(bool UseOutputPane)void SciTEBase::
OpenHandle(const char *fullDestination, const char *charSetSource)	void 
OpenPipe(const char *pipeName)static int 
OpenProperties(int propsFile)void SciTEBase::
OpenSelected()bool SciTEBase::
OpenUriList(const char *list)void SciTEGTK::
OpenUriList(const char *)	virtual void 
Option()		
Option(plcob pb_, std::string description_=Ó)		
Option(plcoi pi_, std::string description_)		
Option(plcos ps_, std::string description_)		
Original()	const char
OtherIDOfCharacter(int character)OtherID 
OutputAppendEncodedStringSynchronised(const GUI::gui_string &s, int codePageDocument)void SciTEWin::
OutputAppendString(const char *s, int len)void SciTEBase::
OutputAppendStringSynchronised(const char *s, int len)void SciTEBase::
Overlaps(Range other)	bool 
OverridesTextFore()	bool 
OwnPrimarySelection()bool ScintillaGTK::
PFNIsCommentLeader(Accessor &styler, Sci_Position pos, Sci_Position len)typedef bool
PFont(Font &f)static FontHandle
PLAT_LINUX(PLAT_DARWIN or PLAT_WINDOWS)
PMatch(CharacterIndexer &ci, Sci::Position lp, Sci::Position endp, char *ap)Sci::Position RESearch::
PRectFromQRect(QRect qr)inline PRectangle 
PRectangle(XYPOSITION left_=0, XYPOSITION top_=0, XYPOSITION right_=0, XYPOSITION bottom_ = 0)	explicit 
PWidget(WindowID wid)static GtkWidget
PWidget(Window &w)static GtkWidget
PWidget(WindowID wid)static GtkWidget
PWidget(GUI::Window &w)static GtkWidget
PWindow(const Window &w)static GdkWindow
PackInto(GtkBox *box, gboolean expand)void WTable::
PageMove(int direction, Selection::selTypes selt, bool stuttered)void Editor::
Paint(Surface *surfaceWindow, PRectangle rcArea)void Editor::
Paint(HDC)	void 
Paint(HDC hDC)void ListBoxX::
Paint(HDC hDC, GUI::Rectangle)void ContentWin::
Paint(HDC hDC)void FindStrip::
Paint(HDC hDC)void ReplaceStrip::
Paint(HDC hDC)void SearchStrip::
Paint(HDC hDC)void Strip::
PaintCT(Surface *surfaceWindow)void CallTip::
PaintContains(PRectangle rc)bool ScintillaGTK::
PaintContains(PRectangle rc)bool Editor::
PaintContains(PRectangle rc)bool ScintillaWin::
PaintContainsMargin()bool Editor::
PaintContents(Surface *surfaceWindow, bool draw)int CallTip::
PaintMargin(Surface *surface, Sci::Line topLine, PRectangle rc, PRectangle rcMargin, const EditModel &model, const ViewStyle &vs)void MarginView::
PaintSelMargin(Surface *surfaceWindow, PRectangle &rc)void Editor::
PaintText(Surface *surfaceWindow, const EditModel &model, PRectangle rcArea, PRectangle rcClient, const ViewStyle &vsDraw)void EditView::
PaneButtonRelease(GtkWidget *, GdkEvent *, SciTEGTK *scitew)gint SciTEGTK::
PanePositionChanged(GObject *, GParamSpec *, SciTEGTK *scitew)void SciTEGTK::
PangoLayoutFromStyleDefinition(GtkPrintContext *context, const StyleDefinition &sd)static PangoLayout
ParaDown(Sci::Position pos)Sci::Position Document::
ParaUp(Sci::Position pos)Sci::Position Document::
ParaUpOrDown(int direction, Selection::selTypes selt)void Editor::
ParamCancelCmd()void SciTEGTK::
ParamCmd()void SciTEGTK::
ParamGrab()void SciTEGTK::
ParamGrab()void SciTEWin::
ParamResponse(int responseID)void SciTEGTK::
ParametersDialog(bool modal)bool SciTEGTK::
ParametersDialog(bool modal)bool SciTEWin::
ParametersDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
ParametersMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
ParametersOpen()bool SciTEGTK::
ParametersOpen()bool SciTEWin::
ParseIndicatorDefinition(const char *definition)bool IndicatorDefinition::
ParseKeyCode(const char *mnemonic)long SciTEKeys::
ParseStyleDefinition(const char *definition)bool StyleDefinition::
PartialPaint(const PRectangle &rect)void ScintillaQt::
PartitionFromPosition(int pos)	int 
Partitioning(int growSize)	explicit 
Partitions()	int 
Paste()void ScintillaGTK::
Paste()void ScintillaQt::
Paste()void ScintillaWin::
PasteFromMode(QClipboard::Mode clipboardMode_)void ScintillaQt::
PasteRectangular(SelectionPosition pos, const char *ptr, Sci::Position len)void Editor::
PasteText(AtkEditableText *text, gint position)void ScintillaGTKAccessible::AtkEditableTextIface::
PasteText(int charPosition)void ScintillaGTKAccessible::
PathRoundRectangle(cairo_t *context, double left, double top, double width, double height, int radius)static void 
PenColour(ColourDesired fore)void SurfaceImpl::
PenColour(ColourDesired fore)void SurfaceD2D::
PenColour(ColourDesired fore)void SurfaceGDI::
Perform(const char *actionList)void SciTEBase::
PerformDeferredTasks()void SciTEBase::
PerformGrep()void SciTEWin::
PerformInsertAbbreviation()bool SciTEBase::
PerformOnNewThread(Worker *pWorker)bool SciTEGTK::
PerformOnNewThread(Worker *pWorker)bool SciTEWin::
PerformOne(char *action)void SciTEBase::
Pfunc(lua_State *L, void *ud)typedef void
PixelAt(int x, int y, ColourDesired &colour, bool &transparent)void XPM::
PixelGridAlign(const PRectangle &rc)static PRectangle 
Pixels()const unsigned char
Platform()	
Platform(const Platform &)	
Platform_Finalise()void 
Platform_Finalise(bool fromDllMain)void 
Platform_Initialise()void 
Platform_Initialise(void *hInstance)void 
PlayThisSound( const char *sound, int duration, HMODULE &hMM)static void 
Point(XYPOSITION x_=0, XYPOSITION y_=0)	explicit 
Point(int x_=0, int y_=0)	explicit 
PointDocument(Point pt)	explicit 
PointDocument(double x_ = 0, double y_ = 0)	explicit 
PointFromLong(LPARAM lPoint)inline GUI::Point 
PointFromPOINT(POINT pt)static Point 
PointFromPosition(int posInLine, int lineHeight, PointEnd pe)Point LineLayout::
PointFromQPoint(QPoint qp)inline Point 
PointInSelMargin(Point pt)bool Editor::
PointInSelection(Point pt)bool Editor::
PointIsHotspot(Point pt)bool Editor::
PointMainCaret()Point Editor::
PointOfCursor()GUI::Point 
PointPointer(GUI::Point *pt)inline POINT
Pointer()GtkWidget
PointerFromWindow(HWND hWnd)static void
PointerFromWindow(HWND hWnd)void
PollTool(SciTEGTK *scitew)int SciTEGTK::
Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back)void SurfaceImpl::
Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back)void SurfaceD2D::
Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back)void SurfaceGDI::
PopStack()void BufferList::
PopUpCB(GtkMenuItem *menuItem, ScintillaGTK *sciThis)void ScintillaGTK::
PopUpCmd(GtkMenuItem *menuItem, SciTEGTK *scitew)void SciTEGTK::
Pos()	Sci::ition 
PosRoundUp()	Sci::Position 
Position()	Sci:: 
Position(lua_State *L)	static int 
PositionAfter(Sci::Position pos)	Sci::Position 
PositionAfterArea(PRectangle rcArea)Sci::Position Editor::
PositionAfterMaxStyling(Sci::Position posMax, bool scrolling)Sci::Position Editor::
PositionBefore(Sci::Position pos)	Sci::Position 
PositionCache()::
PositionCacheEntry()::
PositionCacheEntry(const PositionCacheEntry &other)::
PositionFromLineX(Sci::Line lineDoc, int x)Sci::Position Editor::
PositionFromLocation(Point pt, bool canReturnInvalid, bool charPosition)Sci::Position Editor::
PositionFromPartition(int partition)	int 
PositionInSelection(Sci::Position pos)bool Editor::
PositionIsHotspot(Sci::Position position)bool Editor::
PositionOfElement(int element)	int 
PositionUpOrDown(SelectionPosition spStart, int direction, int lastX)SelectionPosition Editor::
PostCallback(void *ptr)gboolean SciTEGTK::
PostOnMainThread(int cmd, Worker *pWorker)void SciTEGTK::
PostOnMainThread(int cmd, Worker *pWorker)void SciTEWin::
PreEditString(GtkIMContext *im_context)	explicit 
PreOpenCheck(const GUI::gui_char *)bool SciTEBase::
PreOpenCheck(const GUI::gui_char *arg)bool SciTEWin::
PreeditChanged(GtkIMContext *, ScintillaGTK *sciThis)void ScintillaGTK::
PreeditChangedInlineThis()void ScintillaGTK::
PreeditChangedWindowedThis()void ScintillaGTK::
PrepareBufferForSave(const FilePath &saveName)bool SciTEBase::
Present()void Dialog::
Press(GtkWidget *widget, GdkEventButton *event)gint ScintillaGTK::
PressCT(GtkWidget *widget, GdkEventButton *event, ScintillaGTK *sciThis)gboolean ScintillaGTK::
PressThis(GdkEventButton *event)gint ScintillaGTK::
Prev()void SciTEBase::
PrevInStack()void SciTEBase::
Previous(lua_State *L)	static int 
PrimaryStyleFromStyle(int style)int LexState::
Print(bool )void SciTEGTK::
Print(bool )	virtual void 
Print( bool showDialog)void SciTEWin::
PrintParameters()::
PrintSetup()void SciTEGTK::
PrintSetup()	virtual void 
PrintSetup()void SciTEWin::
PrivateCall(int, void *)void
PrivateCall(int operation, void *pointer)void
ProcessArgs(const GUI::gui_char *cmdLine)GUI::gui_string SciTEWin::
ProcessCommandLine(GUI::gui_string &args, int phase)bool SciTEBase::
ProcessExecute()void SciTEWin::
ProgressMade()	size_t 
PropGet(const char *key)const char
PropGetExpanded(const char *key, char *result)int LexState::
PropGetInt(const char *key, int defaultValue)int LexState::
PropSet(const char *key, const char *val)void LexState::
PropSetFile(bool lowerKeys_)::
PropSetFile(const PropSetFile &copy)::
PropSetSimple()::
Property(const char *key)std::string SciTEBase::
PropertyFromDirector(const char *arg)void SciTEBase::
PropertyNames()const char
PropertyNames()	const char
PropertyNames()const char
PropertySet(const char *key, const char *val)Sci_Position SCI_METHOD LexerBase::
PropertySet(const char *key, const char *val)Sci_Position SCI_METHOD LexerNoExceptions::
PropertySet(T *base, const char *name, const char *val)	bool 
PropertyToDirector(const char *arg)void SciTEBase::
PropertyType(const char *)int SCI_METHOD LexerBase::
PropertyType(const char *name)	int 
PropertyType(const char *name)int LexState::
ProtectionActive()bool ViewStyle::
PublishGlobalBufferData()static void 
PushMethod(lua_State *L, lua_CFunction fn, const char *name)	void 
QColorFromCA(ColourDesired ca)inline QColor 
QRectFFromPRect(PRectangle pr)inline QRectF 
QRectFromPRect(PRectangle pr)inline QRect 
QuartzFont( const char* name, size_t length, float size, int weight, bool italic )	
QuartzTextLayout( CGContextRef context )    explicit 
QuartzTextStyle()	
QuartzTextStyle(const QuartzTextStyle &other)	
QueryInterface(REFIID riid, PVOID *ppv)STDMETHODIMP ScintillaWin::
QueueIdleWork(WorkNeeded::workItems items, Sci::Position upTo)void ScintillaGTK::
QueueIdleWork(WorkNeeded::workItems items, Sci::Position upTo)void Editor::
QuitProgram()void SciTEGTK::
QuitProgram()void SciTEWin::
QuitSignal(GtkWidget *, GdkEventAny *, SciTEGTK *scitew)gint SciTEGTK::
RECTFromRectangle(GUI::Rectangle r)RECT 
RESearch(CharClassify *charClassTable)::
RESearchRange(const Document *doc_, Sci::Position minPos, Sci::Position maxPos)	
RGBAImage(const XPM &xpm)::
RGBAImage(int width_, int height_, float scale_, const unsigned char *pixels_)::
RGBAImageSet()::
RandomColour()	
Range(Sci::Position start_, Sci::Position end_)	
Range(Sci::Position pos=0)	explicit 
Range(size_t r)Selection
Range(size_t r)const Selection
Range(Pane p, int start, int end)char
RangeAddDelta(int start, int end, int delta)	void 
RangeContainsProtected(Sci::Position start, Sci::Position end)bool Editor::
RangeDisplayLine(Surface *surface, const EditModel &model, Sci::Line lineVisible, const ViewStyle &vs)Range EditView::
RangeDisplayLine(Sci::Line lineVisible)Range Editor::
RangeExtend(char ch))void SciTEBase::
RangeExtendAndGrab(char ch), bool stripEol )std::string SciTEBase::
RangeIsAllWhitespace(int start, int end)bool SciTEBase::
RangeMain()SelectionRange
RangeMain()const SelectionRange
RangePointer(Sci::Position position, Sci::Position rangeLength)	const char
RangePointer(int position, int rangeLength)	T
RangeText(Sci::Position start, Sci::Position end)std::string Editor::
RangesCopy()	std::vector
ReAllocate(int newSize)	void 
Read()std::vector
Read(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)bool PropSetFile::
ReadAPI(const std::string &fileNameForExtension)void SciTEBase::
ReadAbbrevPropFile()void SciTEBase::
ReadCharacter()	void 
ReadDirectoryPropFile()void SciTEBase::
ReadEmbeddedProperties()void SciTEBase::
ReadEmbeddedProperties()void SciTEWin::
ReadEnvironment()void SciTEBase::
ReadFileAsList(path)def 
ReadFontProperties()void SciTEBase::
ReadFromFile(self, name)	def 
ReadFromMemory(const char *data, size_t len, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)void PropSetFile::
ReadGlobalPropFile()void SciTEBase::
ReadLine(const char *lineBuffer, ReadLineState rls, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)PropSetFile::State PropSetFile::
ReadLocalPropFile()void SciTEBase::
ReadLocalization()void SciTEGTK::
ReadLocalization()void SciTEBase::
ReadLocalization()void SciTEWin::
ReadMenuIDs(filename)def 
ReadNum(const char *&t)static unsigned int 
ReadProperties()void SciTEGTK::
ReadProperties(bool reloadScripts)void SciTEBase::
ReadProperties()void SciTEWin::
ReadPropertiesInitial()void SciTEGTK::
ReadPropertiesInitial()void SciTEBase::
ReadPropertiesInitial()void SciTEWin::
Realise(Surface &surface, int zoomLevel, int technology, const FontSpecification &fs)void Fontd::
Realize(GtkWidget *widget)void ScintillaGTK::
RealizeText(GtkWidget *widget, void*)void ScintillaGTK::
RealizeThis(GtkWidget *widget)void ScintillaGTK::
RealizeVirtualSpace(Sci::Position position, Sci::Position virtualSpace)Sci::Position Editor::
RealizeVirtualSpace(const SelectionPosition &position)SelectionPosition Editor::
ReapChild(GPid pid, gint status, gpointer user_data)void SciTEGTK::
ReceivedDrop(GtkSelectionData *selection_data)void ScintillaGTK::
ReceivedSelection(GtkSelectionData *selection_data)void ScintillaGTK::
ReceiverPipeSignal(GIOChannel *source, GIOCondition condition, void *data)static gboolean 
RecentFile()	
ReconfigureScrollBars()void ScintillaGTK::
ReconfigureScrollBars()void ScintillaQt::
ReconfigureScrollBars()void Editor::
RecordMacroCommand(const SCNotification *notification)bool SciTEBase::
RectFromMonitor(HMONITOR hMonitor)static RECT 
RectFromPRectangle(PRectangle prc)static RECT 
Rectangle(int left_=0, int top_=0, int right_=0, int bottom_ = 0)	
RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceImpl::
RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceD2D::
RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceGDI::
RectangleFromRange(Range r, int overlap)PRectangle Editor::
Rectangular()SelectionRange
Redo()Sci::Position Document::
Redo()void Editor::
Redraw()void Editor::
Redraw()void SciTEBase::
RedrawMenu()	virtual void 
RedrawMenu()void SciTEWin::
RedrawRect(PRectangle rc)void Editor::
RedrawSelMargin(Sci::Line line, bool allAfter)void Editor::
Refresh(Surface &surface, int tabInChars)void ViewStyle::
RefreshPixMaps(Surface *surfaceWindow, WindowID wid, const ViewStyle &vsDraw)void EditView::
RefreshPixMaps(Surface *surfaceWindow)void Editor::
RefreshPixMaps(Surface *surfaceWindow, WindowID wid, const ViewStyle &vsDraw)void MarginView::
RefreshStyleData()void Editor::
Regenerate(filename, commentPrefix, *lists)def 
RegenerateAll(root, showMaxID)def 
RegenerateAll(root)def 
RegenerateAll()def 
RegenerateXcodeProject(path, lexers, lexerReferences)def 
RegexError()	
Register(HINSTANCE hInstance_)bool ScintillaWin::
Register(HINSTANCE hInstance_)void SciTEWin::
RegisterExtension(Extension &ext_)bool MultiplexExtension::
RegisterImage(int type, const char *xpm_data)void ListBoxX::
RegisterImage(int type, const char *xpmData)void ListBoxImpl::
RegisterImage(int type, const char *xpm_data)void ListBoxX::
RegisterQPixmapImage(int type, const QPixmap& pm)void ListBoxImpl::
RegisterRGBA(int type, RGBAImage *image)void ListBoxX::
RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage)void ListBoxX::
RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage)void ListBoxImpl::
RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage)void ListBoxX::
Release()void Font::
Release()void SurfaceImpl::
Release()void SCI_METHOD LexerBase::
Release()void Font::
Release()void SurfaceImpl::
Release()int SCI_METHOD Document::
Release()void Font::
Release()void FontCached::
Release()void SurfaceD2D::
Release()void SurfaceGDI::
Release()STDMETHODIMP_
ReleaseAllExtendedStyles()void ViewStyle::
ReleaseId(FontID fid_)void FontCached::
ReloadProperties()void SciTEBase::
Remove()void FilePath::
Remove(Pane p, int start, int end)void SciTEBase::
Remove(T &s, const T &sFind)int 
RemoveAll()	void 
RemoveAllTabs()void SciTEGTK::
RemoveAllTabs()void SciTEWin::
RemoveAt(T_POSITION position)	void 
RemoveAt(int nIndex, int nCount = 1)	void 
RemoveBuffer(int)	virtual bool 
RemoveBuffer(int index)bool LuaExtension::
RemoveBuffer(int index)bool MultiplexExtension::
RemoveCurrent()void BufferList::
RemoveDuplicates()void Selection::
RemoveEscSeq(std::string &s)static void 
RemoveFileFromStack(const FilePath &file)void SciTEBase::
RemoveFindMarks()void SciTEBase::
RemoveHandle(int handle)void MarkerHandleSet::
RemoveHead()	TYPE 
RemoveInvisible(int index)void BufferList::
RemoveKey(ARG_KEY key)	bool 
RemoveLine(Sci::Line line)void LineVector::
RemoveLine(Sci::Line line)void Document::
RemoveLine(Sci::Line line)void LineAnnotation::
RemoveLine(Sci::Line line)void LineLevels::
RemoveLine(Sci::Line line)void LineMarkers::
RemoveLine(Sci::Line line)void LineState::
RemoveLine(Sci::Line line)void LineTabstops::
RemoveNumber(int markerNum, bool all)bool MarkerHandleSet::
RemovePartition(int partition)	void 
RemoveRun(int run)void RunStyles::
RemoveRunIfEmpty(int run)void RunStyles::
RemoveRunIfSameAsPrevious(int run)void RunStyles::
RemoveSelection(AtkText *text, gint selection_num)gboolean ScintillaGTKAccessible::AtkTextIface::
RemoveSelection(gint selection_num)gboolean ScintillaGTKAccessible::
RemoveSendPipes()static void 
RemoveStringOnce(std::string &s, const char *marker)bool 
RemoveTail()	TYPE 
RemoveText(int position)void WComboBoxEntry::
RemoveToolsMenu()void SciTEBase::
RemoveWatcher(DocWatcher *watcher, void *userData)bool Document::
Replace()void SciTEGTK::
Replace()void SciTEWin::
ReplaceAll(bool inSelection)int SciTEBase::
ReplaceAllCmd()void ReplaceStrip::
ReplaceCmd()void ReplaceStrip::
ReplaceDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
ReplaceInBuffers()int SciTEBase::
ReplaceInSelectionCmd()void ReplaceStrip::
ReplaceMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
ReplaceOnce(bool showWarnings)void SciTEBase::
ReplaceREInFile(path, match, replace)def 
ReplaceStrip()	
ReplaceStrip()	
ReplaceTarget(bool replacePatterns, const char *text, Sci::Position length)Sci::Position Editor::
Representation(const char *value=Ó)	explicit 
RepresentationFromCharacter(const char *charBytes, size_t len)const Representation
Reset()	void 
ResetClock()void PositionCacheEntry::
ResetDefaultStyle()void ViewStyle::
ResetExecution()void SciTEGTK::
ResetExecution()void SciTEWin::
Resize(int width, int height)void ScintillaGTK::
Resize(int maxLineLength_)void LineLayout::
Resize(int rows_, int columns_)void WTable::
ResizeToCursor()void ListBoxX::
ResourcesRelease(bool fromDllMain)static int 
ResponseButton(const GUI::gui_string &text, int responseID)GtkWidget
RestoreBracesHighlight(Range rangeLine, const Sci::Position braces[], bool ignoreStyle)void LineLayout::
RestoreFromSession(const Session &session)void SciTEBase::
RestoreFromTray()void SciTEWin::
RestorePosition()void SciTEWin::
RestoreRecentMenu()void SciTEBase::
RestoreSession()void SciTEBase::
RestoreState(const Buffer &buffer, bool restoreBookmarks)void SciTEBase::
RestrictDLLPath()static void 
Retrieve(Sci::Line lineNumber, Sci::Line lineCaret, int maxChars, int styleClock_, Sci::Line linesOnScreen, Sci::Line linesInDoc)LineLayout
Retrieve(unsigned int styleNumber_, const char *s_, unsigned int len_, XYPOSITION *positions_)bool PositionCacheEntry::
RetrieveLineLayout(Sci::Line lineNumber, const EditModel &model)LineLayout
Revert()void SciTEBase::
RightButtonDownWithModifiers(Point pt, unsigned int, int modifiers)void Editor::
RightButtonDownWithModifiers(Point pt, unsigned int curTime, int modifiers)void ScintillaBase::
RoomFor(int insertionLength)	void 
RootLength()int FilePath::
RotateMain()void Selection::
RoundFloat(float f)static float 
RoundXYPosition(XYPOSITION xyPos)inline int 
RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceImpl::
RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceD2D::
RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back)void SurfaceGDI::
Run(int argc, char *argv[])void SciTEGTK::
Run(const GUI::gui_char *cmdLine)void SciTEWin::
RunFromPosition(int position)int RunStyles::
RunStyles()::
Runs()int RunStyles::
SPositionFromLineX(Surface *surface, const EditModel &model, Sci::Line lineDoc, int x, const ViewStyle &vs)SelectionPosition EditView::
SPositionFromLineX(Sci::Line lineDoc, int x)SelectionPosition Editor::
SPositionFromLocation(Surface *surface, const EditModel &model, PointDocument pt, bool canReturnInvalid, bool charPosition, bool virtualSpace, const ViewStyle &vs)SelectionPosition EditView::
SPositionFromLocation(Point pt, bool canReturnInvalid, bool charPosition, bool virtualSpace)SelectionPosition Editor::
SWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ScintillaWin::
SafeGetCharAt(Sci_Position position, char chDefault=Ã)	char 
SafeGetCharAt(int position, char chDefault=Ã)	char 
SafeSegment(const char *text, int length, int lengthSegment)int Document::
SameAs(const FontParameters &fp)bool FontCached::
SameNameAs(const FilePath &other)bool FilePath::
SameNameAs(const GUI::gui_char *other)bool FilePath::
Save(const char *name)const char
Save(SaveFlags sf)bool SciTEBase::
SaveACopy()void SciTEGTK::
SaveACopy()void SciTEWin::
SaveAllBuffers(bool alwaysYes)SciTEBase::SaveResult SciTEBase::
SaveAs(const GUI::gui_char *file, bool fixCase)void SciTEBase::
SaveAsDialog()bool SciTEGTK::
SaveAsDialog()bool SciTEWin::
SaveAsHTML()void SciTEGTK::
SaveAsHTML()void SciTEWin::
SaveAsPDF()void SciTEGTK::
SaveAsPDF()void SciTEWin::
SaveAsRTF()void SciTEGTK::
SaveAsRTF()void SciTEWin::
SaveAsTEX()void SciTEGTK::
SaveAsTEX()void SciTEWin::
SaveAsXML()void SciTEGTK::
SaveAsXML()void SciTEWin::
SaveAsXXX(FileFormat fmt, const char *title, const char *ext)bool SciTEGTK::
SaveBuffer(const FilePath &saveName, SaveFlags sf)bool SciTEBase::
SaveIfNotOpen(const FilePath &destFile, bool fixCase)bool SciTEBase::
SaveIfUnsure(bool forceQuestion, SaveFlags sf)SciTEBase::SaveResult SciTEBase::
SaveIfUnsureAll()SciTEBase::SaveResult SciTEBase::
SaveIfUnsureForBuilt()SciTEBase::SaveResult SciTEBase::
SaveName(const char *ext)FilePath SciTEBase::
SaveSessionDialog()void SciTEGTK::
SaveSessionDialog()	virtual void 
SaveSessionDialog()void SciTEWin::
SaveSessionFile(const GUI::gui_char *sessionName)void SciTEBase::
SaveTitledBuffers()void SciTEBase::
SaveToHTML(const FilePath &saveName)void SciTEBase::
SaveToPDF(const FilePath &saveName)void SciTEBase::
SaveToRTF(const FilePath &saveName, int start, int end)void SciTEBase::
SaveToStreamRTF(std::ostream &os, int start, int end)void SciTEBase::
SaveToTEX(const FilePath &saveName)void SciTEBase::
SaveToXML(const FilePath &saveName)void SciTEBase::
SavingInBackground()bool BufferList::
SciFnDirect(sptr_t ptr, unsigned int iMessage, uptr_t wParam, sptr_t lParam)typedef sptr_t
SciMessageFromEM(unsigned int iMessage)static unsigned int 
SciNotify(GtkWidget *widget, gint code, SCNotification *nt, gpointer data)	static void 
SciNotifyFunc(intptr_t windowid, unsigned int iMessage, uintptr_t wParam, uintptr_t lParam)typedef void
SciTEBase(Extension *ext)::
SciTEGTK(Extension *ext)::
SciTEWin(Extension *ext)::
ScintillaBase()::
ScintillaDocument(QObject *parent, void *pdoc_)::
ScintillaEditBase(QWidget *parent)::
ScintillaFailure(sptr_t status_)	explicit 
ScintillaGTK(_ScintillaObject *sci_)::
ScintillaGTKAccessible(GtkAccessible *accessible_, GtkWidget *widget_)::
ScintillaQt(QAbstractScrollArea *parent)::
ScintillaRectangularMime()	
ScintillaWin(HWND hwnd)::
ScintillaWindow()	
Scintilla_DirectFunction( ScintillaWin *sci, UINT iMessage, uptr_t wParam, sptr_t lParam)sptr_t __stdcall 
Scintilla_LinkLexers()int 
Scintilla_RegisterClasses(void *hInstance)int 
Scintilla_ReleaseResources()int 
ScrollEditorIfNeeded()void SciTEBase::
ScrollEvent(GtkWidget *widget, GdkEventScroll *event)gint ScintillaGTK::
ScrollHSignal(GtkAdjustment *adj, ScintillaGTK *sciThis)void ScintillaGTK::
ScrollMessage(WPARAM wParam)void ScintillaWin::
ScrollRange(SelectionRange range)void Editor::
ScrollSignal(GtkAdjustment *adj, ScintillaGTK *sciThis)void ScintillaGTK::
ScrollText(Sci::Line linesToMove)void ScintillaGTK::
ScrollText(Sci::Line linesToMove)void ScintillaQt::
ScrollText(Sci::Line )void Editor::
ScrollText(Sci::Line )void ScintillaWin::
ScrollTo(Sci::Line line, bool moveThumb)void Editor::
SearchAnchor()void Editor::
SearchFlags(bool regularExpressions)int SciTEBase::
SearchInTarget(const char *text, Sci::Position length)long Editor::
SearchOtherInstance(HWND hWnd, LPARAM lParam)BOOL CALLBACK UniqueInstance::
SearchStrip()	
SearchStripBase()	
SearchText( unsigned int iMessage, uptr_t wParam, sptr_t lParam)long Editor::
SearchUI()	
Searcher()::
Select(int n)void ListBoxX::
Select(int n)void ListBoxImpl::
Select(const char *word)void AutoComplete::
Select(int n)void ListBoxX::
SelectAll()void Editor::
SelectedRange(int position_= INVALID_POSITION, int anchor_= INVALID_POSITION)	
Selection()::
SelectionAdd(AddSelection add)void SciTEBase::
SelectionBackground(const ViewStyle &vsDraw, bool main, bool primarySelection)static ColourDesired 
SelectionBackgroundDrawn()bool ViewStyle::
SelectionChanged()void ScintillaQt::
SelectionClear(GtkWidget *widget, GdkEventSelection *selection_event)gint ScintillaGTK::
SelectionContainsProtected()bool Editor::
SelectionEmpty()bool Editor::
SelectionEnd()SelectionPosition Editor::
SelectionExtend(char ch), bool stripEol )std::string SciTEBase::
SelectionExtend(char ch), bool stripEol = true)	std::string 
SelectionFilename()std::string SciTEBase::
SelectionGet(GtkWidget *widget, GtkSelectionData *selection_data, guint info, guint)void ScintillaGTK::
SelectionIntoFind(bool stripEol )void SciTEBase::
SelectionIntoProperties()void SciTEBase::
SelectionOfGSD(GtkSelectionData *sd)static GdkAtom 
SelectionPosition(Sci::Position position_=INVALID_POSITION, Sci::Position virtualSpace_=0)	explicit 
SelectionRange()	
SelectionRange(Sci::Position caret_, Sci::Position anchor_)	
SelectionRange(SelectionPosition caret_, SelectionPosition anchor_)	
SelectionRange(Sci::Position single)	explicit 
SelectionRange(SelectionPosition single)	explicit 
SelectionReceived(GtkWidget *widget, GtkSelectionData *selection_data, guint)void ScintillaGTK::
SelectionSegment()	
SelectionSegment(SelectionPosition a, SelectionPosition b)	
SelectionStart()SelectionPosition Editor::
SelectionText()	
SelectionToHangul()void ScintillaWin::
SelectionWord(bool stripEol )std::string SciTEBase::
Send(unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWindow::
Send(Pane p, unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t SciTEBase::
Send(unsigned int msg, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWindow::
SendCommands(const char *cmdLine)void UniqueInstance::
SendDirector(const char *verb, const char *arg = 0)static void 
SendDirector(const char *verb, sptr_t arg)static void 
SendFileName(int sendPipe, const char* filename)void SciTEGTK::
SendOneProperty(const char *kind, const char *key, const char *val)void SciTEBase::
SendPipeAvailable()static bool 
SendPipeCommand(const char *pipeCommand)static bool 
SendProperty(const char *prop)bool DirectorExtension::
SendProperty(const char *)	virtual bool 
SendProperty(const char *prop)bool MultiplexExtension::
SendProperty(const char *prop)bool DirectorExtension::
SendScintilla( WindowID w, unsigned int msg, unsigned long wParam, long lParam)long Platform::
SendScintilla(WindowID , unsigned int , unsigned long , long )long Platform::
SendScintilla(WindowID w, unsigned int msg, unsigned long wParam, long lParam)long Platform::
SendScintillaPointer( WindowID w, unsigned int msg, unsigned long wParam, void *lParam)long Platform::
SendScintillaPointer(WindowID , unsigned int , unsigned long , void * )long Platform::
SendScintillaPointer(WindowID w, unsigned int msg, unsigned long wParam, void *lParam)long Platform::
Sensitive()bool WBase::
SeqEnd(int ch)static bool 
Set(const char *val)	void 
Set(long lcol)	void 
Set(unsigned int red, unsigned int green, unsigned int blue)	void 
Set(T *base, const char *val)		bool 
Set(const char *key, const char *val, int lenKey, int lenVal)void PropSimple::
Set(const char *keyVal)void PropSimple::
Set(int position, T value)	void 
Set(const char *s)void WordList::
Set(LineLayout *ll_)	void 
Set(unsigned int styleNumber_, const char *s_, unsigned int len_, XYPOSITION *positions_, unsigned int clock_)void PositionCacheEntry::
Set(int control, const char *value)void UserStrip::
Set(FilePath const &directory, FilePath const &name)void FilePath::
Set(FilePath const &other)void FilePath::
Set(const GUI::gui_char *fileName_)void FilePath::
Set(const char *key, const char *val, ptrdiff_t lenKey, ptrdiff_t lenVal)void PropFile::
Set(const char *keyVal)void PropFile::
Set(const char *s)void StringList::
Set(const std::vector<char> &data)void StringList::
Set(int control, const char *value)void UserStrip::
SetAboutMessage(GUI::ScintillaWindow &wsci, const char *appTitle)void SciTEBase::
SetAboutStyle(GUI::ScintillaWindow &wsci, int style, Colour fore)static void 
SetAccessibility()void ScintillaGTKAccessible::
SetActive(bool active)void WCheckDraw::
SetActive(bool active)void WToggle::
SetAdjustmentValue(GtkAdjustment *object, int value)static void 
SetAnnotationHeights(Sci::Line start, Sci::Line end)void Editor::
SetAnnotationVisible(int visible)void Editor::
SetAt(ARG_KEY key, ARG_VALUE newValue)	void 
SetAt(T_POSITION pos, ARG_TYPE newElement)	void 
SetAt(int nIndex, ARG_TYPE newElement)	void 
SetAverageCharWidth(int width)void ListBoxX::
SetAverageCharWidth(int )void ListBoxImpl::
SetAverageCharWidth(int width)void ListBoxX::
SetBraceHighlight(Sci::Position pos0, Sci::Position pos1, int matchStyle)void Editor::
SetBracesHighlight(Range rangeLine, const Sci::Position braces[], char bracesMatchStyle, int xHighlight, bool ignoreStyle)void LineLayout::
SetBuffersMenu()void SciTEBase::
SetCairoColour(cairo_t *cr, long co)static void 
SetCancelFlag(long value)	long 
SetCandidateWindowPos()void ScintillaGTK::
SetCandidateWindowPos()void ScintillaWin::
SetCaretAsStart()void SciTEBase::
SetCaretOffset(AtkText *text, gint offset)gboolean ScintillaGTKAccessible::AtkTextIface::
SetCaretOffset(int charOffset)gboolean ScintillaGTKAccessible::
SetCaseFolder(CaseFolder *pcf_)void Document::
SetCaseSensitiveFilenames(bool caseSensitiveFilenames_)	static void 
SetChangeFunction(ChangeFunction cdfn_, void *user_)void WCheckDraw::
SetCharClasses(const unsigned char *chars, cc newCharClass)void CharClassify::
SetCharClasses(const unsigned char *chars, CharClassify::cc newCharClass)void Document::
SetCheck(int id, bool value)	void 
SetClickNotified(bool notified)	void 
SetClip(PRectangle rc)void SurfaceImpl::
SetClip(PRectangle rc)void SurfaceD2D::
SetClip(PRectangle rc)void SurfaceGDI::
SetClip(UINT uFormat)	void 
SetCoalescableTimerSig(WINAPI *SetCoalescableTimerSig)typedef UINT_PTR
SetCodePage(int codePage_)	void 
SetCodec(Font &font)void SurfaceImpl::
SetComboFromMemory(GUI::Window w, const ComboMemory &mem)static void 
SetCompleted()	void 
SetConverter(int characterSet_)void SurfaceImpl::
SetCtrlID(int identifier)void Editor::
SetCtrlID(int identifier)void ScintillaWin::
SetCurrent(int index)void BufferList::
SetCurrentIndicator(int indicator)void DecorationList::
SetCurrentValue(int value)void DecorationList::
SetCursor(Cursor curs)void Window::
SetDBCSCodePage(int dbcsCodePage_)bool Document::
SetDBCSMode(int codePage)void SurfaceImpl::
SetDBCSMode(int codePage_)void SurfaceImpl::
SetDBCSMode(int codePage_)void SurfaceD2D::
SetDBCSMode(int codePage_)void SurfaceGDI::
SetDefaultCharClasses(bool includeWordClass)void CharClassify::
SetDefaultCharClasses(bool includeWordClass)void Document::
SetDescription(const char *description)void UserStrip::
SetDirectory(FilePath const &directory)void FilePath::
SetDocPointer(Document *document)void ScintillaGTK::
SetDocPointer(Document *document)void Editor::
SetDocumentAt(int index, bool updateStack)void SciTEBase::
SetDoubleClickAction(CallBackAction action, void *data)void ListBoxImpl::
SetDragPosition(SelectionPosition newPos)void Editor::
SetEmptySelection(Sci::Position currentPos_)void Editor::
SetEmptySelection(SelectionPosition currentPos_)void Editor::
SetEol()void SciTEBase::
SetErrorStatus(int status)void SCI_METHOD Document::
SetExecuting(bool state)	void 
SetExpanded(Sci::Line lineDoc, bool isExpanded)bool ContractionState::
SetExtender(Extension *extender_)void UserStrip::
SetExternal(GetLexerFactoryFunction fFactory, int index)void ExternalLexerModule::
SetFileName(const FilePath &openName, bool fixCase)void SciTEBase::
SetFileProperties(PropSetFile &ps)void SciTEGTK::
SetFileProperties( PropSetFile &ps)void SciTEWin::
SetFileStackMenu()void SciTEBase::
SetFillUpChars(const char *fillUpChars_)void AutoComplete::
SetFilter(const std::string &sExcludes, const std::string &sIncludes)void ImportFilter::
SetFind(const char *sFind)void SciTEBase::
SetFindText(const char *sFind)void SciTEBase::
SetFlags(int attributes_)void Indicator::
SetFocus(GUI::ScintillaWindow &w)void 
SetFocusState(bool focusState)void Editor::
SetFoldDisplayText(Sci::Line lineDoc, const char *text)bool ContractionState::
SetFoldExpanded(Sci::Line lineDoc, bool expanded)void Editor::
SetFont(Font &font)void ListBoxX::
SetFont(Font &)void Window::
SetFont(Font &font)void ListBoxImpl::
SetFont(Font &font)void SurfaceImpl::
SetFont(Font &font)void Window::
SetFont(Font &font)void ListBoxX::
SetFont(Font &font_)void SurfaceD2D::
SetFont(Font &font_)void SurfaceGDI::
SetFont(Font &font)void Window::
SetFontHandle(const GUI::Window &w, HFONT hfont)static void 
SetForeBack( ColourDesired fore, ColourDesired back)void ListBoxX::
SetForeBack( ColourDesired fore, ColourDesired back)void AutoComplete::
SetForeBack(const ColourDesired &fore, const ColourDesired &back)void CallTip::
SetForeBack( ColourDesired fore, ColourDesired back)void ListBoxX::
SetFromListText()void StringList::
SetGrowSize(int growSize_)	void 
SetHeight(Sci::Line lineDoc, int height)bool ContractionState::
SetHighlight(int start, int end)void CallTip::
SetHomeProperties()void SciTEBase::
SetHorizontalScrollPos()void ScintillaGTK::
SetHorizontalScrollPos()void ScintillaQt::
SetHorizontalScrollPos()void ScintillaWin::
SetHotSpotRange(Point *pt)void Editor::
SetHoverIndicatorPoint(Point pt)void Editor::
SetHoverIndicatorPosition(Sci::Position position)void Editor::
SetID(FontID fid_)	void 
SetID(WindowID wid_)	void 
SetIcon()void SciTEGTK::
SetIdentifiers(int style, const char *identifiers)	void 
SetIdentifiers(int style, const char *identifiers)void LexState::
SetIdle(bool on)bool ScintillaGTK::
SetIdle(bool on)bool ScintillaQt::
SetIdle(bool )	virtual bool 
SetIdle(bool on)bool ScintillaWin::
SetIdler(bool on)void SciTEGTK::
SetIdler(bool on)void SciTEBase::
SetImportMenu()void SciTEBase::
SetIncrementalBehaviour(int behaviour)void FindReplaceStrip::
SetIndentSettings()void SciTEBase::
SetInteger(const char *key, int i)void PropSetFile::
SetItemText(int id, const GUI::gui_char *s)	void 
SetItemTextU(int id, const std::string &s)	void 
SetLanguageMenu()void SciTEBase::
SetLastXChosen()void Editor::
SetLevel(Sci_Position line, int level)	void 
SetLevel(Sci_Position line, int level)int SCI_METHOD Document::
SetLevel(Sci::Line line, int level, Sci::Line lines)int LineLevels::
SetLevel(int level_)void LineLayoutCache::
SetLevel(int line, int level)void StyleWriter::
SetLevelAt(lua_State *L)	static int 
SetLexInterface(LexInterface *pLexInterface)void Document::
SetLexer(uptr_t wParam)void LexState::
SetLexerLanguage(const char *languageName)void LexState::
SetLexerModule(const LexerModule *lex)void LexState::
SetLineEndTypesAllowed(int lineEndBitSet_)bool Document::
SetLineIndentation(Sci::Line line, Sci::Position indent)Sci::Position Document::
SetLineIndentation(int line, int indent)void SciTEBase::
SetLineNumberWidth()void SciTEBase::
SetLineStart(Sci::Line line, Sci::Position position)void LineVector::
SetLineStart(int line, int start)void LineLayout::
SetLineState(Sci_Position line, int state)	int 
SetLineState(Sci_Position line, int state)int SCI_METHOD Document::
SetLineState(Sci::Line line, int state)int LineState::
SetLineState(lua_State *L)	static int 
SetLineState(int line, int state)int StyleWriter::
SetList(const char *listText, char separator, char typesep)void ListBoxX::
SetList(const char *list, char separator, char typesep)void ListBoxImpl::
SetList(const char *list)void AutoComplete::
SetList(const char *list, char separator, char typesep)void ListBoxX::
SetList(int control, const char *value)void UserStrip::
SetLocalizer(ILocalize *localiser_)	void 
SetLogFont(LOGFONTW &lf, const char *faceName, int characterSet, float size, int weight, bool italic, int extraFontFlag)static void 
SetMain(size_t r)void Selection::
SetMenuItem(int, int, int itemID, const char *text, const char *mnemonic)void SciTEGTK::
SetMenuItem(int menuNumber, int position, int itemID, const GUI::gui_char *text, const GUI::gui_char *mnemonic)void SciTEWin::
SetMenuItemLocalised(int menuNumber, int position, int itemID, const char *text, const char *mnemonic)void SciTEBase::
SetMenuItemNew(int, int, int, int itemID, const char *text, const char *mnemonic)void SciTEGTK::
SetMenuItemNew(int menuNumber, int subMenuNumber, int position, int itemID, const GUI::gui_char *text, const GUI::gui_char *mnemonic)void SciTEWin::
SetMissing(const std::string &missing_)	void 
SetMnemonicFor(WBase &w)void WStatic::
SetMouseCapture(bool on)void ScintillaGTK::
SetMouseCapture(bool on)void ScintillaQt::
SetMouseCapture(bool on)void ScintillaWin::
SetMoveExtends(bool moveExtends_)void Selection::
SetMultiple(const char *s)void PropSetSimple::
SetOneIndicator(GUI::ScintillaWindow &win, int indicator, const IndicatorDefinition &ind)void SciTEBase::
SetOneStyle(GUI::ScintillaWindow &win, int style, const StyleDefinition &sd)void SciTEBase::
SetOutputVisibility(bool show)void SciTEBase::
SetOverrideLanguage(int cmdID)void SciTEBase::
SetPaneFocus(bool editPane)void SciTEBase::
SetPartitionStartPosition(int partition, int pos)	void 
SetPerLine(PerLine *pl)void LineVector::
SetPhasesDraw(int phases)bool EditView::
SetPixel(int x, int y, ColourDesired colour, int alpha)void RGBAImage::
SetPosition(PRectangle rc)void Window::
SetPosition(bool aboveText)void CallTip::
SetPosition(Sci::Position position_)	void 
SetPosition(PRectangle rc)void Window::
SetPosition(Rectangle rc)void Window::
SetPositionRelative(PRectangle rc, Window relativeTo)void Window::
SetProgress(const GUI::gui_string &explanation, size_t size, size_t progress)void BackgroundStrip::
SetPropertiesInitial()void SciTEBase::
SetProperty(const char *key, const char *val)void SciTEBase::
SetRGBAImage(Point sizeRGBAImage, float scale, const unsigned char *pixelsRGBAImage)void LineMarker::
SetReadOnly(bool set)	void 
SetRectangularRange()void Editor::
SetRedraw(bool on)void ListBoxX::
SetReplace(const char *sReplace)void SciTEBase::
SetRepresentation(const char *charBytes, const char *value)void SpecialRepresentations::
SetRepresentations()void Editor::
SetSavePoint()void Document::
SetScale()void SurfaceD2D::
SetScaleFactor(int scale)void SciTEWin::
SetSciTE(SciTEGTK *pSciTEGTK_)void UserStrip::
SetSciTE(SciTEWin *pSciTEWin_)	void 
SetSciTE(SciTEWin *pSciTEWin_)void UserStrip::
SetScrollBars()void Editor::
SetScrollInfo(int nBar, LPCSCROLLINFO lpsi, BOOL bRedraw)int ScintillaWin::
SetSearcher(Searcher *pSearcher_)	void 
SetSelection(AtkText *text, gint selection_num, gint start, gint end)gboolean ScintillaGTKAccessible::AtkTextIface::
SetSelection(gint selection_num, int startChar, int endChar)gboolean ScintillaGTKAccessible::
SetSelection(Sci::Position currentPos_, Sci::Position anchor_)void Editor::
SetSelection(SelectionPosition currentPos_)void Editor::
SetSelection(SelectionPosition currentPos_, SelectionPosition anchor_)void Editor::
SetSelection(int currentPos_)void Editor::
SetSelection(SelectionRange range)void Selection::
SetSelection(int anchor, int currentPos)void SciTEBase::
SetSelectionNMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam)void Editor::
SetSeparator(char separator_)void AutoComplete::
SetSize(size_t size_)void PositionCache::
SetSizeJob(size_t size)	void 
SetStartupTime(const char *timestamp)void SciTEGTK::
SetState(int state_)	void 
SetState(lua_State *L)	static int 
SetStatusBarText(const char *s)void SciTEGTK::
SetStatusBarText(const char *s)void SciTEWin::
SetStopChars(const char *stopChars_)void AutoComplete::
SetStyle(Sci::Line line, int style)void LineAnnotation::
SetStyleBlock(GUI::ScintillaWindow &win, const char *lang, int start, int last)void SciTEBase::
SetStyleFontName(int styleIndex, const char *name)void ViewStyle::
SetStyleFor(Sci_Position length, char style)bool SCI_METHOD Document::
SetStyleFor(GUI::ScintillaWindow &win, const char *lang)void SciTEBase::
SetStyles(Sci_Position length, const char *styles)bool SCI_METHOD Document::
SetStyles(Sci::Line line, const unsigned char *styles)void LineAnnotation::
SetTabSize(int tabSz)void CallTip::
SetText(Sci::Line line, const char *text)void LineAnnotation::
SetText(const GUI::gui_char *text)void WComboBoxEntry::
SetText(const GUI::gui_char *text)void WEntry::
SetTextContents(AtkEditableText *text, const gchar *contents)void ScintillaGTKAccessible::AtkEditableTextIface::
SetTextContents(const gchar *contents)void ScintillaGTKAccessible::
SetTextProperties( PropSetFile &ps)void SciTEBase::
SetTheme()void Strip::
SetTicking(bool )void Editor::
SetTimeFromFile()	void 
SetTitle(const char *s)void Window::
SetTitle(const gui_char *s)void Window::
SetToggles()void FindStrip::
SetToggles()void ReplaceStrip::
SetToolBar()	void 
SetToolBar()void SciTEWin::
SetToolsMenu()void SciTEBase::
SetTopLine(Sci::Line topLineNew)void Editor::
SetTrackMouseLeaveEvent(bool on)void ScintillaWin::
SetTranslation(char ch, char chTranslation)void CaseFolderTable::
SetTwoPhaseDraw(bool twoPhaseDraw)bool EditView::
SetTypesep(char separator_)void AutoComplete::
SetUndoCollection(bool collectUndo)	bool 
SetUnicodeMode(bool unicodeMode_)void SurfaceImpl::
SetUnicodeMode(bool unicodeMode_)void SurfaceD2D::
SetUnicodeMode(bool unicodeMode_)void SurfaceGDI::
SetValid(GtkEntry *entry, bool valid)void WEntry::
SetValueAt(int position, int value)void RunStyles::
SetValueAt(int position, ParamType &&value)	void 
SetValueAt(int position, ParamType&& v)	void 
SetVerticalScrollPos()void ScintillaGTK::
SetVerticalScrollPos()void ScintillaQt::
SetVerticalScrollPos()void ScintillaWin::
SetView()void DecorationList::
SetVirtualSpace(Sci::Position virtualSpace_)	void 
SetVisible(Sci::Line lineDocStart, Sci::Line lineDocEnd, bool isVisible)bool ContractionState::
SetVisible(int index, bool visible)void BufferList::
SetVisibleRows(int rows)void ListBoxX::
SetVisibleRows(int rows)void ListBoxImpl::
SetVisibleRows(int rows)void ListBoxX::
SetWindowID(HWND hWnd, int identifier)static void 
SetWindowName()void SciTEBase::
SetWindowPointer(HWND hWnd, void *ptr)static void 
SetWindowPointer(HWND hWnd, void *ptr)void 
SetWordList(int n, const char *wl)void LexState::
SetWords(const char *s)	char
SetWorkingDirectory()bool FilePath::
SetWrapIndentMode(int wrapIndentMode_)bool ViewStyle::
SetWrapState(int wrapState_)bool ViewStyle::
SetWrapVisualFlags(int wrapVisualFlags_)bool ViewStyle::
SetWrapVisualFlagsLocation(int wrapVisualFlagsLocation_)bool ViewStyle::
SetWrapVisualStartIndent(int wrapVisualStartIndent_)bool ViewStyle::
SetXPM(const char *const *linesForm)void LineMarker::
SetXPM(const char *textForm)void LineMarker::
SetXYScroll(XYScrollPosition newXY)void Editor::
SetterFunction()	IFaceFunction 
SetupChild(gpointer )static void 
SetupConversions(enum CaseConversion conversion)void 
SetupFormat(Sci_RangeToFormat &frPrint, GtkPrintContext *context)void SciTEGTK::
ShellEscape(const char *toEscape)static std::string 
ShellExec(const std::string &cmd, const char *dir)void SciTEWin::
ShiftTab(int indexFrom, int indexTo)void SciTEBase::
ShiftTo(int indexFrom, int indexTo)void BufferList::
ShouldClose(bool found)	bool 
ShouldDisplayPopup(Point ptInWindowCoordinates)bool ScintillaBase::
ShouldNotSave()	bool 
Show(Point pt, Window &w)void Menu::
Show(bool show)void Window::
Show(Point pt, Window & )void Menu::
Show(bool show)void Window::
Show(bool show)void AutoComplete::
Show(Point pt, Window &w)void Menu::
Show(bool show)void Window::
Show(Point pt G_GNUC_UNUSED, Window &)void Menu::
Show(bool show)void Window::
Show(int buttonHeight)void FindStrip::
Show(int buttonHeight)void ReplaceStrip::
Show(int buttonHeight)void UserStrip::
Show(int)void Strip::
Show(Point pt, Window &w)void Menu::
Show(bool show)void Window::
Show()void FindStrip::
Show()void ReplaceStrip::
ShowAll()void ContractionState::
ShowAssertionPopUps(bool assertionPopUps_)bool Platform::
ShowAssertionPopUps(bool )bool Platform::
ShowAssertionPopUps(bool assertionPopUps_)bool Platform::
ShowBackgroundProgress(const GUI::gui_string &explanation, size_t size, size_t progress)void SciTEGTK::
ShowBackgroundProgress(const GUI::gui_string & , size_t , size_t )	virtual void 
ShowBackgroundProgress(const GUI::gui_string &explanation, size_t size, size_t progress)void SciTEWin::
ShowCaretAtCurrentPosition()void Editor::
ShowMessages(int line)void SciTEBase::
ShowOutputOnMainThread()void SciTEBase::
ShowOutputOnMainThread()void SciTEWin::
ShowOutputPane()	bool 
ShowPopup()void FindStrip::
ShowPopup()void ReplaceStrip::
ShowPopup()	virtual void 
ShowPopup()void FindStrip::
ShowPopup()void ReplaceStrip::
ShowPopup()void Strip::
ShowStatusBar()void SciTEGTK::
ShowStatusBar()void SciTEWin::
ShowTabBar()void SciTEGTK::
ShowTabBar()void SciTEWin::
ShowToolBar()void SciTEGTK::
ShowToolBar()void SciTEWin::
ShutDown()void SciTEBase::
SigFunction(GtkWidget *w, SciTEGTK *app)typedef void
SignalDestroy(GtkWidget *, Dialog *d)void Dialog::
SimpleAlphaRectangle(Surface *surface, PRectangle rc, ColourDesired fill, int alpha)static void 
SingleBuffer()bool BufferList::
Size()	SIZE_T 
Size()void BackgroundStrip::
Size()void FindStrip::
Size()void ReplaceStrip::
Size()void SearchStrip::
Size()void Strip::
Size()void UserStrip::
SizeAllocate(GtkWidget *widget, GtkAllocation *allocation)void ScintillaGTK::
SizeButton(const GUI::Window &wButton)static SIZE 
SizeContentWindows()void SciTEGTK::
SizeContentWindows()void SciTEWin::
SizeJob()	size_t 
SizeRequest(GtkWidget *widget, GtkRequisition *requisition)void ScintillaGTK::
SizeSubWindows()void SciTEGTK::
SizeSubWindows()void SciTEWin::
Slash(const std::string &s, bool quoteQuotes)std::string 
SortIfNeeded(bool ignoreCase)void StringList::
SortListInsensitive(l)def 
SortWordList(char **words, unsigned int len)static void 
Sorter(AutoComplete *ac_, const char *list_)	
SparseState(int positionFirst_=-1)	explicit 
SparseVector()	
SpecialRepresentations()::
SplitRun(int position)int RunStyles::
SplitVector()	
SplitVectorWithRangeAdd(int growSize_)	explicit 
SptrFromPointer(void *p)inline sptr_t 
SptrFromString(const char *cp)inline sptr_t 
StWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL BaseWin::
StackMenu(int pos)void SciTEBase::
StackMenuNext()void SciTEBase::
StackMenuPrev()void SciTEBase::
StackNext()int BufferList::
StackPrev()int BufferList::
StandardASCII()void CaseFolderTable::
Start()	int 
Start(int styleBase)	int 
Start(Window &parent, int ctrlID, Sci::Position position, Point location, int startLen_, int fontSize_, bool unicodeMode_, int technology_, bool useThickFrame_)void AutoComplete::
Start(int indicator, int position)int DecorationList::
Start()SelectionPosition Selection::
Start()	SelectionPosition 
StartAt(Sci_PositionU start)	void 
StartAt(unsigned int start, char chMask)void StyleWriter::
StartAutoComplete()bool SciTEBase::
StartAutoCompleteWord(bool onlyOneWord)bool SciTEBase::
StartBlockComment()bool SciTEBase::
StartBoxComment()bool SciTEBase::
StartCallTip()bool SciTEBase::
StartDrag()void ScintillaGTK::
StartDrag()void ScintillaQt::
StartDrag()void Editor::
StartDrag()void ScintillaWin::
StartEndDisplayLine(Surface *surface, const EditModel &model, Sci::Position pos, bool start, const ViewStyle &vs)Sci::Position EditView::
StartEndDisplayLine(Sci::Position pos, bool start)Sci::Position Editor::
StartExpandAbbreviation()bool SciTEBase::
StartIdleStyling(bool truncatedLastStyling)void Editor::
StartInsertAbbreviation()bool SciTEBase::
StartMacroList(const char *words)bool SciTEBase::
StartMatch(GUI::ScintillaWindow *pSci_, const std::string &textMatch_, int flagsMatch_, int styleMatch_, int indicator_, int bookMark_)void MatchMarker::
StartPlayMacro()void SciTEBase::
StartRecordMacro()void SciTEBase::
StartResize(WPARAM)	void 
StartResize(WPARAM hitCode)void ListBoxX::
StartRun(int position)int RunStyles::
StartSegment(Sci_PositionU pos)	void 
StartSegment(unsigned int pos)void StyleWriter::
StartStreamComment()bool SciTEBase::
StartStyling(Sci_Position position, char)void SCI_METHOD Document::
StartStyling(lua_State *L)	static int 
StartStyling(unsigned int startPos_, unsigned int length, int initStyle_)	void 
StartsWith(s, prefix)def 
StartsWith(GUI::gui_string const &s, GUI::gui_string const &start)bool 
StartsWith(std::string const &s, const char *start)bool 
State(int position_, T value_)		
State(lua_State *L)	static int 
States()LineState
StaticWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL ListBoxX::
StdStringFromDouble(double d, int precision)std::string 
StdStringFromInteger(int i)std::string 
StdStringFromSizeT(size_t i)std::string 
Stop()void MatchMarker::
StopExecute()void SciTEGTK::
StopExecute()void SciTEWin::
StopRecordMacro()void SciTEBase::
StoreOnClipboard(SelectionText *clipText)void ScintillaGTK::
StringCopy(&dest)[count], const T* source)void 
StringDecode(const std::string &s, int codePage)static std::wstring 
StringDecode(std::string s, int codePage)static std::wstring 
StringEncode(const std::wstring &s, int codePage)static std::string 
StringEncode(std::wstring s, int codePage)static std::string 
StringEqual(const char *a, const char *b, size_t len, bool caseSensitive)static bool 
StringFromDocument(const char *s)QString ScintillaQt::
StringFromEOLMode(int eolMode)const char
StringFromInteger(long i)gui_string 
StringFromLines(const std::vector<int> &lines)std::string 
StringFromLongLong(long long i)gui_string 
StringFromSelectedText(const SelectionText &selectedText)static QString 
StringFromUTF8(const char *s)gui_string 
StringFromUTF8(const std::string &s)gui_string 
StringFromUTF8(const char *s)gui_string 
StringFromUTF8(const std::string &s)gui_string 
StringList(bool onlyLineEnds_ = false)	explicit 
StringMapCase(const std::wstring &ws, DWORD mapFlags)static std::wstring 
StringResult(sptr_t lParam, const char *val)sptr_t Editor::
StringSplit(const T &text, int separator)std::vector
Strip()	
Strip()	
StripDefinition(GUI::gui_string definition)	explicit 
StripHasFocus()bool SciTEGTK::
StripTrailingSpaces()void SciTEBase::
Style(Sci::Line line)int LineAnnotation::
Style()::
Style(const Style &source)::
StyleAndColour()	
StyleAndColour(0, 0, 0))	
StyleAndWords()	
StyleAreaBounded(PRectangle rcArea, bool scrolling)void Editor::
StyleAt(Sci::Position position, bool ensureStyle = false)	int 
StyleAt(Sci_Position position)	char 
StyleAt(Sci_Position position)	char SCI_METHOD 
StyleAt(size_t i)	size_t 
StyleAt(lua_State *L)	static int 
StyleAt(int position)int TextReader::
StyleContext(Sci_PositionU startPos, Sci_PositionU length, int initStyle, LexAccessor &styler_, char chMask=Ã)	
StyleDefinition(const char *definition)::
StyleDefinitionFor(int style)StyleDefinition SciTEBase::
StyleFromSubStyle(int subStyle)int LexState::
StyleGetMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t Editor::
StyleIdle(gpointer pSci)gboolean ScintillaGTK::
StyleIndexAt(Sci_Position position)	int 
StyleSet(GtkWidget *w, GtkStyle*, void*)static void 
StyleSetMessage(unsigned int iMessage, uptr_t wParam, sptr_t lParam)void Editor::
StyleSetText(GtkWidget *widget, GtkStyle *, void*)void ScintillaGTK::
StyleString(const char *lang, int style)std::string SciTEBase::
StyleToAdjustingLineDuration(Sci::Position pos)void Document::
StyleToPositionInView(Sci::Position pos)void Editor::
StyleWriter(GUI::ScintillaWindow &sw_)::
StyledText(size_t length_, const char *text_, bool multipleStyles_, int style_, const unsigned char *styles_)	
Styles(Sci::Line line)const unsigned char
SubLineRange(int subLine)Range LineLayout::
SubStyles(const char *baseStyles_, int styleFirst_, int stylesAvailable_, int secondaryDistance_)	
SubStylesLength(int styleBase)int LexState::
SubStylesStart(int styleBase)int LexState::
Substitute(std::string &s, const std::string &sFind, const std::string &sReplace)int 
Substitute(std::wstring &s, const std::wstring &sFind, const std::wstring &sReplace)int 
SubstituteByPosition(Document *doc, const char *text, Sci::Position *length)const char
SubstituteByPosition(const char *text, Sci::Position *length)const char
SubstituteMarkerIfEmpty(int markerCheck, int markerDefault, const ViewStyle &vs)static int 
SubsystemFromChar(char c)JobSubsystem 
SubsystemType(const char *cmd)JobSubsystem SciTEBase::
Succeeded()	bool 
Surface()	
Surface(const Surface &)	
SurfaceD2D()::
SurfaceGDI()::
SurfaceImpl()::
SurfaceImpl()::
Swap()void SelectionRange::
Swap(int indexA, int indexB)void BufferList::
SwitchDocumentAt(int index, sptr_t pdoc)void SciTEBase::
TArray()	
TList()	
TMap()	
TWndProc( HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT PASCAL SciTEWin::
Tab(bool forwards)void Strip::
TabAtPoint(HWND hWnd, GUI::Point pt)int 
TabBarRelease(GtkNotebook *notebook, GdkEventButton *event)gint SciTEGTK::
TabBarReleaseSignal(GtkNotebook *notebook, GdkEventButton *event, SciTEGTK *scitew)	static gint 
TabBarScroll(GdkEventScroll *event)gint SciTEGTK::
TabBarScrollSignal(GtkNotebook *, GdkEventScroll *event, SciTEGTK *scitew)	static gint 
TabInsert(int index, const GUI::gui_char *title)void SciTEGTK::
TabInsert(int index, const GUI::gui_char *title)void SciTEWin::
TabSelect(int index)void SciTEGTK::
TabSelect(int index)void SciTEWin::
TabSizeCmd()void SciTEGTK::
TabSizeConvertCmd()void SciTEGTK::
TabSizeDialog()void SciTEGTK::
TabSizeDialog()void SciTEWin::
TabSizeDlg(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)INT_PTR CALLBACK SciTEWin::
TabSizeMessage(HWND hDlg, UINT message, WPARAM wParam)BOOL SciTEWin::
TabSizeResponse(int responseID)void SciTEGTK::
TabSizeSet(int &tabSize, bool &useTabs)void SciTEGTK::
TabWndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)static LRESULT PASCAL 
TargetAsUTF8(char *text)int ScintillaGTK::
TargetAsUTF8(char *text)Sci::Position ScintillaWin::
Tentative()	bool 
TentativeActive()	bool 
TentativeCommit()	void 
TentativeSelection(SelectionRange range)void Selection::
TentativeStart()	void 
TentativeUndo()void Document::
Text(Sci::Line line)const char
Text()const GUI::gui_char
Text(const char *s, bool retainIfNotFound)GUI::gui_string Localization::
TextBackground(const EditModel &model, const ViewStyle &vsDraw, const LineLayout *ll, ColourOptional background, int inSelection, bool inHotspot, int styleMain, Sci::Position i)static ColourDesired 
TextInset(2, 2)const Point ListBoxX::
TextOfWindow(HWND hWnd)GUI::gui_string 
TextOffset()int ListBoxX::
TextRead(FileWorker *pFileWorker)void SciTEBase::
TextReader(GUI::ScintillaWindow &sw_)::
TextSegment(int start_=0, int length_=0, const Representation *representation_=0)	
TextWide(const char *s, int len, bool unicodeMode, int codePage=0)	
TextWidth(int style, const char *text)int Editor::
TextWritten(FileWorker *pFileWorker)void SciTEBase::
ThinRectangularRange()void Editor::
ThreadLockMinder()	
Tick()void Editor::
TickFor(TickReason reason)void Editor::
TimeCommands()	bool 
TimeOut(gpointer ptt)int ScintillaGTK::
TimeThunk()		
Timer()::
TimerEnd(int mask)void SciTEGTK::
TimerEnd(int )void SciTEBase::
TimerEnd(int mask)void SciTEWin::
TimerStart(int mask)void SciTEGTK::
TimerStart(int )void SciTEBase::
TimerStart(int mask)void SciTEWin::
TimerTick(gpointer pSciTE)gboolean SciTEGTK::
Toggle()void WCheckDraw::
ToggleButton()Gtk
ToggleChanged(WCheckDraw *, void *user)void FindStrip::
ToggleChanged(WCheckDraw *, void *user)void ReplaceStrip::
ToggleFoldRecursive(int line, int level)void SciTEBase::
ToggleHanja()void ScintillaWin::
ToggleOpenFilesHere()void UniqueInstance::
ToggleOutputVisible()void SciTEBase::
Toggled(GtkWidget *, WCheckDraw *pcd)void WCheckDraw::
Token(lua_State *L)	static int 
ToolIsImmediate(int item)bool SciTEBase::
ToolsMenu(int item)void SciTEBase::
TopLineOfMain()Sci::Line Editor::
Trace(const char *s)void SciTEBase::
TrackMouse(GUI::Point pt)void Strip::
TrackMouseEventSig(LPTRACKMOUSEEVENT)typedef BOOL
TransformLineEnds(const char *s, size_t len, int eolModeWanted)std::string Document::
TranslatePath(const char *path)std::string SciTEGTK::
TranslatedLabel(const char *original)GtkWidget
Trim(SelectionRange range)bool SelectionRange::
TrimAndSetSelection(Sci::Position currentPos_, Sci::Position anchor_)void Editor::
TrimOtherSelections(size_t r, SelectionRange range)void Selection::
TrimSelection(SelectionRange range)void Selection::
TypeOfGSD(GtkSelectionData *sd)static GdkAtom 
UIAvailable()void SciTEBase::
UIClosed()void SciTEGTK::
UIClosed()void SciTEBase::
UIClosed()void SciTEWin::
UIHasFocus()void SciTEGTK::
UIHasFocus()void SciTEBase::
UIShouldBeFlat()bool 
UTF16CharLength(wchar_t uch)inline unsigned int 
UTF16FromUTF32Character(unsigned int val, wchar_t *tbuf)unsigned int 
UTF16FromUTF8(const char *s, size_t len, wchar_t *tbuf, size_t tlen)size_t 
UTF16FromUTF8(const char *s, size_t len, gui_char *tbuf, size_t tlen)static size_t 
UTF16Length(const char *s, size_t len)size_t 
UTF16Length(const char *s, size_t len)static size_t 
UTF32Character(const unsigned char *utf8)unsigned int 
UTF32FromUTF8(const char *s, size_t len, unsigned int *tbuf, size_t tlen)size_t 
UTF8BytesOfLeadInitialise()void 
UTF8CharLength(unsigned char ch)unsigned int 
UTF8Classify(const unsigned char *us, int len)int 
UTF8DrawBytes(const unsigned char *us, int len)int 
UTF8FromIconv(const Converter &conv, const char *s, int len)static std::string 
UTF8FromLatin1(const char *s, int len)std::string 
UTF8FromString(const gui_string &s)std::string 
UTF8FromUTF16(const wchar_t *uptr, size_t tlen, char *putf, size_t len)void 
UTF8FromUTF16(const wchar_t *uptr, size_t tlen, char *putf)static void 
UTF8FromUTF32Character(int uch, char *putf)void 
UTF8IsAscii(int ch)inline bool 
UTF8IsNEL(const unsigned char *us)inline bool 
UTF8IsSeparator(const unsigned char *us)inline bool 
UTF8IsTrailByte(int ch)inline bool 
UTF8Iterator(const Document *doc_ = 0, Sci::Position position_ = 0)	
UTF8Iterator(const Document *doc_=0, Sci::Position position_=0)	
UTF8Iterator(const UTF8Iterator &other)	
UTF8Length(const wchar_t *uptr, size_t tlen)size_t 
UTF8Length(const wchar_t *uptr, size_t tlen)static unsigned int 
UnMap(GtkWidget *widget)void ScintillaGTK::
UnMapThis()void ScintillaGTK::
UnRealize(GtkWidget *widget)void ScintillaGTK::
UnRealizeThis(GtkWidget *widget)void ScintillaGTK::
UnRefCursor(GdkCursor *cursor)static void 
UnSlash(char *s)unsigned int 
UnSlashAsNeeded(const std::string &s, bool escapes, bool regularExpression)static std::string 
UnSlashLowOctal(char *s)static unsigned int 
UnSlashLowOctalString(const char *s)std::string 
UnSlashString(const char *s)std::string 
UnclaimSelection(GdkEventSelection *selection_event)void ScintillaGTK::
Undo()Sci::Position Document::
Undo()void Editor::
UndoGroup(Document *pdoc_, bool groupNeeded_=true)	
UnicodeFromUTF8(const unsigned char *us)inline int 
UniqueInstance()::
UniqueStringCopy(const char *text)inline UniqueString 
Unlock()	HGLOBAL 
Unlock()	virtual void 
Unregister()bool ScintillaWin::
Unset(const char *key, int lenKey)void PropSetFile::
UnsetProperty(const char *key)void SciTEBase::
UpdateBuffersCurrent()void SciTEBase::
UpdateCursor()void ScintillaGTKAccessible::
UpdateEmbedded(root, propFiles)def 
UpdateFile(filename, updated)def 
UpdateFileFromLines(path, lines, lineEndToUse)def 
UpdateLineInFile(path, linePrefix, lineReplace)def 
UpdateLineInPlistFile(path, key, value)def 
UpdateOutputSize()bool SciTEGTK::
UpdateProgress(Worker *)void SciTEBase::
UpdateStatusBar(bool bUpdateSlowData)void SciTEGTK::
UpdateStatusBar(bool bUpdateSlowData)void SciTEBase::
UpdateSystemCaret()void Editor::
UpdateSystemCaret()void ScintillaWin::
UpdateVersionNumbers(sci, root)def 
UptrFromString(const char *cp)inline uptr_t 
UseContainerLexing()	bool 
UseStyleCallTip()	bool 
UserControl(UCControlType controlType_, const GUI::gui_string &text_, int item_)	
UserFilePath(const GUI::gui_char *name)FilePath SciTEBase::
UserStrip()	
UserStrip()	
UserStripClosed()void SciTEGTK::
UserStripClosed()void SciTEWin::
UserStripSet(int control, const char *value)void SciTEGTK::
UserStripSet(int control, const char *value)void SciTEWin::
UserStripSetList(int control, const char *value)void SciTEGTK::
UserStripSetList(int control, const char *value)void SciTEWin::
UserStripShow(const char *description)void SciTEGTK::
UserStripShow(const char *description)void SciTEWin::
UserStripValue(int control)const char
UserVirtualSpace()	bool 
Utf16_Iter()::
Utf8_16_Read()::
Utf8_16_Write()::
Utf8_Iter()::
VCHomeDisplayPosition(Sci::Position position)Sci::Position Editor::
VCHomePosition(Sci::Position position)Sci::Position Document::
VCHomeWrapPosition(Sci::Position position)Sci::Position Editor::
VFunction(void)typedef void 
Valid()	bool 
ValidCodePage(int codePage)bool ScintillaGTK::
ValidCodePage(int codePage)bool ScintillaQt::
ValidCodePage(int )	virtual bool 
ValidCodePage(int codePage)bool ScintillaWin::
ValidMargin(uptr_t wParam)bool Editor::
ValidStyle(size_t styleIndex)bool ViewStyle::
ValidStyledText(const ViewStyle &vs, size_t styleOffset, const StyledText &st)bool 
Value()int WEntry::
ValueAt(int position)	T 
ValueAt(int indicator, int position)int DecorationList::
ValueAt(int position)int RunStyles::
ValueAt(int position)	const T
ValueFor(const std::string &s)	int 
ValueOfHex(const char ch)	static inline unsigned int 
VarBuffer(size_t length)	explicit 
VarChain(const char *var_=NULL, const VarChain *link_=NULL)	
VarChain(const char*var_=NULL, const VarChain *link_=NULL)	
Version()int SCI_METHOD LexerBase::
Version()	int SCI_METHOD 
VerticalCentreCaret()void Editor::
View()	const std::vector
ViewStyle()::
ViewStyle(const ViewStyle &source)::
ViewWhitespace(bool view)void SciTEBase::
VirtualSpace()	Sci::Position 
VirtualSpaceFor(Sci::Position pos)Sci::Position Selection::
VisibleHasFocus()bool Strip::
WCheckDraw()::
WTable(int rows_, int columns_)::
WarnUser(int)void SciTEGTK::
WarnUser(int warnID)void SciTEWin::
WatcherHelper(ScintillaDocument *owner_)::
WatcherWithUserData(DocWatcher *watcher_=0, void *userData_=0)		
WeakNotify(gpointer data, GObject *obj)	static void 
WeakNotifyThis(GObject *obj G_GNUC_UNUSED)	void 
WhiteSpaceVisible(bool inIndent)bool ViewStyle::
WhitespaceBackgroundDrawn()bool ViewStyle::
WidestLineWidth(Surface *surface, const ViewStyle &vs, int styleOffset, const StyledText &st)int 
Widget(const GUI::Window &w)inline Gtk
WidgetGetAccessibleImpl(GtkWidget *widget, AtkObject **cache, gpointer widget_parent_class G_GNUC_UNUSED)AtkObject
WidgetHasFocus(UserControl *ctl)static bool 
Width()	XYPOSITION 
Width()	int 
WidthChar(Font &font_, char ch)XYPOSITION SurfaceImpl::
WidthChar(Font &font, char ch)XYPOSITION SurfaceImpl::
WidthChar(Font &font_, char ch)XYPOSITION SurfaceD2D::
WidthChar(Font &font_, char ch)XYPOSITION SurfaceGDI::
WidthControl(GUI::Window &w)static int 
WidthStyledText(Surface *surface, const ViewStyle &vs, int styleOffset, const char *text, const unsigned char *styles, size_t len)static int 
WidthText(Font &font_, const char *s, int len)XYPOSITION SurfaceImpl::
WidthText(Font &font, const char *s, int len)XYPOSITION SurfaceImpl::
WidthText(Font &font_, const char *s, int len)XYPOSITION SurfaceD2D::
WidthText(Font &font_, const char *s, int len)XYPOSITION SurfaceGDI::
WidthText(HFONT hfont, const GUI::gui_char *text)static int 
Win32MapFontQuality(int extraFontFlag)static BYTE 
WinMain(HINSTANCE hInstance, HINSTANCE, LPSTR, int)int PASCAL 
WinMutex()	
Window()	
Window(const Window &source)	
Window()	
WindowCopyData(const char *s, size_t len)void UniqueInstance::
WindowFromWidget(GtkWidget *w)static GdkWindow
WindowMessageBox(GUI::Window &w, const GUI::gui_string &msg, MessageBoxStyle style)SciTEBase::MessageBoxChoice SciTEGTK::
WindowMessageBox(GUI::Window &w, const GUI::gui_string &msg, MessageBoxStyle style)SciTEBase::MessageBoxChoice SciTEWin::
WindowSetFocus(GUI::ScintillaWindow &w)void 
Window_SendMessage(Window *w, UINT msg, WPARAM wParam=0, LPARAM lParam=0)static LRESULT 
WithExtends(unsigned int iMessage)unsigned int 
WithoutUnderscore(const char *s)static std::string 
WndPaint(uptr_t wParam)sptr_t ScintillaWin::
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaGTK::
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaQt::
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t Editor::
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaBase::
WndProc(HWND hWnd, UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT ListBoxX::
WndProc(unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaWin::
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT ContentWin::
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT SciTEWin::
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT BackgroundStrip::
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT SearchStrip::
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT Strip::
WndProc(UINT iMessage, WPARAM wParam, LPARAM lParam)LRESULT UserStrip::
WordAt(int n)const char
WordCharacterClass(unsigned int ch)CharClassify::cc Document::
WordClassifier(int baseStyle_)	explicit 
WordList(bool onlyLineEnds_)::
WordListSet(int n, const char *wl)Sci_Position SCI_METHOD LexerBase::
WordListSet(int n, const char *wl)Sci_Position SCI_METHOD LexerNoExceptions::
WordPartLeft(Sci::Position pos)Sci::Position Document::
WordPartRight(Sci::Position pos)Sci::Position Document::
WordSelection(Sci::Position pos)void Editor::
WorkNeeded()	
Worker()	
WorkerCommand(int cmd, Worker *pWorker)void SciTEBase::
WorkerCommand(int cmd, Worker *pWorker)void SciTEWin::
WorkerThread(void *ptr)static void
WorkerThread(void *ptr)static void 
WrapColour()ColourDesired ViewStyle::
WrapCount(int line)int Editor::
WrapLines(WrapScope ws)bool Editor::
WrapOneLine(Surface *surface, Sci::Line lineToWrap)bool Editor::
WrapPending()	
Wrapped(Sci::Line line)	void 
Wrapping()bool Editor::
XFromPosition(Sci::Position pos)int Editor::
XFromPosition(SelectionPosition sp)int Editor::
XPM(const char *const *linesForm)::
XPM(const char *textForm)::
XYMaximum(XYPOSITION a, XYPOSITION b)static XYPOSITION 
XYMinimum(XYPOSITION a, XYPOSITION b)static XYPOSITION 
XYScrollPosition(int xOffset_, Sci::Line topLine_)		
XYScrollToMakeVisible(const SelectionRange &range, const XYScrollOptions options)Editor::XYScrollPosition Editor::
_SetQtIncludeBase(self, base)	def 
__init__(self)	def 
__init__(self, parent=None)	def 
__init__(self)	def 
__init__(self, scintillaRoot)    def 
__init__(self)	def 
_setPySideBase(self, base)	def 
_try_pkgconfig(var, package, *relpath)		def 
absolute_index(lua_State *L, int index)inline int 
access(const wchar_t *path, int mode)static int 
add_s(MatchState *ms, luaL_Buffer *b, const char *s, const char *e)static void 
add_value(MatchState *ms, luaL_Buffer *b, const char *s, const char *e, int tr)static void 
adddigit(char *buff, int n, lua_Number x)static lua_Number 
addfield(lua_State *L, luaL_Buffer *b, lua_Integer i)static void 
addk(FuncState *fs, TValue *key, TValue *v)static int 
addlenmod(char *form, const char *lenmod)static void 
addliteral(lua_State *L, luaL_Buffer *b, int arg)static void 
addprototype(LexState *ls)static Proto
addquoted(luaL_Buffer *b, const char *s, size_t len)static void 
addtoclib(lua_State *L, const char *path, void *plib)static void 
adjust_assign(LexState *ls, int nvars, int nexps, expdesc *e)static void 
adjust_varargs(lua_State *L, Proto *p, int actual)static StkId 
adjustlocalvars(LexState *ls, int nvars)static void 
andaux(lua_State *L)static lua_Unsigned 
apisKeys())
appName("Sc1")const GUI::gui_char 
appName("SciTE")const GUI::gui_char 
arguments(v, stringResult, options)def 
arrayindex(const TValue *key)static unsigned int 
assignment(LexState *ls, struct LHS_assign *lh, int nvars)static void 
atomic(lua_State *L)static l_mem 
aux_close(lua_State *L)static int 
aux_lines(lua_State *L, int toclose)static void 
aux_upvalue(StkId fi, int n, TValue **val, CClosure **owner, UpVal **uv)static const char
auxgetinfo(lua_State *L, const char *what, lua_Debug *ar, Closure *f, CallInfo *ci)static int 
auxgetstr(lua_State *L, const TValue *t, const char *k)static int 
auxresume(lua_State *L, lua_State *co, int narg)static int 
auxsetstr(lua_State *L, const TValue *t, const char *k)static void 
auxsort(lua_State *L, IdxT lo, IdxT up, unsigned int rnd)static void 
auxupvalue(lua_State *L, int get)static int 
b_and(lua_State *L)static int 
b_arshift(lua_State *L)static int 
b_extract(lua_State *L)static int 
b_lrot(lua_State *L)static int 
b_lshift(lua_State *L)static int 
b_not(lua_State *L)static int 
b_or(lua_State *L)static int 
b_replace(lua_State *L)static int 
b_rot(lua_State *L, lua_Integer d)static int 
b_rrot(lua_State *L)static int 
b_rshift(lua_State *L)static int 
b_shift(lua_State *L, lua_Unsigned r, lua_Integer i)static int 
b_str2int(const char *s, int base, lua_Integer *pn)static const char
b_test(lua_State *L)static int 
b_xor(lua_State *L)static int 
base(propPath)	
base_ci(C calling Lua)  CallInfo 
begin_undo_action()void ScintillaDocument::
block(LexState *ls)static void 
block_follow(LexState *ls, int withuntil)static int 
body(LexState *ls, expdesc *e, int ismethod, int line)static void 
boolK(FuncState *fs, int b)static int 
boxgc(lua_State *L)static int 
braces(contents[curLineNo])						
braces(contents[curLineNo])					
bracesDiff(s)def 
breaklabel(LexState *ls)static void 
buff(lua_Number)  char 
buildEverything(self)	def 
byteoffset(lua_State *L)static int 
c(look ahead)  int 
callClassName("CallTip")const TCHAR 
call_function(lua_State *L, int nargs, bool ignoreFunctionReturnValue=false)static bool 
callallpendingfinalizers(lua_State *L)static void 
callhook(lua_State *L, CallInfo *ci)static void 
canConvert(const QString &mime, QString flav)	bool 
canGet()	bool 
can_redo()bool ScintillaDocument::
can_undo()bool ScintillaDocument::
capture_to_close(MatchState *ms)static int 
categories("..\/lexlib\/CharacterCategory.h")
cell(s)def 
cf_global_dostring(lua_State *L)static int 
cf_global_metatable_index(lua_State *L)static int 
cf_global_print(lua_State *L)static int 
cf_global_trace(lua_State *L)static int 
cf_ifaceprop_metatable_index(lua_State *L)static int 
cf_ifaceprop_metatable_newindex(lua_State *L)static int 
cf_match_metatable_index(lua_State *L)static int 
cf_match_metatable_tostring(lua_State *L)static int 
cf_match_replace(lua_State *L)static int 
cf_pane_append(lua_State *L)static int 
cf_pane_findtext(lua_State *L)static int 
cf_pane_iface_function(lua_State *L)static int 
cf_pane_insert(lua_State *L)static int 
cf_pane_match(lua_State *L)static int 
cf_pane_match_generator(lua_State *L)static int 
cf_pane_metatable_index(lua_State *L)static int 
cf_pane_metatable_newindex(lua_State *L)static int 
cf_pane_remove(lua_State *L)static int 
cf_pane_textrange(lua_State *L)static int 
cf_props_metatable_index(lua_State *L)static int 
cf_props_metatable_newindex(lua_State *L)static int 
cf_scite_apply_properties(lua_State *L)static int 
cf_scite_constname(lua_State *L)static int 
cf_scite_menu_command(lua_State *L)static int 
cf_scite_open(lua_State *L)static int 
cf_scite_send(lua_State *L)static int 
cf_scite_strip_set(lua_State *L)static int 
cf_scite_strip_set_list(lua_State *L)static int 
cf_scite_strip_show(lua_State *L)static int 
cf_scite_strip_value(lua_State *L)static int 
cf_scite_update_status_bar(lua_State *L)static int 
chdir(const wchar_t *dirname)static int 
check(LexState *ls, int c)static void 
checkDocumentation()def 
checkHeader(LoadState *S)static void 
checkSizes(lua_State *L, global_State *g)static void 
checkTypes(name, v)def 
check_capture(MatchState *ms, int l)static int 
check_conflict(LexState *ls, struct LHS_assign *lh, expdesc *v)static void 
check_match(LexState *ls, int what, int who, int where)static void 
check_next1(LexState *ls, int c)static int 
check_next2(LexState *ls, const char *set)static int 
check_pane_object(lua_State *L, int index)static ExtensionAPI::Pane 
checkclib(lua_State *L, const char *path)static void
checkdp(char *buff, int nb)static void 
checkfield(lua_State *L, const char *key, int n)static int 
checklimit(FuncState *fs, int v, int l, const char *what)static void 
checkliteral(LoadState *S, const char *s, const char *msg)static void 
checkload(lua_State *L, int stat, const char *filename)static int 
checkmode(lua_State *L, const char *mode, const char *x)static void 
checkname(LexState *ls, expdesc *e)static void 
checknext(LexState *ls, int c)static void 
checkoption(lua_State *L, const char *conv, ptrdiff_t convlen, char *buff)static const char
checkrepeated(FuncState *fs, Labellist *ll, TString *label)static void 
checkstack(lua_State *L, lua_State *L1, int n)static void 
checktab(lua_State *L, int arg, int what)static void 
checkudata(lua_State *L, int ud, const char *tname)static void
checkupval(lua_State *L, int argf, int argnup)static int 
choosePivot(IdxT lo, IdxT up, unsigned int rnd)static IdxT 
ciCompare(a,b)def 
ciKey(a)def 
ciLexerKey(a)def 
classend(MatchState *ms, const char *p)static const char
cleanEverything(self)	def 
clear_table(lua_State *L, int tableIdx, bool clearMetatable = true)static void 
clearkeys(global_State *g, GCObject *l, GCObject *f)static void 
clearvalues(global_State *g, GCObject *l, GCObject *f)static void 
clone_table(lua_State *L, int srcTableIdx, bool copyMetatable = false)static bool 
close_func(LexState *ls)static void 
close_state(lua_State *L)static void 
closef(NULL for closed streams)  lua_CFunction 
closegoto(LexState *ls, int g, Labeldesc *label)static void 
closelistfield(FuncState *fs, struct ConsControl *cc)static void 
cmpWords(const char *a, const char *b)static bool 
cmpWords(const void *a, const void *b)static int 
code_loadbool(FuncState *fs, int A, int b, int jump)static int 
codebinexpval(FuncState *fs, OpCode op, expdesc *e1, expdesc *e2, int line)static void 
codeclosure(LexState *ls, expdesc *v)static void 
codecomp(FuncState *fs, BinOpr opr, expdesc *e1, expdesc *e2)static void 
codeextraarg(FuncState *fs, int a)static int 
codenot(FuncState *fs, expdesc *e)static void 
codepoint(lua_State *L)static int 
codestring(LexState *ls, expdesc *e, TString *s)static void 
codeunexpval(FuncState *fs, OpCode op, expdesc *e, int line)static void 
collectvalidlines(lua_State *L, Closure *f)static void 
colourNoMatch(0xff,0x66,0x66)static const COLORREF 
command(ScintillaObject *sci, int cmd, GtkWidget *window)	void
computesizes(unsigned int nums[], unsigned int *pna)static unsigned int 
cond(LexState *ls)static int 
condjump(FuncState *fs, OpCode op, int A, int B, int C)static int 
configFileVisibilityString("")const GUI::gui_char 
constfolding(FuncState *fs, int op, expdesc *e1, const expdesc *e2)static int 
constructor(LexState *ls, expdesc *t)static void 
contains(const char *testVar)	bool 
contents(fileName)		
contextMenuEvent(QContextMenuEvent *event)void ScintillaEditBase::
contiguousRanges(l, diff)def 
convergeephemerons(global_State *g)static void 
conversionSets()def 
convert(char* buf, size_t len)size_t Utf8_16_Read::
convertFromMime(const QString & , QVariant data, QString )	QList
convertIFaceTypeToC(t)def 
convertStringResult(s)def 
convertToMime(const QString & , QList<QByteArray> data, QString )	QVariant 
convertorName()	QString 
copy2buff(StkId top, int n, char *buff)static void 
copyScintillaConstants(self)	def 
copy_(void *src)static void
copywithendian(volatile char *dest, volatile const char *src, int size, int islittle)static void 
correctstack(lua_State *L, TValue *oldstack)static void 
countint(const TValue *key, unsigned int *nums)static int 
cppAlias(s)def 
createclibstable(lua_State *L)static void 
createmeta(lua_State *L)static void 
createmetatable(lua_State *L)static void 
createsearcherstable(lua_State *L)static void 
createstdfile(lua_State *L, FILE *f, const char *k, const char *fname)static void 
createstrobj(lua_State *L, size_t l, int tag, unsigned int h)static TString
curDef("0 ")						
curDef("= ")						
curDef("{")						
curDef())					
curDef(')					
curDef(";", '')					
curDef()					
curDef(entityName)					
curLineNo(lineNo[:-2])		
current(charint)  int 
currentline(CallInfo *ci)static int 
currentline(l)  int 
currentpc(CallInfo *ci)static int 
db_debug(lua_State *L)static int 
db_gethook(lua_State *L)static int 
db_getinfo(lua_State *L)static int 
db_getlocal(lua_State *L)static int 
db_getmetatable(lua_State *L)static int 
db_getregistry(lua_State *L)static int 
db_getupvalue(lua_State *L)static int 
db_getuservalue(lua_State *L)static int 
db_sethook(lua_State *L)static int 
db_setlocal(lua_State *L)static int 
db_setmetatable(lua_State *L)static int 
db_setupvalue(lua_State *L)static int 
db_setuservalue(lua_State *L)static int 
db_traceback(lua_State *L)static int 
db_upvalueid(lua_State *L)static int 
db_upvaluejoin(lua_State *L)static int 
decodeEvent(featureVal)def 
decodeFunction(featureVal)def 
decodeParam(p)def 
decoration_fill_range(int position, int value, int fillLength)void ScintillaDocument::
decorations_end(int indic, int position)int ScintillaDocument::
decorations_start(int indic, int position)int ScintillaDocument::
decorations_value_at(int indic, int position)int ScintillaDocument::
defaultSessionFileName("SciTE.session")const GUI::gui_char 
defineTexStyle(const StyleDefinition &style, FILE* fp, int istyle)static void 
delayAlreadyElapsed(or have to be)		
delayJustEnded(SCN_UPDATEUI and SC_UPDATE_CONTENT for setting indicators)		
delete_chars(int pos, int len)bool ScintillaDocument::
delete_undo_history()void ScintillaDocument::
depunctuate(s)def 
destroyDialog(GtkWidget *, gpointer *window)static void 
determineEncoding()int Utf8_16_Read::
digit(int c)static int 
dirname(srcRoot, filename)	
discharge2anyreg(FuncState *fs, expdesc *e)static void 
discharge2reg(FuncState *fs, expdesc *e, int reg)static void 
dischargejpc(FuncState *fs)static void 
distance(s)    def 
docFile(docFileName, "rt")
docFileName(srcRoot, "doc", "SciTEDoc.html")
dofilecont(lua_State *L, int d1, lua_KContext d2)static int 
dooptions(lua_State *L, int n)static void 
dothecall(lua_State *L, void *ud)static void 
doubleBackSlashes(s)def 
doubleFromPangoUnits(int pu)static double 
dragEnterEvent(QDragEnterEvent *event)void ScintillaEditBase::
dragLeaveEvent(QDragLeaveEvent * )void ScintillaEditBase::
dragMoveEvent(QDragMoveEvent *event)void ScintillaEditBase::
draw( float x, float y )    void 
dropEvent(QDropEvent *event)void ScintillaEditBase::
dwordFromBGRA(byte b, byte g, byte r, byte a)static DWORD 
emit_error_occurred(int status)void ScintillaDocument::
emit_lexer_changed()void ScintillaDocument::
emit_modified(int position, int modification_type, const QByteArray& text, int length, int linesAdded, int line, int foldLevelNow, int foldLevelPrev)void ScintillaDocument::
emit_modify_attempt()void ScintillaDocument::
emit_save_point(bool atSavePoint)void ScintillaDocument::
emit_style_needed(int pos)void ScintillaDocument::
end()	int 
endImpl("}")						
end_capture(MatchState *ms, const char *s, const char *p)static const char
end_undo_action()void ScintillaDocument::
ensure_styled_to(int position)void ScintillaDocument::
enterblock(FuncState *fs, BlockCnt *bl, lu_byte isloop)static void 
enterlevel(LexState *ls)static void 
entersweep(lua_State *L)static void 
ephemeron(weak keys)  GCObject
errfile(lua_State *L, const char *what, int fnameindex)static int 
errfunc(stack index)  ptrdiff_t 
error(LoadState *S, const char *why)static l_noret 
error_expected(LexState *ls, int token)static l_noret 
errorlimit(FuncState *fs, int limit, const char *what)static l_noret 
escape(s)def 
escapeValue(unsigned char ch)static unsigned char 
esccheck(LexState *ls, int c, const char *msg)static void 
event(QEvent *event)bool ScintillaEditBase::
event_command(uptr_t wParam, sptr_t lParam)void ScintillaEditBase::
execCommand(QAction *action)void ScintillaQt::
exp1(LexState *ls)static int 
exp2reg(FuncState *fs, expdesc *e, int reg)static void 
explist(LexState *ls, expdesc *v)static int 
expr(LexState *ls, expdesc *v)static void 
exprstat(LexState *ls)static void 
f(NULL for incompletely created streams)  FILE
f_call(lua_State *L, void *ud)static void 
f_flush(lua_State *L)static int 
f_gc(lua_State *L)static int 
f_lines(lua_State *L)static int 
f_luaopen(lua_State *L, void *ud)static void 
f_parser(lua_State *L, void *ud)static void 
f_read(lua_State *L)static int 
f_seek(lua_State *L)static int 
f_setvbuf(lua_State *L)static int 
f_tostring(lua_State *L)static int 
f_write(lua_State *L)static int 
faceFeatures(out)def 
fchecksize(LoadState *S, size_t size, const char *tname)static void 
fclose()int Utf8_16_Write::
field(LexState *ls, struct ConsControl *cc)static void 
fieldargs(lua_State *L, int farg, int *width)static int 
fieldsel(LexState *ls, expdesc *v)static void 
fileRead("rb")const GUI::gui_char 
fileWrite("wb")const GUI::gui_char 
filterpc(int pc, int jmptarget)static int 
findCategories(filename)def 
findfield(lua_State *L, int objidx, int level)static int 
findfile(lua_State *L, const char *name, const char *pname, const char *dirsep)static const char
findgotos(LexState *ls, Labeldesc *lb)static void 
findindex(lua_State *L, Table *t, StkId key)static unsigned int 
findlabel(LexState *ls, int g)static int 
findlast(GCObject **p)static GCObject
findloader(lua_State *L, const char *name)static void 
findlocal(lua_State *L, CallInfo *ci, int n, StkId *pos)static const char
findpcall(lua_State *L)static CallInfo
findsetreg(Proto *p, int lastpc, int reg)static int 
findvararg(CallInfo *ci, int n, StkId *pos)static const char
finishCcall(lua_State *L, int status)static void 
finishpcall(lua_State *L, int status, lua_KContext extra)static int 
firstlocal(in Dyndata array)  int 
fixjump(FuncState *fs, int pc, int dest)static void 
flags(p)  lu_byte 
flatten(listOfLists)def 
flattenSpaces(s)def 
flavorFor(const QString &mime)	QString 
focusInEvent(QFocusEvent *event)void ScintillaEditBase::
focusOutEvent(QFocusEvent *event)void ScintillaEditBase::
fopen(const wchar_t *filename, const wchar_t *mode)static FILE
forbody(LexState *ls, int base, int line, int nvars, int isnum)static void 
forlimit(const TValue *obj, lua_Integer *p, lua_Integer step, int *stopnow)static int 
forlist(LexState *ls, TString *indexname)static void 
fornum(LexState *ls, TString *varname, int line)static void 
forstat(LexState *ls, int line)static void 
freeLclosure(lua_State *L, LClosure *cl)static void 
free_(void *)static void 
freeexp(FuncState *fs, expdesc *e)static void 
freeexps(FuncState *fs, expdesc *e1, expdesc *e2)static void 
freeobj(lua_State *L, GCObject *o)static void 
freereg(FuncState *fs, int reg)static void 
freestack(lua_State *L)static void 
fs(parser)  struct FuncState
funcargs(LexState *ls, expdesc *f, int line)static void 
funcinfo(lua_Debug *ar, Closure *cl)static void 
funcname(LexState *ls, expdesc *v)static int 
funcnamefromcode(lua_State *L, CallInfo *ci, const char **name)static const char
funcstat(LexState *ls, int line)static void 
fwrite(const void* p, size_t _size)size_t Utf8_16_Write::
g_iofile(lua_State *L, const char *f, const char *mode)static int 
g_read(lua_State *L, FILE *f, int first)static int 
g_write(lua_State *L, FILE *f, int arg)static int 
gapLength()	int 
gctm(lua_State *L)static int 
generateAPI(self, args)	def 
generic_reader(lua_State *L, void *ud, size_t *size)static const char
get()	int 
get()	utf8 
getAscent()	float 
getCTLine()    CTLineRef 
getCTStyle()	CFMutableDictionaryRef 
getCharacterSet()	int 
getDescent()	float 
getEncoding()	encodingType 
getF(lua_State *L, void *ud, size_t *size)static const char
getFontID()	CTFontRef 
getFontRef()	CTFontRef 
getLeading()	float 
getNewBuf()	char
getPDFRGB(const char* stylecolour)inline std::string 
getRange(Sci_PositionU start, Sci_PositionU end, LexAccessor &styler, char *s, Sci_PositionU len)static void 
getRangeLowered(Sci_PositionU start, Sci_PositionU end, LexAccessor &styler, char *s, Sci_PositionU len)static void 
getS(lua_State *L, void *ud, size_t *size)static const char
getStringLength()    CFIndex 
getTexRGB(char* texcolor, const char* stylecolor)static char
get_char_range(int position, int length)QByteArray ScintillaDocument::
get_character(int pos)int ScintillaDocument::
get_code_page()int ScintillaDocument::
get_end_styled()int ScintillaDocument::
get_eol_mode()int ScintillaDocument::
getbinopr(int op)static BinOpr 
getboolfield(lua_State *L, const char *key)static int 
getcached(Proto *p, UpVal **encup, StkId base)static LClosure
getco(lua_State *L)static lua_State
getcwd(wchar_t *buffer, int maxlen)static wchar_t
getdebt(global_State *g)static l_mem 
getdetails(Header *h, size_t totalsize, const char **fmt, int *psize, int *ntoalign)static KOption 
getfield(lua_State *L, const char *key, int d, int delta)static int 
getfreepos(Table *t)static Node
getfuncname(lua_State *L, CallInfo *ci, const char **name)static const char
getgeneric(Table *t, const TValue *key)static const TValue
gethexa(LexState *ls)static int 
getiofile(lua_State *L, const char *findex)static FILE
getjump(FuncState *fs, int pc)static int 
getjumpcontrol(FuncState *fs, int pc)static Instruction
getlocvar(FuncState *fs, int i)static LocVar
getnum(const char **fmt, int df)static int 
getnumlimit(Header *h, const char **fmt, int df)static int 
getobjname(Proto *p, int lastpc, int reg, const char **name)static const char
getoption(Header *h, const char **fmt, int *size)static KOption 
getthread(lua_State *L, int *arg)static lua_State
getunopr(int op)static UnOpr 
getupvalname(CallInfo *ci, const TValue *o, const char **name)static const char
getupvalref(lua_State *L, int fidx, int n, LClosure **pf)static UpVal
gmatch(lua_State *L)static int 
gmatch_aux(lua_State *L)static int 
gotostat(LexState *ls, int pc)static void 
grabFile(self, filename)	def 
grabQuoted(s)def 
groupRanges(symmetrics)def 
growstack(lua_State *L, void *ud)static void 
gtkNames()def 
hookf(lua_State *L, lua_Debug *ar)static void 
iconvhBad(-1)const GIConv 
identifier()			
identifiersSorted())
idsFromDocumentation(filename)def 
idx(in stack or in outer function's list)  lu_byte 
idx(R\/K)      short 
iface_function_helper(lua_State *L, const IFaceFunction &func)static int 
ifstat(LexState *ls, int line)static void 
inclinenumber(LexState *ls)static void 
includes(const StyleAndWords &symbols, const std::string &value)static bool 
index2addr(lua_State *L, int idx)static TValue
init(::AtkEditableTextIface *iface)void ScintillaGTKAccessible::AtkEditableTextIface::
init(::AtkTextIface *iface)void ScintillaGTKAccessible::AtkTextIface::
init_exp(expdesc *e, expkind k, int i)static void 
init_pixmap(ListImage *list_image)static void 
init_registry(lua_State *L, global_State *g)static void 
initheader(lua_State *L, Header *h)static void 
inputMethodEvent(QInputMethodEvent *event)void ScintillaEditBase::
inputMethodQuery(Qt::InputMethodQuery query)QVariant ScintillaEditBase::
insert_string(int position, QByteArray &str)void ScintillaDocument::
instack(register)  lu_byte 
intarith(lua_State *L, int op, lua_Integer v1, lua_Integer v2)static lua_Integer 
internshrstr(lua_State *L, const char *str, size_t l)static TString
interror(lua_State *L, int arg)static void 
io_close(lua_State *L)static int 
io_fclose(lua_State *L)static int 
io_flush(lua_State *L)static int 
io_input(lua_State *L)static int 
io_lines(lua_State *L)static int 
io_noclose(lua_State *L)static int 
io_open(lua_State *L)static int 
io_output(lua_State *L)static int 
io_pclose(lua_State *L)static int 
io_popen(lua_State *L)static int 
io_read(lua_State *L)static int 
io_readline(lua_State *L)static int 
io_tmpfile(lua_State *L)static int 
io_type(lua_State *L)static int 
io_write(lua_State *L)static int 
ipairsaux(lua_State *L)static int 
isEncodingChar(char ch)static bool 
isSpaceChar(char ch)static bool 
is_collecting_undo()bool ScintillaDocument::
is_cr_lf(int pos)bool ScintillaDocument::
is_read_only()bool ScintillaDocument::
is_save_point()bool ScintillaDocument::
iscleared(global_State *g, const TValue *o)static int 
isdigitchar(int ch)inline bool 
isfilenamecharforsel(char ch)bool SciTEBase::
isinstack(CallInfo *ci, const TValue *o)static int 
islexerwordcharforsel(char ch)bool SciTEBase::
isneg(const char **s)static int 
isoperator(int ch)inline bool 
isprefix(const char *target, const char *prefix)bool 
isspacechar(int ch)inline bool 
isspacechar(unsigned char ch)inline bool 
istailcall(t)  char 
istrlen(const char *s)static int 
isvararg(u)  char 
iswordc(unsigned char x)	bool 
iswordchar(int ch)inline bool 
iswordcharforsel(char ch)bool SciTEBase::
iswordstart(int ch)inline bool 
iter_aux(lua_State *L)static int 
iter_codes(lua_State *L)static int 
jumponcond(FuncState *fs, expdesc *e, int cond)static int 
key(propLine)			
key(propLine)		
keyOfLine(line)def 
keyPressEvent(QKeyEvent *event)void ScintillaEditBase::
kname(Proto *p, int pc, int c, const char **name)static void 
l_alloc(void *ud, void *ptr, size_t osize, size_t nsize)static void
l_checkmode(const char *mode)static int 
l_checktime(lua_State *L, int arg)static time_t 
l_hashfloat(lua_Number n)static int 
l_randomizePivot(void)static unsigned int 
l_str2d(const char *s, lua_Number *result)static const char
l_str2dloc(const char *s, lua_Number *result, int mode)static const char
l_str2int(const char *s, lua_Integer *result)static const char
l_strcmp(const TString *ls, const TString *rs)static int 
labelstat(LexState *ls, TString *label, int line)static void 
lastlevel(lua_State *L)static int 
lastlinedefined(S)  int 
lastlistfield(FuncState *fs, struct ConsControl *cc)static void 
leaveblock(FuncState *fs)static void 
length()int ScintillaDocument::
level(finished or unfinished)  unsigned char 
lexerror(LexState *ls, const char *msg, int token)static l_noret 
libsize(const luaL_Reg *l)static int 
line('\\\\t')				
line('&','')			
line('...','')			
line(line)		
line("=")		
line()	
line_end(int lineno)int ScintillaDocument::
line_end_position(int pos)int ScintillaDocument::
line_from_position(int pos)int ScintillaDocument::
line_start(int lineno)int ScintillaDocument::
linedefined(S)  int 
lineinfo(debug information)  int
lines_total()int ScintillaDocument::
listSepString(";")const GUI::gui_char 
list_image_free(gpointer, gpointer value, gpointer)static void 
listfield(LexState *ls, struct ConsControl *cc)static void 
literalStrings(localeSet, l)
ll_loadlib(lua_State *L)static int 
ll_module(lua_State *L)static int 
ll_require(lua_State *L)static int 
ll_searchpath(lua_State *L)static int 
ll_seeall(lua_State *L)static int 
llex(LexState *ls, SemInfo *seminfo)static int 
lmemfind(const char *s1, size_t l1, const char *s2, size_t l2)static const char
load_aux(lua_State *L, int status, int envidx)static int 
loadfunc(lua_State *L, const char *filename, const char *modname)static int 
localfunc(LexState *ls)static void 
localstat(LexState *ls)static void 
locvars(debug information)  LocVar
lookforfunc(lua_State *L, const char *path, const char *sym)static int 
lsys_load(lua_State *L, const char *path, int seeglb)static void
lsys_sym(lua_State *L, void *lib, const char *sym)static lua_CFunction 
lsys_unloadlib(void *lib)static void 
luaB_assert(lua_State *L)static int 
luaB_auxwrap(lua_State *L)static int 
luaB_cocreate(lua_State *L)static int 
luaB_collectgarbage(lua_State *L)static int 
luaB_coresume(lua_State *L)static int 
luaB_corunning(lua_State *L)static int 
luaB_costatus(lua_State *L)static int 
luaB_cowrap(lua_State *L)static int 
luaB_dofile(lua_State *L)static int 
luaB_error(lua_State *L)static int 
luaB_getmetatable(lua_State *L)static int 
luaB_ipairs(lua_State *L)static int 
luaB_load(lua_State *L)static int 
luaB_loadfile(lua_State *L)static int 
luaB_next(lua_State *L)static int 
luaB_pairs(lua_State *L)static int 
luaB_pcall(lua_State *L)static int 
luaB_print(lua_State *L)static int 
luaB_rawequal(lua_State *L)static int 
luaB_rawget(lua_State *L)static int 
luaB_rawlen(lua_State *L)static int 
luaB_rawset(lua_State *L)static int 
luaB_select(lua_State *L)static int 
luaB_setmetatable(lua_State *L)static int 
luaB_tonumber(lua_State *L)static int 
luaB_tostring(lua_State *L)static int 
luaB_type(lua_State *L)static int 
luaB_xpcall(lua_State *L)static int 
luaB_yield(lua_State *L)static int 
luaB_yieldable(lua_State *L)static int 
luaC_barrier_(lua_State *L, GCObject *o, GCObject *v)void 
luaC_barrierback_(lua_State *L, Table *t)void 
luaC_checkfinalizer(lua_State *L, GCObject *o, Table *mt)void 
luaC_fix(lua_State *L, GCObject *o)void 
luaC_freeallobjects(lua_State *L)void 
luaC_fullgc(lua_State *L, int isemergency)void 
luaC_newobj(lua_State *L, int tt, size_t sz)GCObject
luaC_runtilstate(lua_State *L, int statesmask)void 
luaC_step(lua_State *L)void 
luaC_upvalbarrier_(lua_State *L, UpVal *uv)void 
luaC_upvdeccount(lua_State *L, UpVal *uv)void 
luaD_call(lua_State *L, StkId func, int nResults)void 
luaD_callnoyield(lua_State *L, StkId func, int nResults)void 
luaD_growstack(lua_State *L, int n)void 
luaD_hook(lua_State *L, int event, int line)void 
luaD_inctop(lua_State *L)void 
luaD_pcall(lua_State *L, Pfunc func, void *u, ptrdiff_t old_top, ptrdiff_t ef)int 
luaD_poscall(lua_State *L, CallInfo *ci, StkId firstResult, int nres)int 
luaD_precall(lua_State *L, StkId func, int nresults)int 
luaD_protectedparser(lua_State *L, ZIO *z, const char *name, const char *mode)int 
luaD_rawrunprotected(lua_State *L, Pfunc f, void *ud)int 
luaD_reallocstack(lua_State *L, int newsize)void 
luaD_shrinkstack(lua_State *L)void 
luaD_throw(lua_State *L, int errcode)l_noret 
luaE_extendCI(lua_State *L)CallInfo
luaE_freeCI(lua_State *L)void 
luaE_freethread(lua_State *L, lua_State *L1)void 
luaE_setdebt(global_State *g, l_mem debt)void 
luaE_shrinkCI(lua_State *L)void 
luaF_close(lua_State *L, StkId level)void 
luaF_findupval(lua_State *L, StkId level)UpVal
luaF_freeproto(lua_State *L, Proto *f)void 
luaF_getlocalname(const Proto *f, int local_number, int pc)const char
luaF_initupvals(lua_State *L, LClosure *cl)void 
luaF_newCclosure(lua_State *L, int n)CClosure
luaF_newLclosure(lua_State *L, int n)LClosure
luaF_newproto(lua_State *L)Proto
luaG_addinfo(lua_State *L, const char *msg, TString *src, int line)const char
luaG_concaterror(lua_State *L, const TValue *p1, const TValue *p2)l_noret 
luaG_errormsg(lua_State *L)l_noret 
luaG_opinterror(lua_State *L, const TValue *p1, const TValue *p2, const char *msg)l_noret 
luaG_ordererror(lua_State *L, const TValue *p1, const TValue *p2)l_noret 
luaG_runerror(lua_State *L, const char *fmt, ...)l_noret 
luaG_tointerror(lua_State *L, const TValue *p1, const TValue *p2)l_noret 
luaG_traceexec(lua_State *L)void 
luaG_typeerror(lua_State *L, const TValue *o, const char *op)l_noret 
luaH_free(lua_State *L, Table *t)void 
luaH_get(Table *t, const TValue *key)const TValue
luaH_getint(Table *t, lua_Integer key)const TValue
luaH_getn(Table *t)int 
luaH_getshortstr(Table *t, TString *key)const TValue
luaH_getstr(Table *t, TString *key)const TValue
luaH_isdummy(const Table *t)int 
luaH_mainposition(const Table *t, const TValue *key)Node
luaH_new(lua_State *L)Table
luaH_newkey(lua_State *L, Table *t, const TValue *key)TValue
luaH_next(lua_State *L, Table *t, StkId key)int 
luaH_resize(lua_State *L, Table *t, unsigned int nasize, unsigned int nhsize)void 
luaH_resizearray(lua_State *L, Table *t, unsigned int nasize)void 
luaH_set(lua_State *L, Table *t, const TValue *key)TValue
luaH_setint(lua_State *L, Table *t, lua_Integer key, TValue *value)void 
luaK_checkstack(FuncState *fs, int n)void 
luaK_code(FuncState *fs, Instruction i)static int 
luaK_codeABC(FuncState *fs, OpCode o, int a, int b, int c)int 
luaK_codeABx(FuncState *fs, OpCode o, int a, unsigned int bc)int 
luaK_codek(FuncState *fs, int reg, int k)int 
luaK_concat(FuncState *fs, int *l1, int l2)void 
luaK_dischargevars(FuncState *fs, expdesc *e)void 
luaK_exp2RK(FuncState *fs, expdesc *e)int 
luaK_exp2anyreg(FuncState *fs, expdesc *e)int 
luaK_exp2anyregup(FuncState *fs, expdesc *e)void 
luaK_exp2nextreg(FuncState *fs, expdesc *e)void 
luaK_exp2val(FuncState *fs, expdesc *e)void 
luaK_fixline(FuncState *fs, int line)void 
luaK_getlabel(FuncState *fs)int 
luaK_goiffalse(FuncState *fs, expdesc *e)void 
luaK_goiftrue(FuncState *fs, expdesc *e)void 
luaK_indexed(FuncState *fs, expdesc *t, expdesc *k)void 
luaK_infix(FuncState *fs, BinOpr op, expdesc *v)void 
luaK_intK(FuncState *fs, lua_Integer n)int 
luaK_jump(FuncState *fs)int 
luaK_nil(FuncState *fs, int from, int n)void 
luaK_numberK(FuncState *fs, lua_Number r)static int 
luaK_patchclose(FuncState *fs, int list, int level)void 
luaK_patchlist(FuncState *fs, int list, int target)void 
luaK_patchtohere(FuncState *fs, int list)void 
luaK_posfix(FuncState *fs, BinOpr op, expdesc *e1, expdesc *e2, int line)void 
luaK_prefix(FuncState *fs, UnOpr op, expdesc *e, int line)void 
luaK_reserveregs(FuncState *fs, int n)void 
luaK_ret(FuncState *fs, int first, int nret)void 
luaK_self(FuncState *fs, expdesc *e, expdesc *key)void 
luaK_setlist(FuncState *fs, int base, int nelems, int tostore)void 
luaK_setoneret(FuncState *fs, expdesc *e)void 
luaK_setreturns(FuncState *fs, expdesc *e, int nresults)void 
luaK_storevar(FuncState *fs, expdesc *var, expdesc *ex)void 
luaK_stringK(FuncState *fs, TString *s)int 
luaL_addlstring(luaL_Buffer *B, const char *s, size_t l)LUALIB_API void 
luaL_addstring(luaL_Buffer *B, const char *s)LUALIB_API void 
luaL_addvalue(luaL_Buffer *B)LUALIB_API void 
luaL_argerror(lua_State *L, int arg, const char *extramsg)LUALIB_API int 
luaL_buffinit(lua_State *L, luaL_Buffer *B)LUALIB_API void 
luaL_buffinitsize(lua_State *L, luaL_Buffer *B, size_t sz)LUALIB_API char
luaL_callmeta(lua_State *L, int obj, const char *event)LUALIB_API int 
luaL_checkany(lua_State *L, int arg)LUALIB_API void 
luaL_checkinteger(lua_State *L, int arg)LUALIB_API lua_Integer 
luaL_checklstring(lua_State *L, int arg, size_t *len)LUALIB_API const char
luaL_checknumber(lua_State *L, int arg)LUALIB_API lua_Number 
luaL_checkoption(lua_State *L, int arg, const char *def, const char *const lst[])LUALIB_API int 
luaL_checkstack(lua_State *L, int space, const char *msg)LUALIB_API void 
luaL_checktype(lua_State *L, int arg, int t)LUALIB_API void 
luaL_checkudata(lua_State *L, int ud, const char *tname)LUALIB_API void
luaL_checkversion_(lua_State *L, lua_Number ver, size_t sz)LUALIB_API void 
luaL_error(lua_State *L, const char *fmt, ...)LUALIB_API int 
luaL_execresult(lua_State *L, int stat)LUALIB_API int 
luaL_fileresult(lua_State *L, int stat, const char *fname)LUALIB_API int 
luaL_findtable(lua_State *L, int idx, const char *fname, int szhint)static const char
luaL_getmetafield(lua_State *L, int obj, const char *event)LUALIB_API int 
luaL_getsubtable(lua_State *L, int idx, const char *fname)LUALIB_API int 
luaL_gsub(lua_State *L, const char *s, const char *p, const char *r)LUALIB_API const char
luaL_len(lua_State *L, int idx)LUALIB_API lua_Integer 
luaL_loadbufferx(lua_State *L, const char *buff, size_t size, const char *name, const char *mode)LUALIB_API int 
luaL_loadfilex(lua_State *L, const char *filename, const char *mode)LUALIB_API int 
luaL_loadstring(lua_State *L, const char *s)LUALIB_API int 
luaL_newmetatable(lua_State *L, const char *tname)LUALIB_API int 
luaL_newstate(void)LUALIB_API lua_State
luaL_openlib(lua_State *L, const char *libname, const luaL_Reg *l, int nup)LUALIB_API void 
luaL_openlibs(lua_State *L)LUALIB_API void 
luaL_optinteger(lua_State *L, int arg, lua_Integer def)LUALIB_API lua_Integer 
luaL_optlstring(lua_State *L, int arg, const char *def, size_t *len)LUALIB_API const char
luaL_optnumber(lua_State *L, int arg, lua_Number def)LUALIB_API lua_Number 
luaL_prepbuffsize(luaL_Buffer *B, size_t sz)LUALIB_API char
luaL_pushmodule(lua_State *L, const char *modname, int sizehint)LUALIB_API void 
luaL_pushresult(luaL_Buffer *B)LUALIB_API void 
luaL_pushresultsize(luaL_Buffer *B, size_t sz)LUALIB_API void 
luaL_ref(lua_State *L, int t)LUALIB_API int 
luaL_requiref(lua_State *L, const char *modname, lua_CFunction openf, int glb)LUALIB_API void 
luaL_setfuncs(lua_State *L, const luaL_Reg *l, int nup)LUALIB_API void 
luaL_setmetatable(lua_State *L, const char *tname)LUALIB_API void 
luaL_testudata(lua_State *L, int ud, const char *tname)LUALIB_API void
luaL_tolstring(lua_State *L, int idx, size_t *len)LUALIB_API const char
luaL_traceback(lua_State *L, lua_State *L1, const char *msg, int level)LUALIB_API void 
luaL_unref(lua_State *L, int t, int ref)LUALIB_API void 
luaL_where(lua_State *L, int level)LUALIB_API void 
luaM_growaux_(lua_State *L, void *block, int *size, size_t size_elems, int limit, const char *what)void
luaM_realloc_(lua_State *L, void *block, size_t osize, size_t nsize)void
luaM_toobig(lua_State *L)l_noret 
luaO_arith(lua_State *L, int op, const TValue *p1, const TValue *p2, TValue *res)void 
luaO_ceillog2(unsigned int x)int 
luaO_chunkid(char *out, const char *source, size_t bufflen)void 
luaO_fb2int(int x)int 
luaO_hexavalue(int c)int 
luaO_int2fb(unsigned int x)int 
luaO_pushfstring(lua_State *L, const char *fmt, ...)const char
luaO_pushvfstring(lua_State *L, const char *fmt, va_list argp)const char
luaO_str2num(const char *s, TValue *o)size_t 
luaO_tostring(lua_State *L, StkId obj)void 
luaO_utf8esc(char *buff, unsigned long x)int 
luaS_clearcache(global_State *g)void 
luaS_createlngstrobj(lua_State *L, size_t l)TString
luaS_eqlngstr(TString *a, TString *b)int 
luaS_hash(const char *str, size_t l, unsigned int seed)unsigned int 
luaS_hashlongstr(TString *ts)unsigned int 
luaS_init(lua_State *L)void 
luaS_new(lua_State *L, const char *str)TString
luaS_newlstr(lua_State *L, const char *str, size_t l)TString
luaS_newudata(lua_State *L, size_t s)Udata
luaS_remove(lua_State *L, TString *ts)void 
luaS_resize(lua_State *L, int newsize)void 
luaT_callTM(lua_State *L, const TValue *f, const TValue *p1, const TValue *p2, TValue *p3, int hasres)void 
luaT_callbinTM(lua_State *L, const TValue *p1, const TValue *p2, StkId res, TMS event)int 
luaT_callorderTM(lua_State *L, const TValue *p1, const TValue *p2, TMS event)int 
luaT_gettm(Table *events, TMS event, TString *ename)const TValue
luaT_gettmbyobj(lua_State *L, const TValue *o, TMS event)const TValue
luaT_init(lua_State *L)void 
luaT_objtypename(lua_State *L, const TValue *o)const char
luaT_trybinTM(lua_State *L, const TValue *p1, const TValue *p2, StkId res, TMS event)void 
luaU_dump(lua_State *L, const Proto *f, lua_Writer w, void *data, int strip)int 
luaU_undump(lua_State *L, ZIO *Z, const char *name)LClosure
luaV_concat(lua_State *L, int total)void 
luaV_div(lua_State *L, lua_Integer m, lua_Integer n)lua_Integer 
luaV_equalobj(lua_State *L, const TValue *t1, const TValue *t2)int 
luaV_execute(lua_State *L)void 
luaV_finishOp(lua_State *L)void 
luaV_finishget(lua_State *L, const TValue *t, TValue *key, StkId val, const TValue *slot)void 
luaV_finishset(lua_State *L, const TValue *t, TValue *key, StkId val, const TValue *slot)void 
luaV_lessequal(lua_State *L, const TValue *l, const TValue *r)int 
luaV_lessthan(lua_State *L, const TValue *l, const TValue *r)int 
luaV_mod(lua_State *L, lua_Integer m, lua_Integer n)lua_Integer 
luaV_objlen(lua_State *L, StkId ra, const TValue *rb)void 
luaV_shiftl(lua_Integer x, lua_Integer y)lua_Integer 
luaV_tointeger(const TValue *obj, lua_Integer *p, int mode)int 
luaV_tonumber_(const TValue *obj, lua_Number *n)int 
luaX_init(lua_State *L)void 
luaX_lookahead(LexState *ls)int 
luaX_newstring(LexState *ls, const char *str, size_t l)TString
luaX_next(LexState *ls)void 
luaX_setinput(lua_State *L, LexState *ls, ZIO *z, TString *source, int firstchar)void 
luaX_syntaxerror(LexState *ls, const char *msg)l_noret 
luaX_token2str(LexState *ls, int token)const char
luaY_parser(lua_State *L, ZIO *z, Mbuffer *buff, Dyndata *dyd, const char *name, int firstchar)LClosure
luaZ_fill(ZIO *z)int 
luaZ_init(lua_State *L, ZIO *z, lua_Reader reader, void *data)void 
luaZ_read(ZIO *z, void *b, size_t n)size_t 
lua_Alloc(void *ud, void *ptr, size_t osize, size_t nsize)typedef void
lua_CFunction(lua_State *L)typedef int
lua_Hook(lua_State *L, lua_Debug *ar)typedef void
lua_KFunction(lua_State *L, int status, lua_KContext ctx)typedef int
lua_Reader(lua_State *L, void *ud, size_t *sz)typedef const char
lua_Writer(lua_State *L, const void *p, size_t sz, void *ud)typedef int
lua_absindex(lua_State *L, int idx)LUA_API int 
lua_arith(lua_State *L, int op)LUA_API void 
lua_atpanic(lua_State *L, lua_CFunction panicf)LUA_API lua_CFunction 
lua_callk(lua_State *L, int nargs, int nresults, lua_KContext ctx, lua_KFunction k)LUA_API void 
lua_checkstack(lua_State *L, int n)LUA_API int 
lua_close(lua_State *L)LUA_API void 
lua_compare(lua_State *L, int index1, int index2, int op)LUA_API int 
lua_concat(lua_State *L, int n)LUA_API void 
lua_copy(lua_State *L, int fromidx, int toidx)LUA_API void 
lua_createtable(lua_State *L, int narray, int nrec)LUA_API void 
lua_dump(lua_State *L, lua_Writer writer, void *data, int strip)LUA_API int 
lua_error(lua_State *L)LUA_API int 
lua_gc(lua_State *L, int what, int data)LUA_API int 
lua_getallocf(lua_State *L, void **ud)LUA_API lua_Alloc 
lua_getfield(lua_State *L, int idx, const char *k)LUA_API int 
lua_getglobal(lua_State *L, const char *name)LUA_API int 
lua_gethook(lua_State *L)LUA_API lua_Hook 
lua_gethookcount(lua_State *L)LUA_API int 
lua_gethookmask(lua_State *L)LUA_API int 
lua_geti(lua_State *L, int idx, lua_Integer n)LUA_API int 
lua_getinfo(lua_State *L, const char *what, lua_Debug *ar)LUA_API int 
lua_getlocal(lua_State *L, const lua_Debug *ar, int n)LUA_API const char
lua_getmetatable(lua_State *L, int objindex)LUA_API int 
lua_getstack(lua_State *L, int level, lua_Debug *ar)LUA_API int 
lua_gettable(lua_State *L, int idx)LUA_API int 
lua_gettop(lua_State *L)LUA_API int 
lua_getupvalue(lua_State *L, int funcindex, int n)LUA_API const char
lua_getuservalue(lua_State *L, int idx)LUA_API int 
lua_iscfunction(lua_State *L, int idx)LUA_API int 
lua_isinteger(lua_State *L, int idx)LUA_API int 
lua_isnumber(lua_State *L, int idx)LUA_API int 
lua_isstring(lua_State *L, int idx)LUA_API int 
lua_isuserdata(lua_State *L, int idx)LUA_API int 
lua_isyieldable(lua_State *L)LUA_API int 
lua_len(lua_State *L, int idx)LUA_API void 
lua_load(lua_State *L, lua_Reader reader, void *data, const char *chunkname, const char *mode)LUA_API int 
lua_newstate(lua_Alloc f, void *ud)LUA_API lua_State
lua_newthread(lua_State *L)LUA_API lua_State
lua_newuserdata(lua_State *L, size_t size)LUA_API void
lua_next(lua_State *L, int idx)LUA_API int 
lua_number2strx(lua_State *L, char *buff, int sz, const char *fmt, lua_Number x)static int 
lua_pcallk(lua_State *L, int nargs, int nresults, int errfunc, lua_KContext ctx, lua_KFunction k)LUA_API int 
lua_pushboolean(lua_State *L, int b)LUA_API void 
lua_pushcclosure(lua_State *L, lua_CFunction fn, int n)LUA_API void 
lua_pushfstring(lua_State *L, const char *fmt, ...)LUA_API const char
lua_pushinteger(lua_State *L, lua_Integer n)LUA_API void 
lua_pushlightuserdata(lua_State *L, void *p)LUA_API void 
lua_pushlstring(lua_State *L, const char *s, size_t len)LUA_API const char
lua_pushnil(lua_State *L)LUA_API void 
lua_pushnumber(lua_State *L, lua_Number n)LUA_API void 
lua_pushstring(lua_State *L, const char *s)LUA_API const char
lua_pushthread(lua_State *L)LUA_API int 
lua_pushvalue(lua_State *L, int idx)LUA_API void 
lua_pushvfstring(lua_State *L, const char *fmt, va_list argp)LUA_API const char
lua_rawequal(lua_State *L, int index1, int index2)LUA_API int 
lua_rawget(lua_State *L, int idx)LUA_API int 
lua_rawgeti(lua_State *L, int idx, lua_Integer n)LUA_API int 
lua_rawgetp(lua_State *L, int idx, const void *p)LUA_API int 
lua_rawlen(lua_State *L, int idx)LUA_API size_t 
lua_rawset(lua_State *L, int idx)LUA_API void 
lua_rawseti(lua_State *L, int idx, lua_Integer n)LUA_API void 
lua_rawsetp(lua_State *L, int idx, const void *p)LUA_API void 
lua_resume(lua_State *L, lua_State *from, int nargs)LUA_API int 
lua_rotate(lua_State *L, int idx, int n)LUA_API void 
lua_setallocf(lua_State *L, lua_Alloc f, void *ud)LUA_API void 
lua_setfield(lua_State *L, int idx, const char *k)LUA_API void 
lua_setglobal(lua_State *L, const char *name)LUA_API void 
lua_sethook(lua_State *L, lua_Hook func, int mask, int count)LUA_API void 
lua_seti(lua_State *L, int idx, lua_Integer n)LUA_API void 
lua_setlocal(lua_State *L, const lua_Debug *ar, int n)LUA_API const char
lua_setmetatable(lua_State *L, int objindex)LUA_API int 
lua_settable(lua_State *L, int idx)LUA_API void 
lua_settop(lua_State *L, int idx)LUA_API void 
lua_setupvalue(lua_State *L, int funcindex, int n)LUA_API const char
lua_setuservalue(lua_State *L, int idx)LUA_API void 
lua_status(lua_State *L)LUA_API int 
lua_stringtonumber(lua_State *L, const char *s)LUA_API size_t 
lua_strx2number(const char *s, char **endptr)static lua_Number 
lua_toboolean(lua_State *L, int idx)LUA_API int 
lua_tocfunction(lua_State *L, int idx)LUA_API lua_CFunction 
lua_tointegerx(lua_State *L, int idx, int *pisnum)LUA_API lua_Integer 
lua_tolstring(lua_State *L, int idx, size_t *len)LUA_API const char
lua_tonumberx(lua_State *L, int idx, int *pisnum)LUA_API lua_Number 
lua_topointer(lua_State *L, int idx)LUA_API const void
lua_tothread(lua_State *L, int idx)LUA_API lua_State
lua_touserdata(lua_State *L, int idx)LUA_API void
lua_type(lua_State *L, int idx)LUA_API int 
lua_typename(lua_State *L, int t)LUA_API const char
lua_upvalueid(lua_State *L, int fidx, int n)LUA_API void
lua_upvaluejoin(lua_State *L, int fidx1, int n1, int fidx2, int n2)LUA_API void 
lua_version(lua_State *L)LUA_API const lua_Number
lua_xmove(lua_State *from, lua_State *to, int n)LUA_API void 
lua_yieldk(lua_State *L, int nresults, lua_KContext ctx, lua_KFunction k)LUA_API int 
luaopen_base(lua_State *L)LUAMOD_API int 
luaopen_bit32(lua_State *L)LUAMOD_API int 
luaopen_coroutine(lua_State *L)LUAMOD_API int 
luaopen_debug(lua_State *L)LUAMOD_API int 
luaopen_io(lua_State *L)LUAMOD_API int 
luaopen_math(lua_State *L)LUAMOD_API int 
luaopen_os(lua_State *L)LUAMOD_API int 
luaopen_package(lua_State *L)LUAMOD_API int 
luaopen_string(lua_State *L)LUAMOD_API int 
luaopen_table(lua_State *L)LUAMOD_API int 
luaopen_utf8(lua_State *L)LUAMOD_API int 
main(argv)def 
main(int argc, char *argv[])int 
mainfunc(LexState *ls, FuncState *fs)static void 
mainposition(const Table *t, const TValue *key)static Node
make(self)	def 
makeParm(t, n, v)def 
makeRet(params)def 
makeSig(params)def 
makemask(const char *smask, int count)static int 
makeseed(lua_State *L)static unsigned int 
markbeingfnz(global_State *g)static void 
markmt(global_State *g)static void 
markupval(FuncState *fs, int level)static void 
match(MatchState *ms, const char *s, const char *p)static const char
match_capture(MatchState *ms, const char *s, int l)static const char
match_class(int c, int cl)static int 
matchbalance(MatchState *ms, const char *s, const char *p)static const char
matchbracketclass(int c, const char *p, const char *ec)static int 
matchdepth(to avoid C stack overflow)  int 
math_abs(lua_State *L)static int 
math_acos(lua_State *L)static int 
math_asin(lua_State *L)static int 
math_atan(lua_State *L)static int 
math_ceil(lua_State *L)static int 
math_cos(lua_State *L)static int 
math_cosh(lua_State *L)static int 
math_deg(lua_State *L)static int 
math_exp(lua_State *L)static int 
math_floor(lua_State *L)static int 
math_fmod(lua_State *L)static int 
math_frexp(lua_State *L)static int 
math_ldexp(lua_State *L)static int 
math_log(lua_State *L)static int 
math_log10(lua_State *L)static int 
math_max(lua_State *L)static int 
math_min(lua_State *L)static int 
math_modf(lua_State *L)static int 
math_pow(lua_State *L)static int 
math_rad(lua_State *L)static int 
math_random(lua_State *L)static int 
math_randomseed(lua_State *L)static int 
math_sin(lua_State *L)static int 
math_sinh(lua_State *L)static int 
math_sqrt(lua_State *L)static int 
math_tan(lua_State *L)static int 
math_tanh(lua_State *L)static int 
math_toint(lua_State *L)static int 
math_type(lua_State *L)static int 
math_ult(lua_State *L)static int 
max_expand(MatchState *ms, const char *s, const char *p, const char *ep)static const char
maxn(lua_State *L)static int 
menuAccessIndicator("&")const GUI::gui_char 
menuAccessIndicator("_")const GUI::gui_char 
menuFeatures(out)def 
merge_table(lua_State *L, int destTableIdx, int srcTableIdx, bool copyMetatable = false)static int 
messageBoxDestroy(GtkWidget *, gpointer *)static void 
messageBoxKey(GtkWidget *w, GdkEventKey *event, gpointer p)static gint 
messageBoxOK(GtkWidget *, gpointer p)static void 
methodNames(f, options)def 
methodSignature(name, v, options)def 
mimeFor(QString flav)	QString 
min_expand(MatchState *ms, const char *s, const char *p, const char *ep)static const char
modifierTranslated(int sciModifier)static int 
modinit(lua_State *L, const char *modname)static void 
mouseDoubleClickEvent(QMouseEvent * )void ListWidget::
mouseDoubleClickEvent(QMouseEvent *event)void ScintillaEditBase::
mouseMoveEvent(QMouseEvent *event)void ScintillaEditBase::
mousePressEvent(QMouseEvent *event)void ScintillaEditBase::
mouseReleaseEvent(QMouseEvent *event)void ScintillaEditBase::
move_position_outside_char(int pos, int move_dir, bool check_line_end)int ScintillaDocument::
movegotosout(FuncState *fs, BlockCnt *bl)static void 
moveresults(lua_State *L, const TValue *firstResult, StkId res, int nres, int wanted)static int 
nClipboardCopyTargets(clipboardCopyTargets)static const gint 
nClipboardPasteTargets(clipboardPasteTargets)static const gint 
nRanges(catRanges)const int 
name(for debug information)  TString
name(n)  const char
nameOKSrc(src)def 
namewhat(n)  const char
need_value(FuncState *fs, int list)static int 
negatecondition(FuncState *fs, expdesc *e)static void 
new_localvar(LexState *ls, TString *name)static void 
new_localvarliteral_(LexState *ls, const char *name, size_t sz)static void 
newbox(lua_State *L, size_t newsize)static void
newfile(lua_State *L)static LStream
newlabelentry(LexState *ls, Labellist *l, TString *name, int line, int pc)static int 
newprefile(lua_State *L)static LStream
newupvalue(FuncState *fs, TString *name, expdesc *v)static int 
next(offset for next node)    int 
nextc(RN *rn)static int 
nilK(FuncState *fs)static int 
noenv(lua_State *L)static int 
normalisedName(s, options, role=None)def 
nospecials(const char *p, size_t l)static int 
not_empty(const char *s)static bool 
notify(ScintillaObject *sci, int id, SCNotification *scn)	void
notifyParent(SCNotification scn)void ScintillaEditBase::
nparams(u)  unsigned char 
num2straux(char *buff, int sz, lua_Number x)static int 
numarith(lua_State *L, int op, lua_Number v1, lua_Number v2)static lua_Number 
numusearray(const Table *t, unsigned int *nums)static unsigned int 
numusehash(const Table *t, unsigned int *nums, unsigned int *pna)static int 
nups(u)  unsigned char 
onIdle()void ScintillaQt::
open_func(LexState *ls, FuncState *fs, BlockCnt *bl)static void 
opencheck(lua_State *L, const char *fname, const char *mode)static void 
operator(const WordList &other)bool WordList::
operator(const ByteIterator &other)	bool 
operator(const UTF8Iterator &other)	bool 
operator(int a, int b)	bool 
operator(const char *a, const char *b)	bool 
operator()	char 
operator()	wchar_t 
operator()	ByteIterator
operator(int)	ByteIterator 
operator()	UTF8Iterator
operator(int)	UTF8Iterator 
operator()void Utf16_Iter::
operator()void Utf8_Iter::
operator()	ByteIterator
operator()	UTF8Iterator
operator()	LineLayout
operator()	Surface
operator(const State &other)		inline bool 
operator(const CharacterConversion &other)		bool 
operator(const KeyModifiers &other)	bool 
operator(const SelectionPosition &other)bool SelectionPosition::
operator(const SelectionRange &other)	bool 
operator(const FontSpecification &other)bool FontSpecification::
operator(const FilePath &other)bool FilePath::
operator(const SelectionPosition &other)bool SelectionPosition::
operator(const Platform &)	Platform
operator(const Surface &)	Surface
operator(WindowID wid_)	Window
operator(const Window &other)	Window
operator(CharacterSet &&other)	CharacterSet
operator(const ByteIterator &other)	ByteIterator
operator(const UTF8Iterator &other)	UTF8Iterator
operator(const LineMarker &other)	LineMarker
operator(const Style &source)Style
operator(WindowID wid_)	Window
operator(const PropSetFile &assign)PropSetFile
operator(const ColourDesired &other)	bool 
operator(const PRectangle &rc)	bool 
operator(const State &other)		inline bool 
operator(const ByteIterator &other)	bool 
operator(const UTF8Iterator &other)	bool 
operator(const WatcherWithUserData &other)		bool 
operator(const Range &other)	bool 
operator(const XYScrollPosition &other)		bool 
operator(const StyleAndColour &other)	bool 
operator(const SelectionPosition &other)	bool 
operator(const SelectionRange &other)	bool 
operator(const FontSpecification &other)bool FontSpecification::
operator(const FilePath &other)bool FilePath::
operator(const Rectangle &other)	bool 
operator(const SelectionPosition &other)bool SelectionPosition::
operator()WBase:: GtkWidget
operator()	 LineLayout
operator()	 Surface
operator(Sci_Position position)	char 
operator(int position)	T
operator(int position)	const T
operator(int nIndex)	TYPE 
operator(int nIndex)	TYPE
operator(ARG_KEY key)	VALUE
operator(size_t ind)	char
operator(int position)	char 
operator()	 bool
operator()WordList:: bool
operator()	 bool
os_clock(lua_State *L)static int 
os_date(lua_State *L)static int 
os_difftime(lua_State *L)static int 
os_execute(lua_State *L)static int 
os_exit(lua_State *L)static int 
os_getenv(lua_State *L)static int 
os_remove(lua_State *L)static int 
os_rename(lua_State *L)static int 
os_setlocale(lua_State *L)static int 
os_time(lua_State *L)static int 
os_tmpname(lua_State *L)static int 
override(Font &font_)  XYPOSITION Ascent
override(Font &font_)  XYPOSITION AverageCharWidth
override(Font &font_)  XYPOSITION Descent
override(Font &font_)  XYPOSITION ExternalLeading
override(Font &font_)  XYPOSITION Height
override(Font &font_)  XYPOSITION InternalLeading
override(Font &font_, char ch)  XYPOSITION WidthChar
override(Font &font_, const char *s, int len)  XYPOSITION WidthText
override()  bool Initialised
override(int points)  int DeviceHeightFont
override()  int LogPixelsY
override(PRectangle rc, Scintilla::Point from, Surface &surfaceSource)  void Copy
override(PRectangle rc, int width, int height, const unsigned char *pixelsImage)  void DrawRGBAImage
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)  void DrawTextTransparent
override(PRectangle rc, ColourDesired fore, ColourDesired back)  void Ellipse
override(PRectangle rc, ColourDesired back)  void FillRectangle
override(PRectangle rc, Surface &surfacePattern)  void FillRectangle
override()  void FlushCachedState
override(SurfaceID sid, WindowID wid)  void Init
override(WindowID wid)  void Init
override(int width, int height, Surface *surface_, WindowID wid)  void InitPixMap
override(int x_, int y_)  void LineTo
override(Font &font_, const char *s, int len, XYPOSITION *positions)  void MeasureWidths
override(int x_, int y_)  void MoveTo
override(ColourDesired fore)  void PenColour
override(Scintilla::Point *pts, int npts, ColourDesired fore, ColourDesired back)  void Polygon
override(PRectangle rc, ColourDesired fore, ColourDesired back)  void RectangleDraw
override()  void Release
override(PRectangle rc, ColourDesired fore, ColourDesired back)  void RoundedRectangle
override(PRectangle rc)  void SetClip
override(int codePage_)  void SetDBCSMode
override(bool unicodeMode_)  void SetUnicodeMode
override()  ~SurfaceImpl
override()  CaseFolder
override()  PRectangle GetClientDrawingRectangle
override()  PRectangle GetClientRectangle
override()  Point GetVisibleOriginInMain
override()  bool CanPaste
override()  bool FineTickerAvailable
override(TickReason reason)  bool FineTickerRunning
override()  bool HaveMouseCapture
override(Sci::Line nMax, Sci::Line nPage)  bool ModifyScrollBars
override(bool on)  bool SetIdle
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)  sptr_t DefWndProc
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)  sptr_t WndProc
override(const std::string &s, int caseMapping)  std::string CaseMapString
override(const char *label, int cmd = 0, bool enabled = true)  void AddToPopUp
override()  void CancelModes
override()  void ClaimSelection
override()  void Copy
override(const SelectionText &selectedText)  void CopyToClipboard
override(PRectangle rc)  void CreateCallTipWindow
override()  void Cut
override()  void DiscardOverdraw
override()  void Finalise
override(TickReason reason)  void FineTickerCancel
override(TickReason reason, int millis, int tolerance)  void FineTickerStart
override()  void IdleWork
override()  void NotifyChange
override(bool focus)  void NotifyFocus
override(SCNotification scn)  void NotifyParent
override()  void Paste
override(WorkNeeded::workItems items, Sci::Position upTo)  void QueueIdleWork
override()  void Redo
override()  void Redraw
override(PRectangle rc)  void RedrawRect
override(Sci::Line linesToMove)  void ScrollText
override()  void SelectAll
override(Document *document)  void SetDocPointer
override()  void SetHorizontalScrollPos
override(bool on)  void SetMouseCapture
override()  void SetVerticalScrollPos
override()  void StartDrag
override(TickReason reason)  void TickFor
override()  void Undo
override()  ~ScintillaCocoa
override()	PRectangle GetDesiredRect
override(Font &font_)	XYPOSITION Ascent
override(Font &font_)	XYPOSITION AverageCharWidth
override(Font &font_)	XYPOSITION Descent
override(Font &font_)	XYPOSITION ExternalLeading
override(Font &font_)	XYPOSITION Height
override(Font &font_)	XYPOSITION InternalLeading
override(Font &font_, char ch)	XYPOSITION WidthChar
override(Font &font_, const char *s, int len)	XYPOSITION WidthText
override()	bool Initialised
override()	int CaretFromEdge
override(int points)	int DeviceHeightFont
override(const char *prefix)	int Find
override()	int GetSelection
override()	int GetVisibleRows
override()	int Length
override()	int LogPixelsY
override(char *s, int type = -1)	void Append
override()	void Clear
override()	void ClearRegisteredImages
override(PRectangle rc, Point from, Surface &surfaceSource)	void Copy
override(Window &parent, int ctrlID, Point location_, int lineHeight_, bool unicodeMode_, int technology_, bool useThickFrame)	void Create
override(PRectangle rc, int width, int height, const unsigned char *pixelsImage)	void DrawRGBAImage
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)	void DrawTextClipped
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)	void DrawTextNoClip
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)	void DrawTextTransparent
override(PRectangle rc, ColourDesired fore, ColourDesired back)	void Ellipse
override(PRectangle rc, ColourDesired back)	void FillRectangle
override(PRectangle rc, Surface &surfacePattern)	void FillRectangle
override()	void FlushCachedState
override(int n, char *value, int len)	void GetValue
override(SurfaceID sid, WindowID wid)	void Init
override(WindowID wid)	void Init
override(int width, int height, Surface *surface_, WindowID wid)	void InitPixMap
override(int x_, int y_)	void LineTo
override(Font &font_, const char *s, int len, XYPOSITION *positions)	void MeasureWidths
override(int x_, int y_)	void MoveTo
override(ColourDesired fore)	void PenColour
override(Point *pts, int npts, ColourDesired fore, ColourDesired back)	void Polygon
override(PRectangle rc, ColourDesired fore, ColourDesired back)	void RectangleDraw
override(int type, const char *xpm_data)	void RegisterImage
override(int type, int width, int height, const unsigned char *pixelsImage)	void RegisterRGBAImage
override()	void Release
override(PRectangle rc, ColourDesired fore, ColourDesired back)	void RoundedRectangle
override(int n)	void Select
override(int width)	void SetAverageCharWidth
override(PRectangle rc)	void SetClip
override(int codePage)	void SetDBCSMode
override(Font &font)	void SetFont
override(const char *listText, char separator, char typesep)	void SetList
override(bool unicodeMode_)	void SetUnicodeMode
override(int rows)	void SetVisibleRows
override()	~SurfaceImpl
override()	CaseFolder
override()	PRectangle GetClientRectangle
override()	bool AbandonPaint
override(Point ptStart, Point ptNow)	bool DragThreshold
override()	bool FineTickerAvailable
override(TickReason reason)	bool FineTickerRunning
override()	bool HaveMouseCapture
override(Sci::Line nMax, Sci::Line nPage)	bool ModifyScrollBars
override(PRectangle rc)	bool PaintContains
override(bool on)	bool SetIdle
override(int codePage)	bool ValidCodePage
override(int key, int modifiers)	int KeyDefault
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t DefWndProc
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t WndProc
override(const std::string &s, int caseMapping)	std::string CaseMapString
override(const char *label, int cmd = 0, bool enabled = true)	void AddToPopUp
override()	void ClaimSelection
override()	void Copy
override(const SelectionText &selectedText)	void CopyToClipboard
override(PRectangle rc)	void CreateCallTipWindow
override(Window::Cursor c)	void DisplayCursor
override()	void Finalise
override(TickReason reason)	void FineTickerCancel
override(TickReason reason, int millis, int tolerance)	void FineTickerStart
override()	void IdleWork
override()	void NotifyChange
override(bool focus)	void NotifyFocus
override(SCNotification scn)	void NotifyParent
override()	void Paste
override(WorkNeeded::workItems items, Sci::Position upTo)	void QueueIdleWork
override()	void ReconfigureScrollBars
override(Sci::Line linesToMove)	void ScrollText
override(Document *document)	void SetDocPointer
override()	void SetHorizontalScrollPos
override(bool on)	void SetMouseCapture
override()	void SetVerticalScrollPos
override()	void StartDrag
override()	PRectangle GetDesiredRect
override()	QStyleOptionViewItem viewOptions
override()	int CaretFromEdge
override(const char *prefix)	int Find
override()	int GetSelection
override()	int GetVisibleRows
override()	int Length
override(char *s, int type = -1)	void Append
override()	void Clear
override()	void ClearRegisteredImages
override(int n, char *value, int len)	void GetValue
override(int type, const char *xpmData)	void RegisterImage
override(int n)	void Select
override(int width)	void SetAverageCharWidth
override(CallBackAction action, void *data)	void SetDoubleClickAction
override(Font &font)	void SetFont
override(const char *list, char separator, char typesep)	void SetList
override(int rows)	void SetVisibleRows
override(QMouseEvent *event)	void mouseDoubleClickEvent
override(Font &font)	XYPOSITION Ascent
override(Font &font)	XYPOSITION AverageCharWidth
override(Font &font)	XYPOSITION Descent
override(Font &font)	XYPOSITION ExternalLeading
override(Font &font)	XYPOSITION Height
override(Font &font)	XYPOSITION InternalLeading
override(Font &font, char ch)	XYPOSITION WidthChar
override(Font &font, const char *s, int len)	XYPOSITION WidthText
override()	bool Initialised
override(int points)	int DeviceHeightFont
override()	int LogPixelsY
override(PRectangle rc, Point from, Surface &surfaceSource)	void Copy
override(PRectangle rc, ColourDesired back)	void FillRectangle
override(PRectangle rc, Surface &surfacePattern)	void FillRectangle
override()	void FlushCachedState
override(SurfaceID sid, WindowID wid)	void Init
override(WindowID wid)	void Init
override(int x_, int y_)	void LineTo
override(int x_, int y_)	void MoveTo
override(ColourDesired fore)	void PenColour
override()	void Release
override(PRectangle rc)	void SetClip
override(int codePage_)	void SetDBCSMode
override(bool unicodeMode_)	void SetUnicodeMode
override(Qt::InputMethodQuery query)	QVariant inputMethodQuery
override(QEvent *event)	bool event
override(QContextMenuEvent *event)	void contextMenuEvent
override(QDragEnterEvent *event)	void dragEnterEvent
override(QDragLeaveEvent *event)	void dragLeaveEvent
override(QDragMoveEvent *event)	void dragMoveEvent
override(QDropEvent *event)	void dropEvent
override(QFocusEvent *event)	void focusInEvent
override(QFocusEvent *event)	void focusOutEvent
override(QInputMethodEvent *event)	void inputMethodEvent
override(QKeyEvent *event)	void keyPressEvent
override(QMouseEvent *event)	void mouseDoubleClickEvent
override(QMouseEvent *event)	void mouseMoveEvent
override(QMouseEvent *event)	void mousePressEvent
override(QMouseEvent *event)	void mouseReleaseEvent
override(QPaintEvent *event)	void paintEvent
override(QResizeEvent *event)	void resizeEvent
override(QWheelEvent *event)	void wheelEvent
override()	CaseFolder
override(Point ptStart, Point ptNow)	bool DragThreshold
override()	bool FineTickerAvailable
override(TickReason reason)	bool FineTickerRunning
override()	bool HaveMouseCapture
override(Sci::Line nMax, Sci::Line nPage)	bool ModifyScrollBars
override(bool on)	bool SetIdle
override(int codePage)	bool ValidCodePage
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t DefWndProc
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t WndProc
override(const std::string &s, int caseMapping)	std::string CaseMapString
override(const char *label, int cmd = 0, bool enabled = true)	void AddToPopUp
override()	void ClaimSelection
override()	void Copy
override(const SelectionText &selectedText)	void CopyToClipboard
override(PRectangle rc)	void CreateCallTipWindow
override()	void Finalise
override(TickReason reason)	void FineTickerCancel
override(TickReason reason, int millis, int tolerance)	void FineTickerStart
override()	void NotifyChange
override(bool focus)	void NotifyFocus
override(SCNotification scn)	void NotifyParent
override()	void Paste
override()	void ReconfigureScrollBars
override(int linesToMove)	void ScrollText
override()	void SetHorizontalScrollPos
override(bool on)	void SetMouseCapture
override()	void SetVerticalScrollPos
override()	void StartDrag
override(QTimerEvent *event)	void timerEvent
override(char *folded, size_t sizeFolded, const char *mixed, size_t lenMixed)	size_t Fold
override(Document *doc, const char *text, Sci::Position *length)	const char
override()	Range GetHotSpotRange
override()	Sci::Line TopLineOfMain
override()	virtual Point GetVisibleOriginInMain
override()	virtual Sci::Line LinesOnScreen
override(Document *document, void *userData)	void NotifyDeleted
override(Document *doc, void *userData, int status)	void NotifyErrorOccurred
override(Document *doc, void *userData)	void NotifyLexerChanged
override(Document *document, DocModification mh, void *userData)	void NotifyModified
override(Document *document, void *userData)	void NotifyModifyAttempt
override(Document *document, void *userData, bool atSavePoint)	void NotifySavePoint
override(Document *doc, void *userData, Sci::Position endStyleNeeded)	void NotifyStyleNeeded
override()	~Editor
override()	void Init
override(Sci::Line line)	void InsertLine
override(Sci::Line line)	void RemoveLine
override()	~LexState
override(unsigned int iMessage)	int KeyCommand
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t WndProc
override(const char *s, unsigned int len, bool treatAsDBCS=false)	void AddCharUTF
override(Point pt, unsigned int curTime, bool shift, bool ctrl, bool alt)	void ButtonDown
override(Point pt, unsigned int curTime, int modifiers)	void ButtonDownWithModifiers
override()	void CancelModes
override()	void Finalise
override(Document *doc, void *userData)	void NotifyLexerChanged
override(Sci::Position endStyleNeeded)	void NotifyStyleToNeeded
override(Point pt, unsigned int curTime, int modifiers)	void RightButtonDownWithModifiers
override()	PRectangle GetDesiredRect
override(Font &font_)	XYPOSITION Ascent
override(Font &font_)	XYPOSITION AverageCharWidth
override(Font &font_)	XYPOSITION Descent
override(Font &font_)	XYPOSITION ExternalLeading
override(Font &font_)	XYPOSITION Height
override(Font &font_)	XYPOSITION InternalLeading
override(Font &font_, char ch)	XYPOSITION WidthChar
override(Font &font_, const char *s, int len)	XYPOSITION WidthText
override()	bool Initialised
override()	int CaretFromEdge
override(int points)	int DeviceHeightFont
override(const char *prefix)	int Find
override()	int GetSelection
override()	int GetVisibleRows
override()	int Length
override()	int LogPixelsY
override()	virtual ~SurfaceD2D
override(char *s, int type = -1)	void Append
override()	void Clear
override()	void ClearRegisteredImages
override(PRectangle rc, Point from, Surface &surfaceSource)	void Copy
override(Window &parent_, int ctrlID_, Point location_, int lineHeight_, bool unicodeMode_, int technology_, bool useThickFrame_)	void Create
override(PRectangle rc, int width, int height, const unsigned char *pixelsImage)	void DrawRGBAImage
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)	void DrawTextClipped
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back)	void DrawTextNoClip
override(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore)	void DrawTextTransparent
override(PRectangle rc, ColourDesired fore, ColourDesired back)	void Ellipse
override(PRectangle rc, ColourDesired back)	void FillRectangle
override(PRectangle rc, Surface &surfacePattern)	void FillRectangle
override()	void FlushCachedState
override(int n, char *value, int len)	void GetValue
override(SurfaceID sid, WindowID wid)	void Init
override(WindowID wid)	void Init
override(int width, int height, Surface *surface_, WindowID wid)	void InitPixMap
override(int x_, int y_)	void LineTo
override(Font &font_, const char *s, int len, XYPOSITION *positions)	void MeasureWidths
override(int x_, int y_)	void MoveTo
override(ColourDesired fore)	void PenColour
override(Point *pts, int npts, ColourDesired fore, ColourDesired back)	void Polygon
override(PRectangle rc, ColourDesired fore, ColourDesired back)	void RectangleDraw
override(int type, const char *xpm_data)	void RegisterImage
override(int type, int width, int height, const unsigned char *pixelsImage)	void RegisterRGBAImage
override()	void Release
override(PRectangle rc, ColourDesired fore, ColourDesired back)	void RoundedRectangle
override(int n)	void Select
override(int width)	void SetAverageCharWidth
override(PRectangle rc)	void SetClip
override(int codePage_)	void SetDBCSMode
override(Font &font)	void SetFont
override(const char *list, char separator, char typesep)	void SetList
override(bool unicodeMode_)	void SetUnicodeMode
override(int rows)	void SetVisibleRows
override()	~SurfaceGDI
override()	CaseFolder
override()	bool CanPaste
override(Point ptStart, Point ptNow)	bool DragThreshold
override()	bool FineTickerAvailable
override(TickReason reason)	bool FineTickerRunning
override()	bool HaveMouseCapture
override(Sci::Line nMax, Sci::Line nPage)	bool ModifyScrollBars
override(PRectangle rc)	bool PaintContains
override(bool on)	bool SetIdle
override(int codePage)	bool ValidCodePage
override()	int GetCtrlID
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t DefWndProc
override(unsigned int iMessage, uptr_t wParam, sptr_t lParam)	sptr_t WndProc
override(const std::string &s, int caseMapping)	std::string CaseMapString
override(const char *label, int cmd = 0, bool enabled = true)	void AddToPopUp
override()	void ClaimSelection
override()	void Copy
override()	void CopyAllowLine
override(const SelectionText &selectedText)	void CopyToClipboard
override(PRectangle rc)	void CreateCallTipWindow
override()	void Finalise
override(TickReason reason)	void FineTickerCancel
override(TickReason reason, int millis, int tolerance)	void FineTickerStart
override()	void NotifyCaretMove
override()	void NotifyChange
override(Point pt, int modifiers)	void NotifyDoubleClick
override(bool focus)	void NotifyFocus
override(SCNotification scn)	void NotifyParent
override()	void Paste
override(Sci::Line linesToMove)	void ScrollText
override(int identifier)	void SetCtrlID
override()	void SetHorizontalScrollPos
override(bool on)	void SetMouseCapture
override()	void SetVerticalScrollPos
override()	void StartDrag
override()	void UpdateSystemCaret
override()	~ScintillaWin
override()	FilePath GetDefaultDirectory
override()	FilePath GetSciteDefaultHome
override()	FilePath GetSciteUserHome
override(GUI::Window &w, const GUI::gui_string &msg, int style = mbsIconWarning)	MessageBoxChoice WindowMessageBox
override()	bool AbbrevDialog
override(GdkEventKey *event)	bool KeyDown
override(const FilePath &directory, const char *filter)	bool OpenDialog
override(bool modal)	bool ParametersDialog
override()	bool ParametersOpen
override(Worker *pWorker)	bool PerformOnNewThread
override()	bool SaveAsDialog
override(int control)	const char
override(GtkDirectionType direction)	gboolean Focus
override(const std::string &s)	std::string EncodeString
override(GUI::ScintillaWindow &win, int selStart, int selEnd)	std::string GetRangeInUIEncoding
override()	void AboutDialog
override(const char *timestamp)	void ActivateWindow
override(const char *label, int cmd = 0, bool enabled = true)	void AddToPopUp
override(int wIDCheckItem, bool val)	void CheckAMenuItem
override()	void CheckMenus
override()	void CheckMenusClipboard
override(GtkWidget *widget)	void ChildFocus
override()	void Close
override()	void CopyPath
override(GtkWidget *container)	void Creation
override()	void DestroyFindReplace
override(int menuNumber, int itemID)	void DestroyMenuItem
override(int wIDCheckItem, bool val)	void EnableAMenuItem
override()	void Execute
override()	void Find
override()	void FindInFiles
override()	void FindIncrement
override(const std::string &msg, const std::string *findItem=0)	void FindMessageBox
override(bool replace)	void FindReplace
override(int *left, int *top, int *width, int *height, int *maximize)	void GetWindowPosition
override()	void GoLineDialog
override()	void LoadSessionDialog
override(guint action)	void MenuAction
override(SCNotification *notification)	void Notify
override(const char *list)	void OpenUriList
override()	void ParamGrab
override(int cmd, Worker *pWorker)	void PostOnMainThread
override(bool)	void Print
override()	void PrintSetup
override()	void QuitProgram
override()	void ReadLocalization
override()	void ReadProperties
override()	void ReadPropertiesInitial
override()	void RemoveAllTabs
override()	void Replace
override()	void SaveACopy
override()	void SaveAsHTML
override()	void SaveAsPDF
override()	void SaveAsRTF
override()	void SaveAsTEX
override()	void SaveAsXML
override()	void SaveSessionDialog
override(PropSetFile &ps)	void SetFileProperties
override(bool on)	void SetIdler
override(const char *s)	void SetStatusBarText
override(int buttonHeight)	void Show
override(const GUI::gui_string &explanation, size_t size, size_t progress)	void ShowBackgroundProgress
override()	void ShowPopup
override()	void ShowStatusBar
override()	void ShowTabBar
override()	void ShowToolBar
override()	void SizeContentWindows
override()	void SizeSubWindows
override()	void StopExecute
override(int index, const GUI::gui_char *title)	void TabInsert
override(int index)	void TabSelect
override()	void TabSizeDialog
override(int mask)	void TimerEnd
override(int mask)	void TimerStart
override()	void UIClosed
override()	void UIHasFocus
override(bool bUpdateSlowData)	void UpdateStatusBar
override(int control, const char *value)	void UserStripSet
override(int control, const char *value)	void UserStripSetList
override(const char *description)	void UserStripShow
override(int warnID)	void WarnUser
override()	~SciTEGTK
override()	bool FindHasText
override(Pane p, int start, int end)	char
override(bool reverseDirection, bool showWarnings=true, bool allowRegExp=true)	int FindNext
override(bool inSelection)	int ReplaceAll
override(Pane p, unsigned int msg, uptr_t wParam = 0, sptr_t lParam = 0)	sptr_t Send
override(const char *key)	std::string Property
override()	uptr_t GetInstance
override()	virtual void HideMatch
override(int cmd, Worker *pWorker)	virtual void PostOnMainThread
override(int cmdID)	void DoMenuCommand
override(Pane p, int pos, const char *s)	void Insert
override(MarkPurpose purpose=markWithBookMarks)	void MarkAll
override()	void MoveBack
override(const char *actionList)	void Perform
override(Pane p, int start, int end)	void Remove
override(bool showWarnings=true)	void ReplaceOnce
override()	void ScrollEditorIfNeeded
override()	void SetCaretAsStart
override(const char *sFind)	void SetFind
override(const char *sFind)	void SetFindText
override(const char *key, const char *val)	void SetProperty
override(const char *sReplace)	void SetReplace
override()	void ShutDown
override(const char *s)	void Trace
override()	void UIClosed
override()	void UIHasFocus
override(const char *key)	void UnsetProperty
override(bool bUpdateSlowData)	void UpdateStatusBar
override()	FilePath GetDefaultDirectory
override()	FilePath GetSciteDefaultHome
override()	FilePath GetSciteUserHome
override(GUI::Window &w, const GUI::gui_string &msg, MessageBoxStyle style = mbsIconWarning)	MessageBoxChoice WindowMessageBox
override()	bool AbbrevDialog
override()	bool IsStdinBlocked
override(const FilePath &directory, const GUI::gui_char *filesFilter)	bool OpenDialog
override(bool modal)	bool ParametersDialog
override()	bool ParametersOpen
override(Worker *pWorker)	bool PerformOnNewThread
override(const GUI::gui_char *arg)	bool PreOpenCheck
override()	bool SaveAsDialog
override(int control)	const char
override(const std::string &s)	std::string EncodeString
override(GUI::ScintillaWindow &win, int selStart, int selEnd)	std::string GetRangeInUIEncoding
override()	uptr_t GetInstance
override()	void AboutDialog
override(const char *timestamp)	void ActivateWindow
override(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input = "", int flags = 0)	void AddCommand
override(const char *label, int cmd=0, bool enabled=true)	void AddToPopUp
override(int wIDCheckItem, bool val)	void CheckAMenuItem
override()	void CheckMenus
override()	void CopyAsRTF
override()	void CopyPath
override()	void DestroyFindReplace
override(int menuNumber, int itemID)	void DestroyMenuItem
override(int wIDCheckItem, bool val)	void EnableAMenuItem
override()	void Execute
override()	void Find
override()	void FindInFiles
override()	void FindIncrement
override(const std::string &msg, const std::string *findItem = 0)	void FindMessageBox
override(bool replace)	void FindReplace
override(int *left, int *top, int *width, int *height, int *maximize)	void GetWindowPosition
override()	void GoLineDialog
override()	void LoadSessionDialog
override(SCNotification *notification)	void Notify
override()	void ParamGrab
override(int cmd, Worker *pWorker)	void PostOnMainThread
override(bool showDialog)	void Print
override()	void PrintSetup
override()	void QuitProgram
override()	void ReadEmbeddedProperties
override()	void ReadLocalization
override()	void ReadPropertiesInitial
override()	void RedrawMenu
override()	void RemoveAllTabs
override()	void Replace
override()	void SaveACopy
override()	void SaveAsHTML
override()	void SaveAsPDF
override()	void SaveAsRTF
override()	void SaveAsTEX
override()	void SaveAsXML
override()	void SaveSessionDialog
override(PropSetFile &ps)	void SetFileProperties
override(const char *s)	void SetStatusBarText
override(const GUI::gui_string &explanation, size_t size, size_t progress)	void ShowBackgroundProgress
override()	void ShowOutputOnMainThread
override()	void ShowStatusBar
override()	void ShowTabBar
override()	void ShowToolBar
override()	void SizeContentWindows
override()	void SizeSubWindows
override()	void StopExecute
override(int index, const GUI::gui_char *title)	void TabInsert
override(int index)	void TabSelect
override()	void TabSizeDialog
override(int mask)	void TimerEnd
override(int mask)	void TimerStart
override()	void UIClosed
override(int control, const char *value)	void UserStripSet
override(int control, const char *value)	void UserStripSetList
override(const char *description)	void UserStripShow
override(int warnID)	void WarnUser
override(int cmd, Worker *pWorker)	void WorkerCommand
p_end('\\0')  const char
pack(lua_State *L)static int 
packint(luaL_Buffer *b, lua_Unsigned n, int islittle, int size, int neg)static void 
paintEvent(QPaintEvent *event)void ScintillaEditBase::
pairsmeta(lua_State *L, const char *method, int iszero, lua_CFunction iter)static int 
pangoUnitsFromDouble(double d)static int 
panic(lua_State *L)static int 
parlist(LexState *ls)static void 
partition(lua_State *L, IdxT lo, IdxT up)static IdxT 
patchlistaux(FuncState *fs, int list, int vtarget, int reg, int dtarget)static void 
patchtestreg(FuncState *fs, int node, int reg)static int 
pathSepString("\\\\")const GUI::gui_char 
pc(equivalent to 'ncode')  int 
pixmap_new(gchar **xpm)static GtkWidget
pointer()void
posrelat(lua_Integer pos, size_t len)static lua_Integer 
preinit_thread(lua_State *L, global_State *g)static void 
preprocessorSymbol(in C, #)	char 
prepstate(MatchState *ms, lua_State *L, const char *s, size_t ls, const char *p, size_t lp)static void 
present(l, n)def 
primaryexp(LexState *ls, expdesc *v)static void 
printCPPFile(f, options)def 
printCtag(ident, path)def 
printHFile(f, options)def 
printHFile(f)def 
printIFaceTableCXXFile(faceAndIDs)def 
printIFaceTableHTMLFile(faceAndIDs)def 
printLexHFile(f)def 
printPyFile(f, options)def 
printTypeSystemFile(f, options)def 
printWrapped(text)def 
propAbbrevFileName("abbrev.properties")const GUI::gui_char 
propDirectoryFileName("SciTEDirectory.properties")const GUI::gui_char 
propGlobalFileName("SciTEGlobal.properties")const GUI::gui_char 
propLocalFileName("SciTE.properties")const GUI::gui_char 
propToFileKeys())
propUserFileName(".SciTEUser.properties")const GUI::gui_char 
propUserFileName("SciTEUser.properties")const GUI::gui_char 
propagateall(global_State *g)static void 
propagatemark(global_State *g)static void 
propsFile(propPath)	
propsFile(propsFileName, "rt")
propsFileName(srcDir, "SciTEGlobal.properties")
push_captures(MatchState *ms, const char *s, const char *e)static int 
push_iface_function(lua_State *L, const char *name)static int 
push_iface_propval(lua_State *L, const char *name)static int 
push_onecapture(MatchState *ms, int i, const char *s, const char *e)static void 
push_pane_object(lua_State *L, ExtensionAPI::Pane p)void 
pushclosure(lua_State *L, Proto *p, UpVal **encup, StkId base, StkId ra)static void 
pusherror(lua_State *L)static void 
pushfuncname(lua_State *L, lua_Debug *ar)static void 
pushglobalfuncname(lua_State *L, lua_Debug *ar)static int 
pushnexttemplate(lua_State *L, const char *path)static const char
pushnumint(lua_State *L, lua_Number d)static void 
pushstr(lua_State *L, const char *str, size_t l)static void 
pushutfchar(lua_State *L, int arg)static void 
raise_error(lua_State *L, const char *errMsg=NULL)inline void 
read(const ubyte* pRead)Utf8_16::utf16 Utf16_Iter::
readInterface(cleanGenerated)def 
read_all(lua_State *L, FILE *f)static void 
read_chars(lua_State *L, FILE *f, size_t n)static int 
read_line(lua_State *L, FILE *f, int chop)static int 
read_long_string(LexState *ls, SemInfo *seminfo, int sep)static void 
read_number(lua_State *L, FILE *f)static int 
read_numeral(LexState *ls, SemInfo *seminfo)static int 
read_string(LexState *ls, int del, SemInfo *seminfo)static void 
readable(const char *filename)static int 
readdecesc(LexState *ls)static int 
readdigits(RN *rn, int hex)static int 
readhexaesc(LexState *ls)static int 
readutf8esc(LexState *ls)static unsigned long 
reallymarkobject(global_State *g, GCObject *o)static void 
receive_command(self, wParam, lParam)	def 
receive_notification(self, scn)	def 
recfield(LexState *ls, struct ConsControl *cc)static void 
recover(lua_State *L, int status)static int 
redo()int ScintillaDocument::
registerlocalvar(LexState *ls, TString *varname)static int 
rehash(lua_State *L, Table *t, const TValue *ek)static void 
remarkupvals(global_State *g)static void 
removeentry(Node *n)static void 
removevalues(FuncState *fs, int list)static void 
removevars(FuncState *fs, int tolevel)static void 
repeatstat(LexState *ls, int line)static void 
reprepstate(MatchState *ms)static void 
reset()void Utf16_Iter::
reset()void Utf8_Iter::
resizeEvent(QResizeEvent *)void ScintillaEditBase::
resizeEvent(self, e)	def 
resizebox(lua_State *L, int idx, size_t newsize)static void
resourceSet())
restartcollection(global_State *g)static void 
resume(lua_State *L, void *ud)static void 
resume_error(lua_State *L, const char *msg, int narg)static int 
retrieveFeatures()def 
retstat(LexState *ls)static void 
reverse(lua_State *L, StkId from, StkId to)static void 
runGenerator(self)	def 
runProgram(args, exitOnFailure)def 
runafewfinalizers(lua_State *L)static int 
sMSDEVColumnSelect("MSDEVColumnSelect")static const QString 
sMimeRectangularMarker("text\/x-rectangular-marker")static const QString 
sScintillaRecMimeType("text\/x-scintilla.utf16-plain-text.rectangular")static const QString 
sScintillaRecPboardType("com.scintilla.utf16-plain-text.rectangular")static const QString 
sWrappedMSDEVColumnSelect("application\/x-qt-windows-mime;value=\\"MSDEVColumnSelect\\"")static const QString 
sanitiseLine(line)def 
save(LexState *ls, int c)static void 
scanformat(lua_State *L, const char *strfrmt, char *form)static const char
scintillaDirectory("..", "..", "scintilla")
scintillaScriptsDirectory(scintillaDirectory, "scripts")
scintilla_class_init(ScintillaClass *klass)static void 
scintilla_get_type()GType 
scintilla_init(ScintillaObject *sci)static void 
scintilla_marshal_VOID__INT_BOXED(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
scintilla_marshal_VOID__INT_OBJECT(GClosure *closure, GValue *return_value G_GNUC_UNUSED, guint n_param_values, const GValue *param_values, gpointer invocation_hint G_GNUC_UNUSED, gpointer marshal_data)
scintilla_new()GtkWidget
scintilla_object_accessible_class_init(ScintillaObjectAccessibleClass *klass)static void 
scintilla_object_accessible_factory_class_init(AtkObjectFactoryClass * klass)static void 
scintilla_object_accessible_factory_create_accessible(GObject *obj)static AtkObject
scintilla_object_accessible_factory_get_accessible_type(void)static GType 
scintilla_object_accessible_factory_init(ScintillaObjectAccessibleFactory *)static void 
scintilla_object_accessible_finalize(GObject *object)static void 
scintilla_object_accessible_get_type(GType parent_type G_GNUC_UNUSED)static GType 
scintilla_object_accessible_init(ScintillaObjectAccessible *accessible)static void 
scintilla_object_accessible_initialize(AtkObject *obj, gpointer data)static void 
scintilla_object_accessible_new(GType parent_type, GObject *obj)static AtkObject
scintilla_object_accessible_ref_state_set(AtkObject *accessible)static AtkStateSet
scintilla_object_accessible_widget_set(GtkAccessible *accessible)static void 
scintilla_object_accessible_widget_unset(GtkAccessible *accessible)static void 
scintilla_object_get_type()GType 
scintilla_object_new()GtkWidget
scintilla_object_send_message(ScintillaObject *sci, unsigned int iMessage, uptr_t wParam, sptr_t lParam)gintptr 
scintilla_release_resources(void)void 
scintilla_send_message(ScintillaObject *sci, unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t 
scintilla_set_id(ScintillaObject *sci, uptr_t id)void 
scite_lua_fopen(const char *filename, const char *mode)FILE
scite_lua_popen(const char *filename, const char *mode)FILE
scnotification_get_type(void)GType 
scrollHorizontal(int value)void ScintillaEditBase::
scrollVertical(int value)void ScintillaEditBase::
searcher_C(lua_State *L)static int 
searcher_Croot(lua_State *L)static int 
searcher_Lua(lua_State *L)static int 
searcher_preload(lua_State *L)static int 
searchpath(lua_State *L, const char *name, const char *path, const char *sep, const char *dirsep)static const char
searchupvalue(FuncState *fs, TString *name)static int 
searchvar(FuncState *fs, TString *n)static int 
semerror(LexState *ls, const char *msg)static l_noret 
send( unsigned int iMessage, uptr_t wParam, sptr_t lParam)sptr_t ScintillaEditBase::
sends( unsigned int iMessage, uptr_t wParam, const char *s)sptr_t ScintillaEditBase::
sepBuild()	
separatetobefnz(global_State *g, int all)static void 
set(const ubyte* pBuf, size_t nLen, encodingType eEncoding, ubyte *endSurrogate)void Utf16_Iter::
set(const ubyte* pBuf, size_t nLen, encodingType eEncoding)void Utf8_Iter::
set2(lua_State *L, IdxT i, IdxT j)static void 
setCTStyleColor(CGColor *inColor)	void 
setContext(CGContextRef context)    inline void 
setDoubleClickAction(CallBackAction action, void *data)void ListWidget::
setEncoding(Utf8_16::encodingType eType)void Utf8_16_Write::
setFontRef(CTFontRef inRef, int characterSet_)	void 
setText( const UInt8* buffer, size_t byteLength, CFStringEncoding encoding, const QuartzTextStyle& r )    inline void 
set_code_page(int code_page)void ScintillaDocument::
set_current_indicator(int indic)void ScintillaDocument::
set_env(lua_State *L)static void 
set_eol_mode(int eol_mode)void ScintillaDocument::
set_read_only(bool read_only)void ScintillaDocument::
set_save_point()void ScintillaDocument::
set_style_for(int length, char style)bool ScintillaDocument::
set_undo_collection(bool collect_undo)bool ScintillaDocument::
setallfields(lua_State *L, struct tm *stm)static void 
setarrayvector(lua_State *L, Table *t, unsigned int size)static void 
setboolfield(lua_State *L, const char *key, int value)static void 
seterrorobj(lua_State *L, int errcode, StkId oldtop)static void 
setfield(lua_State *L, const char *key, int value)static void 
setfile(FILE *pFile)void Utf8_16_Write::
setnodevector(lua_State *L, Table *t, unsigned int size)static void 
setpath(lua_State *L, const char *fieldname, const char *envname, const char *dft)static void 
setpause(global_State *g)static void 
setprogdir(lua_State *L)static void 
settabsb(lua_State *L, const char *k, int v)static void 
settabsi(lua_State *L, const char *k, int v)static void 
settabss(lua_State *L, const char *k, const char *v)static void 
short_src(S)  char 
simpleexp(LexState *ls, expdesc *v)static void 
singlematch(MatchState *ms, const char *s, const char *p, const char *ep)static int 
singlestep(lua_State *L)static lu_mem 
singlevar(LexState *ls, expdesc *var)static void 
singlevaraux(FuncState *fs, TString *n, expdesc *var, int base)static void 
size()	_t 
size()	int 
sizeFailure(-1)const gsize 
skipBOM(LoadF *lf)static int 
skip_sep(LexState *ls)static int 
skipcomment(LoadF *lf, int *cp)static int 
skipnoopstat(LexState *ls)static void 
small_scroller_class_init(SmallScrollerClass *klass)static void 
small_scroller_get_preferred_height(GtkWidget *widget, gint *min, gint *nat)static void 
small_scroller_init(SmallScroller *)static void 
sort(lua_State *L)static int 
sort_comp(lua_State *L, int a, int b)static int 
source(S)  const char
srcDir(srcRoot, "src")
src_end('\\0')  const char
stack_init(lua_State *L1, lua_State *L)static void 
stackerror(lua_State *L)static void 
stackinuse(lua_State *L)static int 
startImpl("{")						
start_capture(MatchState *ms, const char *s, const char *p, int what)static const char
start_styling(int position, char flags)void ScintillaDocument::
startswith(const std::string &s, const char *keybase)static bool 
stat(const wchar_t *path, struct _stat *buffer)ic int 
stat(const wchar_t *path, struct _stat64i32 *buffer)ic int 
statement(LexState *ls)static void 
statlist(LexState *ls)static void 
str_byte(lua_State *L)static int 
str_char(lua_State *L)static int 
str_checkname(LexState *ls)static TString
str_dump(lua_State *L)static int 
str_find(lua_State *L)static int 
str_find_aux(lua_State *L, int find)static int 
str_format(lua_State *L)static int 
str_gsub(lua_State *L)static int 
str_len(lua_State *L)static int 
str_lower(lua_State *L)static int 
str_match(lua_State *L)static int 
str_pack(lua_State *L)static int 
str_packsize(lua_State *L)static int 
str_rep(lua_State *L)static int 
str_reverse(lua_State *L)static int 
str_sub(lua_State *L)static int 
str_unpack(lua_State *L)static int 
str_upper(lua_State *L)static int 
strchr(wchar_t *str, wchar_t c)static wchar_t
strcmp(const wchar_t *a, const wchar_t *b)static int 
strcpy(wchar_t *strDestination, const wchar_t *strSource)static wchar_t
stripComment(s)def 
strlen(const wchar_t *str)static size_t 
strrchr(wchar_t *str, wchar_t c)static wchar_t
style_at(int position)char ScintillaDocument::
subexpr(LexState *ls, expdesc *v, int limit)static BinOpr 
suffixedexp(LexState *ls, expdesc *v)static void 
swapextra(lua_State *L)static void 
swapped(int v)static int 
sweeplist(lua_State *L, GCObject **p, lu_mem count)static GCObject
sweepstep(lua_State *L, global_State *g, int nextstate, GCObject **nextlist)static lu_mem 
sweeptolive(lua_State *L, GCObject **p)static GCObject
t(register or upvalue)      lu_bye 
tag_error(lua_State *L, int arg, int tag)static void 
tconcat(lua_State *L)static int 
test2(RN *rn, const char *set)static int 
test_eof(lua_State *L, FILE *f)static int 
test_then_block(LexState *ls, int *escapelist)static void 
testnext(LexState *ls, int c)static int 
texStyle(int style)static char
textFromRun(args)def 
timerEvent(QTimerEvent *event)void ScintillaQt::
tinsert(lua_State *L)static int 
tmove(lua_State *L)static int 
toStart()void Utf8_Iter::
tofile(lua_State *L)static FILE
tonumeral(const expdesc *e, TValue *v)static int 
traverseCclosure(global_State *g, CClosure *cl)static lu_mem 
traverseLclosure(global_State *g, LClosure *cl)static lu_mem 
traverseephemeron(global_State *g, Table *h)static int 
traverseproto(global_State *g, Proto *f)static int 
traversestrongtable(global_State *g, Table *h)static void 
traversetable(global_State *g, Table *h)static lu_mem 
traversethread(global_State *g, lua_State *th)static lu_mem 
traverseweakvalue(global_State *g, Table *h)static void 
treatstackoption(lua_State *L, lua_State *L1, const char *fname)static void 
treeViewGetRowHeight(GtkTreeView *view)static int 
tremove(lua_State *L)static int 
tryfuncTM(lua_State *L, StkId func)static void 
txtToken(LexState *ls, int token)static const char
typeerror(lua_State *L, int arg, const char *tname)static int 
u_posrelat(lua_Integer pos, size_t len)static lua_Integer 
udata2finalize(global_State *g)static GCObject
uid24()def 
unbound_search(Table *t, unsigned int j)static int 
undefgoto(LexState *ls, Labeldesc *gt)static l_noret 
underscoreName(s)def 
undo()int ScintillaDocument::
unlink(const wchar_t *filename)static int 
unmakemask(int mask, char *smask)static char
unpack(lua_State *L)static int 
unpackint(lua_State *L, const char *str, int islittle, int size, int issigned)static lua_Integer 
unquote(char *s)static void 
unroll(lua_State *L, void *ud)static void 
updateCaseConvert()def 
updateCharacterCategory(filename)def 
upvalname(Proto *p, int uv)static const char
uriDropped()def 
usage()def 
utf8LengthFromLead(unsigned char uch)static size_t 
utf8_decode(const char *o, int *val)static const char
utf8esc(LexState *ls)static void 
utfchar(lua_State *L)static int 
utflen(lua_State *L)static int 
v(global, local, upvalue, or indexed)  expdesc 
validop(int op, TValue *v1, TValue *v2)static int 
value(when closed)    TValue 
varinfo(lua_State *L, const TValue *o)static const char
vers(verFileName)
viewOptions()QStyleOptionViewItem ListWidget::
vt(VUPVAL)      lu_byte 
what(S)  const char
wheelEvent(QWheelEvent *event)void ScintillaEditBase::
whilestat(LexState *ls, int line)static void 
window(WindowID wid)QWidget
writeVariables(self)	def 
writer(lua_State *L, const void *b, size_t size, void *B)static int 
yindex(LexState *ls, expdesc *v)static void 
~AutoComplete()AutoComplete::
~AutoLineLayout()	
~AutoSurface()	
~BreakFinder()BreakFinder::
~BufferList()BufferList::
~BufferedFile()	
~CallTip()CallTip::
~CaseFolder()CaseFolder::
~CaseFolderTable()CaseFolderTable::
~CaseMapper()	
~CharacterIndexer()	virtual 
~ClusterIterator()	
~ContractionState()ContractionState::
~Converter()	
~Decoration()Decoration::
~DecorationList()DecorationList::
~DocWatcher()	virtual 
~Document()Document::
~DynamicLibrary()	virtual 
~DynamicLibraryImpl()	virtual 
~EditModel()EditModel::
~EditView()EditView::
~Editor()Editor::
~Extension()	virtual 
~ExtensionAPI()	virtual 
~FileLoader()FileLoader::
~FileReader()	
~FileStorer()FileStorer::
~FileWorker()FileWorker::
~Font()Font::
~FontAlias()FontAlias::
~FontAndCharacterSet()	
~FontHandle()	
~FontNames()FontNames::
~FontRealised()FontRealised::
~FormatAndMetrics()	
~GObjectWatcher()	virtual 
~GlobalMemory()	
~HanjaDic()	
~IMContext()	
~JobQueue()	
~KeyMap()KeyMap::
~LMMinder()LMMinder::
~LexInterface()	virtual 
~LexState()LexState::
~LexerBase()LexerBase::
~LexerLibrary()LexerLibrary::
~LexerManager()LexerManager::
~LexerModule()	virtual 
~LineAnnotation()LineAnnotation::
~LineLayout()LineLayout::
~LineLayoutCache()LineLayoutCache::
~LineLevels()LineLevels::
~LineMarker()	
~LineMarkers()LineMarkers::
~LineState()LineState::
~LineTabstops()LineTabstops::
~LineToItem()	
~LineVector()LineVector::
~ListBox()ListBox::
~ListBoxImpl()ListBoxImpl::
~ListWidget()ListWidget::
~Lock()	
~LuaExtension()LuaExtension::
~MarkerHandleSet()MarkerHandleSet::
~MatchMarker()MatchMarker::
~MultiplexExtension()MultiplexExtension::
~Mutex()	virtual 
~OptionSet()	virtual 
~Partitioning()	
~PerLine()	virtual 
~PipeEntry()	
~Platform()	
~PositionCache()PositionCache::
~PositionCacheEntry()PositionCacheEntry::
~PreEditString()	
~PropSetFile()PropSetFile::
~PropSetSimple()PropSetSimple::
~QuartzTextLayout()    
~QuartzTextStyle()	
~RESearch()RESearch::
~RGBAImage()RGBAImage::
~RGBAImageSet()RGBAImageSet::
~RegexSearchBase()	virtual 
~RunStyles()RunStyles::
~SciTEBase()SciTEBase::
~SciTEGTK()SciTEGTK::
~SciTEWin()SciTEWin::
~ScintillaBase()ScintillaBase::
~ScintillaDocument()ScintillaDocument::
~ScintillaEditBase()ScintillaEditBase::
~ScintillaGTK()ScintillaGTK::
~ScintillaGTKAccessible()ScintillaGTKAccessible::
~ScintillaQt()ScintillaQt::
~ScintillaWin()ScintillaWin::
~Selection()Selection::
~SelectionText()	
~SparseVector()	
~SplitVector()	
~SplitVectorWithRangeAdd()	
~StringList()	
~Strip()	virtual 
~Style()Style::
~Surface()	virtual 
~SurfaceD2D()SurfaceD2D::
~SurfaceGDI()SurfaceGDI::
~SurfaceImpl()SurfaceImpl::
~TList()	
~TMap()	
~ThreadLockMinder()	
~UndoGroup()	
~UniqueInstance()UniqueInstance::
~Utf8_16_Read()Utf8_16_Read::
~Utf8_16_Write()Utf8_16_Write::
~VarBuffer()	
~ViewStyle()ViewStyle::
~WCheckDraw()WCheckDraw::
~WatcherHelper()WatcherHelper::
~WinMutex()	virtual 
~Window()Window::
~WordList()WordList::
~Worker()	virtual 
~XPM()XPM::
