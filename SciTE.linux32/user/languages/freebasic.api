Abs(number:Double|Double)
Abs(number:Integer|Integer)
Abs(number:LongInt|LongInt)
Acos(number:Double|Double)
Allocate(count:Integer|Any Ptr)
And(ByRef lhs:AnyByRef rhs:Any|Any)
Asc(ByRef Str:Stringposition:Integer=1|UInteger)
Asc(Str:WString Ptrposition:Integer=1|UInteger)
Asc(Str:ZString Ptrposition:Integer=1|UInteger)
Asin(number:Double|Double)
Assert(expression)
AssertWarn(expression)
Atan2(y:Doublex:Double|Double)
Atn(number:Double|Double)
BLoad(ByRef filename:Stringaddr:Any Ptr=0pal:Any Ptr=0|Integer)
BSave(ByRef filename:Stringaddr:Any Ptrsize:Integer=0pal:Any Ptr=0|Integer)
Beep()
Bin(number:Byte|String)
Bin(number:Integerdigits:Integer|String)
Bin(number:Integer|String)
Bin(number:LongIntdigits:Integer|String)
Bin(number:LongInt|String)
Bin(number:Short|String)
Bit(value:Anybit_number:Any)
BitReset(value:Anybit_number:Any)
BitSet(value:Anybit_number:Any)
CByte(expression:datatype|Byte)
CDbl(expression:datatype|Double)
CInt(expression:datatype|Integer)
CLng(expression:datatype|Long)
CLngInt(expression:datatype|LongInt)
CPtr(DataType Ptrexpression)
CShort(expression:datatype|Short)
CSign(expression)
CSng(expression:datatype|Single)
CUByte(expression:datatype|UByte)
CUInt(expression:datatype|UInteger)
CULng(expression:datatype|ULong)
CULngInt(expression:datatype|ULongInt)
CUShort(expression:datatype|UShort)
CUnsg(expression)
CVI(ByRef Str:String|Integer)
CVLongInt(ByRef Str:String|LongInt)
CVS(ByRef Str:String|Single)
CVShort(ByRef Str:String|Short)
Callocate(num_elements:Integersize:Integer=1|Any Ptr)
Cast(datatypeexpression)
ChDir(ByRef path:String|Integer)
Chain(ByRef program:String|Integer)
Chr(ch:Integer[...]|String)
Circle([target][STEP](xy)radius[[color][[start][[end][[aspect][)
Clear(ByRef dst:Anyvalue:Integer=0bytes:Integer)
Cls(mode:Integer=-65536)
Color(foreground:Integerbackground:Integer|Integer)
Command(index:Integer=-1|String)
CondCreate|Any Ptr()
CondDestroy(handle:Any Ptr)
CondSignal(handle:Any Ptr)
CondWait(handle:Any Ptr)
Condbroadcast(handle As Any Ptr)
Cos(number:Double|Double)
CsrLin(|Integer)
CurDir|String()
Cvd(ByRef Str:String|Double)
Cvl(ByRef Str:String|Integer)
DateAdd(interval:Stringnumber:Doubledate_serial:Double|Double)
DateDiff(interval:Stringserial1:Doubleserial2:Doublefirstdayofweek:Integer=fbUseSystemfirstdayofyear:Integer=fbUseSystem|Integer)
DatePart(interval:Stringdate_serial:Doublefirstdayofweek:Integer=fbUseSystemfirstdayofyear:Integer=fbUseSystem|Integer)
DateSerial(Year:IntegerMonth:IntegerDay:Integer|Integer)
DateValue(ByRef date_string:String|Double)
Date|String()
Day(date_serial:Double|Integer)
DeAllocate(Pointer:Any Ptr)
Delete(buf:Any Ptr)
Dir(ByRef file_spec:String=""attrib_mask:Integer=&h21out_attrib:Integer Ptr=0|String)
Dir(out_attrib:Integer Ptr=0|String)
Draw String([buffer][STEP](xy)text[color[font[method[(alpha\blender)]]]])
DyLibFree(library:Any Ptr)
DyLibSymbol(library:Any PtrByRef symbol:String|Any Ptr)
DyLibSymbol(library:Any Ptrsymbol:Short|Any Ptr)
DylibLoad(ByRef filename:String|Any Ptr)
EOF(filenum:Integer|Integer)
End(retval:Integer=0)
Environ(ByRef varname:String|String)
Eqv(ByRef lhs:AnyByRef rhs:Any|Any)
Erase(array:Any[...])
Erfn|ZString Ptr()
Erl|Integer()
Ermn|ZString Ptr()
Error(errno:Integer)
Err|Integer()
ExePath|String()
Exec(ByRef program:StringByRef arguments:String|Integer)
Exp(number:Double|Double)
FileAttr(filenum:Integerreturntype:Integer=1|Integer)
FileCopy(source:Stringdestination:String|Integer)
FileDateTime(filename:ZString Ptr|Double)
FileExists(filename:ZString Ptr|Integer)
FileLen(filename:String|LongInt)
Fix(number:Double|Double)
Flip(frompage:Integer=-1topage:Integer=-1)
Format(numerical_expression:Doubleformatting_expression:String=""|String)
Frac(number:Double|Double)
Fre(value:Integer=0|UInteger)
FreeFile|Integer()
Get(#filenum:Integerposition:LongInt=?data:Anyamount:Integer=1)
GetJoystick(id:IntegerByRef buttons:Integer=0ByRef a1:Single=0ByRef a2:Single=0ByRef a3:Single=0ByRef a4:Single=0ByRef a5:Single=0ByRef a6:Single=0)
GetKey|Integer()
GetMouse(ByRef x:IntegerByRef y:IntegerByRef wheel:Integer=0ByRef buttons:Integer=0ByRef clip:Integer=0|Integer)
Hex(number:Byte|String)
Hex(number:Integerdigits:Integer|String)
Hex(number:Integer|String)
Hex(number:LongIntdigits:Integer|String)
Hex(number:LongInt|String)
Hex(number:Short|String)
HiByte(x:UInteger)
HiWord(x:UInteger)
Hour(date_serial:Double|Integer)
ImageConvertRow(src:Any Ptrsrc_bpp:Integerdst:Any Ptrdst_bpp:IntegerWidth:Integerisrgb:Integer=1)
ImageCreate(Width:Integerheight:Integer[Color:UInteger][depth:Integer]|Any Ptr)
ImageDestroy(Pointer:Any Ptr)
Imp(ByRef lhs:AnyByRef rhs:Any|Any)
InStr(ByRef Str:String[Any] ByRef Substring:String|Integer)
InStr(ByRef Str:WString[Any] ByRef Substring:WString|Integer)
InStr(Start:IntegerByRef Str:String[Any] ByRef Substring:String|Integer)
InStr(Start:IntegerByRef Str:WString[Any] ByRef Substring:WString|Integer)
InStrRev(ByRef Str:String[Any] ByRef Substring:StringStart:Integer = -1|Integer)
InStrRev(ByRef Str:WString[Any] ByRef Substring:WStringStart:Integer = -1|Integer)
Inkey|As String()
Inp(port:UShort|Integer)
Input(n:Integerfilenum:Integer|String)
Input(n:Integer|String)
Int(number:Double|Double)
IsDate(stringdate:String|Integer)
Kill(ByRef filename:String|Integer)
LBound(array:Anydimension:Integer=1|Integer)
LCase(ByRef Str:String|String)
LCase(ByRef Str:WString|WString)
LPos(printer:Integer|Integer)
LSet(ByRef dst:StringByRef src:String)
LSet(dst:WString Ptrsrc:WString Ptr)
LTrim(ByRef Str:String[Any] ByRef trimset:String=" "|String)
LTrim(ByRef Str:WString[Any] ByRef trimset:WString=WStr(" ")|WString)
Left(ByRef Str:Stringn:Integer|String)
Left(ByRef Str:WStringn:Integer|WString)
Len(ByRef variable:Any|Integer)
Len(datatype|Integer)
Line(-(x1y1)[[color][[B\BF][style]]])
Line([target][[STEP](x1y1)]-[STEP](x2y2)[[color][[B\BF][style]]])
LoByte(x:UInteger)
LoWord(x:UInteger)
Loc(filenum:Integer|LongInt)
Lof(filenum:Integer|UInteger)
Log(number:Double|Double)
MKL(number:Integer|String)
MKLongInt(number:LongInt|String)
MKS(number:Single|String)
Mid(ByRef Str:StringStart:Integern:Integer|String)
Mid(ByRef Str:StringStart:Integer|String)
Mid(ByRef text:StringStart:Integerlength:IntegerByRef expression:String)
Mid(Str As WString PtrStart:Integern:Integer|WString)
Mid(Str As WString PtrStart:Integer|WString)
Mid(text:WString PtrStart:Integerlength:Integer:Integerexpression:WString Ptr)
Minute(date_serial:Double|Integer)
MkDir(ByRef folder:String|Integer)
MkShort(number:Short|String)
Mkd(number:Double|String)
Mki(number:Integer|String)
Mod(ByRef lhs:IntegerByRef rhs:Integer|Integer)
Month(date_serial:Double|Integer)
MonthName(Month:Integerabbreviate:Integer=0|String)
MultiKey(scancode:Integer|Integer)
MutexCreate(|Any Ptr)
MutexDestroy(id:Any Ptr)
MutexLock(id:Any Ptr)
MutexUnlock(id:Any Ptr)
Name(ByRef oldname:StringByRef newname:String|Integer)
New(size:UInteger|Any Ptr)
Not(ByRef rhs:Any|Any)
Not(ByRef rhs:Byte|Integer)
Not(ByRef rhs:Double|Integer)
Not(ByRef rhs:Single|Integer)
Not(ByRef rhs:UByte|Integer)
Now|Double()
Oct(number:Bytedigits:Integer|String)
Oct(number:Byte|String)
Oct(number:Integerdigits:Integer|String)
Oct(number:Integer|String)
Oct(number:LongIntdigits:Integer|String)
Oct(number:LongInt|String)
Oct(number:Shortdigits:Integer|String)
Oct(number:Short|String)
OffsetOf(typenamefieldname)
OpenSocket(af:Integertype:Integerprotocol:Integer|SOCKET)
Or(ByRef lhs:AnyByRef rhs:Any|Any)
Out(port:UShortData:UByte|Integer)
PCopy(source:Integerdestination:Integer)
PMap(coord:Singlefunc:Integer|Single)
PSet([target][STEP](x y)[color])
Peek(address:Any Ptr|UByte)
Peek(datatypeaddress:Any Ptr|datatype)
Point(coord_xcoord_y[buffer]|Integer)
Poke(address:Any PtrByRef value:UByte)
Poke(datatypeaddress:Any PtrByRef value:datatype)
Pos(dummy:Integer|Integer)
Pos|Integer()
ProcPtr(ByRef lhs:Any|Any Ptr)
Put(#filenum:Integer[position:LongInt]data():Any|Integer)
Put(#filenum:Integer[position:LongInt]data:Any[amount:Integer]|Integer)
Put([target][STEP](xy)source[(x1y1)-[STEP](x2y2)][method[)
RGB(r:UIntegerg:UIntegerb:UInteger)
RGBA(r:UIntegerg:UIntegerb:UIntegera:UInteger)
RSet(ByRef dst:StringByRef src:String)
RSet(dst:WString Ptrsrc:WString Ptr)
RTrim(ByRef Str:String[Any] ByRef trimset:String=" "|String)
RTrim(ByRef Str:WString[Any] ByRef trimset:WString=WStr(" ")|WString)
Randomize(seed:Double=-1algorithm:Integer=0)
ReAllocate(Pointer:Any Ptrcount:Integer|Any Ptr)
Reset()
Right(ByRef Str:Stringn:Integer|String)
Right(ByRef Str:WStringn:Integer|WString)
RmDir(ByRef folder:String|Integer)
Rnd(number:Integer=1|Double)
Run(ByRef program:StringByRef arguments:String=""|Integer)
SAdd(ByRef Str:String|Any Ptr)
SAdd(ByRef Str:WString|Any Ptr)
SAdd(ByRef Str:ZString|Any Ptr)
Screen(modedepth=8num_pages=1flags=?refresh_rate=?)
Screen(row:Integercolumn:Integercolorflag:Integer=0|Integer)
ScreenControl(what:Integer[ByRef param1:Integer][ByRef param2:Integer][ByRef param3:Integer][ByRef param4:Integer])
ScreenControl(what:Integer[ByRef param:String])
ScreenCopy(frompage:Integer=-1topage:Integer=-1)
ScreenEvent(Event:Any Ptr=0|Integer)
ScreenGLProc(procname:String|Any Ptr)
ScreenInfo(ByRef w:Integer=0ByRef h:Integer=0ByRef depth:Integer=0ByRef bpp:Integer=0ByRef pitch:Integer=0ByRef rate:Integer=0ByRef driver:String="")
ScreenList(depth:Integer=0|Integer)
ScreenLock()
ScreenPtr|Any Ptr()
ScreenRes(Width:Integerheight:Integerdepth:Integer=8num_pages:Integer=1flags:Integer=0refresh_rate:Integer=0)
ScreenSet(work_page:Integer=-1visible_page:Integer=-1)
ScreenSync|Integer()
ScreenUnlock(startline:Integer=-1endline:Integer=-1)
Second(date_serial:Double|Integer)
Seek(filenum:Integer|LongInt)
SetDate(ByRef newdate:String|Integer)
SetEnviron(ByRef varname:String|Integer)
SetMouse(x:Integer=-1y:Integer=-1visibility:Integer=-1clip:Integer=-1|Integer)
SetTime(ByRef newtime:String|Integer)
Sgn(number:Double|Double)
Shell(Command:String)
Shl(ByRef lhs:IntegerByRef rhs:Integer|Integer)
Shl(ByRef lhs:LongIntByRef rhs:LongInt|LongInt)
Shl(ByRef lhs:UIntegerByRef rhs:UInteger|UInteger)
Shl(ByRef lhs:ULongIntByRef rhs:ULongInt|ULongInt)
Shr(ByRef lhs:IntegerByRef rhs:Integer|Integer)
Shr(ByRef lhs:LongIntByRef rhs:LongInt|LongInt)
Shr(ByRef lhs:UIntegerByRef rhs:UInteger|UInteger)
Shr(ByRef lhs:ULongIntByRef rhs:ULongInt|ULongInt)
Sin(number:Double|Double)
Sleep(msecs:Integerkind:Integer|Integer)
Sleep(msecs:Integer=-1|Integer)
Space(count:Integer|String)
Spc(columns)
Sqr(number:Double|Double)
Stop(retval:Integer=0)
Str(ByRef Str:String|String)
Str(Str:WString Ptr|String)
Str(n:Byte|String)
Str(n:Double|String)
Str(n:Integer|String)
Str(n:LongInt|String)
Str(n:Short|String)
Str(n:Single|String)
Str(n:UByte|String)
Str(n:UInteger|String)
Str(n:ULongInt|String)
Str(n:UShort|String)
StrPtr(ByRef lhs:String|ZString Ptr)
StrPtr(ByRef lhs:WString|ZString Ptr)
String(count:Integerch:String|String)
String(count:Integerch_code:Integer|String)
Swap(ByRef a:AnyByRef b:Any)
System(retval:Integer=0)
Tab(column)
Tan(number:Double|Double)
ThreadCreate(proc:Sub(Any Ptr)param:Any Ptr=0|Any Ptr)
ThreadWait(id:Any Ptr)
TimeSerial(Hour:IntegerMinute:IntegerSecond:Integer|Double)
TimeValue(ByRef timestring:String|Double)
Timer|Double()
Time|String()
Trim(ByRef Str:String[Any] ByRef trimset:String=" "|String)
Trim(ByRef Str:WString[Any] ByRef trimset:WString=WStr(" ")|WString)
TypeOf(variable / datatype)
UBound(array:Anydimension:Integer=1|Integer)
UCase(ByRef Str:String|String)
UCase(ByRef Str:WString|WString)
Val(ByRef Str:String|Double)
Val(ByRef Str:WString|Double)
ValInt(ByRef strnum:String|Integer)
ValInt(strnum:WString Ptr|Integer)
ValLng(ByRef strnum:String|LongInt)
ValLng(ByRef strnum:WString|LongInt)
ValUInt(ByRef strnum:String|UInteger)
ValUInt(ByRef strnum:WString|UInteger)
ValULng(ByRef strnum:String|ULongInt)
ValULng(ByRef strnum:WString|ULongInt)
VarPtr(ByRef lhs:Any|Any Ptr)
WBin(number:Bytedigits:Integer|WString)
WBin(number:Byte|WString)
WBin(number:Integerdigits:Integer|WString)
WBin(number:Integer|WString)
WBin(number:LongIntdigits:Integer|WString)
WBin(number:LongInt|WString)
WBin(number:Shortdigits:Integer|WString)
WBin(number:Short|WString)
WHex(number:Bytedigits:Integer|WString)
WHex(number:Byte|WString)
WHex(number:Integerdigits:Integer|WString)
WHex(number:Integer|WString)
WHex(number:LongIntdigits:Integer|WString)
WHex(number:LongInt|WString)
WHex(number:Shortdigits:Integer|WString)
WHex(number:Short|WString)
WInput(num:Integerfilenum:Integer=0|WString)
WInput(num:Integer|WString)
WOct(number:Bytedigits:Integer|WString)
WOct(number:Byte|WString)
WOct(number:Integerdigits:Integer|WString)
WOct(number:Integer|WString)
WOct(number:LongIntdigits:Integer|WString)
WOct(number:LongInt|WString)
WOct(number:Shortdigits:Integer|WString)
WOct(number:Short|WString)
WS(rn:LongInt|WString)
WSpace(count:Integer|WString)
WStr(ByRef Str:String|WString)
WStr(Str:WString Ptr|WString)
WStr(n:Byte|WString)
WStr(n:Double|WString)
WStr(n:Integer|WString)
WStr(n:Short|WString)
WStr(n:Single|WString)
WStr(n:UByte|WString)
WStr(n:UInteger|WString)
WStr(n:ULongInt|WString)
WStr(n:UShort|WString)
WString(count:Integerch:WString|WString)
WString(count:Integerch_code:Integer|WString)
Wait(port:UShortand_mask:Integerxor_mask:Integer=0|Integer)
Wchr(ch:Integer[...]|WString)
Weekday(serial:Doublefirstdayofweek:Integer=fbusesystem|Integer)
WeekdayName(Weekday:Integerabbreviate:Integer=0firstdayofweek:Integer=fbUseSystem|String)
Width([columns][rows]|Integer)
Window([[SCREEN](x1y1)-(x2y2)])
WindowTitle(ByRef Title:String)
Xor(ByRef lhs:AnyByRef rhs:Any|Any)
Year(date_serial:Double|Integer)
va_arg(argument_list:va_first / va_nextdatatype)
va_first|Ptr()
va_next(Argument_List:va_first datatype)
Byte
UByte
Short
UShort
Integer
UInteger
Long
ULong
LongInt
ULongInt
Single
Double
String
ZString
WString
