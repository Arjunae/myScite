diff -Nurw scite_orig/src/PropSetFile.cxx scite/src/PropSetFile.cxx
--- scite_orig/src/PropSetFile.cxx	2018-10-10 08:41:21.910964600 +0200
+++ scite/src/PropSetFile.cxx	2020-02-25 16:28:02.745273200 +0100
@@ -410,17 +410,22 @@
 		rls = (GetInt(expr) != 0) ? rlActive : rlConditionFalse;
 	} else if (isprefix(lineBuffer, "import ") && directoryForImports.IsSet()) {
 		std::string importName(lineBuffer + strlen("import") + 1);
-		if (importName == "*") {
+		size_t starPos=importName.rfind("*");
+		if (std::string::npos!=starPos) { // allow wildcard import from relative pathes
+			importName.erase(starPos,1);
+			importName = Expand(importName.c_str());
+			if (importName[0]==pathSepChar)
+			importName=importName.substr(1,std::string::npos);
+			FilePath importPath(directoryForImports, FilePath(GUI::StringFromUTF8(importName)));
 			// Import all .properties files in this directory except for system properties
 			FilePathSet directories;
 			FilePathSet files;
-			directoryForImports.List(directories, files);
+			importPath.List(directories, files);
 			for (const FilePath &fpFile : files) {
 				if (IsPropertiesFile(fpFile) &&
 					!GenericPropertiesFile(fpFile) &&
 					filter.IsValid(fpFile.BaseName().AsUTF8())) {
-					FilePath importPath(directoryForImports, fpFile);
-					Import(importPath, directoryForImports, filter, imports, depth+1);
+					Import(FilePath(directoryForImports, fpFile), directoryForImports, filter, imports, depth+1);
 				}
 			}
 		} else if (filter.IsValid(importName)) {
