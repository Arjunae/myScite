!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AbandonAutomaticSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void Buffer::AbandonAutomaticSave() {$/;"	f	class:Buffer	signature:()
AbandonAutomaticSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::AbandonAutomaticSave() {$/;"	f	class:SciTEBase	signature:()
AbsolutePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::AbsolutePath() const {$/;"	f	class:FilePath	signature:() const
Activate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::Activate(bool activeApp) {$/;"	f	class:SciTEBase	signature:(bool activeApp)
ActivateBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool ActivateBuffer(int) { return false; }$/;"	f	class:Extension	access:public	signature:(int)
ActivateBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::ActivateBuffer(int index) {$/;"	f	class:LuaExtension	signature:(int index)
ActivateBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::ActivateBuffer(int index) {$/;"	f	class:MultiplexExtension	signature:(int index)
Add	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^int BufferList::Add() {$/;"	f	class:BufferList	signature:()
AddCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.cxx	/^void JobQueue::AddCommand(const std::string &command, const FilePath &directory, JobSubsystem jobType, const std::string &input, int flags) {$/;"	f	class:JobQueue	signature:(const std::string &command, const FilePath &directory, JobSubsystem jobType, const std::string &input, int flags)
AddCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::AddCommand(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input, int flags) {$/;"	f	class:SciTEBase	signature:(const std::string &cmd, const std::string &dir, JobSubsystem jobType, const std::string &input, int flags)
AddFileToBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool SciTEBase::AddFileToBuffer(const BufferState &bufferState) {$/;"	f	class:SciTEBase	signature:(const BufferState &bufferState)
AddFileToStack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::AddFileToStack(const FilePath &file, SelectedRange selection, int scrollPos) {$/;"	f	class:SciTEBase	signature:(const FilePath &file, SelectedRange selection, int scrollPos)
AddFuture	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::AddFuture(int index, Buffer::FutureDo fd) {$/;"	f	class:BufferList	signature:(int index, Buffer::FutureDo fd)
AddSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum AddSelection { addNext, addEach };$/;"	g	class:SciTEBase	access:protected
AddStyledText	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^static void AddStyledText(GUI::ScintillaWindow &wsci, const char *s, int attr) {$/;"	f	file:	signature:(GUI::ScintillaWindow &wsci, const char *s, int attr)
AfterName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static GUI::gui_char AfterName(const GUI::gui_char *s) {$/;"	f	file:	signature:(const GUI::gui_char *s)
Allocate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::Allocate(int maxSize) {$/;"	f	class:BufferList	signature:(int maxSize)
AppendIfNotPresent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	void AppendIfNotPresent(const std::string &s) {$/;"	f	class:EntryMemory	access:public	signature:(const std::string &s)
AppendList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	void AppendList(const std::string &s, char sep = '|') {$/;"	f	class:EntryMemory	access:public	signature:(const std::string &s, char sep = Ã)
ArrayFromStringList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static std::vector<char *> ArrayFromStringList(char *stringList, bool onlyLineEnds = false) {$/;"	f	file:	signature:(char *stringList, bool onlyLineEnds = false)
AsInternal	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char *FilePath::AsInternal() const {$/;"	f	class:FilePath	signature:() const
AsUTF8	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^std::string FilePath::AsUTF8() const {$/;"	f	class:FilePath	signature:() const
AsVector	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	std::vector<std::string>AsVector() {$/;"	f	class:EntryMemory	access:public	signature:()
AskMacroList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::AskMacroList() {$/;"	f	class:SciTEBase	signature:()
AssignKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::AssignKey(int key, int mods, int cmd) {$/;"	f	class:SciTEBase	signature:(int key, int mods, int cmd)
At	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	std::string At(int n) const {$/;"	f	class:EntryMemory	access:public	signature:(int n) const
AtLineEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int AtLineEnd(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
AtLineStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int AtLineStart(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
AutomaticIndentation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::AutomaticIndentation(char ch) {$/;"	f	class:SciTEBase	signature:(char ch)
BackAsLong	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^long StyleDefinition::BackAsLong() const {$/;"	f	class:StyleDefinition	signature:() const
BackgroundActivities	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^struct BackgroundActivities {$/;"	s
BaseName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::BaseName() const {$/;"	f	class:FilePath	signature:() const
BookmarkAdd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::BookmarkAdd(int lineno) {$/;"	f	class:SciTEBase	signature:(int lineno)
BookmarkDelete	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::BookmarkDelete(int lineno) {$/;"	f	class:SciTEBase	signature:(int lineno)
BookmarkNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::BookmarkNext(bool forwardScan, bool select) {$/;"	f	class:SciTEBase	signature:(bool forwardScan, bool select)
BookmarkPresent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::BookmarkPresent(int lineno) {$/;"	f	class:SciTEBase	signature:(int lineno)
BookmarkSelectAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::BookmarkSelectAll() {$/;"	f	class:SciTEBase	signature:()
BookmarkToggle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::BookmarkToggle(int lineno) {$/;"	f	class:SciTEBase	signature:(int lineno)
BraceMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::BraceMatch(bool editor) {$/;"	f	class:SciTEBase	signature:(bool editor)
Buffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	Buffer() :$/;"	f	class:Buffer	access:public	signature:()
Buffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class Buffer : public RecentFile {$/;"	c	inherits:RecentFile
BufferContainsNull	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool BufferContainsNull() {$/;"	f	class:BufferedFile	access:public	signature:()
BufferContainsNull	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool BufferContainsNull() {$/;"	f	class:FileReader	access:public	signature:()
BufferList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class BufferList {$/;"	c
BufferList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^BufferList::BufferList() : current(0), stackcurrent(0), stack(0), buffers(0), length(0), lengthVisible(0), initialised(false) {}$/;"	f	class:BufferList	signature:()
BufferState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^struct BufferState : public RecentFile {$/;"	s	inherits:RecentFile
BufferedFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	explicit BufferedFile(const FilePath &fPath) {$/;"	f	class:BufferedFile	access:public	signature:(const FilePath &fPath)
BufferedFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^class BufferedFile {$/;"	c	file:
BuffersMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::BuffersMenu() {$/;"	f	class:SciTEBase	signature:()
CHARZ	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportTEX.cxx	59;"	d	file:
COPYRIGHT_DATES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	14;"	d
COPYRIGHT_YEARS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	15;"	d
CSI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	1851;"	d	file:
CalculateColumnWidths	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	void CalculateColumnWidths(int widthToAllocate) {$/;"	f	class:StripDefinition	access:public	signature:(int widthToAllocate)
Call	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int Call(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0) {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0)
CallChildren	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::CallChildren(unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	signature:(unsigned int msg, uptr_t wParam, sptr_t lParam)
CallFocused	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::CallFocused(unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	signature:(unsigned int msg, uptr_t wParam, sptr_t lParam)
CallFocusedElseDefault	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::CallFocusedElseDefault(int defaultValue, unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	signature:(int defaultValue, unsigned int msg, uptr_t wParam, sptr_t lParam)
CallNamedFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name) {$/;"	f	file:	signature:(const char *name)
CallNamedFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name, const char *arg) {$/;"	f	file:	signature:(const char *name, const char *arg)
CallNamedFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name, int numberArg, const char *stringArg) {$/;"	f	file:	signature:(const char *name, int numberArg, const char *stringArg)
CallNamedFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool CallNamedFunction(const char *name, int numberArg, int numberArg2) {$/;"	f	file:	signature:(const char *name, int numberArg, int numberArg2)
CallPane	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^sptr_t SciTEBase::CallPane(int destination, unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	signature:(int destination, unsigned int msg, uptr_t wParam, sptr_t lParam)
CallPointer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int CallPointer(unsigned int msg, uptr_t wParam, void *s) {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:(unsigned int msg, uptr_t wParam, void *s)
CallReturnPointer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	sptr_t CallReturnPointer(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0) {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:(unsigned int msg, uptr_t wParam=0, sptr_t lParam=0)
CallString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int CallString(unsigned int msg, uptr_t wParam, const char *s) {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:(unsigned int msg, uptr_t wParam, const char *s)
CanCall	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	bool CanCall() const {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:() const
CanMakeRoom	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool SciTEBase::CanMakeRoom(bool maySaveIfDirty) {$/;"	f	class:SciTEBase	signature:(bool maySaveIfDirty)
Cancel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^void FileLoader::Cancel() {$/;"	f	class:FileLoader	signature:()
Cancel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^void FileStorer::Cancel() {$/;"	f	class:FileStorer	signature:()
Cancel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	virtual void Cancel() {$/;"	f	struct:FileWorker	access:public	signature:()
Cancel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	virtual void Cancel() {$/;"	f	struct:Worker	access:public	signature:()
CancelLoad	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void Buffer::CancelLoad() {$/;"	f	class:Buffer	signature:()
Cancelled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	long Cancelled() {$/;"	f	class:JobQueue	access:public	signature:()
Cancelling	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	bool Cancelling() const {$/;"	f	struct:Worker	access:public	signature:() const
ChangeState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int ChangeState(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
CharAdded	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::CharAdded(int utf32) {$/;"	f	class:SciTEBase	signature:(int utf32)
CharAddedOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::CharAddedOutput(int ch) {$/;"	f	class:SciTEBase	signature:(int ch)
CharAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int CharAt(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
CheckMenus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::CheckMenus() {$/;"	f	class:SciTEBase	signature:()
CheckMenusClipboard	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::CheckMenusClipboard() {$/;"	f	class:SciTEBase	signature:()
CheckReload	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::CheckReload() {$/;"	f	class:SciTEBase	signature:()
CheckStartupScript	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool CheckStartupScript() {$/;"	f	file:	signature:()
Chomp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^static void Chomp(std::string &s, int ch) {$/;"	f	file:	signature:(std::string &s, int ch)
Clear	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	void Clear() {$/;"	f	class:Job	access:public	signature:()
Clear	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::Clear() {$/;"	f	class:LuaExtension	signature:()
Clear	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::Clear() {$/;"	f	class:MultiplexExtension	signature:()
Clear	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::Clear() {$/;"	f	class:PropSetFile	signature:()
Clear	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^void StringList::Clear() {$/;"	f	class:StringList	signature:()
ClearBeforeExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool ClearBeforeExecute() const {$/;"	f	class:JobQueue	access:public	signature:() const
ClearDocument	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::ClearDocument() {$/;"	f	class:SciTEBase	signature:()
ClearJobs	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.cxx	/^void JobQueue::ClearJobs() {$/;"	f	class:JobQueue	signature:()
Close	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::Close(bool updateUI, bool loadingSession, bool makingRoomForNew) {$/;"	f	class:SciTEBase	signature:(bool updateUI, bool loadingSession, bool makingRoomForNew)
CloseAllBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::CloseAllBuffers(bool loadingSession) {$/;"	f	class:SciTEBase	signature:(bool loadingSession)
CloseFind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	c	class:Searcher	access:public
CloseTab	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::CloseTab(int tab) {$/;"	f	class:SciTEBase	signature:(int tab)
CmpString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static bool CmpString(const char *a, const char *b) {$/;"	f	file:	signature:(const char *a, const char *b)
CmpStringNoCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static bool CmpStringNoCase(const char *a, const char *b) {$/;"	f	file:	signature:(const char *a, const char *b)
CodingCookieValue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.cxx	/^UniMode CodingCookieValue(const char *buf, size_t length) {$/;"	f	signature:(const char *buf, size_t length)
Colour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^typedef long Colour;$/;"	t
ColourFromString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^Colour ColourFromString(const std::string &s) {$/;"	f	signature:(const std::string &s)
ColourOfProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^Colour ColourOfProperty(const PropSetFile &props, const char *key, Colour colourDefault) {$/;"	f	signature:(const PropSetFile &props, const char *key, Colour colourDefault)
ColourRGB	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^inline Colour ColourRGB(unsigned int red, unsigned int green, unsigned int blue) {$/;"	f	signature:(unsigned int red, unsigned int green, unsigned int blue)
ColourTo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^void StyleWriter::ColourTo(unsigned int pos, int chAttr) {$/;"	f	class:StyleWriter	signature:(unsigned int pos, int chAttr)
Colourize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	void Colourize() {$/;"	f	struct:StylingContext	access:public	signature:()
ColumnWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	ColumnWidth() : widthDesired(0), widthAllocated(0), isResizeable(false) {$/;"	f	struct:ColumnWidth	access:public	signature:()
ColumnWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^struct ColumnWidth {$/;"	s
ComboMemory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^typedef EntryMemory < 10 > ComboMemory;$/;"	t
CommandExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^std::string CommandExecute(const GUI::gui_char *command, const GUI::gui_char *directoryForRun) {$/;"	f	signature:(const GUI::gui_char *command, const GUI::gui_char *directoryForRun)
CommitStackSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::CommitStackSelection() {$/;"	f	class:BufferList	signature:()
CompareNCaseInsensitive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static int CompareNCaseInsensitive(const char *a, const char *b, size_t len) {$/;"	f	file:	signature:(const char *a, const char *b, size_t len)
CompareNoCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^int CompareNoCase(const char *a, const char *b) {$/;"	f	signature:(const char *a, const char *b)
CompareString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	explicit CompareString(size_t searchLen_) : searchLen(searchLen_) {}$/;"	f	struct:__anon30::CompareString	access:public	signature:(size_t searchLen_)
CompareString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^struct CompareString {$/;"	s	namespace:__anon30	file:
CompareStringInsensitive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	explicit CompareStringInsensitive(size_t searchLen_) : searchLen(searchLen_) {}$/;"	f	struct:__anon30::CompareStringInsensitive	access:public	signature:(size_t searchLen_)
CompareStringInsensitive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^struct CompareStringInsensitive {$/;"	s	namespace:__anon30	file:
Complete	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^bool MatchMarker::Complete() const {$/;"	f	class:MatchMarker	signature:() const
CompleteLoading	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void Buffer::CompleteLoading() {$/;"	f	class:Buffer	signature:()
CompleteOpen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::CompleteOpen(OpenCompletion oc) {$/;"	f	class:SciTEBase	signature:(OpenCompletion oc)
CompleteStoring	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void Buffer::CompleteStoring() {$/;"	f	class:Buffer	signature:()
Contains	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	bool Contains(Point pt) const {$/;"	f	class:GUI::Rectangle	access:public	signature:(Point pt) const
Contains	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool Contains(std::string const &s, char ch) {$/;"	f	signature:(std::string const &s, char ch)
Context	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static StylingContext *Context(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
ContextMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ContextMenu(GUI::ScintillaWindow &wSource, GUI::Point pt, GUI::Window wCmd) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &wSource, GUI::Point pt, GUI::Window wCmd)
Continue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^void MatchMarker::Continue() {$/;"	f	class:MatchMarker	signature:()
ContinueCallTip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ContinueCallTip() {$/;"	f	class:SciTEBase	signature:()
ContinueMacroList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ContinueMacroList(const char *stext) {$/;"	f	class:SciTEBase	signature:(const char *stext)
ControlIDOfCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int ControlIDOfCommand(unsigned long wParam) {$/;"	f	signature:(unsigned long wParam)
ConvertIndentation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ConvertIndentation(int tabSize, int useTabs) {$/;"	f	class:SciTEBase	signature:(int tabSize, int useTabs)
CookieValue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.cxx	/^static UniMode CookieValue(const std::string &s) {$/;"	f	file:	signature:(const std::string &s)
CopyAsRTF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void CopyAsRTF() {}$/;"	f	class:SciTEBase	access:protected	signature:()
CopyPath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void CopyPath() {}$/;"	f	class:SciTEBase	access:protected	signature:()
CountBackgroundActivities	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^BackgroundActivities BufferList::CountBackgroundActivities() const {$/;"	f	class:BufferList	signature:() const
CountLineEnds	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::CountLineEnds(int &linesCR, int &linesLF, int &linesCRLF) {$/;"	f	class:SciTEBase	signature:(int &linesCR, int &linesLF, int &linesCRLF)
CreateBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::CreateBuffers() {$/;"	f	class:SciTEBase	signature:()
CreateIndentation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static std::string CreateIndentation(int indent, int tabSize, bool insertSpaces) {$/;"	f	file:	signature:(int indent, int tabSize, bool insertSpaces)
Created	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	bool Created() const {$/;"	f	class:GUI::Window	access:public	signature:() const
Current	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Current(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
Current	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^int BufferList::Current() const {$/;"	f	class:BufferList	signature:() const
CurrentBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	Buffer *CurrentBuffer() {$/;"	f	class:SciTEBase	access:protected	signature:()
CurrentBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^Buffer *BufferList::CurrentBuffer() {$/;"	f	class:BufferList	signature:()
CurrentBufferConst	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	const Buffer *CurrentBufferConst() const {$/;"	f	class:SciTEBase	access:protected	signature:() const
CurrentBufferConst	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^const Buffer *BufferList::CurrentBufferConst() const {$/;"	f	class:BufferList	signature:() const
CurrentWordHighlight	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	CurrentWordHighlight() {$/;"	f	struct:CurrentWordHighlight	access:public	signature:()
CurrentWordHighlight	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^struct CurrentWordHighlight {$/;"	s
DecodeMessage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^static int DecodeMessage(const char *cdoc, std::string &sourcePath, int format, int &column) {$/;"	f	file:	signature:(const char *cdoc, std::string &sourcePath, int format, int &column)
DefineMarker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::DefineMarker(int marker, int markerType, Colour fore, Colour back, Colour backSelected) {$/;"	f	class:SciTEBase	signature:(int marker, int markerType, Colour fore, Colour back, Colour backSelected)
DeleteFileStackMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::DeleteFileStackMenu() {$/;"	f	class:SciTEBase	signature:()
Directory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::Directory() const {$/;"	f	class:FilePath	signature:() const
DiscoverEOLSetting	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::DiscoverEOLSetting() {$/;"	f	class:SciTEBase	signature:()
DiscoverIndentSetting	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::DiscoverIndentSetting() {$/;"	f	class:SciTEBase	signature:()
DiscoverLanguage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^std::string SciTEBase::DiscoverLanguage() {$/;"	f	class:SciTEBase	signature:()
DisplayAround	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::DisplayAround(const RecentFile &rf) {$/;"	f	class:SciTEBase	signature:(const RecentFile &rf)
DoMenuCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::DoMenuCommand(int cmdID) {$/;"	f	class:SciTEBase	signature:(int cmdID)
DoReplaceAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::DoReplaceAll(bool inSelection) {$/;"	f	class:SciTEBase	signature:(bool inSelection)
DocumentModified	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void Buffer::DocumentModified() {$/;"	f	class:Buffer	signature:()
Duration	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^double FileWorker::Duration() {$/;"	f	class:FileWorker	signature:()
ELEMENTS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	13;"	d
EXTENDER_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	9;"	d
ElapsedTime	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^class ElapsedTime {$/;"	c	namespace:GUI
EliminateDuplicateWords	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::EliminateDuplicateWords(std::string &words) {$/;"	f	class:SciTEBase	signature:(std::string &words)
EncodeString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::EncodeString(const std::string &s) {$/;"	f	class:SciTEBase	signature:(const std::string &s)
EndMatches	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static bool EndMatches(GUI::gui_string const &s, GUI::gui_string const &end) {$/;"	f	file:	signature:(GUI::gui_string const &s, GUI::gui_string const &end)
EndStackedTabbing	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::EndStackedTabbing() {$/;"	f	class:SciTEBase	signature:()
EndStyling	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int EndStyling(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
EndsWith	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool EndsWith(GUI::gui_string const &s, GUI::gui_string const &end) {$/;"	f	signature:(GUI::gui_string const &s, GUI::gui_string const &end)
EnsureAllChildrenVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::EnsureAllChildrenVisible(int line, int level) {$/;"	f	class:SciTEBase	signature:(int line, int level)
EnsureData	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	void EnsureData() {$/;"	f	class:BufferedFile	file:	access:private	signature:()
EnsureFinalNewLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::EnsureFinalNewLine() {$/;"	f	class:SciTEBase	signature:()
EnsureRangeVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::EnsureRangeVisible(GUI::ScintillaWindow &win, int posStart, int posEnd, bool enforcePolicy) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int posStart, int posEnd, bool enforcePolicy)
EntryMemory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^class EntryMemory {$/;"	c
EnumProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::EnumProperties(const char *propkind) {$/;"	f	class:SciTEBase	signature:(const char *propkind)
EqualCaseInsensitive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool EqualCaseInsensitive(const char *a, const char *b) {$/;"	f	signature:(const char *a, const char *b)
EscapeFilePathsForMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^static void EscapeFilePathsForMenu(GUI::gui_string &path) {$/;"	f	file:	signature:(GUI::gui_string &path)
Evaluate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::Evaluate(const char *key) const {$/;"	f	class:PropSetFile	signature:(const char *key) const
Execute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^void FileLoader::Execute() {$/;"	f	class:FileLoader	signature:()
Execute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^void FileStorer::Execute() {$/;"	f	class:FileStorer	signature:()
Execute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Execute() {$/;"	f	class:SciTEBase	signature:()
Execute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	virtual void Execute() {}$/;"	f	struct:Worker	access:public	signature:()
ExecuteMacroCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ExecuteMacroCommand(const char *command) {$/;"	f	class:SciTEBase	signature:(const char *command)
Exhausted	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool Exhausted() const {$/;"	f	class:BufferedFile	access:public	signature:() const
Exists	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::Exists() const {$/;"	f	class:FilePath	signature:() const
Exists	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool PropSetFile::Exists(const char *key) const {$/;"	f	class:PropSetFile	signature:(const char *key) const
Exists	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::Exists(const GUI::gui_char *dir, const GUI::gui_char *path, FilePath *resultPath) {$/;"	f	class:SciTEBase	signature:(const GUI::gui_char *dir, const GUI::gui_char *path, FilePath *resultPath)
Expand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::Expand(const std::string &withVars, int maxExpands) const {$/;"	f	class:PropSetFile	signature:(const std::string &withVars, int maxExpands) const
ExpandAllInPlace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static int ExpandAllInPlace(const PropSetFile &props, std::string &withVars, int maxExpands, const VarChain &blankVars = VarChain()) {$/;"	f	file:	signature:(const PropSetFile &props, std::string &withVars, int maxExpands, const VarChain &blankVars = VarChain())
ExpandFolds	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ExpandFolds(int line, bool expand, int level) {$/;"	f	class:SciTEBase	signature:(int line, bool expand, int level)
Extension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^class Extension {$/;"	c
Extension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::Extension() const {$/;"	f	class:FilePath	signature:() const
ExtensionAPI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^class ExtensionAPI {$/;"	c
ExtensionFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^std::string SciTEBase::ExtensionFileName() const {$/;"	f	class:SciTEBase	signature:() const
ExtractLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.cxx	/^std::string ExtractLine(const char *buf, size_t length) {$/;"	f	signature:(const char *buf, size_t length)
FailedSaveMessageBox	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::FailedSaveMessageBox(const FilePath &filePathSaving) {$/;"	f	class:SciTEBase	signature:(const FilePath &filePathSaving)
FileLoader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^FileLoader::FileLoader(WorkerListener *pListener_, ILoader *pLoader_, const FilePath &path_, size_t size_, FILE *fp_) :$/;"	f	class:FileLoader	signature:(WorkerListener *pListener_, ILoader *pLoader_, const FilePath &path_, size_t size_, FILE *fp_)
FileLoader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^class FileLoader : public FileWorker {$/;"	c	inherits:FileWorker
FileNameExt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePath FileNameExt() const {$/;"	f	class:SciTEBase	access:protected	signature:() const
FilePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath::FilePath(FilePath const &directory, FilePath const &name) {$/;"	f	class:FilePath	signature:(FilePath const &directory, FilePath const &name)
FilePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath::FilePath(const GUI::gui_char *fileName_) : fileName(fileName_ ? fileName_ : GUI_TEXT("")) {}$/;"	f	class:FilePath	signature:(const GUI::gui_char *fileName_)
FilePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath::FilePath(const GUI::gui_string &fileName_) : fileName(fileName_) {}$/;"	f	class:FilePath	signature:(const GUI::gui_string &fileName_)
FilePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.h	/^class FilePath {$/;"	c
FilePathSet	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.h	/^typedef std::vector<FilePath> FilePathSet;$/;"	t
FileReader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	FileReader(const FilePath &fPath, bool caseSensitive_) {$/;"	f	class:FileReader	access:public	signature:(const FilePath &fPath, bool caseSensitive_)
FileReader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^class FileReader {$/;"	c	file:
FileStorer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^FileStorer::FileStorer(WorkerListener *pListener_, const char *documentBytes_, const FilePath &path_,$/;"	f	class:FileStorer	signature:(WorkerListener *pListener_, const char *documentBytes_, const FilePath &path_, size_t size_, FILE *fp_, UniMode unicodeMode_, bool visibleProgress_)
FileStorer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^class FileStorer : public FileWorker {$/;"	c	inherits:FileWorker
FileWorker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^FileWorker::FileWorker(WorkerListener *pListener_, const FilePath &path_, size_t size_, FILE *fp_) :$/;"	f	class:FileWorker	signature:(WorkerListener *pListener_, const FilePath &path_, size_t size_, FILE *fp_)
FileWorker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^struct FileWorker : public Worker {$/;"	s	inherits:Worker
Fill	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^void TextReader::Fill(int position) {$/;"	f	class:TextReader	signature:(int position)
FillFunctionDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::FillFunctionDefinition(int pos \/*= -1*\/) {$/;"	f	class:SciTEBase	signature:(int pos )
FilterFromString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static std::set<std::string> FilterFromString(const std::string &values) {$/;"	f	file:	signature:(const std::string &values)
Finalise	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::Finalise() {$/;"	f	class:LuaExtension	signature:()
Finalise	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::Finalise() {$/;"	f	class:MultiplexExtension	signature:()
Finalise	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Finalise() {$/;"	f	class:SciTEBase	signature:()
FindCaseInsensitive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	/^static size_t FindCaseInsensitive(const std::vector<std::string> &values, const std::string &s) {$/;"	f	file:	signature:(const std::vector<std::string> &values, const std::string &s)
FindConstant	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^int IFaceTable::FindConstant(const char *name) {$/;"	f	class:IFaceTable	signature:(const char *name)
FindControl	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	UserControl *FindControl(int control) {$/;"	f	class:StripDefinition	access:public	signature:(int control)
FindFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^int IFaceTable::FindFunction(const char *name) {$/;"	f	class:IFaceTable	signature:(const char *name)
FindFunctionByConstantName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^int IFaceTable::FindFunctionByConstantName(const char *name) {$/;"	f	class:IFaceTable	signature:(const char *name)
FindHasText	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::FindHasText() const {$/;"	f	class:SciTEBase	signature:() const
FindInTarget	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::FindInTarget(std::string findWhatText, int startPosition, int endPosition) {$/;"	f	class:SciTEBase	signature:(std::string findWhatText, int startPosition, int endPosition)
FindLanguageProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^std::string SciTEBase::FindLanguageProperty(const char *pattern, const char *defaultValue) {$/;"	f	class:SciTEBase	signature:(const char *pattern, const char *defaultValue)
FindMatchingBracePosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::FindMatchingBracePosition(bool editor, int &braceAtCaret, int &braceOpposite, bool sloppy) {$/;"	f	class:SciTEBase	signature:(bool editor, int &braceAtCaret, int &braceOpposite, bool sloppy)
FindMatchingPreprocCondPosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::FindMatchingPreprocCondPosition($/;"	f	class:SciTEBase	signature:( bool isForward, int &mppcAtCaret, int &mppcMatch)
FindMatchingPreprocessorCondition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::FindMatchingPreprocessorCondition($/;"	f	class:SciTEBase	signature:( int &curLine, int direction, int condEnd1, int condEnd2)
FindNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::FindNext(bool reverseDirection, bool showWarnings, bool allowRegExp) {$/;"	f	class:SciTEBase	signature:(bool reverseDirection, bool showWarnings, bool allowRegExp)
FindOpenXmlTag	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::FindOpenXmlTag(const char sel[], int nSize) {$/;"	f	class:SciTEBase	signature:(const char sel[], int nSize)
FindProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^int IFaceTable::FindProperty(const char *name) {$/;"	f	class:IFaceTable	signature:(const char *name)
FindReplaceAdvanced	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::FindReplaceAdvanced() const {$/;"	f	class:SciTEBase	signature:() const
FinishedFuture	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::FinishedFuture(int index, Buffer::FutureDo fd) {$/;"	f	class:BufferList	signature:(int index, Buffer::FutureDo fd)
FinishedJob	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	bool FinishedJob() const {$/;"	f	struct:Worker	access:public	signature:() const
FixName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::FixName() {$/;"	f	class:FilePath	signature:()
FlagFromCmd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool &Searcher::FlagFromCmd(int cmd) {$/;"	f	class:Searcher	signature:(int cmd)
Flush	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^void StyleWriter::Flush() {$/;"	f	class:StyleWriter	signature:()
FoldAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::FoldAll() {$/;"	f	class:SciTEBase	signature:()
FoldChanged	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::FoldChanged(int line, int levelNow, int levelPrev) {$/;"	f	class:SciTEBase	signature:(int line, int levelNow, int levelPrev)
ForeAsLong	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^long StyleDefinition::ForeAsLong() const {$/;"	f	class:StyleDefinition	signature:() const
Forward	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Forward(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
Forward	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	void Forward() {$/;"	f	struct:StylingContext	access:public	signature:()
ForwardPropertyToEditor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ForwardPropertyToEditor(const char *key) {$/;"	f	class:SciTEBase	signature:(const char *key)
ForwardSetState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int ForwardSetState(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
FractionalSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^int StyleDefinition::FractionalSize() const {$/;"	f	class:StyleDefinition	signature:() const
FutureDo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	g	class:Buffer	access:public
GUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^namespace GUI {$/;"	n
GUI_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	11;"	d
GUI_TEXT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	57;"	d
GUI_TEXT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	66;"	d
GenericPropertiesFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool GenericPropertiesFile(const FilePath &filename) {$/;"	f	file:	signature:(const FilePath &filename)
GetAbbrevPropertiesFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^FilePath SciTEBase::GetAbbrevPropertiesFileName() {$/;"	f	class:SciTEBase	signature:()
GetCTag	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetCTag() {$/;"	f	class:SciTEBase	signature:()
GetCaretInLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::GetCaretInLine() {$/;"	f	class:SciTEBase	signature:()
GetClientRectangle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^GUI::Rectangle SciTEBase::GetClientRectangle() {$/;"	f	class:SciTEBase	signature:()
GetConstantName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^int IFaceTable::GetConstantName(int value, char *nameOut, unsigned nameBufferLen, const char *prefix) {$/;"	f	class:IFaceTable	signature:(int value, char *nameOut, unsigned nameBufferLen, const char *prefix)
GetCurrentLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetCurrentLine() {$/;"	f	class:SciTEBase	signature:()
GetCurrentLineNumber	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::GetCurrentLineNumber() {$/;"	f	class:SciTEBase	signature:()
GetCurrentScrollPosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::GetCurrentScrollPosition() {$/;"	f	class:SciTEBase	signature:()
GetDefaultPropertiesFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^FilePath SciTEBase::GetDefaultPropertiesFileName() {$/;"	f	class:SciTEBase	signature:()
GetDirectoryPropertiesFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^FilePath SciTEBase::GetDirectoryPropertiesFileName() {$/;"	f	class:SciTEBase	signature:()
GetDocumentAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^sptr_t SciTEBase::GetDocumentAt(int index) {$/;"	f	class:SciTEBase	signature:(int index)
GetDocumentByName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^int BufferList::GetDocumentByName(const FilePath &filename, bool excludeCurrent) {$/;"	f	class:BufferList	signature:(const FilePath &filename, bool excludeCurrent)
GetDocumentByWorker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^int BufferList::GetDocumentByWorker(const FileWorker *pFileWorker) const {$/;"	f	class:BufferList	signature:(const FileWorker *pFileWorker) const
GetExpandedString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::GetExpandedString(const char *key) const {$/;"	f	class:PropSetFile	signature:(const char *key) const
GetFileLength	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^long long FilePath::GetFileLength() const {$/;"	f	class:FilePath	signature:() const
GetFileNameProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^std::string SciTEBase::GetFileNameProperty(const char *name) {$/;"	f	class:SciTEBase	signature:(const char *name)
GetFilePosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^RecentFile SciTEBase::GetFilePosition() {$/;"	f	class:SciTEBase	signature:()
GetFirst	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool PropSetFile::GetFirst(const char *&key, const char *&val) {$/;"	f	class:PropSetFile	signature:(const char *&key, const char *&val)
GetFullLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool GetFullLine(const char *&fpc, size_t &lenData, char *s, size_t len) {$/;"	f	file:	signature:(const char *&fpc, size_t &lenData, char *s, size_t len)
GetHexaDigit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^static int GetHexaDigit(char ch) {$/;"	f	file:	signature:(char ch)
GetID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	MenuID GetID() const {$/;"	f	class:GUI::Menu	access:public	signature:() const
GetID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	WindowID GetID() const {$/;"	f	class:GUI::Window	access:public	signature:() const
GetID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::WindowID GetID() const { return wSciTE.GetID(); }$/;"	f	class:SciTEBase	access:public	signature:() const
GetIndentState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^IndentationStatus SciTEBase::GetIndentState(int line) {$/;"	f	class:SciTEBase	signature:(int line)
GetInstance	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^uptr_t SciTEBase::GetInstance() {$/;"	f	class:SciTEBase	signature:()
GetInt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^int PropSetFile::GetInt(const char *key, int defaultValue) const {$/;"	f	class:PropSetFile	signature:(const char *key, int defaultValue) const
GetLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetLine(GUI::ScintillaWindow &win, int line) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int line)
GetLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::GetLine(char *text, int sizeText, int line) {$/;"	f	class:SciTEBase	signature:(char *text, int sizeText, int line)
GetLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int TextReader::GetLine(int position) {$/;"	f	class:TextReader	signature:(int position)
GetLineIndentPosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::GetLineIndentPosition(int line) {$/;"	f	class:SciTEBase	signature:(int line)
GetLineIndentation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::GetLineIndentation(int line) {$/;"	f	class:SciTEBase	signature:(int line)
GetLineLength	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::GetLineLength(int line) {$/;"	f	class:SciTEBase	signature:(int line)
GetLinePartsInStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::vector<std::string> SciTEBase::GetLinePartsInStyle(int line, const StyleAndWords &saw) {$/;"	f	class:SciTEBase	signature:(int line, const StyleAndWords &saw)
GetLineState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int TextReader::GetLineState(int line) {$/;"	f	class:TextReader	signature:(int line)
GetLocalPropertiesFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^FilePath SciTEBase::GetLocalPropertiesFileName() {$/;"	f	class:SciTEBase	signature:()
GetLongLong	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^long long PropSetFile::GetLongLong(const char *key, long long defaultValue) const {$/;"	f	class:PropSetFile	signature:(const char *key, long long defaultValue) const
GetMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	std::string GetMatch(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, const std::string &wordCharacters, int wordIndex, Compare comp) {$/;"	f	namespace:__anon30	signature:(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, const std::string &wordCharacters, int wordIndex, Compare comp)
GetMatches	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static std::string GetMatches(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, char otherSeparator, bool exactLen, Compare comp) {$/;"	f	file:	signature:(std::vector<char *>::iterator start, std::vector<char *>::iterator end, const char *wordStart, char otherSeparator, bool exactLen, Compare comp)
GetMenuCommandAsInt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^int SciTEBase::GetMenuCommandAsInt(std::string commandName) {$/;"	f	class:SciTEBase	signature:(std::string commandName)
GetNearestWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^std::string StringList::GetNearestWord(const char *wordStart, size_t searchLen, bool ignoreCase, const std::string &wordCharacters, int wordIndex) {$/;"	f	class:StringList	signature:(const char *wordStart, size_t searchLen, bool ignoreCase, const std::string &wordCharacters, int wordIndex)
GetNearestWords	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetNearestWords(const char *wordStart, size_t searchLen,$/;"	f	class:SciTEBase	signature:(const char *wordStart, size_t searchLen, const char *separators, bool ignoreCase , bool exactLen )
GetNearestWords	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^std::string StringList::GetNearestWords($/;"	f	class:StringList	signature:( const char *wordStart, size_t searchLen, bool ignoreCase, char otherSeparator , bool exactLen )
GetNewExpandString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::GetNewExpandString(const char *keybase, const char *filename) {$/;"	f	class:PropSetFile	signature:(const char *keybase, const char *filename)
GetNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool PropSetFile::GetNext(const char *&key, const char *&val) {$/;"	f	class:PropSetFile	signature:(const char *&key, const char *&val)
GetNextChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	void GetNextChar() {$/;"	f	struct:StylingContext	access:public	signature:()
GetNextPropItem	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^const char *SciTEBase::GetNextPropItem($/;"	f	class:SciTEBase	signature:( const char *pStart, char *pPropItem, int maxLen)
GetPropertyInt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int GetPropertyInt(const char *propName) {$/;"	f	file:	signature:(const char *propName)
GetRTFNextControl	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	/^static void GetRTFNextControl(const char **style, char *control) {$/;"	f	file:	signature:(const char **style, char *control)
GetRTFStyleChange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	/^static std::string GetRTFStyleChange(const char *last, const char *current) { \/\/ \\f0\\fs20\\cf0\\highlight0\\b0\\i0$/;"	f	file:	signature:(const char *last, const char *current)
GetRange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::GetRange(GUI::ScintillaWindow &win, int start, int end, char *text) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int start, int end, char *text)
GetRangeInUIEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetRangeInUIEncoding(GUI::ScintillaWindow &win, int selStart, int selEnd) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int selStart, int selEnd)
GetRangeString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetRangeString(GUI::ScintillaWindow &win, int selStart, int selEnd) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int selStart, int selEnd)
GetSelectedRange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^SelectedRange SciTEBase::GetSelectedRange() {$/;"	f	class:SciTEBase	signature:()
GetSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^Sci_CharacterRange SciTEBase::GetSelection() {$/;"	f	class:SciTEBase	signature:()
GetStartSegment	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	unsigned int GetStartSegment() const { return startSeg; }$/;"	f	class:StyleWriter	access:public	signature:() const
GetString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::GetString(const char *key) const {$/;"	f	class:PropSetFile	signature:(const char *key) const
GetStyleAndWords	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^StyleAndWords SciTEBase::GetStyleAndWords(const char *base) {$/;"	f	class:SciTEBase	signature:(const char *base)
GetTranslationToAbout	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::GetTranslationToAbout(const char * const propname, bool retainIfNotFound) {$/;"	f	class:SciTEBase	signature:(const char * const propname, bool retainIfNotFound)
GetUserPropertiesFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^FilePath SciTEBase::GetUserPropertiesFileName() {$/;"	f	class:SciTEBase	signature:()
GetVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool BufferList::GetVisible(int index) const {$/;"	f	class:BufferList	signature:(int index) const
GetWild	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::GetWild(const char *keybase, const char *filename) {$/;"	f	class:PropSetFile	signature:(const char *keybase, const char *filename)
GetWildUsingStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^std::string PropSetFile::GetWildUsingStart(const PropSetFile &psStart, const char *keybase, const char *filename) {$/;"	f	class:PropSetFile	signature:(const PropSetFile &psStart, const char *keybase, const char *filename)
GetWorkingDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::GetWorkingDirectory() {$/;"	f	class:FilePath	signature:()
GetterFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceFunction GetterFunction() const {$/;"	f	struct:IFaceProperty	access:public	signature:() const
GoMatchingBrace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::GoMatchingBrace(bool select) {$/;"	f	class:SciTEBase	signature:(bool select)
GoMatchingPreprocCond	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::GoMatchingPreprocCond(int direction, bool select) {$/;"	f	class:SciTEBase	signature:(int direction, bool select)
GoMessage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::GoMessage(int dir) {$/;"	f	class:SciTEBase	signature:(int dir)
GotoLineEnsureVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::GotoLineEnsureVisible(int line) {$/;"	f	class:SciTEBase	signature:(int line)
GrepFlags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum GrepFlags {$/;"	g	class:SciTEBase	access:protected
GrepIntoDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::GrepIntoDirectory(const FilePath &directory) {$/;"	f	class:SciTEBase	signature:(const FilePath &directory)
GrepRecursive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::GrepRecursive(GrepFlags gf, const FilePath &baseDir, const char *searchString, const GUI::gui_char *fileTypes) {$/;"	f	class:SciTEBase	signature:(GrepFlags gf, const FilePath &baseDir, const char *searchString, const GUI::gui_char *fileTypes)
HackColour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	void HackColour(int &n) {$/;"	f	class:__anon1::RandomColour	file:	access:private	signature:(int &n)
HandleXml	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::HandleXml(char ch) {$/;"	f	class:SciTEBase	signature:(char ch)
HasCommandToRun	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool HasCommandToRun() const {$/;"	f	class:JobQueue	access:public	signature:() const
HasNamedFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool HasNamedFunction(const char *name) {$/;"	f	file:	signature:(const char *name)
Height	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int Height() const { return bottom - top; }$/;"	f	class:GUI::Rectangle	access:public	signature:() const
HideMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::HideMatch() {$/;"	f	class:SciTEBase	signature:()
HighlightCurrentWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::HighlightCurrentWord(bool highlight) {$/;"	f	class:SciTEBase	signature:(bool highlight)
IDABBREV	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	245;"	d
IDABOUTSCINTILLA	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	217;"	d
IDBM_20_AROUND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	283;"	d
IDBM_20_BACKSLASH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	282;"	d
IDBM_20_CASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	280;"	d
IDBM_20_REGEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	281;"	d
IDBM_20_UP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	284;"	d
IDBM_20_WORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	279;"	d
IDBM_24_AROUND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	290;"	d
IDBM_24_BACKSLASH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	289;"	d
IDBM_24_CASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	287;"	d
IDBM_24_REGEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	288;"	d
IDBM_24_UP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	291;"	d
IDBM_24_WORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	286;"	d
IDBM_32_AROUND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	297;"	d
IDBM_32_BACKSLASH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	296;"	d
IDBM_32_CASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	294;"	d
IDBM_32_REGEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	295;"	d
IDBM_32_UP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	298;"	d
IDBM_32_WORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	293;"	d
IDBM_AROUND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	275;"	d
IDBM_BACKSLASH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	274;"	d
IDBM_CASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	272;"	d
IDBM_REGEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	273;"	d
IDBM_UP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	276;"	d
IDBM_WORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	271;"	d
IDBROWSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	243;"	d
IDCMD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	240;"	d
IDCONVERT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	257;"	d
IDCURRLINE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	221;"	d
IDCURRLINECHAR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	251;"	d
IDC_DRAGDROP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	270;"	d
IDC_EDIT1	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	112;"	d
IDC_INCFINDBTNOK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	111;"	d
IDC_INCFINDTEXT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	110;"	d
IDC_SHIFTTAB	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	213;"	d
IDC_STATIC	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	113;"	d
IDC_TABCLOSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	212;"	d
IDDIRECTIONDOWN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	232;"	d
IDDIRECTIONUP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	231;"	d
IDDIRECTORY	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	220;"	d
IDDOTDOT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	254;"	d
IDD_BUFFERS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	264;"	d
IDD_FIND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	262;"	d
IDD_FIND_ADV	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	265;"	d
IDD_REPLACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	263;"	d
IDD_REPLACE_ADV	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	266;"	d
IDEXTEND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	223;"	d
IDFILES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	219;"	d
IDFINDINSTYLE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	255;"	d
IDFINDSTYLE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	256;"	d
IDFINDWHAT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	218;"	d
IDGOLINE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	216;"	d
IDGOLINECHAR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	250;"	d
IDINDENTSIZE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	225;"	d
IDLASTLINE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	222;"	d
IDMARKALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	248;"	d
IDMATCHCASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	230;"	d
IDM_ABBREV	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	96;"	d
IDM_ABOUT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	206;"	d
IDM_ACTIVATE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	137;"	d
IDM_ALLOWACCESS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	41;"	d
IDM_BLOCK_COMMENT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	97;"	d
IDM_BOOKMARK_CLEARALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	81;"	d
IDM_BOOKMARK_NEXT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	78;"	d
IDM_BOOKMARK_NEXT_SELECT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	82;"	d
IDM_BOOKMARK_PREV	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	80;"	d
IDM_BOOKMARK_PREV_SELECT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	83;"	d
IDM_BOOKMARK_SELECT_ALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	84;"	d
IDM_BOOKMARK_TOGGLE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	79;"	d
IDM_BOX_COMMENT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	100;"	d
IDM_BUFFER	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	21;"	d
IDM_BUFFERSEP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	190;"	d
IDM_BUILD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	123;"	d
IDM_CLEAN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	129;"	d
IDM_CLEAR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	65;"	d
IDM_CLEAROUTPUT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	163;"	d
IDM_CLOSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	30;"	d
IDM_CLOSEALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	188;"	d
IDM_COMPILE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	122;"	d
IDM_COMPLETE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	88;"	d
IDM_COMPLETEWORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	89;"	d
IDM_COPY	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	63;"	d
IDM_COPYASRTF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	99;"	d
IDM_COPYPATH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	40;"	d
IDM_CUT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	62;"	d
IDM_DIRECTIONDOWN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	202;"	d
IDM_DIRECTIONUP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	201;"	d
IDM_DUPLICATE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	104;"	d
IDM_ENCODING_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	49;"	d
IDM_ENCODING_UCOOKIE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	53;"	d
IDM_ENCODING_UCS2BE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	50;"	d
IDM_ENCODING_UCS2LE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	51;"	d
IDM_ENCODING_UTF8	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	52;"	d
IDM_ENTERSELECTION	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	106;"	d
IDM_EOL_CONVERT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	169;"	d
IDM_EOL_CR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	167;"	d
IDM_EOL_CRLF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	166;"	d
IDM_EOL_LF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	168;"	d
IDM_EXPAND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	90;"	d
IDM_EXPAND_ENSURECHILDRENVISIBLE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	93;"	d
IDM_FILER	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	36;"	d
IDM_FIND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	68;"	d
IDM_FINDINFILES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	73;"	d
IDM_FINDNEXT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	69;"	d
IDM_FINDNEXTBACK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	70;"	d
IDM_FINDNEXTBACKSEL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	72;"	d
IDM_FINDNEXTSEL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	71;"	d
IDM_FINISHEDEXECUTE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	126;"	d
IDM_FOLDMARGIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	151;"	d
IDM_FULLSCREEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	211;"	d
IDM_GO	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	124;"	d
IDM_GOTO	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	77;"	d
IDM_HELP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	205;"	d
IDM_HELP_SCITE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	207;"	d
IDM_IMPORT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	22;"	d
IDM_INCSEARCH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	105;"	d
IDM_INS_ABBREV	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	101;"	d
IDM_JOIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	102;"	d
IDM_LANGUAGE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	23;"	d
IDM_LINENUMBERMARGIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	152;"	d
IDM_LINEREVERSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	76;"	d
IDM_LOADSESSION	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	46;"	d
IDM_LWRCASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	95;"	d
IDM_MACROLIST	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	135;"	d
IDM_MACROPLAY	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	134;"	d
IDM_MACRORECORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	132;"	d
IDM_MACROSTOPRECORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	133;"	d
IDM_MACRO_SEP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	131;"	d
IDM_MATCHBRACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	85;"	d
IDM_MATCHCASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	197;"	d
IDM_MONOFONT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	173;"	d
IDM_MOVETABLEFT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	194;"	d
IDM_MOVETABRIGHT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	193;"	d
IDM_MRUFILE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	19;"	d
IDM_MRU_SEP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	42;"	d
IDM_MRU_SUB	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	43;"	d
IDM_NEW	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	26;"	d
IDM_NEXTFILE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	187;"	d
IDM_NEXTFILESTACK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	192;"	d
IDM_NEXTMATCHPPC	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	118;"	d
IDM_NEXTMSG	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	127;"	d
IDM_ONTOP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	210;"	d
IDM_OPEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	27;"	d
IDM_OPENABBREVPROPERTIES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	178;"	d
IDM_OPENDIRECTORYPROPERTIES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	180;"	d
IDM_OPENFILESHERE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	158;"	d
IDM_OPENGLOBALPROPERTIES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	177;"	d
IDM_OPENLOCALPROPERTIES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	175;"	d
IDM_OPENLUAEXTERNALFILE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	179;"	d
IDM_OPENSELECTED	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	28;"	d
IDM_OPENUSERPROPERTIES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	176;"	d
IDM_PASTE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	64;"	d
IDM_PASTEANDDOWN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	67;"	d
IDM_PREVFILE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	186;"	d
IDM_PREVFILESTACK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	191;"	d
IDM_PREVMATCHPPC	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	116;"	d
IDM_PREVMSG	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	128;"	d
IDM_PRINT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	45;"	d
IDM_PRINTSETUP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	44;"	d
IDM_QUIT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	48;"	d
IDM_READONLY	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	161;"	d
IDM_REDO	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	61;"	d
IDM_REGEXP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	198;"	d
IDM_REPLACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	74;"	d
IDM_REVERT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	29;"	d
IDM_RUNWIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	140;"	d
IDM_SAVE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	31;"	d
IDM_SAVEACOPY	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	38;"	d
IDM_SAVEALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	189;"	d
IDM_SAVEAS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	32;"	d
IDM_SAVEASHTML	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	33;"	d
IDM_SAVEASPDF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	35;"	d
IDM_SAVEASRTF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	34;"	d
IDM_SAVEASTEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	37;"	d
IDM_SAVEASXML	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	39;"	d
IDM_SAVESESSION	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	47;"	d
IDM_SELECTALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	66;"	d
IDM_SELECTIONADDEACH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	108;"	d
IDM_SELECTIONADDNEXT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	107;"	d
IDM_SELECTION_FOR_FIND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	75;"	d
IDM_SELECTTOBRACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	86;"	d
IDM_SELECTTONEXTMATCHPPC	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	119;"	d
IDM_SELECTTOPREVMATCHPPC	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	117;"	d
IDM_SELMARGIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	150;"	d
IDM_SHOWCALLTIP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	87;"	d
IDM_SPLIT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	103;"	d
IDM_SPLITVERTICAL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	146;"	d
IDM_SRCWIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	139;"	d
IDM_STATUSWIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	142;"	d
IDM_STOPEXECUTE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	125;"	d
IDM_STREAM_COMMENT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	98;"	d
IDM_SWITCHPANE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	164;"	d
IDM_TABSIZE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	171;"	d
IDM_TABWIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	143;"	d
IDM_TOGGLEOUTPUT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	154;"	d
IDM_TOGGLEPARAMETERS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	157;"	d
IDM_TOGGLE_FOLDALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	91;"	d
IDM_TOGGLE_FOLDRECURSIVE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	92;"	d
IDM_TOOLS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	20;"	d
IDM_TOOLWIN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	141;"	d
IDM_UNDO	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	60;"	d
IDM_UNSLASH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	200;"	d
IDM_UPRCASE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	94;"	d
IDM_VIEWEOL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	148;"	d
IDM_VIEWGUIDES	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	149;"	d
IDM_VIEWSPACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	147;"	d
IDM_VIEWSTATUSBAR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	156;"	d
IDM_VIEWTABBAR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	155;"	d
IDM_VIEWTOOLBAR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	153;"	d
IDM_WHOLEWORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	196;"	d
IDM_WRAP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	159;"	d
IDM_WRAPAROUND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	199;"	d
IDM_WRAPOUTPUT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	160;"	d
IDPARAMSTART	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	259;"	d
IDREGEXP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	236;"	d
IDREPLACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	233;"	d
IDREPLACEALL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	234;"	d
IDREPLACEINBUF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	247;"	d
IDREPLACEINSEL	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	235;"	d
IDREPLACEWITH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	228;"	d
IDREPLDONE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	252;"	d
IDR_CLOSEFILE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	269;"	d
IDR_CLOSEFILE24	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	277;"	d
IDTABSIZE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	224;"	d
IDUNSLASH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	239;"	d
IDUSETABS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	226;"	d
IDWHOLEWORD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	229;"	d
IDWRAP	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	237;"	d
IFACETABLE_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	9;"	d
IFaceConstant	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^struct IFaceConstant {$/;"	s
IFaceFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^struct IFaceFunction {$/;"	s
IFaceFunctionIsScriptable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^inline bool IFaceFunctionIsScriptable(const IFaceFunction &f) {$/;"	f	signature:(const IFaceFunction &f)
IFaceObject	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^struct IFaceObject {$/;"	s
IFaceProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^struct IFaceProperty {$/;"	s
IFacePropertyBinding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^struct IFacePropertyBinding {$/;"	s	file:
IFacePropertyIsScriptable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^inline bool IFacePropertyIsScriptable(const IFaceProperty &p) {$/;"	f	signature:(const IFaceProperty &p)
IFaceTable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^class IFaceTable {$/;"	c
IFaceType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^enum IFaceType {$/;"	g
IFaceTypeIsNumeric	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^inline bool IFaceTypeIsNumeric(IFaceType t) {$/;"	f	signature:(IFaceType t)
IFaceTypeIsScriptable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^inline bool IFaceTypeIsScriptable(IFaceType t, int index) {$/;"	f	signature:(IFaceType t, int index)
ILocalize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^class ILocalize {$/;"	c
IMPORT_START	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	56;"	d
Import	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::Import(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter,$/;"	f	class:PropSetFile	signature:(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)
ImportFilter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^class ImportFilter {$/;"	c
ImportMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ImportMenu(int pos) {$/;"	f	class:SciTEBase	signature:(int pos)
IncrementProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	void IncrementProgress(size_t increment) {$/;"	f	struct:Worker	access:public	signature:(size_t increment)
IncrementSearchMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::IncrementSearchMode() {$/;"	f	class:SciTEBase	signature:()
IndentOfBlock	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::IndentOfBlock(int line) {$/;"	f	class:SciTEBase	signature:(int line)
IndentationStatus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^enum IndentationStatus {$/;"	g
IndexPropKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^static std::string IndexPropKey(const char *bufPrefix, int bufIndex, const char *bufAppendix) {$/;"	f	file:	signature:(const char *bufPrefix, int bufIndex, const char *bufAppendix)
IndicatorDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^IndicatorDefinition::IndicatorDefinition(const char *definition) :$/;"	f	class:IndicatorDefinition	signature:(const char *definition)
IndicatorDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^struct IndicatorDefinition {$/;"	s
Init	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::Init() {$/;"	f	class:FilePath	signature:()
Init	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void Init() {$/;"	f	class:Buffer	access:public	signature:()
Init	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void Init() {$/;"	f	class:RecentFile	access:public	signature:()
InitBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool InitBuffer(int) { return false; }$/;"	f	class:Extension	access:public	signature:(int)
InitBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::InitBuffer(int index) {$/;"	f	class:LuaExtension	signature:(int index)
InitBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::InitBuffer(int index) {$/;"	f	class:MultiplexExtension	signature:(int index)
InitGlobalScope	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool InitGlobalScope(bool checkProperties, bool forceReload = false) {$/;"	f	file:	signature:(bool checkProperties, bool forceReload = false)
Initialise	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::Initialise(ExtensionAPI *host_) {$/;"	f	class:LuaExtension	signature:(ExtensionAPI *host_)
Initialise	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::Initialise(ExtensionAPI *host_) {$/;"	f	class:MultiplexExtension	signature:(ExtensionAPI *host_)
InitialiseBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::InitialiseBuffers() {$/;"	f	class:SciTEBase	signature:()
Insert	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Insert(Pane p, int pos, const char *s) {$/;"	f	class:SciTEBase	signature:(Pane p, int pos, const char *s)
Insert	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	void Insert(const std::string &s) {$/;"	f	class:EntryMemory	access:public	signature:(const std::string &s)
InsertFindInMemory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void Searcher::InsertFindInMemory() {$/;"	f	class:Searcher	signature:()
Instance	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^LuaExtension &LuaExtension::Instance() {$/;"	f	class:LuaExtension	signature:()
IntFromHexByte	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^int IntFromHexByte(const char *hexByte) {$/;"	f	signature:(const char *hexByte)
IntFromHexDigit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^int IntFromHexDigit(int ch) {$/;"	f	signature:(int ch)
InternalGrep	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::InternalGrep(GrepFlags gf, const GUI::gui_char *directory, const GUI::gui_char *fileTypes, const char *search, sptr_t &originalEnd) {$/;"	f	class:SciTEBase	signature:(GrepFlags gf, const GUI::gui_char *directory, const GUI::gui_char *fileTypes, const char *search, sptr_t &originalEnd)
InternalIsLeadByte	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^bool TextReader::InternalIsLeadByte(char ch) const {$/;"	f	class:TextReader	signature:(char ch) const
IsASCII	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^inline bool IsASCII(int ch) {$/;"	f	signature:(int ch)
IsASpace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^inline bool IsASpace(unsigned int ch) {$/;"	f	signature:(unsigned int ch)
IsASpace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static inline bool IsASpace(unsigned int ch) {$/;"	f	file:	signature:(unsigned int ch)
IsAbsolute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::IsAbsolute() const {$/;"	f	class:FilePath	signature:() const
IsAlphabetic	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^inline bool IsAlphabetic(unsigned int ch) {$/;"	f	signature:(unsigned int ch)
IsBold	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^bool StyleDefinition::IsBold() const {$/;"	f	class:StyleDefinition	signature:() const
IsBrace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static bool IsBrace(char ch) {$/;"	f	file:	signature:(char ch)
IsBufferAvailable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool SciTEBase::IsBufferAvailable() const {$/;"	f	class:SciTEBase	signature:() const
IsCommentLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool IsCommentLine(const char *line) {$/;"	f	file:	signature:(const char *line)
IsDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::IsDirectory() const {$/;"	f	class:FilePath	signature:() const
IsEmpty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool IsEmpty() const { return words.length() == 0; }$/;"	f	struct:StyleAndWords	access:public	signature:() const
IsExecuting	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool IsExecuting() const {$/;"	f	class:JobQueue	access:public	signature:() const
IsLeadByte	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	bool IsLeadByte(char ch) const {$/;"	f	class:TextReader	access:public	signature:(char ch) const
IsLinePreprocessorCondition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::IsLinePreprocessorCondition(char *line) {$/;"	f	class:SciTEBase	signature:(char *line)
IsLoading	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	virtual bool IsLoading() const {$/;"	f	class:FileLoader	access:public	signature:() const
IsLoading	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	virtual bool IsLoading() const {$/;"	f	class:FileStorer	access:public	signature:() const
IsOctalDigit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^static bool IsOctalDigit(char ch) {$/;"	f	file:	signature:(char ch)
IsPropertiesFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool IsPropertiesFile(const FilePath &filename) {$/;"	f	signature:(const FilePath &filename)
IsRoot	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::IsRoot() const {$/;"	f	class:FilePath	signature:() const
IsSet	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::IsSet() const {$/;"	f	class:FilePath	signature:() const
IsSingleChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool IsSingleChar() const { return words.length() == 1; }$/;"	f	struct:StyleAndWords	access:public	signature:() const
IsSpaceOrTab	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool IsSpaceOrTab(char ch) {$/;"	f	file:	signature:(char ch)
IsStdinBlocked	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::IsStdinBlocked() {$/;"	f	class:SciTEBase	signature:()
IsSwitchCharacter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static bool IsSwitchCharacter(GUI::gui_char ch) {$/;"	f	file:	signature:(GUI::gui_char ch)
IsUTF8TrailByte	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^static bool IsUTF8TrailByte(int ch) {$/;"	f	file:	signature:(int ch)
IsUntitled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::IsUntitled() const {$/;"	f	class:FilePath	signature:() const
IsValid	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool ImportFilter::IsValid(const std::string &name) const {$/;"	f	class:ImportFilter	signature:(const std::string &name) const
IsWordCharacter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^static bool IsWordCharacter(int ch) {$/;"	f	file:	signature:(int ch)
JOBQUEUE_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	12;"	d
Job	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	Job() {$/;"	f	class:Job	access:public	signature:()
Job	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	Job(const std::string &command_, const FilePath &directory_, JobSubsystem jobType_, const std::string &input_, int flags_)$/;"	f	class:Job	access:public	signature:(const std::string &command_, const FilePath &directory_, JobSubsystem jobType_, const std::string &input_, int flags_)
Job	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^class Job {$/;"	c
JobFlags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^enum JobFlags {$/;"	g
JobMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.cxx	/^JobMode::JobMode(PropSetFile &props, int item, const char *fileNameExt) : jobType(jobCLI), saveBefore(0), isFilter(false), flags(0) {$/;"	f	class:JobMode	signature:(PropSetFile &props, int item, const char *fileNameExt)
JobMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^struct JobMode {$/;"	s
JobQueue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	JobQueue() {$/;"	f	class:JobQueue	access:public	signature:()
JobQueue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^class JobQueue {$/;"	c
JobSubsystem	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^enum JobSubsystem {$/;"	g
LUA_COMPAT_5_1	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	27;"	d	file:
LUA_GLOBALSINDEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	37;"	d	file:
LanguageMenuItem	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class LanguageMenuItem {$/;"	c
Length	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	int Length() const {$/;"	f	class:EntryMemory	access:public	signature:() const
Length	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	size_t Length() const { return words.size(); }$/;"	f	class:StringList	access:public	signature:() const
Length	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int TextReader::Length() {$/;"	f	class:TextReader	signature:()
LengthDocument	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::LengthDocument() {$/;"	f	class:SciTEBase	signature:()
LengthWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^static size_t LengthWord(const char *word, char otherSeparator) {$/;"	f	file:	signature:(const char *word, char otherSeparator)
LevelAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int LevelAt(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
LevelAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int TextReader::LevelAt(int line) {$/;"	f	class:TextReader	signature:(int line)
LevelNumber	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static int LevelNumber(int level) {$/;"	f	file:	signature:(int level)
Line	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Line(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
LineEndString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static const char *LineEndString(int eolMode) {$/;"	f	file:	signature:(int eolMode)
LineNumber	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	int LineNumber() const {$/;"	f	class:FileReader	access:public	signature:() const
LineRange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	LineRange(int lineStart_, int lineEnd_) : lineStart(lineStart_), lineEnd(lineEnd_) {}$/;"	f	struct:LineRange	access:public	signature:(int lineStart_, int lineEnd_)
LineRange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^struct LineRange {$/;"	s
LineStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int TextReader::LineStart(int line) {$/;"	f	class:TextReader	signature:(int line)
LineState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int LineState(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
LinesBreak	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^std::vector<LineRange> LinesBreak(GUI::ScintillaWindow *pSci) {$/;"	f	signature:(GUI::ScintillaWindow *pSci)
LinesFromString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^std::vector<int> LinesFromString(const std::string &s) {$/;"	f	namespace:__anon28	signature:(const std::string &s)
List	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::List(FilePathSet &directories, FilePathSet &files) const {$/;"	f	class:FilePath	signature:(FilePathSet &directories, FilePathSet &files) const
ListFromString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^inline std::vector<GUI::gui_string> ListFromString(const GUI::gui_string &args) {$/;"	f	signature:(const GUI::gui_string &args)
Load	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::Load(const char *filename) {$/;"	f	class:LuaExtension	signature:(const char *filename)
Load	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::Load(const char *filename) {$/;"	f	class:MultiplexExtension	signature:(const char *filename)
LoadSessionDialog	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void LoadSessionDialog() {}$/;"	f	class:SciTEBase	access:protected	signature:()
LoadSessionFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::LoadSessionFile(const GUI::gui_char *sessionName) {$/;"	f	class:SciTEBase	signature:(const GUI::gui_char *sessionName)
LocaliseMessage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^GUI::gui_string SciTEBase::LocaliseMessage(const char *s, const GUI::gui_char *param0, const GUI::gui_char *param1, const GUI::gui_char *param2) {$/;"	f	class:SciTEBase	signature:(const char *s, const GUI::gui_char *param0, const GUI::gui_char *param1, const GUI::gui_char *param2)
Localization	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	Localization() : PropSetFile(true), read(false) {$/;"	f	class:Localization	access:public	signature:()
Localization	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class Localization : public PropSetFile, public ILocalize {$/;"	c	inherits:PropSetFile,ILocalize
Lock	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	/^	explicit Lock(Mutex *mute_) : mute(mute_) {$/;"	f	class:Lock	access:public	signature:(Mutex *mute_)
Lock	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	/^class Lock {$/;"	c
LongFromTwoShorts	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^inline long LongFromTwoShorts(short a,short b) {$/;"	f	signature:(short a,short b)
LowerCaseAZ	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^void LowerCaseAZ(std::string &s) {$/;"	f	signature:(std::string &s)
LowerCaseAZChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^static char LowerCaseAZChar(char c) {$/;"	f	file:	signature:(char c)
Lowercase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static void Lowercase(GUI::gui_string &s) {$/;"	f	file:	signature:(GUI::gui_string &s)
LuaExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^LuaExtension::LuaExtension() {}$/;"	f	class:LuaExtension	signature:()
LuaExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.h	/^class LuaExtension : public Extension {$/;"	c	inherits:Extension
LuaPanicFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int LuaPanicFunction(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
MAX_PATH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.h	18;"	d
MAX_PATH	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.h	20;"	d
MAX_STYLEDEF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	72;"	d	file:
MRU_START	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	55;"	d
MULTIPLEXEXTENSION_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.h	9;"	d
MUTEX_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	12;"	d
MaintainIndentation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::MaintainIndentation(char ch) {$/;"	f	class:SciTEBase	signature:(char ch)
MakeLongPath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static bool MakeLongPath(const GUI::gui_char* shortPath, GUI::gui_string &longPath) {$/;"	f	file:	signature:(const GUI::gui_char* shortPath, GUI::gui_string &longPath)
MakeUpperCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^inline char MakeUpperCase(char ch) {$/;"	f	signature:(char ch)
MarginClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::MarginClick(int position, int modifiers) {$/;"	f	class:SciTEBase	signature:(int position, int modifiers)
MarkAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::MarkAll(MarkPurpose purpose) {$/;"	f	class:SciTEBase	signature:(MarkPurpose purpose)
MarkPurpose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum MarkPurpose { markWithBookMarks, markIncremental };$/;"	g	class:Searcher	access:public
Match	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	bool Match(const char *s) {$/;"	f	struct:StylingContext	access:public	signature:(const char *s)
Match	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Match(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
Match	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^bool TextReader::Match(int pos, const char *s) {$/;"	f	class:TextReader	signature:(int pos, const char *s)
MatchMarker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^MatchMarker::MatchMarker() : $/;"	f	class:MatchMarker	signature:()
MatchMarker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^class MatchMarker {$/;"	c
MatchWild	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool MatchWild(const char *pattern, size_t lenPattern, const char *fileName, bool caseSensitive) {$/;"	f	file:	signature:(const char *pattern, size_t lenPattern, const char *fileName, bool caseSensitive)
Matches	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::Matches(const GUI::gui_char *pattern) const {$/;"	f	class:FilePath	signature:(const GUI::gui_char *pattern) const
Maximum	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^inline int Maximum(int a, int b) {$/;"	f	signature:(int a, int b)
Menu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	Menu() : mid(0) {$/;"	f	class:GUI::Menu	access:public	signature:()
Menu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^class Menu {$/;"	c	namespace:GUI
MenuCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::MenuCommand(int cmdID, int source) {$/;"	f	class:SciTEBase	signature:(int cmdID, int source)
MenuID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^typedef void *MenuID;$/;"	t	namespace:GUI
MessageBoxChoice	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum MessageBoxChoice {$/;"	g	class:SciTEBase	access:protected
MessageBoxStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	typedef int MessageBoxStyle;$/;"	t	class:SciTEBase	access:protected
Minimum	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^inline int Minimum(int a, int b) {$/;"	f	signature:(int a, int b)
ModifiedTime	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^time_t FilePath::ModifiedTime() const {$/;"	f	class:FilePath	signature:() const
More	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int More(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
MoveBack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::MoveBack() {$/;"	f	class:SciTEBase	signature:()
MoveSplit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::MoveSplit(GUI::Point ptNewDrag) {$/;"	f	class:SciTEBase	signature:(GUI::Point ptNewDrag)
MoveTabLeft	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::MoveTabLeft() {$/;"	f	class:SciTEBase	signature:()
MoveTabRight	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::MoveTabRight() {$/;"	f	class:SciTEBase	signature:()
MoveToStackTop	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::MoveToStackTop(int index) {$/;"	f	class:BufferList	signature:(int index)
MultiplexExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^MultiplexExtension::MultiplexExtension(): host(nullptr) {}$/;"	f	class:MultiplexExtension	signature:()
MultiplexExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.h	/^class MultiplexExtension: public Extension {$/;"	c	inherits:Extension
Mutex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	/^class Mutex {$/;"	c
Name	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::Name() const {$/;"	f	class:FilePath	signature:() const
NeedsOnClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool NeedsOnClose() { return true; }$/;"	f	class:Extension	access:public	signature:()
NeedsOnClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::NeedsOnClose() {$/;"	f	class:LuaExtension	signature:()
NeedsOnClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::NeedsOnClose() {$/;"	f	class:MultiplexExtension	signature:()
NeedsSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool Buffer::NeedsSave(int delayBeforeSave) const {$/;"	f	class:Buffer	signature:(int delayBeforeSave) const
New	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::New() {$/;"	f	class:SciTEBase	signature:()
NewLineInOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::NewLineInOutput() {$/;"	f	class:SciTEBase	signature:()
Next	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	void Next() {$/;"	f	class:__anon1::RandomColour	access:public	signature:()
Next	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Next(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
Next	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::Next() {$/;"	f	class:SciTEBase	signature:()
Next	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	const char *Next() {$/;"	f	class:FileReader	access:public	signature:()
NextByte	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	int NextByte() {$/;"	f	class:BufferedFile	access:public	signature:()
NextInStack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::NextInStack() {$/;"	f	class:SciTEBase	signature:()
NextRandom	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int NextRandom() {$/;"	f	class:__anon1::RandomColour	file:	access:private	signature:()
NormaliseSplit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::NormaliseSplit(int splitPos) {$/;"	f	class:SciTEBase	signature:(int splitPos)
NormalizePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FilePath FilePath::NormalizePath() const {$/;"	f	class:FilePath	signature:() const
Notify	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Notify(SCNotification *notification) {$/;"	f	class:SciTEBase	signature:(SCNotification *notification)
OnBeforeSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnBeforeSave(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
OnBeforeSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnBeforeSave(const char *filename) {$/;"	f	class:LuaExtension	signature:(const char *filename)
OnBeforeSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnBeforeSave(const char *filename) {$/;"	f	class:MultiplexExtension	signature:(const char *filename)
OnChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnChar(char) { return false; }$/;"	f	class:Extension	access:public	signature:(char)
OnChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnChar(char ch) {$/;"	f	class:LuaExtension	signature:(char ch)
OnChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnChar(char c) {$/;"	f	class:MultiplexExtension	signature:(char c)
OnClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnClose(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
OnClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnClose(const char *filename) {$/;"	f	class:LuaExtension	signature:(const char *filename)
OnClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnClose(const char *filename) {$/;"	f	class:MultiplexExtension	signature:(const char *filename)
OnDoubleClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnDoubleClick() { return false; }$/;"	f	class:Extension	access:public	signature:()
OnDoubleClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnDoubleClick() {$/;"	f	class:LuaExtension	signature:()
OnDoubleClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnDoubleClick() {$/;"	f	class:MultiplexExtension	signature:()
OnDwellStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnDwellStart(int, const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(int, const char *)
OnDwellStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnDwellStart(int pos, const char *word) {$/;"	f	class:LuaExtension	signature:(int pos, const char *word)
OnDwellStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnDwellStart(int pos, const char *word) {$/;"	f	class:MultiplexExtension	signature:(int pos, const char *word)
OnExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnExecute(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
OnExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnExecute(const char *s) {$/;"	f	class:LuaExtension	signature:(const char *s)
OnExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnExecute(const char *cmd) {$/;"	f	class:MultiplexExtension	signature:(const char *cmd)
OnIdle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::OnIdle() {$/;"	f	class:SciTEBase	signature:()
OnKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnKey(int, int) { return false; }$/;"	f	class:Extension	access:public	signature:(int, int)
OnKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnKey(int keyval, int modifiers) {$/;"	f	class:LuaExtension	signature:(int keyval, int modifiers)
OnKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnKey(int keyval, int modifiers) {$/;"	f	class:MultiplexExtension	signature:(int keyval, int modifiers)
OnMacro	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnMacro(const char *, const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *, const char *)
OnMacro	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnMacro(const char *p, const char *q) {$/;"	f	class:MultiplexExtension	signature:(const char *p, const char *q)
OnMarginClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnMarginClick() { return false; }$/;"	f	class:Extension	access:public	signature:()
OnMarginClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnMarginClick() {$/;"	f	class:LuaExtension	signature:()
OnMarginClick	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnMarginClick() {$/;"	f	class:MultiplexExtension	signature:()
OnOpen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnOpen(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
OnOpen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnOpen(const char *filename) {$/;"	f	class:LuaExtension	signature:(const char *filename)
OnOpen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnOpen(const char *filename) {$/;"	f	class:MultiplexExtension	signature:(const char *filename)
OnSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnSave(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
OnSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnSave(const char *filename) {$/;"	f	class:LuaExtension	signature:(const char *filename)
OnSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSave(const char *filename) {$/;"	f	class:MultiplexExtension	signature:(const char *filename)
OnSavePointLeft	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnSavePointLeft() { return false; }$/;"	f	class:Extension	access:public	signature:()
OnSavePointLeft	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnSavePointLeft() {$/;"	f	class:LuaExtension	signature:()
OnSavePointLeft	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSavePointLeft() {$/;"	f	class:MultiplexExtension	signature:()
OnSavePointReached	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnSavePointReached() { return false; }$/;"	f	class:Extension	access:public	signature:()
OnSavePointReached	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnSavePointReached() {$/;"	f	class:LuaExtension	signature:()
OnSavePointReached	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSavePointReached() {$/;"	f	class:MultiplexExtension	signature:()
OnStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnStyle(unsigned int, int, int, StyleWriter *) {$/;"	f	class:Extension	access:public	signature:(unsigned int, int, int, StyleWriter *)
OnStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnStyle(unsigned int startPos, int lengthDoc, int initStyle, StyleWriter *styler) {$/;"	f	class:LuaExtension	signature:(unsigned int startPos, int lengthDoc, int initStyle, StyleWriter *styler)
OnStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnStyle(unsigned int p, int q, int r, StyleWriter *s) {$/;"	f	class:MultiplexExtension	signature:(unsigned int p, int q, int r, StyleWriter *s)
OnSwitchFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnSwitchFile(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
OnSwitchFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnSwitchFile(const char *filename) {$/;"	f	class:LuaExtension	signature:(const char *filename)
OnSwitchFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnSwitchFile(const char *filename) {$/;"	f	class:MultiplexExtension	signature:(const char *filename)
OnTimer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::OnTimer() {$/;"	f	class:SciTEBase	signature:()
OnUpdateUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnUpdateUI() { return false; }$/;"	f	class:Extension	access:public	signature:()
OnUpdateUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnUpdateUI() {$/;"	f	class:LuaExtension	signature:()
OnUpdateUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnUpdateUI() {$/;"	f	class:MultiplexExtension	signature:()
OnUserListSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnUserListSelection(int, const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(int, const char *)
OnUserListSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnUserListSelection(int listType, const char *selection) {$/;"	f	class:LuaExtension	signature:(int listType, const char *selection)
OnUserListSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnUserListSelection(int listType, const char *selection) {$/;"	f	class:MultiplexExtension	signature:(int listType, const char *selection)
OnUserStrip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool OnUserStrip(int \/* control *\/, int \/* change *\/) { return false; }$/;"	f	class:Extension	access:public	signature:(int , int )
OnUserStrip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::OnUserStrip(int control, int change) {$/;"	f	class:LuaExtension	signature:(int control, int change)
OnUserStrip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::OnUserStrip(int control, int change) {$/;"	f	class:MultiplexExtension	signature:(int control, int change)
Open	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^FILE *FilePath::Open(const GUI::gui_char *mode) const {$/;"	f	class:FilePath	signature:(const GUI::gui_char *mode) const
Open	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::Open(const FilePath &file, OpenFlags of) {$/;"	f	class:SciTEBase	signature:(const FilePath &file, OpenFlags of)
OpenCompletion	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	g	class:SciTEBase	access:protected
OpenCurrentFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::OpenCurrentFile(long long fileSize, bool suppressMessage, bool asynchronous) {$/;"	f	class:SciTEBase	signature:(long long fileSize, bool suppressMessage, bool asynchronous)
OpenFilesFromStdin	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::OpenFilesFromStdin() {$/;"	f	class:SciTEBase	signature:()
OpenFlags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum OpenFlags {$/;"	g	class:SciTEBase	access:protected
OpenFromStdin	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::OpenFromStdin(bool UseOutputPane) {$/;"	f	class:SciTEBase	signature:(bool UseOutputPane)
OpenProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::OpenProperties(int propsFile) {$/;"	f	class:SciTEBase	signature:(int propsFile)
OpenSelected	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::OpenSelected() {$/;"	f	class:SciTEBase	signature:()
OpenUriList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void OpenUriList(const char *) {}$/;"	f	class:SciTEBase	access:protected	signature:(const char *)
Original	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	const char *Original() const {$/;"	f	class:FileReader	access:public	signature:() const
OutputAppendString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::OutputAppendString(const char *s, int len) {$/;"	f	class:SciTEBase	signature:(const char *s, int len)
OutputAppendStringSynchronised	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::OutputAppendStringSynchronised(const char *s, int len) {$/;"	f	class:SciTEBase	signature:(const char *s, int len)
PDFStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^struct PDFStyle {$/;"	s	file:
PDF_ENCODING	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	67;"	d	file:
PDF_FONTSIZE_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	62;"	d	file:
PDF_FONT_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	61;"	d	file:
PDF_HEIGHT_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	64;"	d	file:
PDF_MARGIN_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	66;"	d	file:
PDF_SPACING_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	63;"	d	file:
PDF_TAB_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	60;"	d	file:
PDF_WIDTH_DEFAULT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	65;"	d	file:
PDFfontAscenders	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^static short PDFfontAscenders[] =  { 629, 718, 699 };$/;"	v	file:
PDFfontDescenders	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^static short PDFfontDescenders[] = { 157, 207, 217 };$/;"	v	file:
PDFfontNames	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^static const char *PDFfontNames[] = {$/;"	v	file:
PDFfontWidths	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^static short PDFfontWidths[] =     { 600,   0,   0 };$/;"	v	file:
PROPERTIES_EXTENSION	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	66;"	d
PROPSETFILE_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	9;"	d
Pane	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	g	class:ExtensionAPI	access:public
PaneMatchObject	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^struct PaneMatchObject {$/;"	s	file:
ParseIndicatorDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^bool IndicatorDefinition::ParseIndicatorDefinition(const char *definition) {$/;"	f	class:IndicatorDefinition	signature:(const char *definition)
ParseStyleDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^bool StyleDefinition::ParseStyleDefinition(const char *definition) {$/;"	f	class:StyleDefinition	signature:(const char *definition)
Perform	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Perform(const char *actionList) {$/;"	f	class:SciTEBase	signature:(const char *actionList)
PerformDeferredTasks	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::PerformDeferredTasks() {$/;"	f	class:SciTEBase	signature:()
PerformInsertAbbreviation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::PerformInsertAbbreviation() {$/;"	f	class:SciTEBase	signature:()
PerformOne	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::PerformOne(char *action) {$/;"	f	class:SciTEBase	signature:(char *action)
Point	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	explicit Point(int x_=0, int y_=0) : x(x_), y(y_) {$/;"	f	class:GUI::Point	access:public	signature:(int x_=0, int y_=0)
Point	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^class Point {$/;"	c	namespace:GUI
PopStack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::PopStack() {$/;"	f	class:BufferList	signature:()
Position	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Position(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
PreOpenCheck	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::PreOpenCheck(const GUI::gui_char *) {$/;"	f	class:SciTEBase	signature:(const GUI::gui_char *)
PreProcKind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind of preprocessor condition line$/;"	g	class:SciTEBase	access:protected
PrepareBufferForSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::PrepareBufferForSave(const FilePath &saveName) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName)
Prev	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::Prev() {$/;"	f	class:SciTEBase	signature:()
PrevInStack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::PrevInStack() {$/;"	f	class:SciTEBase	signature:()
Previous	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Previous(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
Print	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void Print(bool) {}$/;"	f	class:SciTEBase	access:protected	signature:(bool )
PrintSetup	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void PrintSetup() {}$/;"	f	class:SciTEBase	access:protected	signature:()
ProcessCommandLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::ProcessCommandLine(GUI::gui_string &args, int phase) {$/;"	f	class:SciTEBase	signature:(GUI::gui_string &args, int phase)
ProgressMade	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	size_t ProgressMade() const {$/;"	f	struct:Worker	access:public	signature:() const
PropSetFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^PropSetFile::PropSetFile(bool lowerKeys_) : lowerKeys(lowerKeys_), superPS(0) {$/;"	f	class:PropSetFile	signature:(bool lowerKeys_)
PropSetFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^PropSetFile::PropSetFile(const PropSetFile &copy) : lowerKeys(copy.lowerKeys), props(copy.props), superPS(copy.superPS) {$/;"	f	class:PropSetFile	signature:(const PropSetFile &copy)
PropSetFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^class PropSetFile {$/;"	c
Property	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::Property(const char *key) {$/;"	f	class:SciTEBase	signature:(const char *key)
PropertyFromDirector	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::PropertyFromDirector(const char *arg) {$/;"	f	class:SciTEBase	signature:(const char *arg)
PropertyToDirector	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::PropertyToDirector(const char *arg) {$/;"	f	class:SciTEBase	signature:(const char *arg)
PublishGlobalBufferData	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static void PublishGlobalBufferData() {$/;"	f	file:	signature:()
PushMethod	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	void PushMethod(lua_State *L, lua_CFunction fn, const char *name) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L, lua_CFunction fn, const char *name)
RTF_BODYCLOSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	54;"	d	file:
RTF_BODYOPEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	53;"	d	file:
RTF_BOLD_OFF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	61;"	d	file:
RTF_BOLD_ON	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	60;"	d	file:
RTF_COLOR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	74;"	d	file:
RTF_COLORDEFCLOSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	51;"	d	file:
RTF_COLORDEFOPEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	50;"	d	file:
RTF_EOLN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	69;"	d	file:
RTF_FONTDEFCLOSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	49;"	d	file:
RTF_FONTDEFOPEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	48;"	d	file:
RTF_FONTFACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	73;"	d	file:
RTF_HEADERCLOSE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	52;"	d	file:
RTF_HEADEROPEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	47;"	d	file:
RTF_ITALIC_OFF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	63;"	d	file:
RTF_ITALIC_ON	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	62;"	d	file:
RTF_SETBACKGROUND	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	59;"	d	file:
RTF_SETCOLOR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	58;"	d	file:
RTF_SETFONTFACE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	56;"	d	file:
RTF_SETFONTSIZE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	57;"	d	file:
RTF_STRIKE_OFF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	67;"	d	file:
RTF_STRIKE_ON	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	66;"	d	file:
RTF_TAB	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	70;"	d	file:
RTF_UNDERLINE_OFF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	65;"	d	file:
RTF_UNDERLINE_ON	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	64;"	d	file:
R_OK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	443;"	d	file:
RandomColour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	RandomColour() :$/;"	f	class:__anon1::RandomColour	access:public	signature:()
RandomColour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^class RandomColour {$/;"	c	namespace:__anon1	file:
Range	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^char *SciTEBase::Range(Pane p, int start, int end) {$/;"	f	class:SciTEBase	signature:(Pane p, int start, int end)
RangeExtend	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::RangeExtend($/;"	f	class:SciTEBase	signature:( GUI::ScintillaWindow &wCurrent, int &selStart, int &selEnd, bool (SciTEBase::*ischarforsel)(char ch))
RangeExtendAndGrab	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::RangeExtendAndGrab($/;"	f	class:SciTEBase	signature:( GUI::ScintillaWindow &wCurrent, int &selStart, int &selEnd, bool (SciTEBase::*ischarforsel)(char ch), bool stripEol )
RangeIsAllWhitespace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::RangeIsAllWhitespace(int start, int end) {$/;"	f	class:SciTEBase	signature:(int start, int end)
Read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^std::vector<char> FilePath::Read() const {$/;"	f	class:FilePath	signature:() const
Read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool PropSetFile::Read(const FilePath &filename, const FilePath &directoryForImports,$/;"	f	class:PropSetFile	signature:(const FilePath &filename, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)
ReadAPI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadAPI(const std::string &fileNameForExtension) {$/;"	f	class:SciTEBase	signature:(const std::string &fileNameForExtension)
ReadAbbrevPropFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadAbbrevPropFile() {$/;"	f	class:SciTEBase	signature:()
ReadDirectoryPropFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadDirectoryPropFile() {$/;"	f	class:SciTEBase	signature:()
ReadEmbeddedProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadEmbeddedProperties() {$/;"	f	class:SciTEBase	signature:()
ReadEnvironment	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadEnvironment() {$/;"	f	class:SciTEBase	signature:()
ReadFontProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadFontProperties() {$/;"	f	class:SciTEBase	signature:()
ReadFromMemory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::ReadFromMemory(const char *data, size_t len, const FilePath &directoryForImports,$/;"	f	class:PropSetFile	signature:(const char *data, size_t len, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)
ReadGlobalPropFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadGlobalPropFile() {$/;"	f	class:SciTEBase	signature:()
ReadLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^PropSetFile::ReadLineState PropSetFile::ReadLine(const char *lineBuffer, ReadLineState rls, const FilePath &directoryForImports,$/;"	f	class:PropSetFile	signature:(const char *lineBuffer, ReadLineState rls, const FilePath &directoryForImports, const ImportFilter &filter, FilePathSet *imports, size_t depth)
ReadLineState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	g	class:PropSetFile	access:public
ReadLocalPropFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadLocalPropFile() {$/;"	f	class:SciTEBase	signature:()
ReadLocalization	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadLocalization() {$/;"	f	class:SciTEBase	signature:()
ReadNum	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static unsigned int ReadNum(const char *&t) {$/;"	f	file:	signature:(const char *&t)
ReadProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadProperties() {$/;"	f	class:SciTEBase	signature:()
ReadPropertiesInitial	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::ReadPropertiesInitial() {$/;"	f	class:SciTEBase	signature:()
RecentFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	RecentFile() {$/;"	f	class:RecentFile	access:public	signature:()
RecentFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class RecentFile : public FilePath {$/;"	c	inherits:FilePath
RecordMacroCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::RecordMacroCommand(const SCNotification *notification) {$/;"	f	class:SciTEBase	signature:(const SCNotification *notification)
Rectangle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	Rectangle(int left_=0, int top_=0, int right_=0, int bottom_ = 0) :$/;"	f	class:GUI::Rectangle	access:public	signature:(int left_=0, int top_=0, int right_=0, int bottom_ = 0)
Rectangle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^class Rectangle {$/;"	c	namespace:GUI
Redraw	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Redraw() {$/;"	f	class:SciTEBase	signature:()
RedrawMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void RedrawMenu() {}$/;"	f	class:SciTEBase	access:protected	signature:()
RegisterExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::RegisterExtension(Extension &ext_) {$/;"	f	class:MultiplexExtension	signature:(Extension &ext_)
ReloadProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::ReloadProperties() {$/;"	f	class:SciTEBase	signature:()
Remove	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::Remove() const {$/;"	f	class:FilePath	signature:() const
Remove	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Remove(Pane p, int start, int end) {$/;"	f	class:SciTEBase	signature:(Pane p, int start, int end)
Remove	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^int Remove(T &s, const T &sFind) {$/;"	f	signature:(T &s, const T &sFind)
RemoveBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool RemoveBuffer(int) { return false; }$/;"	f	class:Extension	access:public	signature:(int)
RemoveBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^bool LuaExtension::RemoveBuffer(int index) {$/;"	f	class:LuaExtension	signature:(int index)
RemoveBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::RemoveBuffer(int index) {$/;"	f	class:MultiplexExtension	signature:(int index)
RemoveCurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::RemoveCurrent() {$/;"	f	class:BufferList	signature:()
RemoveEscSeq	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^static void RemoveEscSeq(std::string &s) {$/;"	f	file:	signature:(std::string &s)
RemoveFileFromStack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::RemoveFileFromStack(const FilePath &file) {$/;"	f	class:SciTEBase	signature:(const FilePath &file)
RemoveFindMarks	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::RemoveFindMarks() {$/;"	f	class:SciTEBase	signature:()
RemoveInvisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::RemoveInvisible(int index) {$/;"	f	class:BufferList	signature:(int index)
RemoveStringOnce	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool RemoveStringOnce(std::string &s, const char *marker) {$/;"	f	signature:(std::string &s, const char *marker)
RemoveToolsMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::RemoveToolsMenu() {$/;"	f	class:SciTEBase	signature:()
ReplaceAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::ReplaceAll(bool inSelection) {$/;"	f	class:SciTEBase	signature:(bool inSelection)
ReplaceInBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::ReplaceInBuffers() {$/;"	f	class:SciTEBase	signature:()
ReplaceOnce	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ReplaceOnce(bool showWarnings) {$/;"	f	class:SciTEBase	signature:(bool showWarnings)
RestoreFromSession	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::RestoreFromSession(const Session &session) {$/;"	f	class:SciTEBase	signature:(const Session &session)
RestoreRecentMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::RestoreRecentMenu() {$/;"	f	class:SciTEBase	signature:()
RestoreSession	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::RestoreSession() {$/;"	f	class:SciTEBase	signature:()
RestoreState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::RestoreState(const Buffer &buffer, bool restoreBookmarks) {$/;"	f	class:SciTEBase	signature:(const Buffer &buffer, bool restoreBookmarks)
Revert	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::Revert() {$/;"	f	class:SciTEBase	signature:()
RootLength	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^int FilePath::RootLength() {$/;"	f	class:FilePath	signature:()
SCITEKEYS_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEKeys.h	9;"	d
SCITE_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	9;"	d
STYLEWRITER_H	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	9;"	d
SURROGATE_FIRST_VALUE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^enum { SURROGATE_FIRST_VALUE = 0x10000 };$/;"	e	enum:__anon37	file:
SURROGATE_LEAD_FIRST	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^enum { SURROGATE_LEAD_FIRST = 0xD800 };$/;"	e	enum:__anon33	file:
SURROGATE_LEAD_LAST	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^enum { SURROGATE_LEAD_LAST = 0xDBFF };$/;"	e	enum:__anon34	file:
SURROGATE_TRAIL_FIRST	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^enum { SURROGATE_TRAIL_FIRST = 0xDC00 };$/;"	e	enum:__anon35	file:
SURROGATE_TRAIL_LAST	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^enum { SURROGATE_TRAIL_LAST = 0xDFFF };$/;"	e	enum:__anon36	file:
SafeGetCharAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	char SafeGetCharAt(int position, char chDefault=' ') {$/;"	f	class:TextReader	access:public	signature:(int position, char chDefault=Ã)
SameNameAs	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::SameNameAs(const FilePath &other) const {$/;"	f	class:FilePath	signature:(const FilePath &other) const
SameNameAs	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::SameNameAs(const GUI::gui_char *other) const {$/;"	f	class:FilePath	signature:(const GUI::gui_char *other) const
Save	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::Save(SaveFlags sf) {$/;"	f	class:SciTEBase	signature:(SaveFlags sf)
SaveAllBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^SciTEBase::SaveResult SciTEBase::SaveAllBuffers(bool alwaysYes) {$/;"	f	class:SciTEBase	signature:(bool alwaysYes)
SaveAs	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::SaveAs(const GUI::gui_char *file, bool fixCase) {$/;"	f	class:SciTEBase	signature:(const GUI::gui_char *file, bool fixCase)
SaveBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::SaveBuffer(const FilePath &saveName, SaveFlags sf) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName, SaveFlags sf)
SaveFlags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum SaveFlags {$/;"	g	class:SciTEBase	access:protected
SaveIfNotOpen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^bool SciTEBase::SaveIfNotOpen(const FilePath &destFile, bool fixCase) {$/;"	f	class:SciTEBase	signature:(const FilePath &destFile, bool fixCase)
SaveIfUnsure	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^SciTEBase::SaveResult SciTEBase::SaveIfUnsure(bool forceQuestion, SaveFlags sf) {$/;"	f	class:SciTEBase	signature:(bool forceQuestion, SaveFlags sf)
SaveIfUnsureAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^SciTEBase::SaveResult SciTEBase::SaveIfUnsureAll() {$/;"	f	class:SciTEBase	signature:()
SaveIfUnsureForBuilt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^SciTEBase::SaveResult SciTEBase::SaveIfUnsureForBuilt() {$/;"	f	class:SciTEBase	signature:()
SaveName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^FilePath SciTEBase::SaveName(const char *ext) const {$/;"	f	class:SciTEBase	signature:(const char *ext) const
SaveResult	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum SaveResult {$/;"	g	class:SciTEBase	access:protected
SaveSessionDialog	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void SaveSessionDialog() {}$/;"	f	class:SciTEBase	access:protected	signature:()
SaveSessionFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SaveSessionFile(const GUI::gui_char *sessionName) {$/;"	f	class:SciTEBase	signature:(const GUI::gui_char *sessionName)
SaveTitledBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SaveTitledBuffers() {$/;"	f	class:SciTEBase	signature:()
SaveToHTML	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportHTML.cxx	/^void SciTEBase::SaveToHTML(const FilePath &saveName) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName)
SaveToPDF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^void SciTEBase::SaveToPDF(const FilePath &saveName) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName)
SaveToRTF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	/^void SciTEBase::SaveToRTF(const FilePath &saveName, int start, int end) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName, int start, int end)
SaveToStreamRTF	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportRTF.cxx	/^void SciTEBase::SaveToStreamRTF(std::ostream &os, int start, int end) {$/;"	f	class:SciTEBase	signature:(std::ostream &os, int start, int end)
SaveToTEX	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportTEX.cxx	/^void SciTEBase::SaveToTEX(const FilePath &saveName) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName)
SaveToXML	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportXML.cxx	/^void SciTEBase::SaveToXML(const FilePath &saveName) {$/;"	f	class:SciTEBase	signature:(const FilePath &saveName)
SavingInBackground	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool BufferList::SavingInBackground() const {$/;"	f	class:BufferList	signature:() const
SciTEBase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^SciTEBase::SciTEBase(Extension *ext) : apis(true), pwFocussed(&wEditor), extender(ext) {$/;"	f	class:SciTEBase	signature:(Extension *ext)
SciTEBase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class SciTEBase : public ExtensionAPI, public Searcher, public WorkerListener {$/;"	c	inherits:ExtensionAPI,Searcher,WorkerListener
SciTEKeys	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEKeys.h	/^class SciTEKeys {$/;"	c
ScintillaFailure	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	explicit ScintillaFailure(sptr_t status_) : status(status_) {$/;"	f	struct:GUI::ScintillaFailure	access:public	signature:(sptr_t status_)
ScintillaFailure	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^struct ScintillaFailure {$/;"	s	namespace:GUI
ScintillaWindow	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	ScintillaWindow() : fn(0), ptr(0), status() {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:()
ScintillaWindow	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^class ScintillaWindow : public Window {$/;"	c	namespace:GUI	inherits:Window
ScrollEditorIfNeeded	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ScrollEditorIfNeeded() {$/;"	f	class:SciTEBase	signature:()
SearchFlags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^int SciTEBase::SearchFlags(bool regularExpressions) const {$/;"	f	class:SciTEBase	signature:(bool regularExpressions) const
SearchOption	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^struct SearchOption {$/;"	s
SearchUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	SearchUI() : pSearcher(0) {$/;"	f	class:SearchUI	access:public	signature:()
SearchUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class SearchUI {$/;"	c
Searcher	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^Searcher::Searcher() {$/;"	f	class:Searcher	signature:()
Searcher	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class Searcher {$/;"	c
SelectedRange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	SelectedRange(int position_= INVALID_POSITION, int anchor_= INVALID_POSITION) :$/;"	f	struct:SelectedRange	access:public	signature:(int position_= INVALID_POSITION, int anchor_= INVALID_POSITION)
SelectedRange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^struct SelectedRange {$/;"	s
SelectionAdd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SelectionAdd(AddSelection add) {$/;"	f	class:SciTEBase	signature:(AddSelection add)
SelectionExtend	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::SelectionExtend($/;"	f	class:SciTEBase	signature:( bool (SciTEBase::*ischarforsel)(char ch), bool stripEol )
SelectionExtend	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string SelectionExtend(bool (SciTEBase::*ischarforsel)(char ch), bool stripEol = true);$/;"	m	class:SciTEBase	access:protected
SelectionFilename	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::SelectionFilename() {$/;"	f	class:SciTEBase	signature:()
SelectionIntoFind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SelectionIntoFind(bool stripEol \/*=true*\/) {$/;"	f	class:SciTEBase	signature:(bool stripEol )
SelectionIntoProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SelectionIntoProperties() {$/;"	f	class:SciTEBase	signature:()
SelectionWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::SelectionWord(bool stripEol \/*=true*\/) {$/;"	f	class:SciTEBase	signature:(bool stripEol )
Send	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^sptr_t SciTEBase::Send(Pane p, unsigned int msg, uptr_t wParam, sptr_t lParam) {$/;"	f	class:SciTEBase	signature:(Pane p, unsigned int msg, uptr_t wParam, sptr_t lParam)
SendOneProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SendOneProperty(const char *kind, const char *key, const char *val) {$/;"	f	class:SciTEBase	signature:(const char *kind, const char *key, const char *val)
SendProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual bool SendProperty(const char *) { return false; }$/;"	f	class:Extension	access:public	signature:(const char *)
SendProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^bool MultiplexExtension::SendProperty(const char *prop) {$/;"	f	class:MultiplexExtension	signature:(const char *prop)
SeqEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^static bool SeqEnd(int ch) {$/;"	f	file:	signature:(int ch)
Session	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class Session {$/;"	c
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::Set(FilePath const &directory, FilePath const &name) {$/;"	f	class:FilePath	signature:(FilePath const &directory, FilePath const &name)
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::Set(FilePath const &other) {$/;"	f	class:FilePath	signature:(FilePath const &other)
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::Set(const GUI::gui_char *fileName_) {$/;"	f	class:FilePath	signature:(const GUI::gui_char *fileName_)
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::Set(const char *key, const char *val, ptrdiff_t lenKey, ptrdiff_t lenVal) {$/;"	f	class:PropSetFile	signature:(const char *key, const char *val, ptrdiff_t lenKey, ptrdiff_t lenVal)
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::Set(const char *keyVal) {$/;"	f	class:PropSetFile	signature:(const char *keyVal)
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^void StringList::Set(const char *s) {$/;"	f	class:StringList	signature:(const char *s)
Set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^void StringList::Set(const std::vector<char> &data) {$/;"	f	class:StringList	signature:(const std::vector<char> &data)
SetAboutMessage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^void SciTEBase::SetAboutMessage(GUI::ScintillaWindow &wsci, const char *appTitle) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &wsci, const char *appTitle)
SetAboutStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^static void SetAboutStyle(GUI::ScintillaWindow &wsci, int style, Colour fore) {$/;"	f	file:	signature:(GUI::ScintillaWindow &wsci, int style, Colour fore)
SetBuffersMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetBuffersMenu() {$/;"	f	class:SciTEBase	signature:()
SetCancelFlag	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	long SetCancelFlag(long value) {$/;"	f	class:JobQueue	access:public	signature:(long value)
SetCaretAsStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetCaretAsStart() {$/;"	f	class:SciTEBase	signature:()
SetCaseSensitiveFilenames	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	static void SetCaseSensitiveFilenames(bool caseSensitiveFilenames_) {$/;"	f	class:PropSetFile	access:public	signature:(bool caseSensitiveFilenames_)
SetCodePage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	void SetCodePage(int codePage_) {$/;"	f	class:TextReader	access:public	signature:(int codePage_)
SetCompleted	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	void SetCompleted() {$/;"	f	struct:Worker	access:public	signature:()
SetCurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::SetCurrent(int index) {$/;"	f	class:BufferList	signature:(int index)
SetDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^void FilePath::SetDirectory(FilePath const &directory) {$/;"	f	class:FilePath	signature:(FilePath const &directory)
SetDocumentAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetDocumentAt(int index, bool updateStack) {$/;"	f	class:SciTEBase	signature:(int index, bool updateStack)
SetEol	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetEol() {$/;"	f	class:SciTEBase	signature:()
SetExecuting	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	void SetExecuting(bool state) {$/;"	f	class:JobQueue	access:public	signature:(bool state)
SetFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::SetFileName(const FilePath &openName, bool fixCase) {$/;"	f	class:SciTEBase	signature:(const FilePath &openName, bool fixCase)
SetFileStackMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetFileStackMenu() {$/;"	f	class:SciTEBase	signature:()
SetFilter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void ImportFilter::SetFilter(const std::string &sExcludes, const std::string &sIncludes) {$/;"	f	class:ImportFilter	signature:(const std::string &sExcludes, const std::string &sIncludes)
SetFind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetFind(const char *sFind) {$/;"	f	class:SciTEBase	signature:(const char *sFind)
SetFindText	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetFindText(const char *sFind) {$/;"	f	class:SciTEBase	signature:(const char *sFind)
SetFromListText	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^void StringList::SetFromListText() {$/;"	f	class:StringList	signature:()
SetHomeProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetHomeProperties() {$/;"	f	class:SciTEBase	signature:()
SetID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	void SetID(WindowID wid_) {$/;"	f	class:GUI::ScintillaWindow	access:public	signature:(WindowID wid_)
SetID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	void SetID(WindowID wid_) {$/;"	f	class:GUI::Window	access:public	signature:(WindowID wid_)
SetIdler	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetIdler(bool on) {$/;"	f	class:SciTEBase	signature:(bool on)
SetImportMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetImportMenu() {$/;"	f	class:SciTEBase	signature:()
SetIndentSettings	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetIndentSettings() {$/;"	f	class:SciTEBase	signature:()
SetInteger	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::SetInteger(const char *key, int i) {$/;"	f	class:PropSetFile	signature:(const char *key, int i)
SetLanguageMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetLanguageMenu() {$/;"	f	class:SciTEBase	signature:()
SetLevel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^void StyleWriter::SetLevel(int line, int level) {$/;"	f	class:StyleWriter	signature:(int line, int level)
SetLevelAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int SetLevelAt(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
SetLineIndentation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetLineIndentation(int line, int indent) {$/;"	f	class:SciTEBase	signature:(int line, int indent)
SetLineNumberWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetLineNumberWidth() {$/;"	f	class:SciTEBase	signature:()
SetLineState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int SetLineState(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
SetLineState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int StyleWriter::SetLineState(int line, int state) {$/;"	f	class:StyleWriter	signature:(int line, int state)
SetMenuItemLocalised	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetMenuItemLocalised(int menuNumber, int position, int itemID,$/;"	f	class:SciTEBase	signature:(int menuNumber, int position, int itemID, const char *text, const char *mnemonic)
SetMissing	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetMissing(const std::string &missing_) {$/;"	f	class:Localization	access:public	signature:(const std::string &missing_)
SetOneIndicator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetOneIndicator(GUI::ScintillaWindow &win, int indicator, const IndicatorDefinition &ind) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int indicator, const IndicatorDefinition &ind)
SetOneStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetOneStyle(GUI::ScintillaWindow &win, int style, const StyleDefinition &sd) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, int style, const StyleDefinition &sd)
SetOutputVisibility	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetOutputVisibility(bool show) {$/;"	f	class:SciTEBase	signature:(bool show)
SetOverrideLanguage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetOverrideLanguage(int cmdID) {$/;"	f	class:SciTEBase	signature:(int cmdID)
SetPaneFocus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetPaneFocus(bool editPane) {$/;"	f	class:SciTEBase	signature:(bool editPane)
SetPropertiesInitial	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetPropertiesInitial() {$/;"	f	class:SciTEBase	signature:()
SetProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetProperty(const char *key, const char *val) {$/;"	f	class:SciTEBase	signature:(const char *key, const char *val)
SetReplace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetReplace(const char *sReplace) {$/;"	f	class:SciTEBase	signature:(const char *sReplace)
SetSearcher	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetSearcher(Searcher *pSearcher_) {$/;"	f	class:SearchUI	access:public	signature:(Searcher *pSearcher_)
SetSelection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetSelection(int anchor, int currentPos) {$/;"	f	class:SciTEBase	signature:(int anchor, int currentPos)
SetSizeJob	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	void SetSizeJob(size_t size) {$/;"	f	struct:Worker	access:public	signature:(size_t size)
SetState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int SetState(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
SetStyleBlock	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetStyleBlock(GUI::ScintillaWindow &win, const char *lang, int start, int last) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, const char *lang, int start, int last)
SetStyleFor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^void SciTEBase::SetStyleFor(GUI::ScintillaWindow &win, const char *lang) {$/;"	f	class:SciTEBase	signature:(GUI::ScintillaWindow &win, const char *lang)
SetTextProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetTextProperties($/;"	f	class:SciTEBase	signature:( PropSetFile &ps)
SetTimeFromFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetTimeFromFile() {$/;"	f	class:Buffer	access:public	signature:()
SetToolsMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SetToolsMenu() {$/;"	f	class:SciTEBase	signature:()
SetVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::SetVisible(int index, bool visible) {$/;"	f	class:BufferList	signature:(int index, bool visible)
SetWindowName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::SetWindowName() {$/;"	f	class:SciTEBase	signature:()
SetWorkingDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::SetWorkingDirectory() const {$/;"	f	class:FilePath	signature:() const
SetterFunction	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceFunction SetterFunction() const {$/;"	f	struct:IFaceProperty	access:public	signature:() const
ShellEscape	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static std::string ShellEscape(const char *toEscape) {$/;"	f	file:	signature:(const char *toEscape)
ShiftTab	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::ShiftTab(int indexFrom, int indexTo) {$/;"	f	class:SciTEBase	signature:(int indexFrom, int indexTo)
ShiftTo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::ShiftTo(int indexFrom, int indexTo) {$/;"	f	class:BufferList	signature:(int indexFrom, int indexTo)
ShortcutItem	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^class ShortcutItem {$/;"	c
ShouldClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool ShouldClose(bool found) const {$/;"	f	class:Searcher	access:public	signature:(bool found) const
ShouldNotSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool ShouldNotSave() const {$/;"	f	class:Buffer	access:public	signature:() const
ShowBackgroundProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void ShowBackgroundProgress(const GUI::gui_string & \/* explanation *\/, size_t \/* size *\/, size_t \/* progress *\/) {}$/;"	f	class:SciTEBase	access:protected	signature:(const GUI::gui_string & , size_t , size_t )
ShowMessages	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::ShowMessages(int line) {$/;"	f	class:SciTEBase	signature:(int line)
ShowOutputOnMainThread	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ShowOutputOnMainThread() {$/;"	f	class:SciTEBase	signature:()
ShowOutputPane	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool ShowOutputPane() const {$/;"	f	class:JobQueue	access:public	signature:() const
ShutDown	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ShutDown() {$/;"	f	class:SciTEBase	signature:()
SingleBuffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool BufferList::SingleBuffer() const {$/;"	f	class:BufferList	signature:() const
SizeJob	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	size_t SizeJob() const {$/;"	f	struct:Worker	access:public	signature:() const
Slash	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^std::string Slash(const std::string &s, bool quoteQuotes) {$/;"	f	signature:(const std::string &s, bool quoteQuotes)
SortIfNeeded	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^void StringList::SortIfNeeded(bool ignoreCase) {$/;"	f	class:StringList	signature:(bool ignoreCase)
SptrFromPointer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^inline sptr_t SptrFromPointer(void *p) {$/;"	f	signature:(void *p)
SptrFromString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^inline sptr_t SptrFromString(const char *cp) {$/;"	f	signature:(const char *cp)
StackMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::StackMenu(int pos) {$/;"	f	class:SciTEBase	signature:(int pos)
StackMenuNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::StackMenuNext() {$/;"	f	class:SciTEBase	signature:()
StackMenuPrev	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::StackMenuPrev() {$/;"	f	class:SciTEBase	signature:()
StackNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^int BufferList::StackNext() {$/;"	f	class:BufferList	signature:()
StackPrev	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^int BufferList::StackPrev() {$/;"	f	class:BufferList	signature:()
StartAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^void StyleWriter::StartAt(unsigned int start, char chMask) {$/;"	f	class:StyleWriter	signature:(unsigned int start, char chMask)
StartAutoComplete	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartAutoComplete() {$/;"	f	class:SciTEBase	signature:()
StartAutoCompleteWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartAutoCompleteWord(bool onlyOneWord) {$/;"	f	class:SciTEBase	signature:(bool onlyOneWord)
StartBlockComment	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartBlockComment() {$/;"	f	class:SciTEBase	signature:()
StartBoxComment	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartBoxComment() {$/;"	f	class:SciTEBase	signature:()
StartCallTip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartCallTip() {$/;"	f	class:SciTEBase	signature:()
StartExpandAbbreviation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartExpandAbbreviation() {$/;"	f	class:SciTEBase	signature:()
StartInsertAbbreviation	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartInsertAbbreviation() {$/;"	f	class:SciTEBase	signature:()
StartMacroList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartMacroList(const char *words) {$/;"	f	class:SciTEBase	signature:(const char *words)
StartMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^void MatchMarker::StartMatch(GUI::ScintillaWindow *pSci_,$/;"	f	class:MatchMarker	signature:(GUI::ScintillaWindow *pSci_, const std::string &textMatch_, int flagsMatch_, int styleMatch_, int indicator_, int bookMark_)
StartPlayMacro	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::StartPlayMacro() {$/;"	f	class:SciTEBase	signature:()
StartRecordMacro	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::StartRecordMacro() {$/;"	f	class:SciTEBase	signature:()
StartSegment	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^void StyleWriter::StartSegment(unsigned int pos) {$/;"	f	class:StyleWriter	signature:(unsigned int pos)
StartStreamComment	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::StartStreamComment() {$/;"	f	class:SciTEBase	signature:()
StartStyling	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int StartStyling(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
StartStyling	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	void StartStyling(unsigned int startPos_, unsigned int length, int initStyle_) {$/;"	f	struct:StylingContext	access:public	signature:(unsigned int startPos_, unsigned int length, int initStyle_)
StartsWith	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool StartsWith(GUI::gui_string const &s, GUI::gui_string const &start) {$/;"	f	signature:(GUI::gui_string const &s, GUI::gui_string const &start)
StartsWith	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool StartsWith(std::string const &s, const char *start) {$/;"	f	signature:(std::string const &s, const char *start)
State	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int State(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
StdStringFromDouble	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^std::string StdStringFromDouble(double d, int precision) {$/;"	f	signature:(double d, int precision)
StdStringFromInteger	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^std::string StdStringFromInteger(int i) {$/;"	f	signature:(int i)
StdStringFromSizeT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^std::string StdStringFromSizeT(size_t i) {$/;"	f	signature:(size_t i)
Stop	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^void MatchMarker::Stop() {$/;"	f	class:MatchMarker	signature:()
StopRecordMacro	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::StopRecordMacro() {$/;"	f	class:SciTEBase	signature:()
StringCopy	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^void StringCopy(T (&dest)[count], const T* source) {$/;"	f	signature:(T (&dest)[count], const T* source)
StringEqual	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool StringEqual(const char *a, const char *b, size_t len, bool caseSensitive) {$/;"	f	file:	signature:(const char *a, const char *b, size_t len, bool caseSensitive)
StringFromLines	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^std::string StringFromLines(const std::vector<int> &lines) {$/;"	f	namespace:__anon28	signature:(const std::vector<int> &lines)
StringList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	explicit StringList(bool onlyLineEnds_ = false) :$/;"	f	class:StringList	access:public	signature:(bool onlyLineEnds_ = false)
StringList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^class StringList {$/;"	c
StringSplit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^std::vector<T> StringSplit(const T &text, int separator) {$/;"	f	signature:(const T &text, int separator)
StripCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	g
StripDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	explicit StripDefinition(GUI::gui_string definition) {$/;"	f	class:StripDefinition	access:public	signature:(GUI::gui_string definition)
StripDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^class StripDefinition {$/;"	c
StripTrailingSpaces	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::StripTrailingSpaces() {$/;"	f	class:SciTEBase	signature:()
StyleAndWords	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	StyleAndWords() : styleNumber(0) {$/;"	f	struct:StyleAndWords	access:public	signature:()
StyleAndWords	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^struct StyleAndWords {$/;"	s
StyleAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int StyleAt(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
StyleAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^int TextReader::StyleAt(int position) {$/;"	f	class:TextReader	signature:(int position)
StyleDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.cxx	/^StyleDefinition::StyleDefinition(const char *definition) :$/;"	f	class:StyleDefinition	signature:(const char *definition)
StyleDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^class StyleDefinition {$/;"	c
StyleDefinitionFor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^StyleDefinition SciTEBase::StyleDefinitionFor(int style) {$/;"	f	class:SciTEBase	signature:(int style)
StyleString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^std::string SciTEBase::StyleString(const char *lang, int style) const {$/;"	f	class:SciTEBase	signature:(const char *lang, int style) const
StyleWriter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^StyleWriter::StyleWriter(GUI::ScintillaWindow &sw_) :$/;"	f	class:StyleWriter	signature:(GUI::ScintillaWindow &sw_)
StyleWriter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^class StyleWriter : public TextReader {$/;"	c	inherits:TextReader
StylingContext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^struct StylingContext {$/;"	s	file:
Substitute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^int Substitute(std::string &s, const std::string &sFind, const std::string &sReplace) {$/;"	f	signature:(std::string &s, const std::string &sFind, const std::string &sReplace)
Substitute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^int Substitute(std::wstring &s, const std::wstring &sFind, const std::wstring &sReplace) {$/;"	f	signature:(std::wstring &s, const std::wstring &sFind, const std::wstring &sReplace)
SubsystemFromChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.cxx	/^JobSubsystem SubsystemFromChar(char c) {$/;"	f	signature:(char c)
SubsystemType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^JobSubsystem SciTEBase::SubsystemType(const char *cmd) {$/;"	f	class:SciTEBase	signature:(const char *cmd)
Swap	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void BufferList::Swap(int indexA, int indexB) {$/;"	f	class:BufferList	signature:(int indexA, int indexB)
SwitchDocumentAt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::SwitchDocumentAt(int index, sptr_t pdoc) {$/;"	f	class:SciTEBase	signature:(int index, sptr_t pdoc)
TOOLS_START	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	57;"	d
Text	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^GUI::gui_string Localization::Text(const char *s, bool retainIfNotFound) {$/;"	f	class:Localization	signature:(const char *s, bool retainIfNotFound)
TextRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::TextRead(FileWorker *pFileWorker) {$/;"	f	class:SciTEBase	signature:(FileWorker *pFileWorker)
TextReader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.cxx	/^TextReader::TextReader(GUI::ScintillaWindow &sw_) :$/;"	f	class:TextReader	signature:(GUI::ScintillaWindow &sw_)
TextReader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^class TextReader {$/;"	c
TextWritten	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::TextWritten(FileWorker *pFileWorker) {$/;"	f	class:SciTEBase	signature:(FileWorker *pFileWorker)
TimeCommands	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool TimeCommands() const {$/;"	f	class:JobQueue	access:public	signature:() const
TimerEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::TimerEnd(int \/* mask *\/) {$/;"	f	class:SciTEBase	signature:(int )
TimerStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::TimerStart(int \/* mask *\/) {$/;"	f	class:SciTEBase	signature:(int )
ToggleFoldRecursive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ToggleFoldRecursive(int line, int level) {$/;"	f	class:SciTEBase	signature:(int line, int level)
ToggleOutputVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ToggleOutputVisible() {$/;"	f	class:SciTEBase	signature:()
Token	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	static int Token(lua_State *L) {$/;"	f	struct:StylingContext	access:public	signature:(lua_State *L)
ToolIsImmediate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^bool SciTEBase::ToolIsImmediate(int item) {$/;"	f	class:SciTEBase	signature:(int item)
ToolsMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::ToolsMenu(int item) {$/;"	f	class:SciTEBase	signature:(int item)
Trace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::Trace(const char *s) {$/;"	f	class:SciTEBase	signature:(const char *s)
UCControlType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	g	class:UserControl	access:public
UIAvailable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::UIAvailable() {$/;"	f	class:SciTEBase	signature:()
UIClosed	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::UIClosed() {$/;"	f	class:SciTEBase	signature:()
UIHasFocus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::UIHasFocus() {$/;"	f	class:SciTEBase	signature:()
UTF32Character	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^unsigned int UTF32Character(const unsigned char *utf8) {$/;"	f	signature:(const unsigned char *utf8)
UnSlash	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^unsigned int UnSlash(char *s) {$/;"	f	signature:(char *s)
UnSlashAsNeeded	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static std::string UnSlashAsNeeded(const std::string &s, bool escapes, bool regularExpression) {$/;"	f	file:	signature:(const std::string &s, bool escapes, bool regularExpression)
UnSlashLowOctal	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^static unsigned int UnSlashLowOctal(char *s) {$/;"	f	file:	signature:(char *s)
UnSlashLowOctalString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^std::string UnSlashLowOctalString(const char *s) {$/;"	f	signature:(const char *s)
UnSlashString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^std::string UnSlashString(const char *s) {$/;"	f	signature:(const char *s)
UniMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.h	/^enum UniMode {$/;"	g
Unset	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^void PropSetFile::Unset(const char *key, int lenKey) {$/;"	f	class:PropSetFile	signature:(const char *key, int lenKey)
UnsetProperty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::UnsetProperty(const char *key) {$/;"	f	class:SciTEBase	signature:(const char *key)
UpdateBuffersCurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^void SciTEBase::UpdateBuffersCurrent() {$/;"	f	class:SciTEBase	signature:()
UpdateProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^void SciTEBase::UpdateProgress(Worker *) {$/;"	f	class:SciTEBase	signature:(Worker *)
UpdateStatusBar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::UpdateStatusBar(bool bUpdateSlowData) {$/;"	f	class:SciTEBase	signature:(bool bUpdateSlowData)
UptrFromString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^inline uptr_t UptrFromString(const char *cp) {$/;"	f	signature:(const char *cp)
UserControl	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	UserControl(UCControlType controlType_, const GUI::gui_string &text_, int item_) : $/;"	f	class:UserControl	access:public	signature:(UCControlType controlType_, const GUI::gui_string &text_, int item_)
UserControl	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^class UserControl {$/;"	c
UserFilePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^FilePath SciTEBase::UserFilePath(const GUI::gui_char *name) {$/;"	f	class:SciTEBase	signature:(const GUI::gui_char *name)
Utf16_Iter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf16_Iter::Utf16_Iter() {$/;"	f	class:Utf16_Iter	signature:()
Utf16_Iter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^class Utf16_Iter : public Utf8_16 {$/;"	c	inherits:Utf8_16
Utf8_16	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^class Utf8_16 {$/;"	c
Utf8_16_Read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf8_16_Read::Utf8_16_Read() {$/;"	f	class:Utf8_16_Read	signature:()
Utf8_16_Read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^class Utf8_16_Read : public Utf8_16 {$/;"	c	inherits:Utf8_16
Utf8_16_Write	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf8_16_Write::Utf8_16_Write() {$/;"	f	class:Utf8_16_Write	signature:()
Utf8_16_Write	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^class Utf8_16_Write : public Utf8_16 {$/;"	c	inherits:Utf8_16
Utf8_Iter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf8_Iter::Utf8_Iter() {$/;"	f	class:Utf8_Iter	signature:()
Utf8_Iter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^class Utf8_Iter : public Utf8_16 {$/;"	c	inherits:Utf8_16
VERSION_SCITE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	12;"	d
VERSION_WORDS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTE.h	13;"	d
VarChain	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^	VarChain(const char*var_=NULL, const VarChain *link_=NULL): var(var_), link(link_) {}$/;"	f	struct:VarChain	access:public	signature:(const char*var_=NULL, const VarChain *link_=NULL)
VarChain	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^struct VarChain {$/;"	s	file:
ViewWhitespace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::ViewWhitespace(bool view) {$/;"	f	class:SciTEBase	signature:(bool view)
WORK_FILEPROGRESS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	WORK_FILEPROGRESS = 3,$/;"	e	enum:__anon2
WORK_FILEREAD	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	WORK_FILEREAD = 1,$/;"	e	enum:__anon2
WORK_FILEWRITTEN	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	WORK_FILEWRITTEN = 2,$/;"	e	enum:__anon2
WORK_PLATFORM	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	WORK_PLATFORM = 100$/;"	e	enum:__anon2
Width	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int Width() const { return right - left; }$/;"	f	class:GUI::Rectangle	access:public	signature:() const
Window	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	Window() : wid(0) {$/;"	f	class:GUI::Window	access:public	signature:()
Window	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^class Window {$/;"	c	namespace:GUI
WindowID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^typedef void *WindowID;$/;"	t	namespace:GUI
WindowSetFocus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void WindowSetFocus(GUI::ScintillaWindow &w) {$/;"	f	signature:(GUI::ScintillaWindow &w)
Worker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	Worker() : mutex(Mutex::Create()), completed(false), cancelling(false), jobSize(1), jobProgress(0) {$/;"	f	struct:Worker	access:public	signature:()
Worker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^struct Worker {$/;"	s
WorkerCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^void SciTEBase::WorkerCommand(int cmd, Worker *pWorker) {$/;"	f	class:SciTEBase	signature:(int cmd, Worker *pWorker)
WorkerListener	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^struct WorkerListener {$/;"	s
_WIN32_WINNT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	31;"	d	file:
_WIN32_WINNT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	32;"	d	file:
_WIN32_WINNT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	24;"	d	file:
_WIN32_WINNT	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	25;"	d	file:
__STDC_LIMIT_MACROS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	10;"	d	file:
_popen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\scite_lua_win.h	19;"	d
abbrevInsert	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string abbrevInsert;$/;"	m	class:SciTEBase	access:protected
absolute_index	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^inline int absolute_index(lua_State *L, int index) {$/;"	f	signature:(lua_State *L, int index)
access	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static int access(const wchar_t *path, int mode) {$/;"	f	file:	signature:(const wchar_t *path, int mode)
addEach	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum AddSelection { addNext, addEach };$/;"	e	enum:SciTEBase::AddSelection
addNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum AddSelection { addNext, addEach };$/;"	e	enum:SciTEBase::AddSelection
allowMenuActions	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool allowMenuActions;$/;"	m	class:SciTEBase	access:protected
alphaIndicator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int alphaIndicator;$/;"	m	class:SciTEBase	access:protected
anchor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int anchor;$/;"	m	struct:SelectedRange	access:public
apis	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	StringList apis;$/;"	m	class:SciTEBase	access:protected
apisFileNames	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string apisFileNames;$/;"	m	class:SciTEBase	access:protected
atLineEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	bool atLineEnd;$/;"	m	struct:StylingContext	file:	access:public
atLineStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	bool atLineStart;$/;"	m	struct:StylingContext	file:	access:public
autoCCausedByOnlyOne	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool autoCCausedByOnlyOne;$/;"	m	class:SciTEBase	access:protected
autoCompleteFillUpCharacters	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string autoCompleteFillUpCharacters;$/;"	m	class:SciTEBase	access:protected
autoCompleteIgnoreCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool autoCompleteIgnoreCase;$/;"	m	class:SciTEBase	access:protected
autoCompleteStartCharacters	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string autoCompleteStartCharacters;$/;"	m	class:SciTEBase	access:protected
autoCompleteTypeSeparator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string autoCompleteTypeSeparator;$/;"	m	class:SciTEBase	access:protected
b	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int b;$/;"	m	class:__anon1::RandomColour	file:	access:public
back	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	std::string back;$/;"	m	class:StyleDefinition	access:public
bf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	std::unique_ptr<BufferedFile> bf;$/;"	m	class:FileReader	file:	access:private
bigBit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	long bigBit;$/;"	m	class:GUI::ElapsedTime	access:private
blockEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	StyleAndWords blockEnd;$/;"	m	class:SciTEBase	access:protected
blockSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^const size_t blockSize = 131072;$/;"	v
blockStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	StyleAndWords blockStart;$/;"	m	class:SciTEBase	access:protected
bookMark	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	int bookMark;$/;"	m	class:MatchMarker	access:private
bookmarkBluegem	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^static const char *bookmarkBluegem[] = {$/;"	v	file:
bookmarks	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<int> bookmarks;$/;"	m	class:Buffer	access:public
bookmarks	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<int> bookmarks;$/;"	m	struct:BufferState	access:public
bottom	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int bottom;$/;"	m	class:GUI::Rectangle	access:public
braceCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int braceCount;$/;"	m	class:SciTEBase	access:protected
bracesCheck	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool bracesCheck;$/;"	m	class:SciTEBase	access:protected
bracesSloppy	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool bracesSloppy;$/;"	m	class:SciTEBase	access:protected
bracesStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int bracesStyle;$/;"	m	class:SciTEBase	access:protected
buf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	char buf[bufferSize+1];$/;"	m	class:TextReader	access:protected
bufLen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	enum {bufLen = 64 * 1024};$/;"	e	enum:BufferedFile::__anon29	file:
buffer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	char buffer[bufLen];$/;"	m	class:BufferedFile	file:	access:private
bufferCmdID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fileStackCmdID = IDM_MRUFILE, bufferCmdID = IDM_BUFFER };$/;"	e	enum:SciTEBase::__anon13
bufferMax	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { bufferMax = IDM_IMPORT - IDM_BUFFER };$/;"	e	enum:SciTEBase::__anon25
bufferSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	e	enum:TextReader::__anon32
bufferedDraw	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool bufferedDraw;$/;"	m	class:SciTEBase	access:protected
buffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	BufferList buffers;$/;"	m	class:SciTEBase	access:protected
buffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<Buffer> buffers;$/;"	m	class:BufferList	access:public
buffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<BufferState> buffers;$/;"	m	class:Session	access:public
callTipIgnoreCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool callTipIgnoreCase;$/;"	m	class:SciTEBase	access:protected
callTipMaxWrapPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int callTipMaxWrapPos;$/;"	m	class:SciTEBase	access:protected
callTipShowFuncDocs	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool callTipShowFuncDocs;$/;"	m	class:SciTEBase	access:protected
callTipUseEscapes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool callTipUseEscapes;$/;"	m	class:SciTEBase	access:protected
callTipUseManualEscapes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool callTipUseManualEscapes;$/;"	m	class:SciTEBase	access:protected
call_function	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool call_function(lua_State *L, int nargs, bool ignoreFunctionReturnValue=false) {$/;"	f	file:	signature:(lua_State *L, int nargs, bool ignoreFunctionReturnValue=false)
calltipEndDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string calltipEndDefinition;$/;"	m	class:SciTEBase	access:protected
calltipParametersEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string calltipParametersEnd;$/;"	m	class:SciTEBase	access:protected
calltipParametersSeparators	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string calltipParametersSeparators;$/;"	m	class:SciTEBase	access:protected
calltipParametersStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string calltipParametersStart;$/;"	m	class:SciTEBase	access:protected
calltipWordCharacters	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string calltipWordCharacters;$/;"	m	class:SciTEBase	access:protected
canGet	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	bool canGet() const { return m_eState == eStart; }$/;"	f	class:Utf8_Iter	access:public	signature:() const
cancelFlag	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	long cancelFlag;$/;"	m	class:JobQueue	access:public
cancelling	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	volatile bool cancelling;$/;"	m	struct:Worker	access:private
capturedMouse	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool capturedMouse;$/;"	m	class:SciTEBase	access:protected
caseForce	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	int caseForce;$/;"	m	class:StyleDefinition	access:public
caseSensitive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool caseSensitive;$/;"	m	class:FileReader	file:	access:private
caseSensitiveFilenames	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^bool PropSetFile::caseSensitiveFilenames = false;$/;"	m	class:PropSetFile	file:
caseSensitiveFilenames	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	static bool caseSensitiveFilenames;$/;"	m	class:PropSetFile	access:private
cf_global_dostring	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_global_dostring(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_global_metatable_index	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_global_metatable_index(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_global_print	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_global_print(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_global_trace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_global_trace(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_ifaceprop_metatable_index	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_ifaceprop_metatable_index(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_ifaceprop_metatable_newindex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_ifaceprop_metatable_newindex(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_match_metatable_index	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_match_metatable_index(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_match_metatable_tostring	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_match_metatable_tostring(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_match_replace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_match_replace(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_append	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_append(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_findtext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_findtext(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_iface_function	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_iface_function(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_insert	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_insert(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_match	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_match(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_match_generator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_match_generator(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_metatable_index	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_metatable_index(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_metatable_newindex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_metatable_newindex(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_remove	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_remove(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_pane_textrange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_pane_textrange(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_props_metatable_index	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_props_metatable_index(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_props_metatable_newindex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_props_metatable_newindex(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_constname	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_constname(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_menu_command	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_menu_command(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_open	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_open(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_send	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_send(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_strip_set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_strip_set(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_strip_set_list	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_strip_set_list(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_strip_show	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_strip_show(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_strip_value	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_strip_value(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
cf_scite_update_status_bar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int cf_scite_update_status_bar(lua_State *L) {$/;"	f	file:	signature:(lua_State *L)
changeable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	bool changeable;$/;"	m	class:StyleDefinition	access:public
characterSet	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int characterSet;$/;"	m	class:SciTEBase	access:protected
chdir	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static int chdir(const wchar_t *dirname) {$/;"	f	file:	signature:(const wchar_t *dirname)
check_pane_object	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static ExtensionAPI::Pane check_pane_object(lua_State *L, int index) {$/;"	f	file:	signature:(lua_State *L, int index)
checkudata	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static void *checkudata(lua_State *L, int ud, const char *tname) {$/;"	f	file:	signature:(lua_State *L, int ud, const char *tname)
clearBeforeExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool clearBeforeExecute;$/;"	m	class:JobQueue	access:public
clear_table	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static void clear_table(lua_State *L, int tableIdx, bool clearMetatable = true) {$/;"	f	file:	signature:(lua_State *L, int tableIdx, bool clearMetatable = true)
clone_table	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool clone_table(lua_State *L, int srcTableIdx, bool copyMetatable = false) {$/;"	f	file:	signature:(lua_State *L, int srcTableIdx, bool copyMetatable = false)
closeAlways	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	m	class:Searcher::CloseFind	access:private
closeFind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	m	class:Searcher	typeref:class:Searcher::CloseFind	access:public
closePrevent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum class CloseFind { closePrevent, closeAlways, closeOnMatch } closeFind;$/;"	m	class:Searcher::CloseFind	access:private
cmd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int cmd;	\/\/ Menu item$/;"	m	struct:SearchOption	access:public
codePage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int codePage;$/;"	m	struct:StylingContext	file:	access:public
codePage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int codePage;$/;"	m	class:SciTEBase	access:protected
codePage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	int codePage;$/;"	m	class:TextReader	access:protected
codingCookie	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.cxx	/^static const char codingCookie[] = "coding";$/;"	v	file:
colour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	long colour;$/;"	m	struct:IndicatorDefinition	access:public
columns	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	unsigned int columns;$/;"	m	class:StripDefinition	access:public
command	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	std::string command;$/;"	m	class:Job	access:public
commandCurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	int commandCurrent;$/;"	m	class:JobQueue	access:public
commandMax	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	enum { commandMax = 2 };$/;"	e	enum:JobQueue::__anon4
completed	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	volatile bool completed;$/;"	m	struct:Worker	access:private
configFileVisibilityString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char configFileVisibilityString[] = ".";$/;"	v
configFileVisibilityString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char configFileVisibilityString[] = GUI_TEXT("");$/;"	v
constantCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^const int IFaceTable::constantCount = ifaceConstantCount;$/;"	m	class:IFaceTable	file:
constantCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	static const int constantCount;$/;"	m	class:IFaceTable	access:public
constants	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^const IFaceConstant * const IFaceTable::constants = ifaceConstants;$/;"	m	class:IFaceTable	file:
constants	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	static const IFaceConstant * const constants;$/;"	m	class:IFaceTable	access:public
contains	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^	bool contains(const char *testVar) const {$/;"	f	struct:VarChain	access:public	signature:(const char *testVar) const
contributors	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^static const char *contributors[] = {$/;"	v	file:
controlType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	m	class:UserControl	typeref:enum:UserControl::UCControlType	access:public
controls	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	std::vector<std::vector<UserControl> > controls;$/;"	m	class:StripDefinition	access:public
convert	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^size_t Utf8_16_Read::convert(char* buf, size_t len) {$/;"	f	class:Utf8_16_Read	signature:(char* buf, size_t len)
curBufferIndex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int curBufferIndex = -1;$/;"	v	file:
current	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int current;$/;"	m	class:BufferList	access:protected
currentCallTip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int currentCallTip;$/;"	m	class:SciTEBase	access:protected
currentCallTipWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string currentCallTipWord;$/;"	m	class:SciTEBase	access:protected
currentMacro	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string currentMacro;$/;"	m	class:SciTEBase	access:protected
currentPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	unsigned int currentPos;$/;"	m	struct:StylingContext	file:	access:public
currentWordHighlight	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	CurrentWordHighlight currentWordHighlight;$/;"	m	class:SciTEBase	access:protected
cursor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	char cursor[3][8];$/;"	m	struct:StylingContext	file:	access:public
cursorPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int cursorPos;$/;"	m	struct:StylingContext	file:	access:public
defaultSessionFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^const GUI::gui_char defaultSessionFileName[] = GUI_TEXT("SciTE.session");$/;"	v
defineTexStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportTEX.cxx	/^static void defineTexStyle(const StyleDefinition &style, FILE* fp, int istyle) {$/;"	f	file:	signature:(const StyleDefinition &style, FILE* fp, int istyle)
delay	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		delay,              \/\/ Delay before to highlight the word at the caret.$/;"	e	enum:CurrentWordHighlight::__anon10
delayAlreadyElapsed	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		delayAlreadyElapsed \/\/ Delay has already elapsed, word at the caret and occurrences are (or have to be) highlighted.$/;"	e	enum:CurrentWordHighlight::__anon10
delayBeforeAutoSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int delayBeforeAutoSave;$/;"	m	class:SciTEBase	access:protected
delayJustEnded	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		delayJustEnded,     \/\/ Delay has just ended. This state allows to ignore next HighlightCurrentWord (SCN_UPDATEUI and SC_UPDATE_CONTENT for setting indicators).$/;"	e	enum:CurrentWordHighlight::__anon10
determineEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^int Utf8_16_Read::determineEncoding() {$/;"	f	class:Utf8_16_Read	signature:()
diagnosticStyleStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int diagnosticStyleStart;$/;"	m	class:SciTEBase	access:protected
diagnosticStyles	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { diagnosticStyles=4};$/;"	e	enum:SciTEBase::__anon19
dialogsOnScreen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int dialogsOnScreen;$/;"	m	class:SciTEBase	access:protected
dirNameAtExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePath dirNameAtExecute;$/;"	m	class:SciTEBase	access:protected
dirNameForExecute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePath dirNameForExecute;$/;"	m	class:SciTEBase	access:protected
directory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	FilePath directory;$/;"	m	class:Job	access:public
doc	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	sptr_t doc;$/;"	m	class:Buffer	access:public
documentBytes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	const char *documentBytes;$/;"	m	class:FileStorer	access:public
documentModTime	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	time_t documentModTime;$/;"	m	class:Buffer	access:public
eFinal	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eFinal$/;"	e	enum:Utf16_Iter::eState
eFinal	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eFinal$/;"	e	enum:Utf8_Iter::eState
eLast	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eLast$/;"	e	enum:Utf8_16::encodingType
ePenultimate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    ePenultimate,$/;"	e	enum:Utf16_Iter::eState
ePenultimate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    ePenultimate,$/;"	e	enum:Utf8_Iter::eState
eSecondOf4Bytes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eSecondOf4Bytes,$/;"	e	enum:Utf16_Iter::eState
eSecondOf4Bytes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eSecondOf4Bytes,$/;"	e	enum:Utf8_Iter::eState
eStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eStart,$/;"	e	enum:Utf16_Iter::eState
eStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eStart,$/;"	e	enum:Utf8_Iter::eState
eState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	enum eState {$/;"	g	class:Utf16_Iter	access:protected
eState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	enum eState {$/;"	g	class:Utf8_Iter	access:protected
eUnknown	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eUnknown,$/;"	e	enum:Utf8_16::encodingType
eUtf16BigEndian	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eUtf16BigEndian,$/;"	e	enum:Utf8_16::encodingType
eUtf16LittleEndian	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eUtf16LittleEndian,  \/\/ Default on Windows$/;"	e	enum:Utf8_16::encodingType
eUtf8	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	    eUtf8,$/;"	e	enum:Utf8_16::encodingType
elapsedTimes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::ElapsedTime elapsedTimes;$/;"	m	struct:CurrentWordHighlight	access:public
empty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anon6
encodingType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	enum encodingType {$/;"	g	class:Utf8_16	access:public
endDoc	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	unsigned int endDoc;$/;"	m	struct:StylingContext	file:	access:public
endPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int endPos;$/;"	m	struct:PaneMatchObject	file:	access:public
endPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	unsigned int endPos;$/;"	m	struct:StylingContext	file:	access:public
endPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	int endPos;$/;"	m	class:TextReader	access:protected
endPosOrig	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int endPosOrig; \/\/ has to do with preventing infinite loop on a 0-length match$/;"	m	struct:PaneMatchObject	file:	access:public
entries	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.h	/^	std::string entries[sz];$/;"	m	class:EntryMemory	access:private
eolfilled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	bool eolfilled;$/;"	m	class:StyleDefinition	access:public
err	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	int err;$/;"	m	struct:FileWorker	access:public
et	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	GUI::ElapsedTime et;$/;"	m	struct:FileWorker	access:public
excludes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	std::set<std::string> excludes;$/;"	m	class:ImportFilter	access:public
executing	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool executing;$/;"	m	class:JobQueue	access:public
exhausted	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool exhausted;$/;"	m	class:BufferedFile	file:	access:private
extender	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	Extension *extender;$/;"	m	class:SciTEBase	access:protected
extension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string extension;$/;"	m	class:LanguageMenuItem	access:public
extensionScript	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static std::string extensionScript;$/;"	v	file:
extensions	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.h	/^	std::vector<Extension *> extensions;$/;"	m	class:MultiplexExtension	access:private
extremePosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	enum {extremePosition=0x7FFFFFFF};$/;"	e	enum:TextReader::__anon31
failedSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool failedSave;$/;"	m	class:Buffer	access:public
failedfind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool failedfind;$/;"	m	class:Searcher	access:public
fclose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^int Utf8_16_Write::fclose() {$/;"	f	class:Utf8_16_Write	signature:()
fdFinishSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	e	enum:Buffer::FutureDo
fdNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	e	enum:Buffer::FutureDo
fileModLastAsk	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	time_t fileModLastAsk;$/;"	m	class:Buffer	access:public
fileModTime	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	time_t fileModTime;$/;"	m	class:Buffer	access:public
fileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.h	/^	GUI::gui_string fileName;$/;"	m	class:FilePath	access:private
fileNameLast	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::gui_string fileNameLast;$/;"	m	struct:BackgroundActivities	access:public
filePath	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePath filePath;$/;"	m	class:SciTEBase	access:protected
fileRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char fileRead[] = "rb";$/;"	v
fileRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char fileRead[] = GUI_TEXT("rb");$/;"	v
fileStackCmdID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fileStackCmdID = IDM_MRUFILE, bufferCmdID = IDM_BUFFER };$/;"	e	enum:SciTEBase::__anon13
fileStackMax	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fileStackMax = 10 };$/;"	e	enum:SciTEBase::__anon12
fileWrite	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char fileWrite[] = "wb";$/;"	v
fileWrite	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char fileWrite[] = GUI_TEXT("wb");$/;"	v
fillAlpha	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	int fillAlpha;$/;"	m	struct:IndicatorDefinition	access:public
filter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	ImportFilter filter;$/;"	m	class:SciTEBase	access:protected
findInStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool findInStyle;$/;"	m	class:Searcher	access:public
findMarker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	MatchMarker findMarker;$/;"	m	class:SciTEBase	access:protected
findMarks	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	m	class:Buffer	typeref:enum:Buffer::__anon7	access:public
findStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int findStyle;$/;"	m	class:Searcher	access:public
findWhat	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string findWhat;$/;"	m	class:Searcher	access:public
firstPropertiesRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool firstPropertiesRead;$/;"	m	class:SciTEBase	access:protected
fixedWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	bool fixedWidth;$/;"	m	class:UserControl	access:public
flags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	int flags;$/;"	m	class:Job	access:public
flags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	int flags;$/;"	m	struct:JobMode	access:public
flags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int flags; \/\/ this is really part of the state, but is kept here for convenience$/;"	m	struct:PaneMatchObject	file:	access:public
flags	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	g	class:StyleDefinition	access:public
flagsMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	int flagsMatch;$/;"	m	class:MatchMarker	access:private
fmMarked	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anon7
fmModified	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anon7
fmNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anon7
fmTemporary	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { fmNone, fmTemporary, fmMarked, fmModified} findMarks;$/;"	e	enum:Buffer::__anon7
fn	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	SciFnDirect fn;$/;"	m	class:GUI::ScintillaWindow	access:private
focusOnReplace	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool focusOnReplace;$/;"	m	class:Searcher	access:public
foldColour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string foldColour;$/;"	m	class:SciTEBase	access:protected
foldHiliteColour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string foldHiliteColour;$/;"	m	class:SciTEBase	access:protected
foldMargin	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool foldMargin;$/;"	m	class:SciTEBase	access:protected
foldMarginWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int foldMarginWidth;$/;"	m	class:SciTEBase	access:protected
foldMarginWidthDefault	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { foldMarginWidthDefault = 14};$/;"	e	enum:SciTEBase::__anon23
foldState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<int> foldState;$/;"	m	class:Buffer	access:public
foldState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<int> foldState;$/;"	m	struct:BufferState	access:public
font	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^	int font;$/;"	m	struct:PDFStyle	file:	access:public
font	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	std::string font;$/;"	m	class:StyleDefinition	access:public
fopen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static FILE *fopen(const wchar_t *filename, const wchar_t *mode) {$/;"	f	file:	signature:(const wchar_t *filename, const wchar_t *mode)
fopen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\scite_lua_win.h	17;"	d
fore	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^	std::string fore;$/;"	m	struct:PDFStyle	file:	access:public
fore	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	std::string fore;$/;"	m	class:StyleDefinition	access:public
fp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	FILE *fp;$/;"	m	struct:FileWorker	access:public
fp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	FILE *fp;$/;"	m	class:BufferedFile	file:	access:private
fullScreen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool fullScreen;$/;"	m	class:SciTEBase	access:protected
functionCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^const int IFaceTable::functionCount = ifaceFunctionCount;$/;"	m	class:IFaceTable	file:
functionCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	static const int functionCount;$/;"	m	class:IFaceTable	access:public
functionDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string functionDefinition;$/;"	m	class:SciTEBase	access:protected
functions	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^const IFaceFunction * const IFaceTable::functions = ifaceFunctions;$/;"	m	class:IFaceTable	file:
functions	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	static const IFaceFunction * const functions;$/;"	m	class:IFaceTable	access:public
futureDo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum FutureDo { fdNone=0, fdFinishSave=1 } futureDo;$/;"	m	class:Buffer	typeref:enum:Buffer::FutureDo	access:public
fwrite	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^size_t Utf8_16_Write::fwrite(const void* p, size_t _size) {$/;"	f	class:Utf8_16_Write	signature:(const void* p, size_t _size)
g	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int g;$/;"	m	class:__anon1::RandomColour	file:	access:public
get	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	int get() const {$/;"	f	class:Utf8_Iter	access:public	signature:() const
get	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	utf8 get() const {$/;"	f	class:Utf16_Iter	access:public	signature:() const
getEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	encodingType getEncoding() const { return m_eEncoding; }$/;"	f	class:Utf8_16_Read	access:public	signature:() const
getNewBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	char* getNewBuf() { return reinterpret_cast<char*>(m_pNewBuf); }$/;"	f	class:Utf8_16_Read	access:public	signature:()
getPDFRGB	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportPDF.cxx	/^inline std::string getPDFRGB(const char* stylecolour) {$/;"	f	signature:(const char* stylecolour)
getTexRGB	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportTEX.cxx	/^static char* getTexRGB(char* texcolor, const char* stylecolor) {$/;"	f	file:	signature:(char* texcolor, const char* stylecolor)
getcwd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static wchar_t *getcwd(wchar_t *buffer, int maxlen) {$/;"	f	file:	signature:(wchar_t *buffer, int maxlen)
getter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	int getter;$/;"	m	struct:IFaceProperty	access:public
grepBinary	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepDot = 8, grepBinary = 16, grepScroll = 32$/;"	e	enum:SciTEBase::GrepFlags
grepDot	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepDot = 8, grepBinary = 16, grepScroll = 32$/;"	e	enum:SciTEBase::GrepFlags
grepMatchCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags
grepNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags
grepScroll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepDot = 8, grepBinary = 16, grepScroll = 32$/;"	e	enum:SciTEBase::GrepFlags
grepStdOut	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags
grepWholeWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    grepNone = 0, grepWholeWord = 1, grepMatchCase = 2, grepStdOut = 4,$/;"	e	enum:SciTEBase::GrepFlags
gui_char	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^typedef char gui_char;$/;"	t	namespace:GUI
gui_char	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^typedef wchar_t gui_char;$/;"	t	namespace:GUI
gui_string	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^typedef std::string gui_string;$/;"	t	namespace:GUI
gui_string	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^typedef std::wstring gui_string;$/;"	t	namespace:GUI
hasClose	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	bool hasClose;$/;"	m	class:StripDefinition	access:public
havefound	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool havefound;$/;"	m	class:Searcher	access:public
heightBar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int heightBar;$/;"	m	class:SciTEBase	access:protected
heightOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int heightOutput;$/;"	m	class:SciTEBase	access:protected
heightOutputStartDrag	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int heightOutputStartDrag;$/;"	m	class:SciTEBase	access:protected
heightStatus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    heightStatus = 20,$/;"	e	enum:__anon8
heightTab	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    heightTab = 24,$/;"	e	enum:__anon8
heightTools	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    heightTools = 24,$/;"	e	enum:__anon8
heightToolsBig	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    heightToolsBig = 32,$/;"	e	enum:__anon8
host	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static ExtensionAPI *host = 0;$/;"	v	file:
host	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.h	/^	ExtensionAPI *host;$/;"	m	class:MultiplexExtension	access:private
id	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int id;	\/\/ Control in dialog$/;"	m	struct:SearchOption	access:public
ifaceConstantCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^	ifaceConstantCount = 2683,$/;"	e	enum:__anon3	file:
ifaceConstants	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^static IFaceConstant ifaceConstants[] = {$/;"	v	file:
ifaceFunctionCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^	ifaceFunctionCount = 298,$/;"	e	enum:__anon3	file:
ifaceFunctions	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^static IFaceFunction ifaceFunctions[] = {$/;"	v	file:
ifaceProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^static IFaceProperty ifaceProperties[] = {$/;"	v	file:
ifacePropertyCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^	ifacePropertyCount = 228$/;"	e	enum:__anon3	file:
iface_bool	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_bool,$/;"	e	enum:IFaceType
iface_cells	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_cells,$/;"	e	enum:IFaceType
iface_colour	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_colour,$/;"	e	enum:IFaceType
iface_findtext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_findtext,$/;"	e	enum:IFaceType
iface_formatrange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_formatrange$/;"	e	enum:IFaceType
iface_function_helper	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int iface_function_helper(lua_State *L, const IFaceFunction &func) {$/;"	f	file:	signature:(lua_State *L, const IFaceFunction &func)
iface_int	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_int,$/;"	e	enum:IFaceType
iface_keymod	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_keymod,$/;"	e	enum:IFaceType
iface_length	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_length,$/;"	e	enum:IFaceType
iface_position	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_position,$/;"	e	enum:IFaceType
iface_string	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_string,$/;"	e	enum:IFaceType
iface_stringresult	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_stringresult,$/;"	e	enum:IFaceType
iface_textrange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_textrange,$/;"	e	enum:IFaceType
iface_void	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	iface_void,$/;"	e	enum:IFaceType
imeAutoComplete	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool imeAutoComplete;$/;"	m	class:SciTEBase	access:protected
importCmdID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { importCmdID = IDM_IMPORT };$/;"	e	enum:SciTEBase::__anon15
importFiles	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePathSet importFiles;$/;"	m	class:SciTEBase	access:protected
importMax	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { importMax = 50 };$/;"	e	enum:SciTEBase::__anon14
includes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	std::set<std::string> includes;$/;"	m	class:ImportFilter	access:public
includes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^static bool includes(const StyleAndWords &symbols, const std::string &value) {$/;"	f	file:	signature:(const StyleAndWords &symbols, const std::string &value)
incr	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int incr;$/;"	m	class:__anon1::RandomColour	file:	access:private
indentClosing	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool indentClosing;$/;"	m	class:SciTEBase	access:protected
indentExamine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int indentExamine;$/;"	m	class:SciTEBase	access:protected
indentMaintain	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool indentMaintain;$/;"	m	class:SciTEBase	access:protected
indentOpening	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool indentOpening;$/;"	m	class:SciTEBase	access:protected
indentationWSVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int indentationWSVisible;$/;"	m	class:SciTEBase	access:protected
indexType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceType indexType;$/;"	m	struct:IFaceObject	access:public
indicator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	int indicator;$/;"	m	class:MatchMarker	access:private
indicatorHighlightCurrentWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		indicatorHighlightCurrentWord,$/;"	e	enum:SciTEBase::__anon16
indicatorMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { indicatorMatch = INDIC_CONTAINER,$/;"	e	enum:SciTEBase::__anon16
indicatorSentinel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		indicatorSentinel };$/;"	e	enum:SciTEBase::__anon16
indicatorSpellingMistake	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		indicatorSpellingMistake,$/;"	e	enum:SciTEBase::__anon16
initStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int initStyle;$/;"	m	struct:StylingContext	file:	access:public
initialised	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool initialised;$/;"	m	class:BufferList	access:public
input	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	std::string input;$/;"	m	class:Job	access:public
input	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	std::string input;$/;"	m	struct:JobMode	access:public
isBlockEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    isBlockEnd,	\/\/ indentation end indicator such as "}" or VB "end"$/;"	e	enum:IndentationStatus
isBlockStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    isBlockStart,	\/\/ indentation block begin such as "{" or VB "function"$/;"	e	enum:IndentationStatus
isBuilding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool isBuilding;$/;"	m	class:JobQueue	access:public
isBuilt	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool isBuilt;$/;"	m	class:JobQueue	access:public
isDirty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool isDirty;$/;"	m	class:Buffer	access:public
isEnabled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool isEnabled;$/;"	m	struct:CurrentWordHighlight	access:public
isEncodingChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.cxx	/^static bool isEncodingChar(char ch) {$/;"	f	file:	signature:(char ch)
isFilter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool isFilter;$/;"	m	struct:JobMode	access:public
isKeyWordStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    isKeyWordStart	\/\/ Keywords that cause indentation$/;"	e	enum:IndentationStatus
isNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    isNone,		\/\/ no effect on indentation$/;"	e	enum:IndentationStatus
isOnlyWithSameStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool isOnlyWithSameStyle;$/;"	m	struct:CurrentWordHighlight	access:public
isReadOnly	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool isReadOnly;$/;"	m	class:Buffer	access:public
isResizeable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	bool isResizeable;$/;"	m	struct:ColumnWidth	access:public
isSpaceChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.cxx	/^static bool isSpaceChar(char ch) {$/;"	f	file:	signature:(char ch)
isdigitchar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^inline bool isdigitchar(int ch) {$/;"	f	signature:(int ch)
isfilenamecharforsel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::isfilenamecharforsel(char ch) {$/;"	f	class:SciTEBase	signature:(char ch)
islexerwordcharforsel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::islexerwordcharforsel(char ch) {$/;"	f	class:SciTEBase	signature:(char ch)
isprefix	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringHelpers.cxx	/^bool isprefix(const char *target, const char *prefix) {$/;"	f	signature:(const char *target, const char *prefix)
isspacechar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^inline bool isspacechar(unsigned char ch) {$/;"	f	signature:(unsigned char ch)
iswordcharforsel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^bool SciTEBase::iswordcharforsel(char ch) {$/;"	f	class:SciTEBase	signature:(char ch)
italics	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	bool italics;$/;"	m	class:StyleDefinition	access:public
item	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	int item;$/;"	m	class:UserControl	access:public
jobCLI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobForceQueue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobForceQueue = 1,$/;"	e	enum:JobFlags
jobGUI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobGrep	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobGroupUndo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobGroupUndo = 64$/;"	e	enum:JobFlags
jobHasInput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobHasInput = 2,$/;"	e	enum:JobFlags
jobHelp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobImmediate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobOtherHelp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	volatile size_t jobProgress;$/;"	m	struct:Worker	access:private
jobQueue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	Job jobQueue[commandMax];$/;"	m	class:JobQueue	access:public
jobQueue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	JobQueue jobQueue;$/;"	m	class:SciTEBase	access:protected
jobQuiet	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobQuiet = 4,$/;"	e	enum:JobFlags
jobRepSelAuto	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobRepSelAuto = 32,$/;"	e	enum:JobFlags
jobRepSelMask	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobRepSelMask = 48,$/;"	e	enum:JobFlags
jobRepSelYes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobRepSelYes = 16,$/;"	e	enum:JobFlags
jobShell	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^    jobCLI = 0, jobGUI = 1, jobShell = 2, jobExtension = 3, jobHelp = 4, jobOtherHelp = 5, jobGrep = 6, jobImmediate = 7};$/;"	e	enum:JobSubsystem
jobSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	volatile size_t jobSize;$/;"	m	struct:Worker	access:private
jobType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	JobSubsystem jobType;$/;"	m	class:Job	access:public
jobType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	JobSubsystem jobType;$/;"	m	struct:JobMode	access:public
jobUsesOutputPane	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool jobUsesOutputPane;$/;"	m	class:JobQueue	access:public
k_Boms	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^const Utf8_16::utf8 Utf8_16::k_Boms[][3] = {$/;"	m	class:Utf8_16	file:
k_Boms	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	static const utf8 k_Boms[eLast][3];$/;"	m	class:Utf8_16	access:public
label	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	const char *label;$/;"	m	struct:SearchOption	access:public
language	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string language;$/;"	m	class:SciTEBase	access:protected
languageCmdID	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { languageCmdID = IDM_LANGUAGE };$/;"	e	enum:SciTEBase::__anon18
languageMenu	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<LanguageMenuItem> languageMenu;$/;"	m	class:SciTEBase	access:protected
lastPosCallTip	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int lastPosCallTip;$/;"	m	class:SciTEBase	access:protected
lastWasCR	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool lastWasCR;$/;"	m	class:FileReader	file:	access:private
left	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int left;$/;"	m	class:GUI::Rectangle	access:public
lenCurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int lenCurrent;$/;"	m	struct:StylingContext	file:	access:public
lenDoc	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	int lenDoc;$/;"	m	class:TextReader	access:protected
lenNext	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int lenNext;$/;"	m	struct:StylingContext	file:	access:public
length	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int length;$/;"	m	class:BufferList	access:public
lengthDoc	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int lengthDoc;$/;"	m	struct:StylingContext	file:	access:public
lengthVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int lengthVisible;$/;"	m	class:BufferList	access:public
lexLPeg	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int lexLPeg;$/;"	m	class:SciTEBase	access:protected
lexLanguage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int lexLanguage;$/;"	m	class:SciTEBase	access:protected
lifeState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	m	class:Buffer	typeref:enum:Buffer::__anon6	access:public
lineEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	int lineEnd;$/;"	m	struct:LineRange	access:public
lineNum	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	int lineNum;$/;"	m	class:FileReader	file:	access:private
lineNumbers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool lineNumbers;$/;"	m	class:SciTEBase	access:protected
lineNumbersExpand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool lineNumbersExpand;$/;"	m	class:SciTEBase	access:protected
lineNumbersWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int lineNumbersWidth;$/;"	m	class:SciTEBase	access:protected
lineNumbersWidthDefault	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { lineNumbersWidthDefault = 4 };$/;"	e	enum:SciTEBase::__anon24
lineRanges	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	std::vector<LineRange> lineRanges;$/;"	m	class:MatchMarker	access:private
lineStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	int lineStart;$/;"	m	struct:LineRange	access:public
lineToCompare	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	std::string lineToCompare;$/;"	m	class:FileReader	file:	access:private
lineToShow	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	std::string lineToShow;$/;"	m	class:FileReader	file:	access:private
link	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^	const VarChain *link;$/;"	m	struct:VarChain	file:	access:public
listSepString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char listSepString[] = ":";$/;"	v
listSepString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char listSepString[] = GUI_TEXT(";");$/;"	v
listText	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	std::string listText;$/;"	m	class:StringList	access:private
littleBit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	long littleBit;$/;"	m	class:GUI::ElapsedTime	access:private
loaders	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int loaders;$/;"	m	struct:BackgroundActivities	access:public
localiser	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	Localization localiser;$/;"	m	class:SciTEBase	access:protected
lowerKeys	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	bool lowerKeys;$/;"	m	class:PropSetFile	access:private
luaDisabled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool luaDisabled = false;$/;"	v	file:
luaState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static lua_State *luaState = 0;$/;"	v	file:
lua_pushglobaltable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	35;"	d	file:
m_Iter16	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	Utf16_Iter m_Iter16;$/;"	m	class:Utf8_16_Read	access:private
m_bFirstRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	bool m_bFirstRead;$/;"	m	class:Utf8_16_Read	access:private
m_bFirstWrite	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	bool m_bFirstWrite;$/;"	m	class:Utf8_16_Write	access:protected
m_eEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf16_Iter	access:protected
m_eEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf8_16_Read	access:private
m_eEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf8_16_Write	access:protected
m_eEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	encodingType m_eEncoding;$/;"	m	class:Utf8_Iter	access:protected
m_eState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	eState m_eState;$/;"	m	class:Utf16_Iter	access:protected
m_eState	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	eState m_eState;$/;"	m	class:Utf8_Iter	access:protected
m_leadSurrogate	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	ubyte m_leadSurrogate[2];$/;"	m	class:Utf8_16_Read	access:private
m_nBufSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	size_t m_nBufSize;$/;"	m	class:Utf8_16_Read	access:private
m_nBufSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	size_t m_nBufSize;$/;"	m	class:Utf8_16_Write	access:protected
m_nCur	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	int m_nCur;$/;"	m	class:Utf8_Iter	access:protected
m_nCur	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	utf8 m_nCur;$/;"	m	class:Utf16_Iter	access:protected
m_nCur16	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	int m_nCur16;$/;"	m	class:Utf16_Iter	access:protected
m_nLen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	size_t m_nLen;$/;"	m	class:Utf8_16_Read	access:private
m_pBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	const ubyte* m_pBuf;$/;"	m	class:Utf16_Iter	access:protected
m_pBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	const ubyte* m_pBuf;$/;"	m	class:Utf8_Iter	access:protected
m_pBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	ubyte* m_pBuf;$/;"	m	class:Utf8_16_Read	access:private
m_pBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	utf16* m_pBuf;$/;"	m	class:Utf8_16_Write	access:protected
m_pEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	const ubyte* m_pEnd;$/;"	m	class:Utf16_Iter	access:protected
m_pEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	const ubyte* m_pEnd;$/;"	m	class:Utf8_Iter	access:protected
m_pFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	FILE* m_pFile;$/;"	m	class:Utf8_16_Write	access:protected
m_pNewBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	ubyte* m_pNewBuf;$/;"	m	class:Utf8_16_Read	access:private
m_pRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	const ubyte* m_pRead;$/;"	m	class:Utf16_Iter	access:protected
m_pRead	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	const ubyte* m_pRead;$/;"	m	class:Utf8_Iter	access:protected
macrosEnabled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool macrosEnabled;$/;"	m	class:SciTEBase	access:protected
mapss	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^typedef std::map<std::string, std::string> mapss;$/;"	t
margin	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool margin;$/;"	m	class:SciTEBase	access:protected
marginWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int marginWidth;$/;"	m	class:SciTEBase	access:protected
marginWidthDefault	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { marginWidthDefault = 20};$/;"	e	enum:SciTEBase::__anon22
markIncremental	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum MarkPurpose { markWithBookMarks, markIncremental };$/;"	e	enum:Searcher::MarkPurpose
markWithBookMarks	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum MarkPurpose { markWithBookMarks, markIncremental };$/;"	e	enum:Searcher::MarkPurpose
markerBookmark	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { markerBookmark = 1 };$/;"	e	enum:SciTEBase::__anon17
matchCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool matchCase;$/;"	m	class:Searcher	access:public
matchMarker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	MatchMarker matchMarker;$/;"	m	class:SciTEBase	access:protected
maxBufferIndex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int maxBufferIndex = -1;$/;"	v	file:
maxCallTips	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int maxCallTips;$/;"	m	class:SciTEBase	access:protected
maxParam	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { maxParam = 4 };$/;"	e	enum:SciTEBase::__anon27
mbCancel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbCancel,$/;"	e	enum:SciTEBase::MessageBoxChoice
mbNo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbNo$/;"	e	enum:SciTEBase::MessageBoxChoice
mbOK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbOK,$/;"	e	enum:SciTEBase::MessageBoxChoice
mbYes	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbYes,$/;"	e	enum:SciTEBase::MessageBoxChoice
mbsIconQuestion	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbsIconQuestion = 0x20,$/;"	e	enum:SciTEBase::__anon26
mbsIconWarning	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbsIconWarning = 0x30$/;"	e	enum:SciTEBase::__anon26
mbsOK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbsOK = 0,$/;"	e	enum:SciTEBase::__anon26
mbsYesNo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbsYesNo = 4,$/;"	e	enum:SciTEBase::__anon26
mbsYesNoCancel	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		mbsYesNoCancel = 3,$/;"	e	enum:SciTEBase::__anon26
memDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	ComboMemory memDirectory;$/;"	m	class:SciTEBase	access:protected
memFiles	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	ComboMemory memFiles;$/;"	m	class:SciTEBase	access:protected
memFinds	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	ComboMemory memFinds;$/;"	m	class:Searcher	access:public
memReplaces	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	ComboMemory memReplaces;$/;"	m	class:Searcher	access:public
menuAccessIndicator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^const GUI::gui_char menuAccessIndicator[] = GUI_TEXT("&");$/;"	v
menuAccessIndicator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^const GUI::gui_char menuAccessIndicator[] = GUI_TEXT("_");$/;"	v
menuBuffers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anon5
menuCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string menuCommand; \/\/ the menu command to be passed to "SciTEBase::MenuCommand"$/;"	m	class:ShortcutItem	access:public
menuEdit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anon5
menuFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anon5
menuHelp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuHelp = 8$/;"	e	enum:__anon5
menuItem	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string menuItem;$/;"	m	class:LanguageMenuItem	access:public
menuKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string menuKey; \/\/ the keyboard short cut$/;"	m	class:ShortcutItem	access:public
menuKey	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string menuKey;$/;"	m	class:LanguageMenuItem	access:public
menuLanguage	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anon5
menuOptions	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anon5
menuSearch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anon5
menuTools	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuTools = 4, menuOptions = 5, menuLanguage = 6, menuBuffers = 7,$/;"	e	enum:__anon5
menuView	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    menuFile = 0, menuEdit = 1, menuSearch = 2, menuView = 3,$/;"	e	enum:__anon5
merge_table	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int merge_table(lua_State *L, int destTableIdx, int srcTableIdx, bool copyMetatable = false) {$/;"	f	file:	signature:(lua_State *L, int destTableIdx, int srcTableIdx, bool copyMetatable = false)
mid	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	MenuID mid;$/;"	m	class:GUI::Menu	access:private
missing	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string missing;$/;"	m	class:Localization	access:private
modulus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int modulus;$/;"	m	class:__anon1::RandomColour	file:	access:private
mult	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int mult;$/;"	m	class:__anon1::RandomColour	file:	access:private
mute	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	/^	Mutex *mute;$/;"	m	class:Lock	access:private
mutex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	std::unique_ptr<Mutex> mutex;$/;"	m	class:JobQueue	access:public
mutex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	std::unique_ptr<Mutex> mutex;$/;"	m	struct:Worker	access:private
name	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceConstant	access:public
name	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceFunction	access:public
name	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceObject	access:public
name	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	const char *name;$/;"	m	struct:IFaceProperty	access:public
needIdle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool needIdle;$/;"	m	class:SciTEBase	access:protected
needReadProperties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool needReadProperties;$/;"	m	class:SciTEBase	access:protected
nextProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	double nextProgress;$/;"	m	struct:FileWorker	access:public
noDelay	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		noDelay,            \/\/ No delay, and no word at the caret.$/;"	e	enum:CurrentWordHighlight::__anon10
ocCompleteCurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	e	enum:SciTEBase::OpenCompletion
ocCompleteSwitch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	e	enum:SciTEBase::OpenCompletion
ocSynchronous	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum OpenCompletion { ocSynchronous, ocCompleteCurrent, ocCompleteSwitch };$/;"	e	enum:SciTEBase::OpenCompletion
ofForceLoad	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    ofForceLoad = 2,	\/\/ Reload file even if already in a buffer$/;"	e	enum:SciTEBase::OpenFlags
ofNoSaveIfDirty	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    ofNoSaveIfDirty = 1, 	\/\/ Suppress check for unsaved changes$/;"	e	enum:SciTEBase::OpenFlags
ofNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    ofNone = 0, 		\/\/ Default$/;"	e	enum:SciTEBase::OpenFlags
ofPreserveUndo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    ofPreserveUndo = 4,	\/\/ Do not delete undo history$/;"	e	enum:SciTEBase::OpenFlags
ofQuiet	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    ofQuiet = 8,		\/\/ Avoid "Could not open file" message$/;"	e	enum:SciTEBase::OpenFlags
ofSynchronous	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    ofSynchronous = 16	\/\/ Force synchronous read$/;"	e	enum:SciTEBase::OpenFlags
onlyLineEnds	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	bool onlyLineEnds;	\/\/\/< Delimited by any white space or only line ends$/;"	m	class:StringList	access:private
open	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anon6
openFilesHere	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool openFilesHere;$/;"	m	class:SciTEBase	access:protected
operator ()	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	bool operator()(const char *a, const char *b) const {$/;"	f	struct:__anon30::CompareString	access:public	signature:(const char *a, const char *b) const
operator ()	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	bool operator()(const char *a, const char *b) const {$/;"	f	struct:__anon30::CompareStringInsensitive	access:public	signature:(const char *a, const char *b) const
operator ++	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf16_Iter::operator++() {$/;"	f	class:Utf16_Iter	signature:()
operator ++	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf8_Iter::operator++() {$/;"	f	class:Utf8_Iter	signature:()
operator <	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::operator<(const FilePath &other) const {$/;"	f	class:FilePath	signature:(const FilePath &other) const
operator =	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	Window &operator=(WindowID wid_) {$/;"	f	class:GUI::Window	access:public	signature:(WindowID wid_)
operator =	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^PropSetFile &PropSetFile::operator=(const PropSetFile &assign) {$/;"	f	class:PropSetFile	signature:(const PropSetFile &assign)
operator ==	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^bool FilePath::operator==(const FilePath &other) const {$/;"	f	class:FilePath	signature:(const FilePath &other) const
operator ==	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	bool operator==(const Rectangle &other) const {$/;"	f	class:GUI::Rectangle	access:public	signature:(const Rectangle &other) const
operator []	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	char *operator[](size_t ind) { return words[ind]; }$/;"	f	class:StringList	access:public	signature:(size_t ind)
operator []	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	char operator[](int position) {$/;"	f	class:TextReader	access:public	signature:(int position)
operator bool	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	operator bool() const { return !words.empty(); }$/;"	f	class:StringList	access:public	signature:() const
operator bool	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	operator bool() const { return m_pRead <= m_pEnd; }$/;"	f	class:Utf16_Iter	access:public	signature:() const
operator bool	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	operator bool() const { return m_pRead <= m_pEnd; }$/;"	f	class:Utf8_Iter	access:public	signature:() const
outlineAlpha	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	int outlineAlpha;$/;"	m	struct:IndicatorDefinition	access:public
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool FindHasText() const override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	char *Range(Pane p, int start, int end) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int FindNext(bool reverseDirection, bool showWarnings=true, bool allowRegExp=true) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int ReplaceAll(bool inSelection) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	sptr_t Send(Pane p, unsigned int msg, uptr_t wParam = 0, sptr_t lParam = 0) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string Property(const char *key) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	uptr_t GetInstance() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void HideMatch() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	virtual void PostOnMainThread(int cmd, Worker *pWorker) override = 0;$/;"	m	class:SciTEBase	access:public
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void DoMenuCommand(int cmdID) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void Insert(Pane p, int pos, const char *s) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void MarkAll(MarkPurpose purpose=markWithBookMarks) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void MoveBack() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void Perform(const char *actionList) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void Remove(Pane p, int start, int end) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void ReplaceOnce(bool showWarnings=true) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void ScrollEditorIfNeeded() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetCaretAsStart() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetFind(const char *sFind) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetFindText(const char *sFind) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetProperty(const char *key, const char *val) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void SetReplace(const char *sReplace) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void ShutDown() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void Trace(const char *s) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void UIClosed() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void UIHasFocus() override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void UnsetProperty(const char *key) override;$/;"	m	class:SciTEBase	access:protected
override	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	void UpdateStatusBar(bool bUpdateSlowData) override;$/;"	m	class:SciTEBase	access:protected
overrideExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string overrideExtension;	\/\/\/< User has chosen to use a particular language$/;"	m	class:Buffer	access:public
pFileWorker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FileWorker *pFileWorker;$/;"	m	class:Buffer	access:public
pListener	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	WorkerListener *pListener;$/;"	m	struct:FileWorker	access:public
pLoader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	ILoader *pLoader;$/;"	m	class:FileLoader	access:public
pSci	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	GUI::ScintillaWindow *pSci;$/;"	m	class:MatchMarker	access:private
pSearcher	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	Searcher *pSearcher;$/;"	m	class:SearchUI	access:protected
pane	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	ExtensionAPI::Pane pane;$/;"	m	struct:IFacePropertyBinding	file:	access:public
pane	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	ExtensionAPI::Pane pane;$/;"	m	struct:PaneMatchObject	file:	access:public
paneEditor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	e	enum:ExtensionAPI::Pane
paneFindOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	e	enum:ExtensionAPI::Pane
paneOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	enum Pane { paneEditor=1, paneOutput=2, paneFindOutput=3 };$/;"	e	enum:ExtensionAPI::Pane
paramType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceType paramType;$/;"	m	struct:IFaceProperty	access:public
paramType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceType paramType[2];$/;"	m	struct:IFaceFunction	access:public
parameterisedCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string parameterisedCommand;$/;"	m	class:SciTEBase	access:protected
parseFunctionDefinition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^unsigned int SciTEBase::parseFunctionDefinition(std::string text, unsigned int partNo) {$/;"	f	class:SciTEBase	signature:(std::string text, unsigned int partNo)
path	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	FilePath path;$/;"	m	struct:FileWorker	access:public
pathAbbreviations	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePath pathAbbreviations;$/;"	m	class:SciTEBase	access:protected
pathActive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	FilePath pathActive;$/;"	m	class:Session	access:public
pathSepChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char pathSepChar = '\/';$/;"	v
pathSepChar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char pathSepChar = '\\\\';$/;"	v
pathSepString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char pathSepString[] = "\/";$/;"	v
pathSepString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^const GUI::gui_char pathSepString[] = GUI_TEXT("\\\\");$/;"	v
popup	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Menu popup;$/;"	m	class:SciTEBase	access:protected
pos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	size_t pos;$/;"	m	class:BufferedFile	file:	access:private
position	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int position;$/;"	m	struct:SelectedRange	access:public
ppcDummy	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind of preprocessor condition line$/;"	e	enum:SciTEBase::PreProcKind
ppcEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind of preprocessor condition line$/;"	e	enum:SciTEBase::PreProcKind
ppcMiddle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind of preprocessor condition line$/;"	e	enum:SciTEBase::PreProcKind
ppcNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind of preprocessor condition line$/;"	e	enum:SciTEBase::PreProcKind
ppcStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum PreProcKind { ppcNone, ppcStart, ppcMiddle, ppcEnd, ppcDummy };	\/\/\/< Indicate the kind of preprocessor condition line$/;"	e	enum:SciTEBase::PreProcKind
prefix	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	const char *prefix;$/;"	m	struct:IFaceObject	access:public
preprocOfString	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::map<std::string, PreProcKind> preprocOfString; \/\/\/< Map preprocessor keywords to positions$/;"	m	class:SciTEBase	access:protected
preprocessorSymbol	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	char preprocessorSymbol;	\/\/\/< Preprocessor symbol (in C, #)$/;"	m	class:SciTEBase	access:protected
previousHeightOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int previousHeightOutput;$/;"	m	class:SciTEBase	access:protected
prop	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	const IFaceProperty *prop;$/;"	m	struct:IFacePropertyBinding	file:	access:public
propAbbrevFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^const GUI::gui_char propAbbrevFileName[] = GUI_TEXT("abbrev.properties");$/;"	v
propDirectoryFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^const GUI::gui_char propDirectoryFileName[] = GUI_TEXT("SciTEDirectory.properties");$/;"	v
propGlobalFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^const GUI::gui_char propGlobalFileName[] = GUI_TEXT("SciTEGlobal.properties");$/;"	v
propLocalFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^const GUI::gui_char propLocalFileName[] = GUI_TEXT("SciTE.properties");$/;"	v
propUserFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^const GUI::gui_char propUserFileName[] = GUI_TEXT(".SciTEUser.properties");$/;"	v
propUserFileName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^const GUI::gui_char propUserFileName[] = GUI_TEXT("SciTEUser.properties");$/;"	v
properties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^const IFaceProperty * const IFaceTable::properties = ifaceProperties;$/;"	m	class:IFaceTable	file:
properties	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	static const IFaceProperty * const properties;$/;"	m	class:IFaceTable	access:public
propertiesToForward	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEProps.cxx	/^static const char *propertiesToForward[] = {$/;"	v	file:
propertyCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.cxx	/^const int IFaceTable::propertyCount = ifacePropertyCount;$/;"	m	class:IFaceTable	file:
propertyCount	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	static const int propertyCount;$/;"	m	class:IFaceTable	access:public
props	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	mapss props;$/;"	m	class:PropSetFile	access:private
props	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile props;$/;"	m	class:Buffer	access:public
props	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile props;$/;"	m	class:SciTEBase	access:protected
propsAbbrev	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsAbbrev;$/;"	m	class:SciTEBase	access:protected
propsBase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsBase;$/;"	m	class:SciTEBase	access:protected
propsDirectory	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsDirectory;$/;"	m	class:SciTEBase	access:protected
propsDiscovered	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsDiscovered;$/;"	m	class:SciTEBase	access:protected
propsEmbed	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsEmbed;$/;"	m	class:SciTEBase	access:protected
propsLocal	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsLocal;$/;"	m	class:SciTEBase	access:protected
propsPlatform	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsPlatform;$/;"	m	class:SciTEBase	access:protected
propsSession	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsSession;$/;"	m	class:SciTEBase	access:protected
propsStatus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsStatus;	\/\/ Not attached to a file but need SetInteger method.$/;"	m	class:SciTEBase	access:protected
propsUser	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	PropSetFile propsUser;$/;"	m	class:SciTEBase	access:protected
ptStartDrag	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Point ptStartDrag;$/;"	m	class:SciTEBase	access:protected
ptr	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	sptr_t ptr;$/;"	m	class:GUI::ScintillaWindow	access:private
push_iface_function	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int push_iface_function(lua_State *L, const char *name) {$/;"	f	file:	signature:(lua_State *L, const char *name)
push_iface_propval	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static int push_iface_propval(lua_State *L, const char *name) {$/;"	f	file:	signature:(lua_State *L, const char *name)
push_pane_object	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^void push_pane_object(lua_State *L, ExtensionAPI::Pane p) {$/;"	f	signature:(lua_State *L, ExtensionAPI::Pane p)
pwFocussed	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::ScintillaWindow *pwFocussed;$/;"	m	class:SciTEBase	access:protected
quitting	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool quitting;$/;"	m	class:SciTEBase	access:protected
r	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int r;$/;"	m	class:__anon1::RandomColour	file:	access:public
raise_error	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^inline void raise_error(lua_State *L, const char *errMsg=NULL) {$/;"	f	signature:(lua_State *L, const char *errMsg=NULL)
randomValue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Credits.cxx	/^	int randomValue;$/;"	m	class:__anon1::RandomColour	file:	access:private
read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool read;$/;"	m	class:Localization	access:public
read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf8_16::utf16 Utf16_Iter::read(const ubyte* pRead) const {$/;"	f	class:Utf16_Iter	signature:(const ubyte* pRead) const
readAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anon6
readAll	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	bool readAll;$/;"	m	class:BufferedFile	file:	access:private
readBlockSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static const size_t readBlockSize = 64 * 1024;$/;"	v	file:
readSoFar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	size_t readSoFar;$/;"	m	class:FileLoader	access:public
reading	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { empty, reading, readAll, open } lifeState;$/;"	e	enum:Buffer::__anon6
recentFileStack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	RecentFile recentFileStack[fileStackMax];$/;"	m	class:SciTEBase	access:protected
recording	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool recording;$/;"	m	class:SciTEBase	access:protected
regExp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool regExp;$/;"	m	class:Searcher	access:public
replaceWhat	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string replaceWhat;$/;"	m	class:Searcher	access:public
replacing	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool replacing;$/;"	m	class:Searcher	access:public
reset	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf16_Iter::reset() {$/;"	f	class:Utf16_Iter	signature:()
reset	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf8_Iter::reset() {$/;"	f	class:Utf8_Iter	signature:()
returnOutputToCommand	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool returnOutputToCommand;$/;"	m	class:SciTEBase	access:protected
returnType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceType returnType;$/;"	m	struct:IFaceFunction	access:public
reverseFind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool reverseFind;$/;"	m	class:Searcher	access:public
right	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int right;$/;"	m	class:GUI::Rectangle	access:public
rlActive	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	e	enum:PropSetFile::ReadLineState
rlConditionFalse	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	e	enum:PropSetFile::ReadLineState
rlExcludedModule	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	enum ReadLineState { rlActive, rlExcludedModule, rlConditionFalse };$/;"	e	enum:PropSetFile::ReadLineState
saveBefore	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	int saveBefore;$/;"	m	struct:JobMode	access:public
saveCancelled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		saveCancelled$/;"	e	enum:SciTEBase::SaveResult
saveCompleted	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^		saveCompleted,$/;"	e	enum:SciTEBase::SaveResult
sbNum	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int sbNum;	\/\/\/< Number of the currently displayed status bar information.$/;"	m	class:SciTEBase	access:protected
sbValue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string sbValue;	\/\/\/< Status bar text.$/;"	m	class:SciTEBase	access:protected
sbVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool sbVisible;	\/\/\/< @c true if status bar is visible.$/;"	m	class:SciTEBase	access:protected
scChange	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand
scClicked	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand
scFocusIn	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand
scFocusOut	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand
scUnknown	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^enum StripCommand { scUnknown, scClicked, scChange, scFocusIn, scFocusOut };$/;"	e	enum:StripCommand
scrollOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int scrollOutput;$/;"	m	class:SciTEBase	access:protected
scrollPosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int scrollPosition;$/;"	m	class:RecentFile	access:public
sdBack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags
sdCaseForce	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	e	enum:StyleDefinition::flags
sdChangeable	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	e	enum:StyleDefinition::flags
sdEOLFilled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags
sdFont	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags
sdFore	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags
sdItalics	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags
sdNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags
sdSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	enum flags { sdNone = 0, sdFont = 0x1, sdSize = 0x2, sdFore = 0x4, sdBack = 0x8,$/;"	e	enum:StyleDefinition::flags
sdUnderlined	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags
sdVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	e	enum:StyleDefinition::flags
sdWeight	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdWeight = 0x10, sdItalics = 0x20, sdEOLFilled = 0x40, sdUnderlined = 0x80,$/;"	e	enum:StyleDefinition::flags
searchLen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	size_t searchLen;$/;"	m	struct:__anon30::CompareString	file:	access:public
searchLen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.cxx	/^	size_t searchLen;$/;"	m	struct:__anon30::CompareStringInsensitive	file:	access:public
searchStartPosition	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int searchStartPosition;$/;"	m	class:Searcher	access:public
selection	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	SelectedRange selection;$/;"	m	class:RecentFile	access:public
set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf16_Iter::set$/;"	f	class:Utf16_Iter	signature:(const ubyte* pBuf, size_t nLen, encodingType eEncoding, ubyte *endSurrogate)
set	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf8_Iter::set$/;"	f	class:Utf8_Iter	signature:(const ubyte* pBuf, size_t nLen, encodingType eEncoding)
setEncoding	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf8_16_Write::setEncoding(Utf8_16::encodingType eType) {$/;"	f	class:Utf8_16_Write	signature:(Utf8_16::encodingType eType)
setfile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf8_16_Write::setfile(FILE *pFile) {$/;"	f	class:Utf8_16_Write	signature:(FILE *pFile)
setter	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	int setter;$/;"	m	struct:IFaceProperty	access:public
sfNone	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    sfNone = 0, 		\/\/ Default$/;"	e	enum:SciTEBase::SaveFlags
sfProgressVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    sfProgressVisible = 1, 	\/\/ Show in background save strip$/;"	e	enum:SciTEBase::SaveFlags
sfSynchronous	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	    sfSynchronous = 16	\/\/ Write synchronously blocking UI$/;"	e	enum:SciTEBase::SaveFlags
shortCutItemList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<ShortcutItem> shortCutItemList;$/;"	m	class:SciTEBase	access:protected
size	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	size_t size;$/;"	m	struct:FileWorker	access:public
size	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int size() const {$/;"	f	class:BufferList	access:public	signature:() const
size	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	int size;$/;"	m	class:StyleDefinition	access:public
sizeFractional	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	float sizeFractional;$/;"	m	class:StyleDefinition	access:public
sleepTime	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	int sleepTime;$/;"	m	struct:FileWorker	access:public
slopSize	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	enum {bufferSize=4000, slopSize=bufferSize\/8};$/;"	e	enum:TextReader::__anon32
sorted	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	bool sorted;$/;"	m	class:StringList	access:private
sortedNoCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	bool sortedNoCase;$/;"	m	class:StringList	access:private
specified	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	        sdCaseForce = 0x100, sdVisible = 0x200, sdChangeable = 0x400} specified;$/;"	m	class:StyleDefinition	typeref:enum:StyleDefinition::flags	access:public
splitVertical	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool splitVertical;	\/\/\/< @c true if the split bar between editor and output is vertical.$/;"	m	class:SciTEBase	access:protected
stack	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<int> stack;$/;"	m	class:BufferList	access:protected
stackcurrent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int stackcurrent;$/;"	m	class:BufferList	access:protected
startCalltipWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int startCalltipWord;$/;"	m	class:SciTEBase	access:protected
startPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int startPos;$/;"	m	struct:PaneMatchObject	file:	access:public
startPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	unsigned int startPos;$/;"	m	struct:StylingContext	file:	access:public
startPos	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	int startPos;$/;"	m	class:TextReader	access:protected
startSeg	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	unsigned int startSeg;$/;"	m	class:StyleWriter	access:protected
startswith	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^static bool startswith(const std::string &s, const char *keybase) {$/;"	f	file:	signature:(const std::string &s, const char *keybase)
startupScript	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static std::string startupScript;$/;"	v	file:
stat	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static int stat(const wchar_t *path, struct _stat *buffer) {$/;"	f	file:	signature:(const wchar_t *path, struct _stat *buffer)
stat	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static int stat(const wchar_t *path, struct _stat64i32 *buffer) {$/;"	f	file:	signature:(const wchar_t *path, struct _stat64i32 *buffer)
state	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	int state;$/;"	m	struct:StylingContext	file:	access:public
statementEnd	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	StyleAndWords statementEnd;$/;"	m	class:SciTEBase	access:protected
statementIndent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	StyleAndWords statementIndent;$/;"	m	class:SciTEBase	access:protected
statementLookback	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int statementLookback;$/;"	m	class:SciTEBase	access:protected
statesOfDelay	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	} statesOfDelay;$/;"	m	struct:CurrentWordHighlight	typeref:enum:CurrentWordHighlight::__anon10	access:public
status	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	sptr_t status;$/;"	m	class:GUI::ScintillaWindow	access:public
status	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	sptr_t status;$/;"	m	struct:GUI::ScintillaFailure	access:public
statusPosWidth	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    statusPosWidth = 256$/;"	e	enum:__anon8
storers	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int storers;$/;"	m	struct:BackgroundActivities	access:public
strchr	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static wchar_t *strchr(wchar_t *str, wchar_t c) {$/;"	f	file:	signature:(wchar_t *str, wchar_t c)
strcmp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static int strcmp(const wchar_t *a, const wchar_t *b) {$/;"	f	file:	signature:(const wchar_t *a, const wchar_t *b)
strcpy	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static wchar_t *strcpy(wchar_t *strDestination, const wchar_t *strSource) {$/;"	f	file:	signature:(wchar_t *strDestination, const wchar_t *strSource)
strlen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static size_t strlen(const wchar_t *str) {$/;"	f	file:	signature:(const wchar_t *str)
strrchr	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static wchar_t *strrchr(wchar_t *str, wchar_t c) {$/;"	f	file:	signature:(wchar_t *str, wchar_t c)
style	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	int style;$/;"	m	struct:IndicatorDefinition	access:public
styleBuf	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	char styleBuf[bufferSize];$/;"	m	class:StyleWriter	access:protected
styleMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	int styleMatch;$/;"	m	class:MatchMarker	access:private
styleNumber	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int styleNumber;$/;"	m	struct:StyleAndWords	access:public
styler	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^	StyleWriter *styler;$/;"	m	struct:StylingContext	file:	access:public
subStyleBases	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::vector<char> subStyleBases;$/;"	m	class:SciTEBase	access:protected
superPS	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.h	/^	PropSetFile *superPS;$/;"	m	class:PropSetFile	access:public
sw	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	GUI::ScintillaWindow &sw;$/;"	m	class:TextReader	access:protected
swapped	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^static int swapped(int v) {$/;"	f	file:	signature:(int v)
tBackslash	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anon11
tCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anon11
tRegExp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anon11
tUp	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anon11
tWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anon11
tWrap	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { tWord, tCase, tRegExp, tBackslash, tWrap, tUp };$/;"	e	enum:SearchOption::__anon11
tabHideOne	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool tabHideOne; \/\/ Hide tab bar if one buffer is opened only$/;"	m	class:SciTEBase	access:protected
tabMultiLine	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool tabMultiLine;$/;"	m	class:SciTEBase	access:protected
tabVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool tabVisible;$/;"	m	class:SciTEBase	access:protected
tbVisible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool tbVisible;$/;"	m	class:SciTEBase	access:protected
texStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\ExportTEX.cxx	/^static char* texStyle(int style) {$/;"	f	file:	signature:(int style)
text	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	GUI::gui_string text;$/;"	m	class:UserControl	access:public
textHasChanged	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool textHasChanged;$/;"	m	struct:CurrentWordHighlight	access:public
textMatch	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.h	/^	std::string textMatch;$/;"	m	class:MatchMarker	access:private
timeBetweenProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^const double timeBetweenProgress = 0.4;$/;"	v
timeCommands	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	bool timeCommands;$/;"	m	class:JobQueue	access:public
timerAutoSave	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { timerAutoSave=1 };$/;"	e	enum:SciTEBase::__anon21
timerMask	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int timerMask;$/;"	m	class:SciTEBase	access:protected
toStart	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^void Utf8_Iter::toStart() {$/;"	f	class:Utf8_Iter	signature:()
toolMax	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	enum { toolMax = 50 };$/;"	e	enum:SciTEBase::__anon20
top	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int top;$/;"	m	class:GUI::Rectangle	access:public
topMost	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool topMost;$/;"	m	class:SciTEBase	access:protected
totalProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	size_t totalProgress;$/;"	m	struct:BackgroundActivities	access:public
totalWork	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	size_t totalWork;$/;"	m	struct:BackgroundActivities	access:public
tracebackEnabled	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^static bool tracebackEnabled = true;$/;"	v	file:
ubyte	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	typedef unsigned char ubyte;$/;"	t	class:Utf8_16	access:public
ucButton	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType
ucCombo	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType
ucDefaultButton	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType
ucEdit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType
ucStatic	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	enum UCControlType { ucStatic, ucEdit, ucCombo, ucButton, ucDefaultButton } controlType;$/;"	e	enum:UserControl::UCControlType
unSlash	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool unSlash;$/;"	m	class:Searcher	access:public
under	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	bool under;$/;"	m	struct:IndicatorDefinition	access:public
underIndicator	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool underIndicator;$/;"	m	class:SciTEBase	access:protected
underlined	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	bool underlined;$/;"	m	class:StyleDefinition	access:public
uni16BE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode
uni16LE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode
uni8Bit	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode
uniCookie	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.h	/^    uniCookie = 4$/;"	e	enum:UniMode
uniUTF8	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Cookie.h	/^    uni8Bit = 0, uni16BE = 1, uni16LE = 2, uniUTF8 = 3,$/;"	e	enum:UniMode
unicodeMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	UniMode unicodeMode;$/;"	m	class:FileLoader	access:public
unicodeMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	UniMode unicodeMode;$/;"	m	class:FileStorer	access:public
unicodeMode	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	UniMode unicodeMode;$/;"	m	class:Buffer	access:public
unlink	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FilePath.cxx	/^static int unlink(const wchar_t *filename) {$/;"	f	file:	signature:(const wchar_t *filename)
useMonoFont	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool useMonoFont;$/;"	m	class:Buffer	access:public
utf16	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	typedef unsigned short utf16; \/\/ 16 bits$/;"	t	class:Utf8_16	access:public
utf8	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.h	/^	typedef unsigned char utf8; \/\/ 8 bits$/;"	t	class:Utf8_16	access:public
valid	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	size_t valid;$/;"	m	class:BufferedFile	file:	access:private
validLen	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleWriter.h	/^	int validLen;$/;"	m	class:StyleWriter	access:protected
value	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	int value;$/;"	m	struct:IFaceConstant	access:public
value	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	int value;$/;"	m	struct:IFaceFunction	access:public
valueType	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\IFaceTable.h	/^	IFaceType valueType;$/;"	m	struct:IFaceProperty	access:public
var	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^	const char *var;$/;"	m	struct:VarChain	file:	access:public
visHeightEditor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int visHeightEditor;$/;"	m	class:SciTEBase	access:protected
visHeightStatus	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int visHeightStatus;$/;"	m	class:SciTEBase	access:protected
visHeightTab	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int visHeightTab;$/;"	m	class:SciTEBase	access:protected
visHeightTools	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int visHeightTools;$/;"	m	class:SciTEBase	access:protected
visible	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	bool visible;$/;"	m	class:StyleDefinition	access:public
visibleProgress	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	bool visibleProgress;$/;"	m	class:FileStorer	access:public
w	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	GUI::Window w;$/;"	m	class:UserControl	access:public
wContent	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Window wContent;    \/\/\/< Contains wEditor and wOutput$/;"	m	class:SciTEBase	access:protected
wEditor	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::ScintillaWindow wEditor;$/;"	m	class:SciTEBase	access:protected
wIncrement	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Window wIncrement;$/;"	m	class:SciTEBase	access:protected
wOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::ScintillaWindow wOutput;$/;"	m	class:SciTEBase	access:protected
wSciTE	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Window wSciTE;  \/\/\/< Contains wToolBar, wTabBar, wContent, and wStatusBar$/;"	m	class:SciTEBase	access:protected
wStatusBar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Window wStatusBar;$/;"	m	class:SciTEBase	access:protected
wTabBar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Window wTabBar;$/;"	m	class:SciTEBase	access:protected
wToolBar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::Window wToolBar;$/;"	m	class:SciTEBase	access:protected
warnExecuteKO	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    warnExecuteKO$/;"	e	enum:__anon9
warnExecuteOK	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    warnExecuteOK,$/;"	e	enum:__anon9
warnFindWrapped	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    warnFindWrapped = 1,$/;"	e	enum:__anon9
warnNoOtherBookmark	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    warnNoOtherBookmark,$/;"	e	enum:__anon9
warnNotFound	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    warnNotFound,$/;"	e	enum:__anon9
warnWrongFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^    warnWrongFile,$/;"	e	enum:__anon9
weight	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StyleDefinition.h	/^	int weight;$/;"	m	class:StyleDefinition	access:public
whitespaceCharacters	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string whitespaceCharacters;$/;"	m	class:SciTEBase	access:protected
wholeWord	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool wholeWord;$/;"	m	class:Searcher	access:public
wid	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	WindowID wid;$/;"	m	class:GUI::Window	access:protected
widthAllocated	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	int widthAllocated;$/;"	m	class:UserControl	access:public
widthAllocated	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	int widthAllocated;$/;"	m	struct:ColumnWidth	access:public
widthDesired	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	int widthDesired;$/;"	m	class:UserControl	access:public
widthDesired	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	int widthDesired;$/;"	m	struct:ColumnWidth	access:public
widths	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StripDefinition.h	/^	std::vector<ColumnWidth> widths;$/;"	m	class:StripDefinition	access:public
windowName	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	GUI::gui_string windowName;$/;"	m	class:SciTEBase	access:protected
wordCharacters	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string wordCharacters;$/;"	m	class:SciTEBase	access:protected
words	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	std::string words;$/;"	m	struct:StyleAndWords	access:public
words	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	std::vector<char *> words;$/;"	m	class:StringList	access:private
wordsNoCase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	std::vector<char *> wordsNoCase;$/;"	m	class:StringList	access:private
wrap	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool wrap;$/;"	m	class:SciTEBase	access:protected
wrapFind	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool wrapFind;$/;"	m	class:Searcher	access:public
wrapOutput	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	bool wrapOutput;$/;"	m	class:SciTEBase	access:protected
wrapStyle	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.h	/^	int wrapStyle;$/;"	m	class:SciTEBase	access:protected
wrapText	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^std::string SciTEBase::wrapText(std::string text, unsigned per_line) {$/;"	f	class:SciTEBase	signature:(std::string text, unsigned per_line)
writtenSoFar	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.h	/^	size_t writtenSoFar;$/;"	m	class:FileStorer	access:public
x	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int x;$/;"	m	class:GUI::Point	access:public
y	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\GUI.h	/^	int y;$/;"	m	class:GUI::Point	access:public
~BufferList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBuffers.cxx	/^BufferList::~BufferList() {$/;"	f	class:BufferList	signature:()
~BufferedFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	~BufferedFile() {$/;"	f	class:BufferedFile	access:public	signature:()
~Extension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual ~Extension() {}$/;"	f	class:Extension	access:public	signature:()
~ExtensionAPI	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Extender.h	/^	virtual ~ExtensionAPI() {$/;"	f	class:ExtensionAPI	access:public	signature:()
~FileLoader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^FileLoader::~FileLoader() {$/;"	f	class:FileLoader	signature:()
~FileReader	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEIO.cxx	/^	~FileReader() {$/;"	f	class:FileReader	access:public	signature:()
~FileStorer	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^FileStorer::~FileStorer() {$/;"	f	class:FileStorer	signature:()
~FileWorker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\FileWorker.cxx	/^FileWorker::~FileWorker() {$/;"	f	class:FileWorker	signature:()
~JobQueue	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\JobQueue.h	/^	~JobQueue() {$/;"	f	class:JobQueue	access:public	signature:()
~Lock	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	/^	~Lock() {$/;"	f	class:Lock	access:public	signature:()
~LuaExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\LuaExtension.cxx	/^LuaExtension::~LuaExtension() {}$/;"	f	class:LuaExtension	signature:()
~MatchMarker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MatchMarker.cxx	/^MatchMarker::~MatchMarker() {$/;"	f	class:MatchMarker	signature:()
~MultiplexExtension	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\MultiplexExtension.cxx	/^MultiplexExtension::~MultiplexExtension() {$/;"	f	class:MultiplexExtension	signature:()
~Mutex	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Mutex.h	/^	virtual ~Mutex() {}$/;"	f	class:Mutex	access:public	signature:()
~PropSetFile	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\PropSetFile.cxx	/^PropSetFile::~PropSetFile() {$/;"	f	class:PropSetFile	signature:()
~SciTEBase	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\SciTEBase.cxx	/^SciTEBase::~SciTEBase() {$/;"	f	class:SciTEBase	signature:()
~StringList	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\StringList.h	/^	~StringList() { Clear(); }$/;"	f	class:StringList	access:public	signature:()
~Utf8_16_Read	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf8_16_Read::~Utf8_16_Read() {$/;"	f	class:Utf8_16_Read	signature:()
~Utf8_16_Write	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Utf8_16.cxx	/^Utf8_16_Write::~Utf8_16_Write() {$/;"	f	class:Utf8_16_Write	signature:()
~Worker	C:\Users\Tho\Desktop\Neuer Ordner\src\scite_mod\src\Worker.h	/^	virtual ~Worker() {$/;"	f	struct:Worker	access:public	signature:()
